{"ast":null,"code":"var _jsxFileName = \"/home/luong/kobuki_web/src/components/Map/Map.js\";\nimport React, { Component } from \"react\";\nimport { Container, Card, Button, Form, Row, Col, Alert, Modal } from \"react-bootstrap\";\nimport ROSLIB from \"roslib\";\nimport Nav2d from \"react-nav2djs\";\nimport \"./Map.css\";\nimport \"../CommonStyle.css\";\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n    this.ros = props.ros || null;\n    this.state = {\n      command: 'none',\n      message: 'Robot is ready !',\n      stationName: 'NoName',\n      enableCancel: false,\n      stations: [],\n      goal: null,\n      showModal: false\n    };\n    this.onAddStation = this.onAddStation.bind(this);\n    this.onClickStation = this.onClickStation.bind(this);\n    this.onSetGoal = this.onSetGoal.bind(this);\n    this.cancelGoal = this.cancelGoal.bind(this);\n    this.actionClient = null;\n    this.InsertStationService = null;\n    this.DeleteStationService = null;\n    this.GetStationService = null;\n  }\n\n  componentDidMount() {\n    if (this.props.ros != null) {\n      this.ros = this.props.ros;\n      var serverName = this.props.serverName || '/move_base';\n      var actionName = this.props.actionName || 'move_base_msgs/MoveBaseAction';\n      this.actionClient = new ROSLIB.ActionClient({\n        ros: this.ros,\n        actionName: actionName,\n        serverName: serverName\n      });\n      this.InsertStationService = new ROSLIB.Service({\n        ros: this.ros,\n        name: '/add_station',\n        serviceType: 'kobuki_ui/AddStation'\n      });\n      this.DeleteStationService = new ROSLIB.Service({\n        ros: this.ros,\n        name: '/delete_station',\n        serviceType: 'kobuki_ui/DeleteStation'\n      });\n      this.GetStationService = new ROSLIB.Service({\n        ros: this.ros,\n        name: '/get_station_list',\n        serviceType: 'kobuki_ui/GetStationList'\n      });\n      this.GetStationService.callService(null, res => {\n        this.setState({\n          stations: res.station_list\n        });\n      });\n    }\n  }\n\n  onAddStation(newStation) {\n    if (newStation) {\n      var stationList = this.state.stations;\n      stationList.push(newStation);\n      this.setState({\n        stations: stationList\n      });\n      console.log(\"added new station\", newStation.name);\n      var request = new ROSLIB.ServiceRequest({\n        name: newStation.name,\n        positionX: newStation.positionX,\n        positionY: newStation.positionY,\n        positionZ: newStation.positionZ,\n        orientationX: newStation.orientationX,\n        orientationY: newStation.orientationY,\n        orientationZ: newStation.orientationZ,\n        orientationW: newStation.orientationW,\n        id: newStation.id\n      });\n      this.InsertStationService.callService(request);\n    }\n  }\n\n  onClickStation(stationId) {\n    var targetIndex = -1;\n    this.state.stations.forEach((item, index) => {\n      if (item.id === stationId) {\n        targetIndex = index;\n      }\n    });\n\n    if (targetIndex >= 0) {\n      if (this.state.command === 'DeleteStation') {\n        console.log(\"remove station\", this.state.stations[targetIndex].name);\n        var request = new ROSLIB.ServiceRequest({\n          id: this.state.stations[targetIndex].id\n        });\n        this.DeleteStationService.callService(request);\n        var stationList = this.state.stations;\n        stationList.splice(targetIndex, 1);\n        this.setState({\n          stations: stationList\n        });\n      } else {\n        console.log(\"Go to station\", this.state.stations[targetIndex].name);\n        var positionVec3 = new ROSLIB.Vector3(null);\n        var orientation = new ROSLIB.Quaternion({\n          x: this.state.stations[targetIndex].orientationX,\n          y: this.state.stations[targetIndex].orientationY,\n          z: this.state.stations[targetIndex].orientationZ,\n          w: this.state.stations[targetIndex].orientationW\n        });\n        positionVec3.x = this.state.stations[targetIndex].positionX;\n        positionVec3.y = this.state.stations[targetIndex].positionY;\n        var pose = new ROSLIB.Pose({\n          position: positionVec3,\n          orientation: orientation\n        });\n        var goal = new ROSLIB.Goal({\n          actionClient: this.actionClient,\n          goalMessage: {\n            target_pose: {\n              header: {\n                frame_id: 'map'\n              },\n              pose: pose\n            }\n          }\n        });\n        this.setState({\n          message: 'Robot is moving to station ' + this.state.stations[targetIndex].name,\n          enableCancel: true,\n          command: 'CancelGoal',\n          goal: goal\n        });\n        goal.send();\n      }\n    }\n  }\n\n  onSetGoal(rootObject, targetMarker, pose) {\n    console.log(\"added new goal\");\n    var goal = new ROSLIB.Goal({\n      actionClient: this.actionClient,\n      goalMessage: {\n        target_pose: {\n          header: {\n            frame_id: 'map'\n          },\n          pose: pose\n        }\n      }\n    });\n    this.setState({\n      message: 'Robot is moving to Goal',\n      enableCancel: true,\n      goal: goal\n    });\n    goal.send();\n    goal.on('result', () => {\n      rootObject.removeChild(targetMarker);\n      this.setState({\n        showModal: true,\n        command: 'none',\n        message: 'Robot is ready !',\n        enableCancel: false\n      });\n    });\n  }\n\n  cancelGoal() {\n    this.state.goal.cancel();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      className: \"box-margin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      border: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: {\n        fontSize: \"1.2rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 54\n      }\n    }, \"Map\")), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      className: \"map-container\",\n      id: \"map\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      className: \"map-controller\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: this.state.command === \"SetGoal\" ? \"map-button btn-color-active\" : \"map-button btn-color\",\n      onClick: () => this.setState({\n        command: 'SetGoal',\n        message: 'Send goal to your robot'\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }, \"Set Goal\"), /*#__PURE__*/React.createElement(Button, {\n      className: this.state.command === \"AddStation\" ? \"map-button btn-color-active\" : \"map-button btn-color\",\n      onClick: () => this.setState({\n        command: 'AddStation',\n        message: 'Add new station',\n        stationName: 'NoName'\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    }, \"Add Station\"), /*#__PURE__*/React.createElement(Button, {\n      className: this.state.command === \"DeleteStation\" ? \"map-button btn-color-active\" : \"map-button btn-color\",\n      onClick: () => this.setState({\n        command: 'DeleteStation',\n        message: 'Click to delete station'\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    }, \"Delete Station\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"map-button\",\n      variant: \"outline-warning\",\n      onClick: () => this.setState({\n        command: 'none',\n        message: 'Robot is ready !'\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }, \"Cancel\")), /*#__PURE__*/React.createElement(Container, {\n      style: {\n        width: \"28rem\",\n        height: \"4rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 15\n      }\n    }, this.state.command === 'AddStation' && /*#__PURE__*/React.createElement(Form, {\n      onChange: event => this.setState({\n        stationName: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formHorizontalEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 23\n      }\n    }, \"Station:\"), /*#__PURE__*/React.createElement(Col, {\n      sm: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"ex: Table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 25\n      }\n    })))), this.state.command !== 'AddStation' && /*#__PURE__*/React.createElement(Alert, {\n      variant: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 19\n      }\n    }, this.state.message)), /*#__PURE__*/React.createElement(Nav2d, {\n      id: \"random\",\n      imageRobot: require('./jarvis.png'),\n      imageGoalArrow: require('./arrow-red.png'),\n      imageStationArrow: require('./arrow-green.png'),\n      ros: this.ros,\n      serverName: \"/move_base\",\n      command: this.state.command,\n      onSetGoal: (obj, targetMarker, pose) => this.onSetGoal(obj, targetMarker, pose),\n      onAddStation: newStation => this.onAddStation(newStation),\n      onClickStation: station => this.onClickStation(station),\n      stationName: this.state.stationName,\n      station: this.state.stations,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      disabled: this.state.enableCancel ? false : true,\n      onClick: () => {\n        this.setState({\n          command: 'CancelGoal',\n          message: 'Goal was canceled',\n          enableCancel: false\n        });\n        this.cancelGoal();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }\n    }, \"Cancel Goal\")), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.showModal,\n      onHide: () => this.setState({\n        showModal: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 19\n      }\n    }, \"Goal reached\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }\n    }, \"The robot has reached its destination.\"), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => this.setState({\n        showModal: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 19\n      }\n    }, \"OK\")))))));\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/home/luong/kobuki_web/src/components/Map/Map.js"],"names":["React","Component","Container","Card","Button","Form","Row","Col","Alert","Modal","ROSLIB","Nav2d","Map","constructor","props","ros","state","command","message","stationName","enableCancel","stations","goal","showModal","onAddStation","bind","onClickStation","onSetGoal","cancelGoal","actionClient","InsertStationService","DeleteStationService","GetStationService","componentDidMount","serverName","actionName","ActionClient","Service","name","serviceType","callService","res","setState","station_list","newStation","stationList","push","console","log","request","ServiceRequest","positionX","positionY","positionZ","orientationX","orientationY","orientationZ","orientationW","id","stationId","targetIndex","forEach","item","index","splice","positionVec3","Vector3","orientation","Quaternion","x","y","z","w","pose","Pose","position","Goal","goalMessage","target_pose","header","frame_id","send","rootObject","targetMarker","on","removeChild","cancel","render","fontSize","width","height","event","target","value","require","obj","station"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Container, Card, Button, Form, Row, Col, Alert, Modal } from \"react-bootstrap\";\nimport ROSLIB from \"roslib\";\nimport Nav2d from \"react-nav2djs\";\nimport \"./Map.css\";\nimport \"../CommonStyle.css\";\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n    this.ros = props.ros || null;\n    this.state = {\n      command: 'none',\n      message: 'Robot is ready !',\n      stationName: 'NoName',\n      enableCancel: false,\n      stations: [],\n      goal: null,\n      showModal: false,\n    }\n    this.onAddStation = this.onAddStation.bind(this);\n    this.onClickStation = this.onClickStation.bind(this);\n    this.onSetGoal = this.onSetGoal.bind(this);\n    this.cancelGoal = this.cancelGoal.bind(this);\n    this.actionClient = null;\n    this.InsertStationService = null;\n    this.DeleteStationService = null;\n    this.GetStationService = null;\n  }\n\n  componentDidMount() {\n    if (this.props.ros != null) {\n      this.ros = this.props.ros;\n      var serverName = this.props.serverName || '/move_base';\n      var actionName = this.props.actionName || 'move_base_msgs/MoveBaseAction';\n      this.actionClient = new ROSLIB.ActionClient({\n        ros: this.ros,\n        actionName: actionName,\n        serverName: serverName\n      });\n      this.InsertStationService = new ROSLIB.Service({\n        ros: this.ros,\n        name: '/add_station',\n        serviceType: 'kobuki_ui/AddStation',\n      });\n      this.DeleteStationService = new ROSLIB.Service({\n        ros: this.ros,\n        name: '/delete_station',\n        serviceType: 'kobuki_ui/DeleteStation',\n      });\n      this.GetStationService = new ROSLIB.Service({\n        ros: this.ros,\n        name: '/get_station_list',\n        serviceType: 'kobuki_ui/GetStationList',\n      });\n      this.GetStationService.callService(null,(res) => {\n        this.setState({stations: res.station_list});\n      });\n    }\n  }\n\n  onAddStation(newStation) {\n    if (newStation) {\n      var stationList = this.state.stations;\n      stationList.push(newStation);\n      this.setState({stations: stationList});\n      console.log(\"added new station\", newStation.name);\n      var request = new ROSLIB.ServiceRequest({\n        name: newStation.name,\n        positionX: newStation.positionX,\n        positionY: newStation.positionY,\n        positionZ: newStation.positionZ,\n        orientationX: newStation.orientationX,\n        orientationY: newStation.orientationY,\n        orientationZ: newStation.orientationZ,\n        orientationW: newStation.orientationW,\n        id: newStation.id,\n      });\n      this.InsertStationService.callService(request);\n    }\n  }\n\n  onClickStation(stationId) {\n    var targetIndex = -1;\n    this.state.stations.forEach((item, index) => {\n      if (item.id === stationId) {\n        targetIndex = index;\n      }\n    });\n    if (targetIndex >= 0) {\n      if (this.state.command === 'DeleteStation') {\n        console.log(\"remove station\", this.state.stations[targetIndex].name);\n        var request = new ROSLIB.ServiceRequest({\n          id: this.state.stations[targetIndex].id,\n        });\n        this.DeleteStationService.callService(request);\n        var stationList = this.state.stations;\n        stationList.splice(targetIndex, 1);\n        this.setState({stations: stationList});\n      } else {\n        console.log(\"Go to station\", this.state.stations[targetIndex].name);\n        var positionVec3 = new ROSLIB.Vector3(null);\n        var orientation = new ROSLIB.Quaternion({\n          x: this.state.stations[targetIndex].orientationX,\n          y: this.state.stations[targetIndex].orientationY,\n          z: this.state.stations[targetIndex].orientationZ,\n          w: this.state.stations[targetIndex].orientationW\n        });\n        \n        positionVec3.x = this.state.stations[targetIndex].positionX;\n        positionVec3.y = this.state.stations[targetIndex].positionY;\n\n        var pose = new ROSLIB.Pose({\n          position : positionVec3,\n          orientation : orientation\n        });\n\n        var goal = new ROSLIB.Goal({\n          actionClient: this.actionClient,\n          goalMessage: {\n            target_pose: {\n              header: {\n                frame_id: 'map'\n              },\n              pose: pose,\n            }\n          }\n        });\n        this.setState({message: 'Robot is moving to station ' + this.state.stations[targetIndex].name, enableCancel: true, command: 'CancelGoal', goal: goal});\n        goal.send();\n      }\n    }\n  }\n\n  onSetGoal(rootObject, targetMarker, pose) {\n    console.log(\"added new goal\");\n    var goal = new ROSLIB.Goal({\n      actionClient: this.actionClient,\n      goalMessage: {\n        target_pose: {\n          header: {\n            frame_id: 'map'\n          },\n          pose: pose\n        }\n      }\n    });\n    this.setState({message: 'Robot is moving to Goal', enableCancel: true, goal: goal});\n    goal.send();\n    goal.on('result', () => {\n      rootObject.removeChild(targetMarker);\n      this.setState({showModal: true, command: 'none', message: 'Robot is ready !', enableCancel: false});\n    });\n  }\n\n  cancelGoal() {\n    this.state.goal.cancel();\n  }\n\n  render() {\n    return (\n      <Container className=\"box-margin\">\n        <Card border=\"secondary\">\n          <Card.Header style={{fontSize: \"1.2rem\" }}><strong>Map</strong></Card.Header>\n          <Card.Body>\n            <Container className=\"map-container\" id=\"map\">\n              <Container className=\"map-controller\">\n                <Button className={this.state.command === \"SetGoal\" ? \"map-button btn-color-active\" : \"map-button btn-color\"} onClick={() => this.setState({ command: 'SetGoal', message: 'Send goal to your robot' })}>Set Goal</Button>\n                <Button className={this.state.command === \"AddStation\" ? \"map-button btn-color-active\" : \"map-button btn-color\"} onClick={() => this.setState({ command: 'AddStation', message: 'Add new station', stationName: 'NoName' })}>Add Station</Button>\n                <Button className={this.state.command === \"DeleteStation\" ? \"map-button btn-color-active\" : \"map-button btn-color\"} onClick={() => this.setState({ command: 'DeleteStation', message: 'Click to delete station' })}>Delete Station</Button>\n                <Button className=\"map-button\" variant='outline-warning' onClick={() => this.setState({ command: 'none', message: 'Robot is ready !' })}>Cancel</Button>\n              </Container>\n              <Container style={{ width: \"28rem\", height: \"4rem\" }}>\n                {this.state.command === 'AddStation' &&\n                  <Form onChange={(event) => this.setState({stationName: event.target.value})}>\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n                      <Form.Label column sm={3}>\n                        Station:\n                      </Form.Label>\n                      <Col sm={8}>\n                        <Form.Control type=\"text\" placeholder=\"ex: Table\" />\n                      </Col>\n                    </Form.Group>\n                  </Form>\n                }\n                {this.state.command !== 'AddStation' &&\n                  <Alert variant=\"info\">{this.state.message}</Alert>\n                }\n              </Container>\n              <Nav2d\n                id='random'\n                imageRobot={require('./jarvis.png')}\n                imageGoalArrow={require('./arrow-red.png')}\n                imageStationArrow={require('./arrow-green.png')}\n                ros={this.ros}\n                serverName='/move_base'\n                command={this.state.command}\n                onSetGoal={(obj, targetMarker, pose) => this.onSetGoal(obj, targetMarker, pose)}\n                onAddStation={(newStation) => this.onAddStation(newStation)}\n                onClickStation={(station) => this.onClickStation(station)}\n                stationName={this.state.stationName}\n                station={this.state.stations}\n              />\n              <Container>\n                <Button\n                  variant=\"danger\"\n                  disabled={this.state.enableCancel ? false : true}\n                  onClick={() => {\n                    this.setState({command: 'CancelGoal', message: 'Goal was canceled', enableCancel: false});\n                    this.cancelGoal();\n                  }}>\n                  Cancel Goal\n                </Button>\n              </Container>\n              <Modal show={this.state.showModal} onHide={() => this.setState({showModal: false})}>\n                <Modal.Header closeButton>\n                  <Modal.Title>Goal reached</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                  The robot has reached its destination.\n                </Modal.Body>\n                <Modal.Footer>\n                  <Button variant=\"primary\" onClick={() => this.setState({showModal: false})}>\n                    OK\n                  </Button>\n                </Modal.Footer>\n              </Modal>\n            </Container>\n          </Card.Body>\n        </Card>\n      </Container>\n    )\n  }\n}\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}