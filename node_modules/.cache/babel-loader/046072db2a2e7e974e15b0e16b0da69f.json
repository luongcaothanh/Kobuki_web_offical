{"ast":null,"code":"var _jsxFileName = \"/home/luong/kobuki_web/src/components/MainPage/MainPage.js\";\nimport React, { Component } from 'react';\nimport ROSLIB from \"roslib\";\nimport \"./MainPage.css\";\nimport { Button, Container, Col, Row } from 'react-bootstrap';\nimport Parameters from \"../Parameters/Parameters\";\nimport Map from \"../Map/Map\";\nimport Camera from \"../Camera/Camera\";\nimport Controller from \"../Controller/Controller\";\nimport Status from \"../Status/Status\";\nimport Header from \"../Header/Header\";\n\nclass MainPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isConnectedWS: false,\n      linearVel: 0.2,\n      angularVel: 0.45\n    };\n    this.url = \"ws://localhost:9090\";\n    this.ros = null; // Control\n\n    this.arrVel = [[[1, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, -1], [0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, -1], [-1, 0, 0, 0, 0, -1], [-1, 0, 0, 0, 0, 0], [-1, 0, 0, 0, 0, 1]], [[1, -1, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0], [1, 1, 0, 0, 0, 0], [0, -1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0], [-1, -1, 0, 0, 0, 0], [-1, 0, 0, 0, 0, 0], [-1, 1, 0, 0, 0, 0]]];\n    this.cur_dir = 4; // Stop\n\n    this.connectWebsocket = this.connectWebsocket.bind(this);\n    this.registerTopic = this.registerTopic.bind(this);\n    this.onControl = this.onControl.bind(this);\n    this.onChangeAngularVel = this.onChangeAngularVel.bind(this);\n    this.onChangeLinearVel = this.onChangeLinearVel.bind(this);\n    this.cmdVel = null; // this.btnConnect = this.btnConnect.bind(this);\n    // this.btnDisconnect = this.btnDisconnect.bind(this);\n  }\n\n  registerTopic() {\n    if (this.isConnectedWS == false) {\n      return;\n    }\n\n    this.cmdVel = new ROSLIB.Topic({\n      ros: this.ros,\n      name: '/cmd_vel_mux/keyboard_teleop',\n      messageType: 'geometry_msgs/Twist'\n    });\n    console.log(\"published topic /cmd_vel\");\n  }\n\n  connectWebsocket() {\n    console.log(\"connect to \" + this.url);\n    this.ros = new ROSLIB.Ros({\n      url: this.url\n    });\n    this.ros.on(\"connection\", () => {\n      this.setState({\n        isConnectedWS: true\n      });\n      console.log(\"Connected to websocket server \");\n      this.registerTopic();\n    });\n    this.ros.on(\"error\", err => {\n      console.log(\"Error connecting to websocket server \", err);\n    });\n    this.ros.on(\"close\", () => {\n      this.setState({\n        isConnectedWS: false\n      });\n      console.log(\"Connection to websocket server closed, try to connect after 3s\");\n      setTimeout(() => {\n        this.connectWebsocket();\n      }, 3000);\n    });\n  }\n\n  componentDidMount() {\n    this.connectWebsocket();\n  } // Controller callback\n\n\n  onControl(mode, direction) {\n    this.cur_dir = direction;\n\n    if (!this.cmdVel) {\n      return;\n    }\n\n    console.log(\"mode \" + mode + \" direction \" + direction + \" with velocity \" + this.linearVel + \", \" + this.angularVel);\n\n    if (mode > 1 || mode < 0 || direction < 0 || direction > 9) {\n      console.log(\"Invalid control\");\n    }\n\n    var newVelMsg = new ROSLIB.Message({\n      linear: {\n        x: this.arrVel[mode][direction][0] * this.linearVel,\n        y: this.arrVel[mode][direction][1] * this.linearVel,\n        z: this.arrVel[mode][direction][2] * this.linearVel\n      },\n      angular: {\n        x: this.arrVel[mode][direction][3] * this.angularVel,\n        y: this.arrVel[mode][direction][4] * this.angularVel,\n        z: this.arrVel[mode][direction][5] * this.angularVel\n      }\n    });\n    this.cmdVel.publish(newVelMsg);\n  } // Parameters callback\n\n\n  onChangeAngularVel(vel) {\n    var angularVel = vel;\n    angularVel = angularVel > 1 ? 1 : angularVel;\n    angularVel = angularVel < 0.05 ? 0.05 : angularVel;\n    console.log(\"Angular velocity changed: \" + angularVel);\n    this.setState({\n      angularVel: angularVel\n    }); // this.onControl(0, this.cur_dir);\n  }\n\n  onChangeLinearVel(vel) {\n    var linearVel = vel;\n    linearVel = linearVel > 1 ? 1 : linearVel;\n    linearVel = linearVel < 0.05 ? 0.05 : linearVel;\n    console.log(\"Linear velocity changed: \" + linearVel);\n    this.setState({\n      linearVel: linearVel\n    }); // this.onControl(0, this.cur_dir);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      className: \"container-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 15\n      }\n    }, this.state.isConnectedWS ? /*#__PURE__*/React.createElement(Camera, {\n      ros: this.ros,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 48\n      }\n    }) : /*#__PURE__*/React.createElement(Camera, {\n      ros: null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 76\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 15\n      }\n    }, this.state.isConnectedWS ? /*#__PURE__*/React.createElement(Status, {\n      ros: this.ros,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 48\n      }\n    }) : /*#__PURE__*/React.createElement(Status, {\n      ros: null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 76\n      }\n    })))), /*#__PURE__*/React.createElement(Col, {\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 15\n      }\n    }, this.state.isConnectedWS && /*#__PURE__*/React.createElement(Map, {\n      ros: this.ros,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 49\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      isConnected: this.state.isConnectedWS,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 19\n      }\n    }))))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 15\n      }\n    }, this.state.isConnectedWS ? /*#__PURE__*/React.createElement(Controller, {\n      ros: this.ros,\n      linearVel: this.state.linearVel,\n      angularVel: this.state.angularVel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }) : /*#__PURE__*/React.createElement(Controller, {\n      ros: null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Parameters, {\n      onChangeLinearVel: this.onChangeLinearVel,\n      onChangeAngularVel: this.onChangeAngularVel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n}\n\nexport default MainPage;","map":{"version":3,"sources":["/home/luong/kobuki_web/src/components/MainPage/MainPage.js"],"names":["React","Component","ROSLIB","Button","Container","Col","Row","Parameters","Map","Camera","Controller","Status","Header","MainPage","constructor","props","state","isConnectedWS","linearVel","angularVel","url","ros","arrVel","cur_dir","connectWebsocket","bind","registerTopic","onControl","onChangeAngularVel","onChangeLinearVel","cmdVel","Topic","name","messageType","console","log","Ros","on","setState","err","setTimeout","componentDidMount","mode","direction","newVelMsg","Message","linear","x","y","z","angular","publish","vel","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ROSLIB from \"roslib\";\nimport \"./MainPage.css\";\nimport { Button, Container, Col, Row } from 'react-bootstrap';\nimport Parameters from \"../Parameters/Parameters\";\nimport Map from \"../Map/Map\";\nimport Camera from \"../Camera/Camera\";\nimport Controller from \"../Controller/Controller\";\nimport Status from \"../Status/Status\";\nimport Header from \"../Header/Header\";\n\nclass MainPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isConnectedWS: false,\n      linearVel: 0.2,\n      angularVel: 0.45,\n    };\n    this.url = \"ws://localhost:9090\";\n    this.ros = null;\n    // Control\n    this.arrVel = [\n      [\n        [1, 0, 0, 0, 0, 1],\n        [1, 0, 0, 0, 0, 0],\n        [1, 0, 0, 0, 0, -1],\n        [0, 0, 0, 0, 0, 1],\n        [0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, -1],\n        [-1, 0, 0, 0, 0, -1],\n        [-1, 0, 0, 0, 0, 0],\n        [-1, 0, 0, 0, 0, 1],\n      ],\n      [\n        [1, -1, 0, 0, 0, 0],\n        [1, 0, 0, 0, 0, 0],\n        [1, 1, 0, 0, 0, 0],\n        [0, -1, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0],\n        [0, 1, 0, 0, 0, 0],\n        [-1, -1, 0, 0, 0, 0],\n        [-1, 0, 0, 0, 0, 0],\n        [-1, 1, 0, 0, 0, 0],\n      ]\n    ];\n    this.cur_dir = 4; // Stop\n\n    this.connectWebsocket = this.connectWebsocket.bind(this);\n    this.registerTopic = this.registerTopic.bind(this);\n    this.onControl = this.onControl.bind(this);\n    this.onChangeAngularVel = this.onChangeAngularVel.bind(this);\n    this.onChangeLinearVel = this.onChangeLinearVel.bind(this);\n\n    this.cmdVel = null;\n\n    // this.btnConnect = this.btnConnect.bind(this);\n    // this.btnDisconnect = this.btnDisconnect.bind(this);\n  }\n  registerTopic() {\n    if (this.isConnectedWS == false) {\n      return;\n    }\n    this.cmdVel = new ROSLIB.Topic({\n      ros : this.ros,\n      name : '/cmd_vel_mux/keyboard_teleop',\n      messageType : 'geometry_msgs/Twist'\n    });\n    console.log(\"published topic /cmd_vel\");\n  }\n  connectWebsocket() {\n    console.log(\"connect to \" + this.url);\n    this.ros = new ROSLIB.Ros({\n      url: this.url,\n    });\n    this.ros.on(\"connection\", () => {\n      this.setState({isConnectedWS: true});\n      console.log(\"Connected to websocket server \");\n      this.registerTopic();\n    });\n    this.ros.on(\"error\", (err) => {\n      console.log(\"Error connecting to websocket server \", err);\n    });\n    this.ros.on(\"close\", () => {\n      this.setState({isConnectedWS: false});\n      console.log(\"Connection to websocket server closed, try to connect after 3s\");\n      setTimeout(() => {\n        this.connectWebsocket();\n      }, 3000);\n    });\n  }\n\n  componentDidMount() {\n    this.connectWebsocket();\n  }\n\n  // Controller callback\n  onControl(mode, direction) {\n    this.cur_dir = direction;\n    if (!this.cmdVel) {\n      return;\n    }\n    console.log(\"mode \" + mode + \" direction \" + direction + \" with velocity \" + this.linearVel + \", \" + this.angularVel);\n    if (mode > 1 || mode < 0 || direction < 0 || direction > 9) {\n      console.log(\"Invalid control\");\n    }\n    var newVelMsg = new ROSLIB.Message({\n      linear : {\n        x : this.arrVel[mode][direction][0] * this.linearVel,\n        y : this.arrVel[mode][direction][1] * this.linearVel,\n        z : this.arrVel[mode][direction][2] * this.linearVel,\n      },\n      angular : {\n        x : this.arrVel[mode][direction][3] * this.angularVel,\n        y : this.arrVel[mode][direction][4] * this.angularVel,\n        z : this.arrVel[mode][direction][5] * this.angularVel,\n      }\n    });\n    this.cmdVel.publish(newVelMsg);\n  }\n\n  // Parameters callback\n  onChangeAngularVel(vel) {\n    var angularVel = vel;\n    angularVel = angularVel > 1 ? 1 : angularVel;\n    angularVel = angularVel < 0.05 ? 0.05 : angularVel;\n    console.log(\"Angular velocity changed: \" + angularVel);\n    this.setState({angularVel: angularVel});\n    // this.onControl(0, this.cur_dir);\n  }\n\n  onChangeLinearVel(vel) {\n    var linearVel = vel;\n    linearVel = linearVel > 1 ? 1 : linearVel;\n    linearVel = linearVel < 0.05 ? 0.05 : linearVel;\n    console.log(\"Linear velocity changed: \" + linearVel);\n    this.setState({linearVel: linearVel});\n    // this.onControl(0, this.cur_dir);\n  }\n\n  render() {\n    return (\n      <Container fluid className=\"container-center\">\n        {/* <Row>\n          <Col>\n            <Container>\n              <Header\n                isConnected={this.state.isConnectedWS}\n              />\n            </Container>\n          </Col>\n        </Row> */}\n        <Row>\n          <Col>\n            <Row>\n              <Col>{this.state.isConnectedWS ? <Camera ros={this.ros} /> : <Camera ros={null} />}</Col>\n            </Row>\n            <Row>\n              <Col>{this.state.isConnectedWS ? <Status ros={this.ros} /> : <Status ros={null} />}</Col>\n            </Row>\n          </Col>\n          <Col xs={6}>\n            <Row>\n              <Col>{this.state.isConnectedWS && <Map ros={this.ros}/>}</Col>\n            </Row>\n            <Row>\n              <Col>\n                <Container>\n                  <Header\n                    isConnected={this.state.isConnectedWS}\n                  />\n                </Container>\n              </Col>\n            </Row>\n          </Col>\n          <Col>\n            <Row>\n              <Col>{this.state.isConnectedWS ?\n                <Controller ros={this.ros} linearVel={this.state.linearVel} angularVel={this.state.angularVel} /> : \n                <Controller ros={null}/>}\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Parameters\n                  onChangeLinearVel={this.onChangeLinearVel}\n                  onChangeAngularVel={this.onChangeAngularVel}\n                />\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport default MainPage;"]},"metadata":{},"sourceType":"module"}