{"ast":null,"code":"var _jsxFileName = \"/home/luong/kobuki_web/src/components/Map/Map.js\";\nimport React, { Component } from \"react\";\nimport { Container, Card } from \"react-bootstrap\";\nimport ROSLIB from \"roslib\";\nimport Nav2d from \"react-nav2djs/lib\";\nimport \"./Map.css\";\nimport \"../CommonStyle.css\";\nimport { Button } from \"react-bootstrap\";\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onMapClick = event => {\n      const {\n        viewer\n      } = this.props;\n      const {\n        stageX,\n        stageY\n      } = event;\n      const {\n        x: positionX,\n        y: positionY\n      } = viewer.globalToRos(stageX, stageY);\n      console.log(`Clicked position: (${positionX}, ${positionY})`);\n    };\n\n    this.ros = props.ros || null;\n    this.state = {\n      command: 'none',\n      message: 'Robot is ready !',\n      stationName: 'NoName',\n      enableCancel: false,\n      stations: []\n    };\n    this.stationListLoad = [];\n    this.actionClient = null;\n    this.cancelAssignmentService = null;\n    this.InsertStationService = null;\n    this.DeleteStationService = null;\n    this.GetStationService = null;\n    this.onMapClick = this.onMapClick.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.ros != null) {\n      this.ros = this.props.ros;\n      var serverName = this.props.serverName || '/move_base';\n      var actionName = this.props.actionName || 'move_base_msgs/MoveBaseAction';\n      this.actionClient = new ROSLIB.ActionClient({\n        ros: this.ros,\n        actionName: actionName,\n        serverName: serverName\n      }); // this.cancelAssignmentService = new ROSLIB.Service({\n      //   ros: this.ros,\n      //   name: '/rtabmap/cancel_goal',\n      //   serviceType: 'std_srvs/Empty'\n      // });\n      // this.InsertStationService = new ROSLIB.Service({\n      //   ros: this.ros,\n      //   name: '/InsertStation',\n      //   serviceType: 'jarvis_web_server/InsertStation',\n      // });\n      // this.DeleteStationService = new ROSLIB.Service({\n      //   ros: this.ros,\n      //   name: '/DeleteStation',\n      //   serviceType: 'jarvis_web_server/DeleteStation',\n      // });\n      // this.GetStationService = new ROSLIB.Service({\n      //   ros: this.ros,\n      //   name: '/GetStation',\n      //   serviceType: 'jarvis_web_server/GetStation',\n      // });\n      // this.GetStationService.callService(null,(res) => {\n      //   // this.stationListLoad = res.stations;\n      //   this.setState({stations: res.stations});\n      // });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      className: \"box-margin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      border: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: {\n        fontSize: \"1.2rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 54\n      }\n    }, \"Map\")), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      className: \"map-container\",\n      id: \"map\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Nav2d, {\n      id: \"random\",\n      height: 480,\n      ros: this.ros,\n      serverName: \"/move_base/global_costmap/costmap\",\n      onMapClick: this.onMapClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(Button, {\n      className: \"bg-danger ms-2\",\n      onClick: this.onMapClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, \"Delete station\"));\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/home/luong/kobuki_web/src/components/Map/Map.js"],"names":["React","Component","Container","Card","ROSLIB","Nav2d","Button","Map","constructor","props","onMapClick","event","viewer","stageX","stageY","x","positionX","y","positionY","globalToRos","console","log","ros","state","command","message","stationName","enableCancel","stations","stationListLoad","actionClient","cancelAssignmentService","InsertStationService","DeleteStationService","GetStationService","bind","componentDidMount","serverName","actionName","ActionClient","render","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Container, Card } from \"react-bootstrap\";\nimport ROSLIB from \"roslib\";\nimport Nav2d from \"react-nav2djs/lib\";\nimport \"./Map.css\";\nimport \"../CommonStyle.css\";\nimport { Button } from \"react-bootstrap\";\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n    this.ros = props.ros || null;\n    this.state = {\n      command: 'none',\n      message: 'Robot is ready !',\n      stationName: 'NoName',\n      enableCancel: false,\n      stations: [],\n    }\n    this.stationListLoad = [];\n    this.actionClient = null;\n    this.cancelAssignmentService = null;\n    this.InsertStationService = null;\n    this.DeleteStationService = null;\n    this.GetStationService = null;\n    this.onMapClick = this.onMapClick.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.ros != null) {\n      this.ros = this.props.ros;\n      var serverName = this.props.serverName || '/move_base';\n      var actionName = this.props.actionName || 'move_base_msgs/MoveBaseAction';\n      this.actionClient = new ROSLIB.ActionClient({\n        ros: this.ros,\n        actionName: actionName,\n        serverName: serverName\n      });\n      // this.cancelAssignmentService = new ROSLIB.Service({\n      //   ros: this.ros,\n      //   name: '/rtabmap/cancel_goal',\n      //   serviceType: 'std_srvs/Empty'\n      // });\n      // this.InsertStationService = new ROSLIB.Service({\n      //   ros: this.ros,\n      //   name: '/InsertStation',\n      //   serviceType: 'jarvis_web_server/InsertStation',\n      // });\n      // this.DeleteStationService = new ROSLIB.Service({\n      //   ros: this.ros,\n      //   name: '/DeleteStation',\n      //   serviceType: 'jarvis_web_server/DeleteStation',\n      // });\n      // this.GetStationService = new ROSLIB.Service({\n      //   ros: this.ros,\n      //   name: '/GetStation',\n      //   serviceType: 'jarvis_web_server/GetStation',\n      // });\n      // this.GetStationService.callService(null,(res) => {\n      //   // this.stationListLoad = res.stations;\n      //   this.setState({stations: res.stations});\n      // });\n    }\n  }\n\n  onMapClick = (event) => {\n    const { viewer } = this.props;\n    const { stageX, stageY } = event;\n    const { x: positionX, y: positionY } = viewer.globalToRos(stageX, stageY);\n  \n    console.log(`Clicked position: (${positionX}, ${positionY})`);\n  };\n\n  render() {\n    return (\n      <Container className=\"box-margin\">\n        <Card border=\"secondary\">\n          <Card.Header style={{fontSize: \"1.2rem\" }}><strong>Map</strong></Card.Header>\n          <Card.Body>\n            <Container className=\"map-container\" id=\"map\">\n              <Nav2d\n                id='random'\n                height={480}\n                ros={this.ros}\n                serverName='/move_base/global_costmap/costmap'\n                onMapClick={this.onMapClick}\n              />\n            </Container>\n          </Card.Body>\n        </Card>\n        <Button className=\"bg-danger ms-2\" onClick={this.onMapClick}>Delete station</Button>\n      </Container>\n    )\n  }\n}\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}