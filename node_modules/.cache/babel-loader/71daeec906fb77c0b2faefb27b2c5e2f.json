{"ast":null,"code":"var _jsxFileName = \"/home/luong/kobuki_web/src/components/Map/Map.js\";\nimport React, { Component } from \"react\";\nimport { Container, Card } from \"react-bootstrap\";\nimport ROSLIB from \"roslib\";\nimport Nav2d from \"react-nav2djs/lib\";\nimport \"./Map.css\";\nimport \"../CommonStyle.css\";\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n    this.ros = props.ros || null;\n    this.state = {\n      command: 'none',\n      message: 'Robot is ready !',\n      stationName: 'NoName',\n      enableCancel: false,\n      stations: []\n    };\n    this.actionClient = null;\n    this.cancelAssignmentService = null;\n    this.InsertStationService = null;\n    this.DeleteStationService = null;\n    this.GetStationService = null;\n  }\n\n  componentDidMount() {\n    if (this.props.ros != null) {\n      this.ros = this.props.ros;\n      var serverName = this.props.serverName || '/move_base';\n      var actionName = this.props.actionName || 'move_base_msgs/MoveBaseAction';\n      this.actionClient = new ROSLIB.ActionClient({\n        ros: this.ros,\n        actionName: actionName,\n        serverName: serverName\n      }); // this.cancelAssignmentService = new ROSLIB.Service({\n      //   ros: this.ros,\n      //   name: '/rtabmap/cancel_goal',\n      //   serviceType: 'std_srvs/Empty'\n      // });\n      // this.InsertStationService = new ROSLIB.Service({\n      //   ros: this.ros,\n      //   name: '/InsertStation',\n      //   serviceType: 'jarvis_web_server/InsertStation',\n      // });\n      // this.DeleteStationService = new ROSLIB.Service({\n      //   ros: this.ros,\n      //   name: '/DeleteStation',\n      //   serviceType: 'jarvis_web_server/DeleteStation',\n      // });\n\n      this.GetStationService = new ROSLIB.Service({\n        ros: this.ros,\n        name: '/get_station_list',\n        serviceType: 'kobuki_ui/GetStationList'\n      });\n      this.GetStationService.callService(null, res => {\n        console.log(res.station_list);\n        this.setState({\n          stations: res.station_list\n        });\n      });\n      console.log(this.state.stations);\n      console.log(\"hello\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      className: \"box-margin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      border: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: {\n        fontSize: \"1.2rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 54\n      }\n    }, \"Map\")), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      className: \"map-container\",\n      id: \"map\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Nav2d, {\n      id: \"random\",\n      height: 480,\n      ros: this.ros,\n      serverName: \"/move_base\",\n      imageRobot: require('./jarvis.png'),\n      imageGoalArrow: require('./arrow-red.png'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/home/luong/kobuki_web/src/components/Map/Map.js"],"names":["React","Component","Container","Card","ROSLIB","Nav2d","Map","constructor","props","ros","state","command","message","stationName","enableCancel","stations","actionClient","cancelAssignmentService","InsertStationService","DeleteStationService","GetStationService","componentDidMount","serverName","actionName","ActionClient","Service","name","serviceType","callService","res","console","log","station_list","setState","render","fontSize","require"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Container, Card } from \"react-bootstrap\";\nimport ROSLIB from \"roslib\";\nimport Nav2d from \"react-nav2djs/lib\";\nimport \"./Map.css\";\nimport \"../CommonStyle.css\";\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n    this.ros = props.ros || null;\n    this.state = {\n      command: 'none',\n      message: 'Robot is ready !',\n      stationName: 'NoName',\n      enableCancel: false,\n      stations: [],\n    }\n    this.actionClient = null;\n    this.cancelAssignmentService = null;\n    this.InsertStationService = null;\n    this.DeleteStationService = null;\n    this.GetStationService = null;\n  }\n\n  componentDidMount() {\n    if (this.props.ros != null) {\n      this.ros = this.props.ros;\n      var serverName = this.props.serverName || '/move_base';\n      var actionName = this.props.actionName || 'move_base_msgs/MoveBaseAction';\n      this.actionClient = new ROSLIB.ActionClient({\n        ros: this.ros,\n        actionName: actionName,\n        serverName: serverName\n      });\n      // this.cancelAssignmentService = new ROSLIB.Service({\n      //   ros: this.ros,\n      //   name: '/rtabmap/cancel_goal',\n      //   serviceType: 'std_srvs/Empty'\n      // });\n      // this.InsertStationService = new ROSLIB.Service({\n      //   ros: this.ros,\n      //   name: '/InsertStation',\n      //   serviceType: 'jarvis_web_server/InsertStation',\n      // });\n      // this.DeleteStationService = new ROSLIB.Service({\n      //   ros: this.ros,\n      //   name: '/DeleteStation',\n      //   serviceType: 'jarvis_web_server/DeleteStation',\n      // });\n      this.GetStationService = new ROSLIB.Service({\n        ros: this.ros,\n        name: '/get_station_list',\n        serviceType: 'kobuki_ui/GetStationList',\n      });\n      this.GetStationService.callService(null,(res) => {\n        console.log(res.station_list)\n        this.setState({stations: res.station_list});\n      });\n\n      console.log(this.state.stations);\n      console.log(\"hello\");\n    }\n  }\n\n  render() {\n    return (\n      <Container className=\"box-margin\">\n        <Card border=\"secondary\">\n          <Card.Header style={{fontSize: \"1.2rem\" }}><strong>Map</strong></Card.Header>\n          <Card.Body>\n            <Container className=\"map-container\" id=\"map\">\n              <Nav2d\n                id='random'\n                height={480}\n                ros={this.ros}\n                serverName='/move_base'\n                imageRobot={require('./jarvis.png')}\n                imageGoalArrow={require('./arrow-red.png')}\n              />\n            </Container>\n          </Card.Body>\n        </Card>\n      </Container>\n    )\n  }\n}\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}