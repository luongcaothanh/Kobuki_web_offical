{"ast":null,"code":"/*!\n* EaselJS\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2010 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n//##############################################################################\n// extend.js\n//##############################################################################\nwindow.createjs = window.createjs || {};\n/**\n * @class Utility Methods\n */\n\n/**\n * Sets up the prototype chain and constructor property for a new class.\n *\n * This should be called right after creating the class constructor.\n *\n * \tfunction MySubClass() {}\n * \tcreatejs.extend(MySubClass, MySuperClass);\n * \tMySubClass.prototype.doSomething = function() { }\n *\n * \tvar foo = new MySubClass();\n * \tconsole.log(foo instanceof MySuperClass); // true\n * \tconsole.log(foo.prototype.constructor === MySubClass); // true\n *\n * @method extend\n * @param {Function} subclass The subclass.\n * @param {Function} superclass The superclass to extend.\n * @return {Function} Returns the subclass's new prototype.\n */\n\ncreatejs.extend = function (subclass, superclass) {\n  \"use strict\";\n\n  function o() {\n    this.constructor = subclass;\n  }\n\n  o.prototype = superclass.prototype;\n  return subclass.prototype = new o();\n}; //##############################################################################\n// promote.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n/**\n * @class Utility Methods\n */\n\n/**\n * Promotes any methods on the super class that were overridden, by creating an alias in the format `prefix_methodName`.\n * It is recommended to use the super class's name as the prefix.\n * An alias to the super class's constructor is always added in the format `prefix_constructor`.\n * This allows the subclass to call super class methods without using `function.call`, providing better performance.\n *\n * For example, if `MySubClass` extends `MySuperClass`, and both define a `draw` method, then calling `promote(MySubClass, \"MySuperClass\")`\n * would add a `MySuperClass_constructor` method to MySubClass and promote the `draw` method on `MySuperClass` to the\n * prototype of `MySubClass` as `MySuperClass_draw`.\n *\n * This should be called after the class's prototype is fully defined.\n *\n * \tfunction ClassA(name) {\n * \t\tthis.name = name;\n * \t}\n * \tClassA.prototype.greet = function() {\n * \t\treturn \"Hello \"+this.name;\n * \t}\n *\n * \tfunction ClassB(name, punctuation) {\n * \t\tthis.ClassA_constructor(name);\n * \t\tthis.punctuation = punctuation;\n * \t}\n * \tcreatejs.extend(ClassB, ClassA);\n * \tClassB.prototype.greet = function() {\n * \t\treturn this.ClassA_greet()+this.punctuation;\n * \t}\n * \tcreatejs.promote(ClassB, \"ClassA\");\n *\n * \tvar foo = new ClassB(\"World\", \"!?!\");\n * \tconsole.log(foo.greet()); // Hello World!?!\n *\n * @method promote\n * @param {Function} subclass The class to promote super class methods on.\n * @param {String} prefix The prefix to add to the promoted method names. Usually the name of the superclass.\n * @return {Function} Returns the subclass.\n */\n\ncreatejs.promote = function (subclass, prefix) {\n  \"use strict\";\n\n  var subP = subclass.prototype,\n      supP = Object.getPrototypeOf && Object.getPrototypeOf(subP) || subP.__proto__;\n\n  if (supP) {\n    subP[(prefix += \"_\") + \"constructor\"] = supP.constructor; // constructor is not always innumerable\n\n    for (var n in supP) {\n      if (subP.hasOwnProperty(n) && typeof supP[n] == \"function\") {\n        subP[prefix + n] = supP[n];\n      }\n    }\n  }\n\n  return subclass;\n}; //##############################################################################\n// indexOf.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n/**\n * @class Utility Methods\n */\n\n/**\n * Finds the first occurrence of a specified value searchElement in the passed in array, and returns the index of\n * that value.  Returns -1 if value is not found.\n *\n *      var i = createjs.indexOf(myArray, myElementToFind);\n *\n * @method indexOf\n * @param {Array} array Array to search for searchElement\n * @param searchElement Element to find in array.\n * @return {Number} The first index of searchElement in array.\n */\n\ncreatejs.indexOf = function (array, searchElement) {\n  \"use strict\";\n\n  for (var i = 0, l = array.length; i < l; i++) {\n    if (searchElement === array[i]) {\n      return i;\n    }\n  }\n\n  return -1;\n}; //##############################################################################\n// UID.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor:\n\n  /**\n   * Global utility for generating sequential unique ID numbers. The UID class uses a static interface (ex. <code>UID.get()</code>)\n   * and should not be instantiated.\n   * @class UID\n   * @static\n   **/\n\n  function UID() {\n    throw \"UID cannot be instantiated\";\n  } // private static properties:\n\n  /**\n   * @property _nextID\n   * @type Number\n   * @protected\n   **/\n\n\n  UID._nextID = 0; // public static methods:\n\n  /**\n   * Returns the next unique id.\n   * @method get\n   * @return {Number} The next unique id\n   * @static\n   **/\n\n  UID.get = function () {\n    return UID._nextID++;\n  };\n\n  createjs.UID = UID;\n})(); //##############################################################################\n// deprecate.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n/**\n * @class Utility Methods\n */\n\n/**\n * Wraps deprecated methods so they still be used, but throw warnings to developers.\n *\n *\tobj.deprecatedMethod = createjs.deprecate(\"Old Method Name\", obj._fallbackMethod);\n *\n * The recommended approach for deprecated properties is:\n *\n *\ttry {\n *\t\tObj\tect.defineProperties(object, {\n *\t\t\treadyOnlyProp: { get: createjs.deprecate(\"readOnlyProp\", function() { return this.alternateProp; }) },\n *\t\t\treadWriteProp: {\n *\t\t\t\tget: createjs.deprecate(\"readOnlyProp\", function() { return this.alternateProp; }),\n *\t\t\t\tset: createjs.deprecate(\"readOnlyProp\", function(val) { this.alternateProp = val; })\n *\t\t});\n *\t} catch (e) {}\n *\n * @method deprecate\n * @param {Function} [fallbackMethod=null] A method to call when the deprecated method is used. See the example for how\n * @param {String} [name=null] The name of the method or property to display in the console warning.\n * to deprecate properties.\n * @return {Function} If a fallbackMethod is supplied, returns a closure that will call the fallback method after\n * logging the warning in the console.\n */\n\ncreatejs.deprecate = function (fallbackMethod, name) {\n  \"use strict\";\n\n  return function () {\n    var msg = \"Deprecated property or method '\" + name + \"'. See docs for info.\";\n    console && (console.warn ? console.warn(msg) : console.log(msg));\n    return fallbackMethod && fallbackMethod.apply(this, arguments);\n  };\n}; //##############################################################################\n// Event.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor:\n\n  /**\n   * Contains properties and methods shared by all events for use with\n   * {{#crossLink \"EventDispatcher\"}}{{/crossLink}}.\n   * \n   * Note that Event objects are often reused, so you should never\n   * rely on an event object's state outside of the call stack it was received in.\n   * @class Event\n   * @param {String} type The event type.\n   * @param {Boolean} bubbles Indicates whether the event will bubble through the display list.\n   * @param {Boolean} cancelable Indicates whether the default behaviour of this event can be cancelled.\n   * @constructor\n   **/\n\n  function Event(type, bubbles, cancelable) {\n    // public properties:\n\n    /**\n     * The type of event.\n     * @property type\n     * @type String\n     **/\n    this.type = type;\n    /**\n     * The object that generated an event.\n     * @property target\n     * @type Object\n     * @default null\n     * @readonly\n    */\n\n    this.target = null;\n    /**\n     * The current target that a bubbling event is being dispatched from. For non-bubbling events, this will\n     * always be the same as target. For example, if childObj.parent = parentObj, and a bubbling event\n     * is generated from childObj, then a listener on parentObj would receive the event with\n     * target=childObj (the original target) and currentTarget=parentObj (where the listener was added).\n     * @property currentTarget\n     * @type Object\n     * @default null\n     * @readonly\n    */\n\n    this.currentTarget = null;\n    /**\n     * For bubbling events, this indicates the current event phase:<OL>\n     * \t<LI> capture phase: starting from the top parent to the target</LI>\n     * \t<LI> at target phase: currently being dispatched from the target</LI>\n     * \t<LI> bubbling phase: from the target to the top parent</LI>\n     * </OL>\n     * @property eventPhase\n     * @type Number\n     * @default 0\n     * @readonly\n    */\n\n    this.eventPhase = 0;\n    /**\n     * Indicates whether the event will bubble through the display list.\n     * @property bubbles\n     * @type Boolean\n     * @default false\n     * @readonly\n    */\n\n    this.bubbles = !!bubbles;\n    /**\n     * Indicates whether the default behaviour of this event can be cancelled via\n     * {{#crossLink \"Event/preventDefault\"}}{{/crossLink}}. This is set via the Event constructor.\n     * @property cancelable\n     * @type Boolean\n     * @default false\n     * @readonly\n    */\n\n    this.cancelable = !!cancelable;\n    /**\n     * The epoch time at which this event was created.\n     * @property timeStamp\n     * @type Number\n     * @default 0\n     * @readonly\n    */\n\n    this.timeStamp = new Date().getTime();\n    /**\n     * Indicates if {{#crossLink \"Event/preventDefault\"}}{{/crossLink}} has been called\n     * on this event.\n     * @property defaultPrevented\n     * @type Boolean\n     * @default false\n     * @readonly\n    */\n\n    this.defaultPrevented = false;\n    /**\n     * Indicates if {{#crossLink \"Event/stopPropagation\"}}{{/crossLink}} or\n     * {{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called on this event.\n     * @property propagationStopped\n     * @type Boolean\n     * @default false\n     * @readonly\n    */\n\n    this.propagationStopped = false;\n    /**\n     * Indicates if {{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called\n     * on this event.\n     * @property immediatePropagationStopped\n     * @type Boolean\n     * @default false\n     * @readonly\n    */\n\n    this.immediatePropagationStopped = false;\n    /**\n     * Indicates if {{#crossLink \"Event/remove\"}}{{/crossLink}} has been called on this event.\n     * @property removed\n     * @type Boolean\n     * @default false\n     * @readonly\n    */\n\n    this.removed = false;\n  }\n\n  var p = Event.prototype; // public methods:\n\n  /**\n   * Sets {{#crossLink \"Event/defaultPrevented\"}}{{/crossLink}} to true if the event is cancelable.\n   * Mirrors the DOM level 2 event standard. In general, cancelable events that have `preventDefault()` called will\n   * cancel the default behaviour associated with the event.\n   * @method preventDefault\n   **/\n\n  p.preventDefault = function () {\n    this.defaultPrevented = this.cancelable && true;\n  };\n  /**\n   * Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} to true.\n   * Mirrors the DOM event standard.\n   * @method stopPropagation\n   **/\n\n\n  p.stopPropagation = function () {\n    this.propagationStopped = true;\n  };\n  /**\n   * Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} and\n   * {{#crossLink \"Event/immediatePropagationStopped\"}}{{/crossLink}} to true.\n   * Mirrors the DOM event standard.\n   * @method stopImmediatePropagation\n   **/\n\n\n  p.stopImmediatePropagation = function () {\n    this.immediatePropagationStopped = this.propagationStopped = true;\n  };\n  /**\n   * Causes the active listener to be removed via removeEventListener();\n   * \n   * \t\tmyBtn.addEventListener(\"click\", function(evt) {\n   * \t\t\t// do stuff...\n   * \t\t\tevt.remove(); // removes this listener.\n   * \t\t});\n   * \n   * @method remove\n   **/\n\n\n  p.remove = function () {\n    this.removed = true;\n  };\n  /**\n   * Returns a clone of the Event instance.\n   * @method clone\n   * @return {Event} a clone of the Event instance.\n   **/\n\n\n  p.clone = function () {\n    return new Event(this.type, this.bubbles, this.cancelable);\n  };\n  /**\n   * Provides a chainable shortcut method for setting a number of properties on the instance.\n   *\n   * @method set\n   * @param {Object} props A generic object containing properties to copy to the instance.\n   * @return {Event} Returns the instance the method is called on (useful for chaining calls.)\n   * @chainable\n  */\n\n\n  p.set = function (props) {\n    for (var n in props) {\n      this[n] = props[n];\n    }\n\n    return this;\n  };\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n\n\n  p.toString = function () {\n    return \"[Event (type=\" + this.type + \")]\";\n  };\n\n  createjs.Event = Event;\n})(); //##############################################################################\n// EventDispatcher.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor:\n\n  /**\n   * EventDispatcher provides methods for managing queues of event listeners and dispatching events.\n   *\n   * You can either extend EventDispatcher or mix its methods into an existing prototype or instance by using the\n   * EventDispatcher {{#crossLink \"EventDispatcher/initialize\"}}{{/crossLink}} method.\n   * \n   * Together with the CreateJS Event class, EventDispatcher provides an extended event model that is based on the\n   * DOM Level 2 event model, including addEventListener, removeEventListener, and dispatchEvent. It supports\n   * bubbling / capture, preventDefault, stopPropagation, stopImmediatePropagation, and handleEvent.\n   * \n   * EventDispatcher also exposes a {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}} method, which makes it easier\n   * to create scoped listeners, listeners that only run once, and listeners with associated arbitrary data. The \n   * {{#crossLink \"EventDispatcher/off\"}}{{/crossLink}} method is merely an alias to\n   * {{#crossLink \"EventDispatcher/removeEventListener\"}}{{/crossLink}}.\n   * \n   * Another addition to the DOM Level 2 model is the {{#crossLink \"EventDispatcher/removeAllEventListeners\"}}{{/crossLink}}\n   * method, which can be used to listeners for all events, or listeners for a specific event. The Event object also \n   * includes a {{#crossLink \"Event/remove\"}}{{/crossLink}} method which removes the active listener.\n   *\n   * <h4>Example</h4>\n   * Add EventDispatcher capabilities to the \"MyClass\" class.\n   *\n   *      EventDispatcher.initialize(MyClass.prototype);\n   *\n   * Add an event (see {{#crossLink \"EventDispatcher/addEventListener\"}}{{/crossLink}}).\n   *\n   *      instance.addEventListener(\"eventName\", handlerMethod);\n   *      function handlerMethod(event) {\n   *          console.log(event.target + \" Was Clicked\");\n   *      }\n   *\n   * <b>Maintaining proper scope</b><br />\n   * Scope (ie. \"this\") can be be a challenge with events. Using the {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}}\n   * method to subscribe to events simplifies this.\n   *\n   *      instance.addEventListener(\"click\", function(event) {\n   *          console.log(instance == this); // false, scope is ambiguous.\n   *      });\n   *      \n   *      instance.on(\"click\", function(event) {\n   *          console.log(instance == this); // true, \"on\" uses dispatcher scope by default.\n   *      });\n   * \n   * If you want to use addEventListener instead, you may want to use function.bind() or a similar proxy to manage\n   * scope.\n   *\n   * <b>Browser support</b>\n   * The event model in CreateJS can be used separately from the suite in any project, however the inheritance model\n   * requires modern browsers (IE9+).\n   *      \n   *\n   * @class EventDispatcher\n   * @constructor\n   **/\n\n  function EventDispatcher() {\n    // private properties:\n\n    /**\n     * @protected\n     * @property _listeners\n     * @type Object\n     **/\n    this._listeners = null;\n    /**\n     * @protected\n     * @property _captureListeners\n     * @type Object\n     **/\n\n    this._captureListeners = null;\n  }\n\n  var p = EventDispatcher.prototype; // static public methods:\n\n  /**\n   * Static initializer to mix EventDispatcher methods into a target object or prototype.\n   * \n   * \t\tEventDispatcher.initialize(MyClass.prototype); // add to the prototype of the class\n   * \t\tEventDispatcher.initialize(myObject); // add to a specific instance\n   * \n   * @method initialize\n   * @static\n   * @param {Object} target The target object to inject EventDispatcher methods into. This can be an instance or a\n   * prototype.\n   **/\n\n  EventDispatcher.initialize = function (target) {\n    target.addEventListener = p.addEventListener;\n    target.on = p.on;\n    target.removeEventListener = target.off = p.removeEventListener;\n    target.removeAllEventListeners = p.removeAllEventListeners;\n    target.hasEventListener = p.hasEventListener;\n    target.dispatchEvent = p.dispatchEvent;\n    target._dispatchEvent = p._dispatchEvent;\n    target.willTrigger = p.willTrigger;\n  }; // public methods:\n\n  /**\n   * Adds the specified event listener. Note that adding multiple listeners to the same function will result in\n   * multiple callbacks getting fired.\n   *\n   * <h4>Example</h4>\n   *\n   *      displayObject.addEventListener(\"click\", handleClick);\n   *      function handleClick(event) {\n   *         // Click happened.\n   *      }\n   *\n   * @method addEventListener\n   * @param {String} type The string type of the event.\n   * @param {Function | Object} listener An object with a handleEvent method, or a function that will be called when\n   * the event is dispatched.\n   * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n   * @return {Function | Object} Returns the listener for chaining or assignment.\n   **/\n\n\n  p.addEventListener = function (type, listener, useCapture) {\n    var listeners;\n\n    if (useCapture) {\n      listeners = this._captureListeners = this._captureListeners || {};\n    } else {\n      listeners = this._listeners = this._listeners || {};\n    }\n\n    var arr = listeners[type];\n\n    if (arr) {\n      this.removeEventListener(type, listener, useCapture);\n    }\n\n    arr = listeners[type]; // remove may have deleted the array\n\n    if (!arr) {\n      listeners[type] = [listener];\n    } else {\n      arr.push(listener);\n    }\n\n    return listener;\n  };\n  /**\n   * A shortcut method for using addEventListener that makes it easier to specify an execution scope, have a listener\n   * only run once, associate arbitrary data with the listener, and remove the listener.\n   * \n   * This method works by creating an anonymous wrapper function and subscribing it with addEventListener.\n   * The wrapper function is returned for use with `removeEventListener` (or `off`).\n   * \n   * <b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener, or use\n   * {{#crossLink \"Event/remove\"}}{{/crossLink}}. Likewise, each time you call `on` a NEW wrapper function is subscribed, so multiple calls\n   * to `on` with the same params will create multiple listeners.\n   * \n   * <h4>Example</h4>\n   * \n   * \t\tvar listener = myBtn.on(\"click\", handleClick, null, false, {count:3});\n   * \t\tfunction handleClick(evt, data) {\n   * \t\t\tdata.count -= 1;\n   * \t\t\tconsole.log(this == myBtn); // true - scope defaults to the dispatcher\n   * \t\t\tif (data.count == 0) {\n   * \t\t\t\talert(\"clicked 3 times!\");\n   * \t\t\t\tmyBtn.off(\"click\", listener);\n   * \t\t\t\t// alternately: evt.remove();\n   * \t\t\t}\n   * \t\t}\n   * \n   * @method on\n   * @param {String} type The string type of the event.\n   * @param {Function | Object} listener An object with a handleEvent method, or a function that will be called when\n   * the event is dispatched.\n   * @param {Object} [scope] The scope to execute the listener in. Defaults to the dispatcher/currentTarget for function listeners, and to the listener itself for object listeners (ie. using handleEvent).\n   * @param {Boolean} [once=false] If true, the listener will remove itself after the first time it is triggered.\n   * @param {*} [data] Arbitrary data that will be included as the second parameter when the listener is called.\n   * @param {Boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n   * @return {Function} Returns the anonymous function that was created and assigned as the listener. This is needed to remove the listener later using .removeEventListener.\n   **/\n\n\n  p.on = function (type, listener, scope, once, data, useCapture) {\n    if (listener.handleEvent) {\n      scope = scope || listener;\n      listener = listener.handleEvent;\n    }\n\n    scope = scope || this;\n    return this.addEventListener(type, function (evt) {\n      listener.call(scope, evt, data);\n      once && evt.remove();\n    }, useCapture);\n  };\n  /**\n   * Removes the specified event listener.\n   *\n   * <b>Important Note:</b> that you must pass the exact function reference used when the event was added. If a proxy\n   * function, or function closure is used as the callback, the proxy/closure reference must be used - a new proxy or\n   * closure will not work.\n   *\n   * <h4>Example</h4>\n   *\n   *      displayObject.removeEventListener(\"click\", handleClick);\n   *\n   * @method removeEventListener\n   * @param {String} type The string type of the event.\n   * @param {Function | Object} listener The listener function or object.\n   * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n   **/\n\n\n  p.removeEventListener = function (type, listener, useCapture) {\n    var listeners = useCapture ? this._captureListeners : this._listeners;\n\n    if (!listeners) {\n      return;\n    }\n\n    var arr = listeners[type];\n\n    if (!arr) {\n      return;\n    }\n\n    for (var i = 0, l = arr.length; i < l; i++) {\n      if (arr[i] == listener) {\n        if (l == 1) {\n          delete listeners[type];\n        } // allows for faster checks.\n        else {\n            arr.splice(i, 1);\n          }\n\n        break;\n      }\n    }\n  };\n  /**\n   * A shortcut to the removeEventListener method, with the same parameters and return value. This is a companion to the\n   * .on method.\n   * \n   * <b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener. See \n   * {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}} for an example.\n   *\n   * @method off\n   * @param {String} type The string type of the event.\n   * @param {Function | Object} listener The listener function or object.\n   * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n   **/\n\n\n  p.off = p.removeEventListener;\n  /**\n   * Removes all listeners for the specified type, or all listeners of all types.\n   *\n   * <h4>Example</h4>\n   *\n   *      // Remove all listeners\n   *      displayObject.removeAllEventListeners();\n   *\n   *      // Remove all click listeners\n   *      displayObject.removeAllEventListeners(\"click\");\n   *\n   * @method removeAllEventListeners\n   * @param {String} [type] The string type of the event. If omitted, all listeners for all types will be removed.\n   **/\n\n  p.removeAllEventListeners = function (type) {\n    if (!type) {\n      this._listeners = this._captureListeners = null;\n    } else {\n      if (this._listeners) {\n        delete this._listeners[type];\n      }\n\n      if (this._captureListeners) {\n        delete this._captureListeners[type];\n      }\n    }\n  };\n  /**\n   * Dispatches the specified event to all listeners.\n   *\n   * <h4>Example</h4>\n   *\n   *      // Use a string event\n   *      this.dispatchEvent(\"complete\");\n   *\n   *      // Use an Event instance\n   *      var event = new createjs.Event(\"progress\");\n   *      this.dispatchEvent(event);\n   *\n   * @method dispatchEvent\n   * @param {Object | String | Event} eventObj An object with a \"type\" property, or a string type.\n   * While a generic object will work, it is recommended to use a CreateJS Event instance. If a string is used,\n   * dispatchEvent will construct an Event instance if necessary with the specified type. This latter approach can\n   * be used to avoid event object instantiation for non-bubbling events that may not have any listeners.\n   * @param {Boolean} [bubbles] Specifies the `bubbles` value when a string was passed to eventObj.\n   * @param {Boolean} [cancelable] Specifies the `cancelable` value when a string was passed to eventObj.\n   * @return {Boolean} Returns false if `preventDefault()` was called on a cancelable event, true otherwise.\n   **/\n\n\n  p.dispatchEvent = function (eventObj, bubbles, cancelable) {\n    if (typeof eventObj == \"string\") {\n      // skip everything if there's no listeners and it doesn't bubble:\n      var listeners = this._listeners;\n\n      if (!bubbles && (!listeners || !listeners[eventObj])) {\n        return true;\n      }\n\n      eventObj = new createjs.Event(eventObj, bubbles, cancelable);\n    } else if (eventObj.target && eventObj.clone) {\n      // redispatching an active event object, so clone it:\n      eventObj = eventObj.clone();\n    } // TODO: it would be nice to eliminate this. Maybe in favour of evtObj instanceof Event? Or !!evtObj.createEvent\n\n\n    try {\n      eventObj.target = this;\n    } catch (e) {} // try/catch allows redispatching of native events\n\n\n    if (!eventObj.bubbles || !this.parent) {\n      this._dispatchEvent(eventObj, 2);\n    } else {\n      var top = this,\n          list = [top];\n\n      while (top.parent) {\n        list.push(top = top.parent);\n      }\n\n      var i,\n          l = list.length; // capture & atTarget\n\n      for (i = l - 1; i >= 0 && !eventObj.propagationStopped; i--) {\n        list[i]._dispatchEvent(eventObj, 1 + (i == 0));\n      } // bubbling\n\n\n      for (i = 1; i < l && !eventObj.propagationStopped; i++) {\n        list[i]._dispatchEvent(eventObj, 3);\n      }\n    }\n\n    return !eventObj.defaultPrevented;\n  };\n  /**\n   * Indicates whether there is at least one listener for the specified event type.\n   * @method hasEventListener\n   * @param {String} type The string type of the event.\n   * @return {Boolean} Returns true if there is at least one listener for the specified event.\n   **/\n\n\n  p.hasEventListener = function (type) {\n    var listeners = this._listeners,\n        captureListeners = this._captureListeners;\n    return !!(listeners && listeners[type] || captureListeners && captureListeners[type]);\n  };\n  /**\n   * Indicates whether there is at least one listener for the specified event type on this object or any of its\n   * ancestors (parent, parent's parent, etc). A return value of true indicates that if a bubbling event of the\n   * specified type is dispatched from this object, it will trigger at least one listener.\n   * \n   * This is similar to {{#crossLink \"EventDispatcher/hasEventListener\"}}{{/crossLink}}, but it searches the entire\n   * event flow for a listener, not just this object.\n   * @method willTrigger\n   * @param {String} type The string type of the event.\n   * @return {Boolean} Returns `true` if there is at least one listener for the specified event.\n   **/\n\n\n  p.willTrigger = function (type) {\n    var o = this;\n\n    while (o) {\n      if (o.hasEventListener(type)) {\n        return true;\n      }\n\n      o = o.parent;\n    }\n\n    return false;\n  };\n  /**\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n\n\n  p.toString = function () {\n    return \"[EventDispatcher]\";\n  }; // private methods:\n\n  /**\n   * @method _dispatchEvent\n   * @param {Object | Event} eventObj\n   * @param {Object} eventPhase\n   * @protected\n   **/\n\n\n  p._dispatchEvent = function (eventObj, eventPhase) {\n    var l,\n        arr,\n        listeners = eventPhase <= 2 ? this._captureListeners : this._listeners;\n\n    if (eventObj && listeners && (arr = listeners[eventObj.type]) && (l = arr.length)) {\n      try {\n        eventObj.currentTarget = this;\n      } catch (e) {}\n\n      try {\n        eventObj.eventPhase = eventPhase | 0;\n      } catch (e) {}\n\n      eventObj.removed = false;\n      arr = arr.slice(); // to avoid issues with items being removed or added during the dispatch\n\n      for (var i = 0; i < l && !eventObj.immediatePropagationStopped; i++) {\n        var o = arr[i];\n\n        if (o.handleEvent) {\n          o.handleEvent(eventObj);\n        } else {\n          o(eventObj);\n        }\n\n        if (eventObj.removed) {\n          this.off(eventObj.type, o, eventPhase == 1);\n          eventObj.removed = false;\n        }\n      }\n    }\n\n    if (eventPhase === 2) {\n      this._dispatchEvent(eventObj, 2.1);\n    }\n  };\n\n  createjs.EventDispatcher = EventDispatcher;\n})(); //##############################################################################\n// Ticker.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor:\n\n  /**\n   * The Ticker provides a centralized tick or heartbeat broadcast at a set interval. Listeners can subscribe to the tick\n   * event to be notified when a set time interval has elapsed.\n   *\n   * Note that the interval that the tick event is called is a target interval, and may be broadcast at a slower interval\n   * when under high CPU load. The Ticker class uses a static interface (ex. `Ticker.framerate = 30;`) and\n   * can not be instantiated.\n   *\n   * <h4>Example</h4>\n   *\n   *      createjs.Ticker.addEventListener(\"tick\", handleTick);\n   *      function handleTick(event) {\n   *          // Actions carried out each tick (aka frame)\n   *          if (!event.paused) {\n   *              // Actions carried out when the Ticker is not paused.\n   *          }\n   *      }\n   *\n   * @class Ticker\n   * @uses EventDispatcher\n   * @static\n   **/\n\n  function Ticker() {\n    throw \"Ticker cannot be instantiated.\";\n  } // constants:\n\n  /**\n   * In this mode, Ticker uses the requestAnimationFrame API, but attempts to synch the ticks to target framerate. It\n   * uses a simple heuristic that compares the time of the RAF return to the target time for the current frame and\n   * dispatches the tick when the time is within a certain threshold.\n   *\n   * This mode has a higher variance for time between frames than {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}},\n   * but does not require that content be time based as with {{#crossLink \"Ticker/RAF:property\"}}{{/crossLink}} while\n   * gaining the benefits of that API (screen synch, background throttling).\n   *\n   * Variance is usually lowest for framerates that are a divisor of the RAF frequency. This is usually 60, so\n   * framerates of 10, 12, 15, 20, and 30 work well.\n   *\n   * Falls back to {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}} if the requestAnimationFrame API is not\n   * supported.\n   * @property RAF_SYNCHED\n   * @static\n   * @type {String}\n   * @default \"synched\"\n   * @readonly\n   **/\n\n\n  Ticker.RAF_SYNCHED = \"synched\";\n  /**\n   * In this mode, Ticker passes through the requestAnimationFrame heartbeat, ignoring the target framerate completely.\n   * Because requestAnimationFrame frequency is not deterministic, any content using this mode should be time based.\n   * You can leverage {{#crossLink \"Ticker/getTime\"}}{{/crossLink}} and the {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\n   * event object's \"delta\" properties to make this easier.\n   *\n   * Falls back on {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}} if the requestAnimationFrame API is not\n   * supported.\n   * @property RAF\n   * @static\n   * @type {String}\n   * @default \"raf\"\n   * @readonly\n   **/\n\n  Ticker.RAF = \"raf\";\n  /**\n   * In this mode, Ticker uses the setTimeout API. This provides predictable, adaptive frame timing, but does not\n   * provide the benefits of requestAnimationFrame (screen synch, background throttling).\n   * @property TIMEOUT\n   * @static\n   * @type {String}\n   * @default \"timeout\"\n   * @readonly\n   **/\n\n  Ticker.TIMEOUT = \"timeout\"; // static events:\n\n  /**\n   * Dispatched each tick. The event will be dispatched to each listener even when the Ticker has been paused using\n   * {{#crossLink \"Ticker/paused:property\"}}{{/crossLink}}.\n   *\n   * <h4>Example</h4>\n   *\n   *      createjs.Ticker.addEventListener(\"tick\", handleTick);\n   *      function handleTick(event) {\n   *          console.log(\"Paused:\", event.paused, event.delta);\n   *      }\n   *\n   * @event tick\n   * @param {Object} target The object that dispatched the event.\n   * @param {String} type The event type.\n   * @param {Boolean} paused Indicates whether the ticker is currently paused.\n   * @param {Number} delta The time elapsed in ms since the last tick.\n   * @param {Number} time The total time in ms since Ticker was initialized.\n   * @param {Number} runTime The total time in ms that Ticker was not paused since it was initialized. For example,\n   * \tyou could determine the amount of time that the Ticker has been paused since initialization with `time-runTime`.\n   * @since 0.6.0\n   */\n  // public static properties:\n\n  /**\n   * Specifies the timing api (setTimeout or requestAnimationFrame) and mode to use. See\n   * {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}}, {{#crossLink \"Ticker/RAF:property\"}}{{/crossLink}}, and\n   * {{#crossLink \"Ticker/RAF_SYNCHED:property\"}}{{/crossLink}} for mode details.\n   * @property timingMode\n   * @static\n   * @type {String}\n   * @default Ticker.TIMEOUT\n   **/\n\n  Ticker.timingMode = null;\n  /**\n   * Specifies a maximum value for the delta property in the tick event object. This is useful when building time\n   * based animations and systems to prevent issues caused by large time gaps caused by background tabs, system sleep,\n   * alert dialogs, or other blocking routines. Double the expected frame duration is often an effective value\n   * (ex. maxDelta=50 when running at 40fps).\n   * \n   * This does not impact any other values (ex. time, runTime, etc), so you may experience issues if you enable maxDelta\n   * when using both delta and other values.\n   * \n   * If 0, there is no maximum.\n   * @property maxDelta\n   * @static\n   * @type {number}\n   * @default 0\n   */\n\n  Ticker.maxDelta = 0;\n  /**\n   * When the ticker is paused, all listeners will still receive a tick event, but the <code>paused</code> property\n   * of the event will be `true`. Also, while paused the `runTime` will not increase. See {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}},\n   * {{#crossLink \"Ticker/getTime\"}}{{/crossLink}}, and {{#crossLink \"Ticker/getEventTime\"}}{{/crossLink}} for more\n   * info.\n   *\n   * <h4>Example</h4>\n   *\n   *      createjs.Ticker.addEventListener(\"tick\", handleTick);\n   *      createjs.Ticker.paused = true;\n   *      function handleTick(event) {\n   *          console.log(event.paused,\n   *          \tcreatejs.Ticker.getTime(false),\n   *          \tcreatejs.Ticker.getTime(true));\n   *      }\n   *\n   * @property paused\n   * @static\n   * @type {Boolean}\n   * @default false\n   **/\n\n  Ticker.paused = false; // mix-ins:\n  // EventDispatcher methods:\n\n  Ticker.removeEventListener = null;\n  Ticker.removeAllEventListeners = null;\n  Ticker.dispatchEvent = null;\n  Ticker.hasEventListener = null;\n  Ticker._listeners = null;\n  createjs.EventDispatcher.initialize(Ticker); // inject EventDispatcher methods.\n\n  Ticker._addEventListener = Ticker.addEventListener;\n\n  Ticker.addEventListener = function () {\n    !Ticker._inited && Ticker.init();\n    return Ticker._addEventListener.apply(Ticker, arguments);\n  }; // private static properties:\n\n  /**\n   * @property _inited\n   * @static\n   * @type {Boolean}\n   * @private\n   **/\n\n\n  Ticker._inited = false;\n  /**\n   * @property _startTime\n   * @static\n   * @type {Number}\n   * @private\n   **/\n\n  Ticker._startTime = 0;\n  /**\n   * @property _pausedTime\n   * @static\n   * @type {Number}\n   * @private\n   **/\n\n  Ticker._pausedTime = 0;\n  /**\n   * The number of ticks that have passed\n   * @property _ticks\n   * @static\n   * @type {Number}\n   * @private\n   **/\n\n  Ticker._ticks = 0;\n  /**\n   * The number of ticks that have passed while Ticker has been paused\n   * @property _pausedTicks\n   * @static\n   * @type {Number}\n   * @private\n   **/\n\n  Ticker._pausedTicks = 0;\n  /**\n   * @property _interval\n   * @static\n   * @type {Number}\n   * @private\n   **/\n\n  Ticker._interval = 50;\n  /**\n   * @property _lastTime\n   * @static\n   * @type {Number}\n   * @private\n   **/\n\n  Ticker._lastTime = 0;\n  /**\n   * @property _times\n   * @static\n   * @type {Array}\n   * @private\n   **/\n\n  Ticker._times = null;\n  /**\n   * @property _tickTimes\n   * @static\n   * @type {Array}\n   * @private\n   **/\n\n  Ticker._tickTimes = null;\n  /**\n   * Stores the timeout or requestAnimationFrame id.\n   * @property _timerId\n   * @static\n   * @type {Number}\n   * @private\n   **/\n\n  Ticker._timerId = null;\n  /**\n   * True if currently using requestAnimationFrame, false if using setTimeout. This may be different than timingMode\n   * if that property changed and a tick hasn't fired.\n   * @property _raf\n   * @static\n   * @type {Boolean}\n   * @private\n   **/\n\n  Ticker._raf = true; // static getter / setters:\n\n  /**\n   * Use the {{#crossLink \"Ticker/interval:property\"}}{{/crossLink}} property instead.\n   * @method _setInterval\n   * @private\n   * @static\n   * @param {Number} interval\n   **/\n\n  Ticker._setInterval = function (interval) {\n    Ticker._interval = interval;\n\n    if (!Ticker._inited) {\n      return;\n    }\n\n    Ticker._setupTick();\n  }; // Ticker.setInterval is @deprecated. Remove for 1.1+\n\n\n  Ticker.setInterval = createjs.deprecate(Ticker._setInterval, \"Ticker.setInterval\");\n  /**\n   * Use the {{#crossLink \"Ticker/interval:property\"}}{{/crossLink}} property instead.\n   * @method _getInterval\n   * @private\n   * @static\n   * @return {Number}\n   **/\n\n  Ticker._getInterval = function () {\n    return Ticker._interval;\n  }; // Ticker.getInterval is @deprecated. Remove for 1.1+\n\n\n  Ticker.getInterval = createjs.deprecate(Ticker._getInterval, \"Ticker.getInterval\");\n  /**\n   * Use the {{#crossLink \"Ticker/framerate:property\"}}{{/crossLink}} property instead.\n   * @method _setFPS\n   * @private\n   * @static\n   * @param {Number} value\n   **/\n\n  Ticker._setFPS = function (value) {\n    Ticker._setInterval(1000 / value);\n  }; // Ticker.setFPS is @deprecated. Remove for 1.1+\n\n\n  Ticker.setFPS = createjs.deprecate(Ticker._setFPS, \"Ticker.setFPS\");\n  /**\n   * Use the {{#crossLink \"Ticker/framerate:property\"}}{{/crossLink}} property instead.\n   * @method _getFPS\n   * @static\n   * @private\n   * @return {Number}\n   **/\n\n  Ticker._getFPS = function () {\n    return 1000 / Ticker._interval;\n  }; // Ticker.getFPS is @deprecated. Remove for 1.1+\n\n\n  Ticker.getFPS = createjs.deprecate(Ticker._getFPS, \"Ticker.getFPS\");\n  /**\n   * Indicates the target time (in milliseconds) between ticks. Default is 50 (20 FPS).\n   * Note that actual time between ticks may be more than specified depending on CPU load.\n   * This property is ignored if the ticker is using the `RAF` timing mode.\n   * @property interval\n   * @static\n   * @type {Number}\n   **/\n\n  /**\n   * Indicates the target frame rate in frames per second (FPS). Effectively just a shortcut to `interval`, where\n   * `framerate == 1000/interval`.\n   * @property framerate\n   * @static\n   * @type {Number}\n   **/\n\n  try {\n    Object.defineProperties(Ticker, {\n      interval: {\n        get: Ticker._getInterval,\n        set: Ticker._setInterval\n      },\n      framerate: {\n        get: Ticker._getFPS,\n        set: Ticker._setFPS\n      }\n    });\n  } catch (e) {\n    console.log(e);\n  } // public static methods:\n\n  /**\n   * Starts the tick. This is called automatically when the first listener is added.\n   * @method init\n   * @static\n   **/\n\n\n  Ticker.init = function () {\n    if (Ticker._inited) {\n      return;\n    }\n\n    Ticker._inited = true;\n    Ticker._times = [];\n    Ticker._tickTimes = [];\n    Ticker._startTime = Ticker._getTime();\n\n    Ticker._times.push(Ticker._lastTime = 0);\n\n    Ticker.interval = Ticker._interval;\n  };\n  /**\n   * Stops the Ticker and removes all listeners. Use init() to restart the Ticker.\n   * @method reset\n   * @static\n   **/\n\n\n  Ticker.reset = function () {\n    if (Ticker._raf) {\n      var f = window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || window.oCancelAnimationFrame || window.msCancelAnimationFrame;\n      f && f(Ticker._timerId);\n    } else {\n      clearTimeout(Ticker._timerId);\n    }\n\n    Ticker.removeAllEventListeners(\"tick\");\n    Ticker._timerId = Ticker._times = Ticker._tickTimes = null;\n    Ticker._startTime = Ticker._lastTime = Ticker._ticks = Ticker._pausedTime = 0;\n    Ticker._inited = false;\n  };\n  /**\n   * Returns the average time spent within a tick. This can vary significantly from the value provided by getMeasuredFPS\n   * because it only measures the time spent within the tick execution stack. \n   * \n   * Example 1: With a target FPS of 20, getMeasuredFPS() returns 20fps, which indicates an average of 50ms between \n   * the end of one tick and the end of the next. However, getMeasuredTickTime() returns 15ms. This indicates that \n   * there may be up to 35ms of \"idle\" time between the end of one tick and the start of the next.\n   *\n   * Example 2: With a target FPS of 30, {{#crossLink \"Ticker/framerate:property\"}}{{/crossLink}} returns 10fps, which\n   * indicates an average of 100ms between the end of one tick and the end of the next. However, {{#crossLink \"Ticker/getMeasuredTickTime\"}}{{/crossLink}}\n   * returns 20ms. This would indicate that something other than the tick is using ~80ms (another script, DOM\n   * rendering, etc).\n   * @method getMeasuredTickTime\n   * @static\n   * @param {Number} [ticks] The number of previous ticks over which to measure the average time spent in a tick.\n   * Defaults to the number of ticks per second. To get only the last tick's time, pass in 1.\n   * @return {Number} The average time spent in a tick in milliseconds.\n   **/\n\n\n  Ticker.getMeasuredTickTime = function (ticks) {\n    var ttl = 0,\n        times = Ticker._tickTimes;\n\n    if (!times || times.length < 1) {\n      return -1;\n    } // by default, calculate average for the past ~1 second:\n\n\n    ticks = Math.min(times.length, ticks || Ticker._getFPS() | 0);\n\n    for (var i = 0; i < ticks; i++) {\n      ttl += times[i];\n    }\n\n    return ttl / ticks;\n  };\n  /**\n   * Returns the actual frames / ticks per second.\n   * @method getMeasuredFPS\n   * @static\n   * @param {Number} [ticks] The number of previous ticks over which to measure the actual frames / ticks per second.\n   * Defaults to the number of ticks per second.\n   * @return {Number} The actual frames / ticks per second. Depending on performance, this may differ\n   * from the target frames per second.\n   **/\n\n\n  Ticker.getMeasuredFPS = function (ticks) {\n    var times = Ticker._times;\n\n    if (!times || times.length < 2) {\n      return -1;\n    } // by default, calculate fps for the past ~1 second:\n\n\n    ticks = Math.min(times.length - 1, ticks || Ticker._getFPS() | 0);\n    return 1000 / ((times[0] - times[ticks]) / ticks);\n  };\n  /**\n   * Returns the number of milliseconds that have elapsed since Ticker was initialized via {{#crossLink \"Ticker/init\"}}.\n   * Returns -1 if Ticker has not been initialized. For example, you could use\n   * this in a time synchronized animation to determine the exact amount of time that has elapsed.\n   * @method getTime\n   * @static\n   * @param {Boolean} [runTime=false] If true only time elapsed while Ticker was not paused will be returned.\n   * If false, the value returned will be total time elapsed since the first tick event listener was added.\n   * @return {Number} Number of milliseconds that have elapsed since Ticker was initialized or -1.\n   **/\n\n\n  Ticker.getTime = function (runTime) {\n    return Ticker._startTime ? Ticker._getTime() - (runTime ? Ticker._pausedTime : 0) : -1;\n  };\n  /**\n   * Similar to the {{#crossLink \"Ticker/getTime\"}}{{/crossLink}} method, but returns the time on the most recent {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\n   * event object.\n   * @method getEventTime\n   * @static\n   * @param runTime {Boolean} [runTime=false] If true, the runTime property will be returned instead of time.\n   * @returns {number} The time or runTime property from the most recent tick event or -1.\n   */\n\n\n  Ticker.getEventTime = function (runTime) {\n    return Ticker._startTime ? (Ticker._lastTime || Ticker._startTime) - (runTime ? Ticker._pausedTime : 0) : -1;\n  };\n  /**\n   * Returns the number of ticks that have been broadcast by Ticker.\n   * @method getTicks\n   * @static\n   * @param {Boolean} pauseable Indicates whether to include ticks that would have been broadcast\n   * while Ticker was paused. If true only tick events broadcast while Ticker is not paused will be returned.\n   * If false, tick events that would have been broadcast while Ticker was paused will be included in the return\n   * value. The default value is false.\n   * @return {Number} of ticks that have been broadcast.\n   **/\n\n\n  Ticker.getTicks = function (pauseable) {\n    return Ticker._ticks - (pauseable ? Ticker._pausedTicks : 0);\n  }; // private static methods:\n\n  /**\n   * @method _handleSynch\n   * @static\n   * @private\n   **/\n\n\n  Ticker._handleSynch = function () {\n    Ticker._timerId = null;\n\n    Ticker._setupTick(); // run if enough time has elapsed, with a little bit of flexibility to be early:\n\n\n    if (Ticker._getTime() - Ticker._lastTime >= (Ticker._interval - 1) * 0.97) {\n      Ticker._tick();\n    }\n  };\n  /**\n   * @method _handleRAF\n   * @static\n   * @private\n   **/\n\n\n  Ticker._handleRAF = function () {\n    Ticker._timerId = null;\n\n    Ticker._setupTick();\n\n    Ticker._tick();\n  };\n  /**\n   * @method _handleTimeout\n   * @static\n   * @private\n   **/\n\n\n  Ticker._handleTimeout = function () {\n    Ticker._timerId = null;\n\n    Ticker._setupTick();\n\n    Ticker._tick();\n  };\n  /**\n   * @method _setupTick\n   * @static\n   * @private\n   **/\n\n\n  Ticker._setupTick = function () {\n    if (Ticker._timerId != null) {\n      return;\n    } // avoid duplicates\n\n\n    var mode = Ticker.timingMode;\n\n    if (mode == Ticker.RAF_SYNCHED || mode == Ticker.RAF) {\n      var f = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame;\n\n      if (f) {\n        Ticker._timerId = f(mode == Ticker.RAF ? Ticker._handleRAF : Ticker._handleSynch);\n        Ticker._raf = true;\n        return;\n      }\n    }\n\n    Ticker._raf = false;\n    Ticker._timerId = setTimeout(Ticker._handleTimeout, Ticker._interval);\n  };\n  /**\n   * @method _tick\n   * @static\n   * @private\n   **/\n\n\n  Ticker._tick = function () {\n    var paused = Ticker.paused;\n\n    var time = Ticker._getTime();\n\n    var elapsedTime = time - Ticker._lastTime;\n    Ticker._lastTime = time;\n    Ticker._ticks++;\n\n    if (paused) {\n      Ticker._pausedTicks++;\n      Ticker._pausedTime += elapsedTime;\n    }\n\n    if (Ticker.hasEventListener(\"tick\")) {\n      var event = new createjs.Event(\"tick\");\n      var maxDelta = Ticker.maxDelta;\n      event.delta = maxDelta && elapsedTime > maxDelta ? maxDelta : elapsedTime;\n      event.paused = paused;\n      event.time = time;\n      event.runTime = time - Ticker._pausedTime;\n      Ticker.dispatchEvent(event);\n    }\n\n    Ticker._tickTimes.unshift(Ticker._getTime() - time);\n\n    while (Ticker._tickTimes.length > 100) {\n      Ticker._tickTimes.pop();\n    }\n\n    Ticker._times.unshift(time);\n\n    while (Ticker._times.length > 100) {\n      Ticker._times.pop();\n    }\n  };\n  /**\n   * @method _getTime\n   * @static\n   * @private\n   **/\n\n\n  var w = window,\n      now = w.performance.now || w.performance.mozNow || w.performance.msNow || w.performance.oNow || w.performance.webkitNow;\n\n  Ticker._getTime = function () {\n    return (now && now.call(w.performance) || new Date().getTime()) - Ticker._startTime;\n  };\n\n  createjs.Ticker = Ticker;\n})(); //##############################################################################\n// VideoBuffer.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor:\n\n  /**\n   * When an HTML video seeks, including when looping, there is an indeterminate period before a new frame is available.\n   * This can result in the video blinking or flashing when it is drawn to a canvas. The VideoBuffer class resolves\n   * this issue by drawing each frame to an off-screen canvas and preserving the prior frame during a seek.\n   * \n   * \tvar myBuffer = new createjs.VideoBuffer(myVideo);\n   * \tvar myBitmap = new Bitmap(myBuffer);\n   * \n   * @class VideoBuffer\n   * @param {HTMLVideoElement} video The HTML video element to buffer.\n   * @constructor\n   **/\n\n  function VideoBuffer(video) {\n    // private properties:\n\n    /**\n     * Used by Bitmap to determine when the video buffer is ready to be drawn. Not intended for general use.\n     * @property readyState\n     * @protected\n     * @type {Number}\n     * @default 0\n     **/\n    this.readyState = video.readyState;\n    /**\n     * @property _video\n     * @protected\n     * @type {HTMLVideoElement}\n     * @default 0\n     **/\n\n    this._video = video;\n    /**\n     * @property _canvas\n     * @protected\n     * @type {HTMLCanvasElement}\n     * @default 0\n     **/\n\n    this._canvas = null;\n    /**\n     * @property _lastTime\n     * @protected\n     * @type {Number}\n     * @default -1\n     **/\n\n    this._lastTime = -1;\n\n    if (this.readyState < 2) {\n      video.addEventListener(\"canplaythrough\", this._videoReady.bind(this));\n    } //once:true isn't supported everywhere, but its a non-critical optimization here.\n\n  }\n\n  var p = VideoBuffer.prototype; // public methods:\n\n  /**\n   * Gets an HTML canvas element showing the current video frame, or the previous frame if in a seek / loop.\n   * Primarily for use by {{#crossLink \"Bitmap\"}}{{/crossLink}}.\n   * @method getImage\n   **/\n\n  p.getImage = function () {\n    if (this.readyState < 2) {\n      return;\n    }\n\n    var canvas = this._canvas,\n        video = this._video;\n\n    if (!canvas) {\n      canvas = this._canvas = createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\");\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n    }\n\n    if (video.readyState >= 2 && video.currentTime !== this._lastTime) {\n      var ctx = canvas.getContext(\"2d\");\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n      this._lastTime = video.currentTime;\n    }\n\n    return canvas;\n  }; // private methods:\n\n  /**\n   * @method _videoReady\n   * @protected\n   **/\n\n\n  p._videoReady = function () {\n    this.readyState = 2;\n  };\n\n  createjs.VideoBuffer = VideoBuffer;\n})(); //##############################################################################\n// MouseEvent.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor:\n\n  /**\n   * Passed as the parameter to all mouse/pointer/touch related events. For a listing of mouse events and their properties,\n   * see the {{#crossLink \"DisplayObject\"}}{{/crossLink}} and {{#crossLink \"Stage\"}}{{/crossLink}} event listings.\n   * @class MouseEvent\n   * @param {String} type The event type.\n   * @param {Boolean} bubbles Indicates whether the event will bubble through the display list.\n   * @param {Boolean} cancelable Indicates whether the default behaviour of this event can be cancelled.\n   * @param {Number} stageX The normalized x position relative to the stage.\n   * @param {Number} stageY The normalized y position relative to the stage.\n   * @param {MouseEvent} nativeEvent The native DOM event related to this mouse event.\n   * @param {Number} pointerID The unique id for the pointer.\n   * @param {Boolean} primary Indicates whether this is the primary pointer in a multitouch environment.\n   * @param {Number} rawX The raw x position relative to the stage.\n   * @param {Number} rawY The raw y position relative to the stage.\n   * @param {DisplayObject} relatedTarget The secondary target for the event.\n   * @extends Event\n   * @constructor\n   **/\n\n  function MouseEvent(type, bubbles, cancelable, stageX, stageY, nativeEvent, pointerID, primary, rawX, rawY, relatedTarget) {\n    this.Event_constructor(type, bubbles, cancelable); // public properties:\n\n    /**\n     * The normalized x position on the stage. This will always be within the range 0 to stage width.\n     * @property stageX\n     * @type Number\n    */\n\n    this.stageX = stageX;\n    /**\n     * The normalized y position on the stage. This will always be within the range 0 to stage height.\n     * @property stageY\n     * @type Number\n     **/\n\n    this.stageY = stageY;\n    /**\n     * The raw x position relative to the stage. Normally this will be the same as the stageX value, unless\n     * stage.mouseMoveOutside is true and the pointer is outside of the stage bounds.\n     * @property rawX\n     * @type Number\n    */\n\n    this.rawX = rawX == null ? stageX : rawX;\n    /**\n     * The raw y position relative to the stage. Normally this will be the same as the stageY value, unless\n     * stage.mouseMoveOutside is true and the pointer is outside of the stage bounds.\n     * @property rawY\n     * @type Number\n    */\n\n    this.rawY = rawY == null ? stageY : rawY;\n    /**\n     * The native MouseEvent generated by the browser. The properties and API for this\n     * event may differ between browsers. This property will be null if the\n     * EaselJS property was not directly generated from a native MouseEvent.\n     * @property nativeEvent\n     * @type HtmlMouseEvent\n     * @default null\n     **/\n\n    this.nativeEvent = nativeEvent;\n    /**\n     * The unique id for the pointer (touch point or cursor). This will be either -1 for the mouse, or the system\n     * supplied id value.\n     * @property pointerID\n     * @type {Number}\n     */\n\n    this.pointerID = pointerID;\n    /**\n     * Indicates whether this is the primary pointer in a multitouch environment. This will always be true for the mouse.\n     * For touch pointers, the first pointer in the current stack will be considered the primary pointer.\n     * @property primary\n     * @type {Boolean}\n     */\n\n    this.primary = !!primary;\n    /**\n     * The secondary target for the event, if applicable. This is used for mouseout/rollout\n     * events to indicate the object that the mouse entered from, mouseover/rollover for the object the mouse exited,\n     * and stagemousedown/stagemouseup events for the object that was the under the cursor, if any.\n     * \n     * Only valid interaction targets will be returned (ie. objects with mouse listeners or a cursor set).\n     * @property relatedTarget\n     * @type {DisplayObject}\n     */\n\n    this.relatedTarget = relatedTarget;\n  }\n\n  var p = createjs.extend(MouseEvent, createjs.Event); // TODO: deprecated\n  // p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n  // getter / setters:\n\n  /**\n   * Returns the x position of the mouse in the local coordinate system of the current target (ie. the dispatcher).\n   * @property localX\n   * @type {Number}\n   * @readonly\n   */\n\n  p._get_localX = function () {\n    return this.currentTarget.globalToLocal(this.rawX, this.rawY).x;\n  };\n  /**\n   * Returns the y position of the mouse in the local coordinate system of the current target (ie. the dispatcher).\n   * @property localY\n   * @type {Number}\n   * @readonly\n   */\n\n\n  p._get_localY = function () {\n    return this.currentTarget.globalToLocal(this.rawX, this.rawY).y;\n  };\n  /**\n   * Indicates whether the event was generated by a touch input (versus a mouse input).\n   * @property isTouch\n   * @type {Boolean}\n   * @readonly\n   */\n\n\n  p._get_isTouch = function () {\n    return this.pointerID !== -1;\n  };\n\n  try {\n    Object.defineProperties(p, {\n      localX: {\n        get: p._get_localX\n      },\n      localY: {\n        get: p._get_localY\n      },\n      isTouch: {\n        get: p._get_isTouch\n      }\n    });\n  } catch (e) {} // TODO: use Log\n  // public methods:\n\n  /**\n   * Returns a clone of the MouseEvent instance.\n   * @method clone\n   * @return {MouseEvent} a clone of the MouseEvent instance.\n   **/\n\n\n  p.clone = function () {\n    return new MouseEvent(this.type, this.bubbles, this.cancelable, this.stageX, this.stageY, this.nativeEvent, this.pointerID, this.primary, this.rawX, this.rawY);\n  };\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n\n\n  p.toString = function () {\n    return \"[MouseEvent (type=\" + this.type + \" stageX=\" + this.stageX + \" stageY=\" + this.stageY + \")]\";\n  };\n\n  createjs.MouseEvent = createjs.promote(MouseEvent, \"Event\");\n})(); //##############################################################################\n// Matrix2D.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor:\n\n  /**\n   * Represents an affine transformation matrix, and provides tools for constructing and concatenating matrices.\n   *\n   * This matrix can be visualized as:\n   *\n   * \t[ a  c  tx\n   * \t  b  d  ty\n   * \t  0  0  1  ]\n   *\n   * Note the locations of b and c.\n   *\n   * @class Matrix2D\n   * @param {Number} [a=1] Specifies the a property for the new matrix.\n   * @param {Number} [b=0] Specifies the b property for the new matrix.\n   * @param {Number} [c=0] Specifies the c property for the new matrix.\n   * @param {Number} [d=1] Specifies the d property for the new matrix.\n   * @param {Number} [tx=0] Specifies the tx property for the new matrix.\n   * @param {Number} [ty=0] Specifies the ty property for the new matrix.\n   * @constructor\n   **/\n\n  function Matrix2D(a, b, c, d, tx, ty) {\n    this.setValues(a, b, c, d, tx, ty); // public properties:\n    // assigned in the setValues method.\n\n    /**\n     * Position (0, 0) in a 3x3 affine transformation matrix.\n     * @property a\n     * @type Number\n     **/\n\n    /**\n     * Position (0, 1) in a 3x3 affine transformation matrix.\n     * @property b\n     * @type Number\n     **/\n\n    /**\n     * Position (1, 0) in a 3x3 affine transformation matrix.\n     * @property c\n     * @type Number\n     **/\n\n    /**\n     * Position (1, 1) in a 3x3 affine transformation matrix.\n     * @property d\n     * @type Number\n     **/\n\n    /**\n     * Position (2, 0) in a 3x3 affine transformation matrix.\n     * @property tx\n     * @type Number\n     **/\n\n    /**\n     * Position (2, 1) in a 3x3 affine transformation matrix.\n     * @property ty\n     * @type Number\n     **/\n  }\n\n  var p = Matrix2D.prototype; // constants:\n\n  /**\n   * Multiplier for converting degrees to radians. Used internally by Matrix2D.\n   * @property DEG_TO_RAD\n   * @static\n   * @final\n   * @type Number\n   * @readonly\n   **/\n\n  Matrix2D.DEG_TO_RAD = Math.PI / 180; // static public properties:\n\n  /**\n   * An identity matrix, representing a null transformation.\n   * @property identity\n   * @static\n   * @type Matrix2D\n   * @readonly\n   **/\n\n  Matrix2D.identity = null; // set at bottom of class definition.\n  // public methods:\n\n  /**\n   * Sets the specified values on this instance. \n   * @method setValues\n   * @param {Number} [a=1] Specifies the a property for the new matrix.\n   * @param {Number} [b=0] Specifies the b property for the new matrix.\n   * @param {Number} [c=0] Specifies the c property for the new matrix.\n   * @param {Number} [d=1] Specifies the d property for the new matrix.\n   * @param {Number} [tx=0] Specifies the tx property for the new matrix.\n   * @param {Number} [ty=0] Specifies the ty property for the new matrix.\n   * @return {Matrix2D} This instance. Useful for chaining method calls.\n  */\n\n  p.setValues = function (a, b, c, d, tx, ty) {\n    // don't forget to update docs in the constructor if these change:\n    this.a = a == null ? 1 : a;\n    this.b = b || 0;\n    this.c = c || 0;\n    this.d = d == null ? 1 : d;\n    this.tx = tx || 0;\n    this.ty = ty || 0;\n    return this;\n  };\n  /**\n   * Appends the specified matrix properties to this matrix. All parameters are required.\n   * This is the equivalent of multiplying `(this matrix) * (specified matrix)`.\n   * @method append\n   * @param {Number} a\n   * @param {Number} b\n   * @param {Number} c\n   * @param {Number} d\n   * @param {Number} tx\n   * @param {Number} ty\n   * @return {Matrix2D} This matrix. Useful for chaining method calls.\n   **/\n\n\n  p.append = function (a, b, c, d, tx, ty) {\n    var a1 = this.a;\n    var b1 = this.b;\n    var c1 = this.c;\n    var d1 = this.d;\n\n    if (a != 1 || b != 0 || c != 0 || d != 1) {\n      this.a = a1 * a + c1 * b;\n      this.b = b1 * a + d1 * b;\n      this.c = a1 * c + c1 * d;\n      this.d = b1 * c + d1 * d;\n    }\n\n    this.tx = a1 * tx + c1 * ty + this.tx;\n    this.ty = b1 * tx + d1 * ty + this.ty;\n    return this;\n  };\n  /**\n   * Prepends the specified matrix properties to this matrix.\n   * This is the equivalent of multiplying `(specified matrix) * (this matrix)`.\n   * All parameters are required.\n   * @method prepend\n   * @param {Number} a\n   * @param {Number} b\n   * @param {Number} c\n   * @param {Number} d\n   * @param {Number} tx\n   * @param {Number} ty\n   * @return {Matrix2D} This matrix. Useful for chaining method calls.\n   **/\n\n\n  p.prepend = function (a, b, c, d, tx, ty) {\n    var a1 = this.a;\n    var c1 = this.c;\n    var tx1 = this.tx;\n    this.a = a * a1 + c * this.b;\n    this.b = b * a1 + d * this.b;\n    this.c = a * c1 + c * this.d;\n    this.d = b * c1 + d * this.d;\n    this.tx = a * tx1 + c * this.ty + tx;\n    this.ty = b * tx1 + d * this.ty + ty;\n    return this;\n  };\n  /**\n   * Appends the specified matrix to this matrix.\n   * This is the equivalent of multiplying `(this matrix) * (specified matrix)`.\n   * @method appendMatrix\n   * @param {Matrix2D} matrix\n   * @return {Matrix2D} This matrix. Useful for chaining method calls.\n   **/\n\n\n  p.appendMatrix = function (matrix) {\n    return this.append(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n  };\n  /**\n   * Prepends the specified matrix to this matrix.\n   * This is the equivalent of multiplying `(specified matrix) * (this matrix)`.\n   * For example, you could calculate the combined transformation for a child object using:\n   * \n   * \tvar o = myDisplayObject;\n   * \tvar mtx = o.getMatrix();\n   * \twhile (o = o.parent) {\n   * \t\t// prepend each parent's transformation in turn:\n   * \t\to.prependMatrix(o.getMatrix());\n   * \t}\n   * @method prependMatrix\n   * @param {Matrix2D} matrix\n   * @return {Matrix2D} This matrix. Useful for chaining method calls.\n   **/\n\n\n  p.prependMatrix = function (matrix) {\n    return this.prepend(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n  };\n  /**\n   * Generates matrix properties from the specified display object transform properties, and appends them to this matrix.\n   * For example, you can use this to generate a matrix representing the transformations of a display object:\n   * \n   * \tvar mtx = new createjs.Matrix2D();\n   * \tmtx.appendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation);\n   * @method appendTransform\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} scaleX\n   * @param {Number} scaleY\n   * @param {Number} rotation\n   * @param {Number} skewX\n   * @param {Number} skewY\n   * @param {Number} regX Optional.\n   * @param {Number} regY Optional.\n   * @return {Matrix2D} This matrix. Useful for chaining method calls.\n   **/\n\n\n  p.appendTransform = function (x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {\n    if (rotation % 360) {\n      var r = rotation * Matrix2D.DEG_TO_RAD;\n      var cos = Math.cos(r);\n      var sin = Math.sin(r);\n    } else {\n      cos = 1;\n      sin = 0;\n    }\n\n    if (skewX || skewY) {\n      // TODO: can this be combined into a single append operation?\n      skewX *= Matrix2D.DEG_TO_RAD;\n      skewY *= Matrix2D.DEG_TO_RAD;\n      this.append(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), x, y);\n      this.append(cos * scaleX, sin * scaleX, -sin * scaleY, cos * scaleY, 0, 0);\n    } else {\n      this.append(cos * scaleX, sin * scaleX, -sin * scaleY, cos * scaleY, x, y);\n    }\n\n    if (regX || regY) {\n      // append the registration offset:\n      this.tx -= regX * this.a + regY * this.c;\n      this.ty -= regX * this.b + regY * this.d;\n    }\n\n    return this;\n  };\n  /**\n   * Generates matrix properties from the specified display object transform properties, and prepends them to this matrix.\n   * For example, you could calculate the combined transformation for a child object using:\n   * \n   * \tvar o = myDisplayObject;\n   * \tvar mtx = new createjs.Matrix2D();\n   * \tdo  {\n   * \t\t// prepend each parent's transformation in turn:\n   * \t\tmtx.prependTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation, o.skewX, o.skewY, o.regX, o.regY);\n   * \t} while (o = o.parent);\n   * \t\n   * \tNote that the above example would not account for {{#crossLink \"DisplayObject/transformMatrix:property\"}}{{/crossLink}}\n   * \tvalues. See {{#crossLink \"Matrix2D/prependMatrix\"}}{{/crossLink}} for an example that does.\n   * @method prependTransform\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} scaleX\n   * @param {Number} scaleY\n   * @param {Number} rotation\n   * @param {Number} skewX\n   * @param {Number} skewY\n   * @param {Number} regX Optional.\n   * @param {Number} regY Optional.\n   * @return {Matrix2D} This matrix. Useful for chaining method calls.\n   **/\n\n\n  p.prependTransform = function (x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {\n    if (rotation % 360) {\n      var r = rotation * Matrix2D.DEG_TO_RAD;\n      var cos = Math.cos(r);\n      var sin = Math.sin(r);\n    } else {\n      cos = 1;\n      sin = 0;\n    }\n\n    if (regX || regY) {\n      // prepend the registration offset:\n      this.tx -= regX;\n      this.ty -= regY;\n    }\n\n    if (skewX || skewY) {\n      // TODO: can this be combined into a single prepend operation?\n      skewX *= Matrix2D.DEG_TO_RAD;\n      skewY *= Matrix2D.DEG_TO_RAD;\n      this.prepend(cos * scaleX, sin * scaleX, -sin * scaleY, cos * scaleY, 0, 0);\n      this.prepend(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), x, y);\n    } else {\n      this.prepend(cos * scaleX, sin * scaleX, -sin * scaleY, cos * scaleY, x, y);\n    }\n\n    return this;\n  };\n  /**\n   * Applies a clockwise rotation transformation to the matrix.\n   * @method rotate\n   * @param {Number} angle The angle to rotate by, in degrees. To use a value in radians, multiply it by `180/Math.PI`.\n   * @return {Matrix2D} This matrix. Useful for chaining method calls.\n   **/\n\n\n  p.rotate = function (angle) {\n    angle = angle * Matrix2D.DEG_TO_RAD;\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var a1 = this.a;\n    var b1 = this.b;\n    this.a = a1 * cos + this.c * sin;\n    this.b = b1 * cos + this.d * sin;\n    this.c = -a1 * sin + this.c * cos;\n    this.d = -b1 * sin + this.d * cos;\n    return this;\n  };\n  /**\n   * Applies a skew transformation to the matrix.\n   * @method skew\n   * @param {Number} skewX The amount to skew horizontally in degrees. To use a value in radians, multiply it by `180/Math.PI`.\n   * @param {Number} skewY The amount to skew vertically in degrees.\n   * @return {Matrix2D} This matrix. Useful for chaining method calls.\n  */\n\n\n  p.skew = function (skewX, skewY) {\n    skewX = skewX * Matrix2D.DEG_TO_RAD;\n    skewY = skewY * Matrix2D.DEG_TO_RAD;\n    this.append(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), 0, 0);\n    return this;\n  };\n  /**\n   * Applies a scale transformation to the matrix.\n   * @method scale\n   * @param {Number} x The amount to scale horizontally. E.G. a value of 2 will double the size in the X direction, and 0.5 will halve it.\n   * @param {Number} y The amount to scale vertically.\n   * @return {Matrix2D} This matrix. Useful for chaining method calls.\n   **/\n\n\n  p.scale = function (x, y) {\n    this.a *= x;\n    this.b *= x;\n    this.c *= y;\n    this.d *= y; //this.tx *= x;\n    //this.ty *= y;\n\n    return this;\n  };\n  /**\n   * Translates the matrix on the x and y axes.\n   * @method translate\n   * @param {Number} x\n   * @param {Number} y\n   * @return {Matrix2D} This matrix. Useful for chaining method calls.\n   **/\n\n\n  p.translate = function (x, y) {\n    this.tx += this.a * x + this.c * y;\n    this.ty += this.b * x + this.d * y;\n    return this;\n  };\n  /**\n   * Sets the properties of the matrix to those of an identity matrix (one that applies a null transformation).\n   * @method identity\n   * @return {Matrix2D} This matrix. Useful for chaining method calls.\n   **/\n\n\n  p.identity = function () {\n    this.a = this.d = 1;\n    this.b = this.c = this.tx = this.ty = 0;\n    return this;\n  };\n  /**\n   * Inverts the matrix, causing it to perform the opposite transformation.\n   * @method invert\n   * @return {Matrix2D} This matrix. Useful for chaining method calls.\n   **/\n\n\n  p.invert = function () {\n    var a1 = this.a;\n    var b1 = this.b;\n    var c1 = this.c;\n    var d1 = this.d;\n    var tx1 = this.tx;\n    var n = a1 * d1 - b1 * c1;\n    this.a = d1 / n;\n    this.b = -b1 / n;\n    this.c = -c1 / n;\n    this.d = a1 / n;\n    this.tx = (c1 * this.ty - d1 * tx1) / n;\n    this.ty = -(a1 * this.ty - b1 * tx1) / n;\n    return this;\n  };\n  /**\n   * Returns true if the matrix is an identity matrix.\n   * @method isIdentity\n   * @return {Boolean}\n   **/\n\n\n  p.isIdentity = function () {\n    return this.tx === 0 && this.ty === 0 && this.a === 1 && this.b === 0 && this.c === 0 && this.d === 1;\n  };\n  /**\n   * Returns true if this matrix is equal to the specified matrix (all property values are equal).\n   * @method equals\n   * @param {Matrix2D} matrix The matrix to compare.\n   * @return {Boolean}\n   **/\n\n\n  p.equals = function (matrix) {\n    return this.tx === matrix.tx && this.ty === matrix.ty && this.a === matrix.a && this.b === matrix.b && this.c === matrix.c && this.d === matrix.d;\n  };\n  /**\n   * Transforms a point according to this matrix.\n   * @method transformPoint\n   * @param {Number} x The x component of the point to transform.\n   * @param {Number} y The y component of the point to transform.\n   * @param {Point | Object} [pt] An object to copy the result into. If omitted a generic object with x/y properties will be returned.\n   * @return {Point} This matrix. Useful for chaining method calls.\n   **/\n\n\n  p.transformPoint = function (x, y, pt) {\n    pt = pt || {};\n    pt.x = x * this.a + y * this.c + this.tx;\n    pt.y = x * this.b + y * this.d + this.ty;\n    return pt;\n  };\n  /**\n   * Decomposes the matrix into transform properties (x, y, scaleX, scaleY, and rotation). Note that these values\n   * may not match the transform properties you used to generate the matrix, though they will produce the same visual\n   * results.\n   * @method decompose\n   * @param {Object} target The object to apply the transform properties to. If null, then a new object will be returned.\n   * @return {Object} The target, or a new generic object with the transform properties applied.\n  */\n\n\n  p.decompose = function (target) {\n    // TODO: it would be nice to be able to solve for whether the matrix can be decomposed into only scale/rotation even when scale is negative\n    if (target == null) {\n      target = {};\n    }\n\n    target.x = this.tx;\n    target.y = this.ty;\n    target.scaleX = Math.sqrt(this.a * this.a + this.b * this.b);\n    target.scaleY = Math.sqrt(this.c * this.c + this.d * this.d);\n    var skewX = Math.atan2(-this.c, this.d);\n    var skewY = Math.atan2(this.b, this.a);\n    var delta = Math.abs(1 - skewX / skewY);\n\n    if (delta < 0.00001) {\n      // effectively identical, can use rotation:\n      target.rotation = skewY / Matrix2D.DEG_TO_RAD;\n\n      if (this.a < 0 && this.d >= 0) {\n        target.rotation += target.rotation <= 0 ? 180 : -180;\n      }\n\n      target.skewX = target.skewY = 0;\n    } else {\n      target.skewX = skewX / Matrix2D.DEG_TO_RAD;\n      target.skewY = skewY / Matrix2D.DEG_TO_RAD;\n    }\n\n    return target;\n  };\n  /**\n   * Copies all properties from the specified matrix to this matrix.\n   * @method copy\n   * @param {Matrix2D} matrix The matrix to copy properties from.\n   * @return {Matrix2D} This matrix. Useful for chaining method calls.\n  */\n\n\n  p.copy = function (matrix) {\n    return this.setValues(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n  };\n  /**\n   * Returns a clone of the Matrix2D instance.\n   * @method clone\n   * @return {Matrix2D} a clone of the Matrix2D instance.\n   **/\n\n\n  p.clone = function () {\n    return new Matrix2D(this.a, this.b, this.c, this.d, this.tx, this.ty);\n  };\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n\n\n  p.toString = function () {\n    return \"[Matrix2D (a=\" + this.a + \" b=\" + this.b + \" c=\" + this.c + \" d=\" + this.d + \" tx=\" + this.tx + \" ty=\" + this.ty + \")]\";\n  }; // this has to be populated after the class is defined:\n\n\n  Matrix2D.identity = new Matrix2D();\n  createjs.Matrix2D = Matrix2D;\n})(); //##############################################################################\n// DisplayProps.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n  /**\n   * Used for calculating and encapsulating display related properties.\n   * @class DisplayProps\n   * @param {Number} [visible=true] Visible value.\n   * @param {Number} [alpha=1] Alpha value.\n   * @param {Number} [shadow=null] A Shadow instance or null.\n   * @param {Number} [compositeOperation=null] A compositeOperation value or null.\n   * @param {Number} [matrix] A transformation matrix. Defaults to a new identity matrix.\n   * @constructor\n   **/\n\n  function DisplayProps(visible, alpha, shadow, compositeOperation, matrix) {\n    this.setValues(visible, alpha, shadow, compositeOperation, matrix); // public properties:\n    // assigned in the setValues method.\n\n    /**\n     * Property representing the alpha that will be applied to a display object.\n     * @property alpha\n     * @type Number\n     **/\n\n    /**\n     * Property representing the shadow that will be applied to a display object.\n     * @property shadow\n     * @type Shadow\n     **/\n\n    /**\n     * Property representing the compositeOperation that will be applied to a display object.\n     * You can find a list of valid composite operations at:\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Compositing\">https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Compositing</a>\n     * @property compositeOperation\n     * @type String\n     **/\n\n    /**\n     * Property representing the value for visible that will be applied to a display object.\n     * @property visible\n     * @type Boolean\n     **/\n\n    /**\n     * The transformation matrix that will be applied to a display object.\n     * @property matrix\n     * @type Matrix2D\n     **/\n  }\n\n  var p = DisplayProps.prototype; // initialization:\n\n  /**\n   * Reinitializes the instance with the specified values.\n   * @method setValues\n   * @param {Number} [visible=true] Visible value.\n   * @param {Number} [alpha=1] Alpha value.\n   * @param {Number} [shadow=null] A Shadow instance or null.\n   * @param {Number} [compositeOperation=null] A compositeOperation value or null.\n   * @param {Number} [matrix] A transformation matrix. Defaults to an identity matrix.\n   * @return {DisplayProps} This instance. Useful for chaining method calls.\n   * @chainable\n  */\n\n  p.setValues = function (visible, alpha, shadow, compositeOperation, matrix) {\n    this.visible = visible == null ? true : !!visible;\n    this.alpha = alpha == null ? 1 : alpha;\n    this.shadow = shadow;\n    this.compositeOperation = compositeOperation;\n    this.matrix = matrix || this.matrix && this.matrix.identity() || new createjs.Matrix2D();\n    return this;\n  }; // public methods:\n\n  /**\n   * Appends the specified display properties. This is generally used to apply a child's properties its parent's.\n   * @method append\n   * @param {Boolean} visible desired visible value\n   * @param {Number} alpha desired alpha value\n   * @param {Shadow} shadow desired shadow value\n   * @param {String} compositeOperation desired composite operation value\n   * @param {Matrix2D} [matrix] a Matrix2D instance\n   * @return {DisplayProps} This instance. Useful for chaining method calls.\n   * @chainable\n  */\n\n\n  p.append = function (visible, alpha, shadow, compositeOperation, matrix) {\n    this.alpha *= alpha;\n    this.shadow = shadow || this.shadow;\n    this.compositeOperation = compositeOperation || this.compositeOperation;\n    this.visible = this.visible && visible;\n    matrix && this.matrix.appendMatrix(matrix);\n    return this;\n  };\n  /**\n   * Prepends the specified display properties. This is generally used to apply a parent's properties to a child's.\n   * For example, to get the combined display properties that would be applied to a child, you could use:\n   * \n   * \tvar o = myDisplayObject;\n   * \tvar props = new createjs.DisplayProps();\n   * \tdo {\n   * \t\t// prepend each parent's props in turn:\n   * \t\tprops.prepend(o.visible, o.alpha, o.shadow, o.compositeOperation, o.getMatrix());\n   * \t} while (o = o.parent);\n   * \t\n   * @method prepend\n   * @param {Boolean} visible desired visible value\n   * @param {Number} alpha desired alpha value\n   * @param {Shadow} shadow desired shadow value\n   * @param {String} compositeOperation desired composite operation value\n   * @param {Matrix2D} [matrix] a Matrix2D instance\n   * @return {DisplayProps} This instance. Useful for chaining method calls.\n   * @chainable\n  */\n\n\n  p.prepend = function (visible, alpha, shadow, compositeOperation, matrix) {\n    this.alpha *= alpha;\n    this.shadow = this.shadow || shadow;\n    this.compositeOperation = this.compositeOperation || compositeOperation;\n    this.visible = this.visible && visible;\n    matrix && this.matrix.prependMatrix(matrix);\n    return this;\n  };\n  /**\n   * Resets this instance and its matrix to default values.\n   * @method identity\n   * @return {DisplayProps} This instance. Useful for chaining method calls.\n   * @chainable\n  */\n\n\n  p.identity = function () {\n    this.visible = true;\n    this.alpha = 1;\n    this.shadow = this.compositeOperation = null;\n    this.matrix.identity();\n    return this;\n  };\n  /**\n   * Returns a clone of the DisplayProps instance. Clones the associated matrix.\n   * @method clone\n   * @return {DisplayProps} a clone of the DisplayProps instance.\n   **/\n\n\n  p.clone = function () {\n    return new DisplayProps(this.alpha, this.shadow, this.compositeOperation, this.visible, this.matrix.clone());\n  }; // private methods:\n\n\n  createjs.DisplayProps = DisplayProps;\n})(); //##############################################################################\n// Point.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor:\n\n  /**\n   * Represents a point on a 2 dimensional x / y coordinate system.\n   *\n   * <h4>Example</h4>\n   * \n   *      var point = new createjs.Point(0, 100);\n   * \n   * @class Point\n   * @param {Number} [x=0] X position.\n   * @param {Number} [y=0] Y position.\n   * @constructor\n   **/\n\n  function Point(x, y) {\n    this.setValues(x, y); // public properties:\n    // assigned in the setValues method.\n\n    /**\n     * X position.\n     * @property x\n     * @type Number\n     **/\n\n    /**\n     * Y position.\n     * @property y\n     * @type Number\n     **/\n  }\n\n  var p = Point.prototype; // public methods:\n\n  /** \n   * Sets the specified values on this instance.\n   * @method setValues\n   * @param {Number} [x=0] X position.\n   * @param {Number} [y=0] Y position.\n   * @return {Point} This instance. Useful for chaining method calls.\n   * @chainable\n  */\n\n  p.setValues = function (x, y) {\n    this.x = x || 0;\n    this.y = y || 0;\n    return this;\n  };\n  /**\n   * Copies all properties from the specified point to this point.\n   * @method copy\n   * @param {Point} point The point to copy properties from.\n   * @return {Point} This point. Useful for chaining method calls.\n   * @chainable\n  */\n\n\n  p.copy = function (point) {\n    this.x = point.x;\n    this.y = point.y;\n    return this;\n  };\n  /**\n   * Returns a clone of the Point instance.\n   * @method clone\n   * @return {Point} a clone of the Point instance.\n   **/\n\n\n  p.clone = function () {\n    return new Point(this.x, this.y);\n  };\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n\n\n  p.toString = function () {\n    return \"[Point (x=\" + this.x + \" y=\" + this.y + \")]\";\n  };\n\n  createjs.Point = Point;\n})(); //##############################################################################\n// Rectangle.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor:\n\n  /**\n   * Represents a rectangle as defined by the points (x, y) and (x+width, y+height).\n   *\n   * <h4>Example</h4>\n   *\n   *      var rect = new createjs.Rectangle(0, 0, 100, 100);\n   *\n   * @class Rectangle\n   * @param {Number} [x=0] X position.\n   * @param {Number} [y=0] Y position.\n   * @param {Number} [width=0] The width of the Rectangle.\n   * @param {Number} [height=0] The height of the Rectangle.\n   * @constructor\n   **/\n\n  function Rectangle(x, y, width, height) {\n    this.setValues(x, y, width, height); // public properties:\n    // assigned in the setValues method.\n\n    /**\n     * X position.\n     * @property x\n     * @type Number\n     **/\n\n    /**\n     * Y position.\n     * @property y\n     * @type Number\n     **/\n\n    /**\n     * Width.\n     * @property width\n     * @type Number\n     **/\n\n    /**\n     * Height.\n     * @property height\n     * @type Number\n     **/\n  }\n\n  var p = Rectangle.prototype; // public methods:\n\n  /** \n   * Sets the specified values on this instance.\n   * @method setValues\n   * @param {Number} [x=0] X position.\n   * @param {Number} [y=0] Y position.\n   * @param {Number} [width=0] The width of the Rectangle.\n   * @param {Number} [height=0] The height of the Rectangle.\n   * @return {Rectangle} This instance. Useful for chaining method calls.\n   * @chainable\n  */\n\n  p.setValues = function (x, y, width, height) {\n    // don't forget to update docs in the constructor if these change:\n    this.x = x || 0;\n    this.y = y || 0;\n    this.width = width || 0;\n    this.height = height || 0;\n    return this;\n  };\n  /** \n   * Extends the rectangle's bounds to include the described point or rectangle.\n   * @method extend\n   * @param {Number} x X position of the point or rectangle.\n   * @param {Number} y Y position of the point or rectangle.\n   * @param {Number} [width=0] The width of the rectangle.\n   * @param {Number} [height=0] The height of the rectangle.\n   * @return {Rectangle} This instance. Useful for chaining method calls.\n   * @chainable\n  */\n\n\n  p.extend = function (x, y, width, height) {\n    width = width || 0;\n    height = height || 0;\n\n    if (x + width > this.x + this.width) {\n      this.width = x + width - this.x;\n    }\n\n    if (y + height > this.y + this.height) {\n      this.height = y + height - this.y;\n    }\n\n    if (x < this.x) {\n      this.width += this.x - x;\n      this.x = x;\n    }\n\n    if (y < this.y) {\n      this.height += this.y - y;\n      this.y = y;\n    }\n\n    return this;\n  };\n  /** \n   * Adds the specified padding to the rectangle's bounds.\n   * @method pad\n   * @param {Number} top\n   * @param {Number} left\n   * @param {Number} bottom\n   * @param {Number} right\n   * @return {Rectangle} This instance. Useful for chaining method calls.\n   * @chainable\n  */\n\n\n  p.pad = function (top, left, bottom, right) {\n    this.x -= left;\n    this.y -= top;\n    this.width += left + right;\n    this.height += top + bottom;\n    return this;\n  };\n  /**\n   * Copies all properties from the specified rectangle to this rectangle.\n   * @method copy\n   * @param {Rectangle} rectangle The rectangle to copy properties from.\n   * @return {Rectangle} This rectangle. Useful for chaining method calls.\n   * @chainable\n  */\n\n\n  p.copy = function (rectangle) {\n    return this.setValues(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n  };\n  /** \n   * Returns true if this rectangle fully encloses the described point or rectangle.\n   * @method contains\n   * @param {Number} x X position of the point or rectangle.\n   * @param {Number} y Y position of the point or rectangle.\n   * @param {Number} [width=0] The width of the rectangle.\n   * @param {Number} [height=0] The height of the rectangle.\n   * @return {Boolean} True if the described point or rectangle is contained within this rectangle.\n  */\n\n\n  p.contains = function (x, y, width, height) {\n    width = width || 0;\n    height = height || 0;\n    return x >= this.x && x + width <= this.x + this.width && y >= this.y && y + height <= this.y + this.height;\n  };\n  /** \n   * Returns a new rectangle which contains this rectangle and the specified rectangle.\n   * @method union\n   * @param {Rectangle} rect The rectangle to calculate a union with.\n   * @return {Rectangle} A new rectangle describing the union.\n  */\n\n\n  p.union = function (rect) {\n    return this.clone().extend(rect.x, rect.y, rect.width, rect.height);\n  };\n  /** \n   * Returns a new rectangle which describes the intersection (overlap) of this rectangle and the specified rectangle,\n   * or null if they do not intersect.\n   * @method intersection\n   * @param {Rectangle} rect The rectangle to calculate an intersection with.\n   * @return {Rectangle} A new rectangle describing the intersection or null.\n  */\n\n\n  p.intersection = function (rect) {\n    var x1 = rect.x,\n        y1 = rect.y,\n        x2 = x1 + rect.width,\n        y2 = y1 + rect.height;\n\n    if (this.x > x1) {\n      x1 = this.x;\n    }\n\n    if (this.y > y1) {\n      y1 = this.y;\n    }\n\n    if (this.x + this.width < x2) {\n      x2 = this.x + this.width;\n    }\n\n    if (this.y + this.height < y2) {\n      y2 = this.y + this.height;\n    }\n\n    return x2 <= x1 || y2 <= y1 ? null : new Rectangle(x1, y1, x2 - x1, y2 - y1);\n  };\n  /** \n   * Returns true if the specified rectangle intersects (has any overlap) with this rectangle.\n   * @method intersects\n   * @param {Rectangle} rect The rectangle to compare.\n   * @return {Boolean} True if the rectangles intersect.\n  */\n\n\n  p.intersects = function (rect) {\n    return rect.x <= this.x + this.width && this.x <= rect.x + rect.width && rect.y <= this.y + this.height && this.y <= rect.y + rect.height;\n  };\n  /** \n   * Returns true if the width or height are equal or less than 0.\n   * @method isEmpty\n   * @return {Boolean} True if the rectangle is empty.\n  */\n\n\n  p.isEmpty = function () {\n    return this.width <= 0 || this.height <= 0;\n  };\n  /**\n   * Returns a clone of the Rectangle instance.\n   * @method clone\n   * @return {Rectangle} a clone of the Rectangle instance.\n   **/\n\n\n  p.clone = function () {\n    return new Rectangle(this.x, this.y, this.width, this.height);\n  };\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n\n\n  p.toString = function () {\n    return \"[Rectangle (x=\" + this.x + \" y=\" + this.y + \" width=\" + this.width + \" height=\" + this.height + \")]\";\n  };\n\n  createjs.Rectangle = Rectangle;\n})(); //##############################################################################\n// ButtonHelper.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor:\n\n  /**\n   * The ButtonHelper is a helper class to create interactive buttons from {{#crossLink \"MovieClip\"}}{{/crossLink}} or\n   * {{#crossLink \"Sprite\"}}{{/crossLink}} instances. This class will intercept mouse events from an object, and\n   * automatically call {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} or {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}},\n   * to the respective animation labels, add a pointer cursor, and allows the user to define a hit state frame.\n   *\n   * The ButtonHelper instance does not need to be added to the stage, but a reference should be maintained to prevent\n   * garbage collection.\n   * \n   * Note that over states will not work unless you call {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}.\n   *\n   * <h4>Example</h4>\n   *\n   *      var helper = new createjs.ButtonHelper(myInstance, \"out\", \"over\", \"down\", false, myInstance, \"hit\");\n   *      myInstance.addEventListener(\"click\", handleClick);\n   *      function handleClick(event) {\n   *          // Click Happened.\n   *      }\n   *\n   * @class ButtonHelper\n   * @param {Sprite|MovieClip} target The instance to manage.\n   * @param {String} [outLabel=\"out\"] The label or animation to go to when the user rolls out of the button.\n   * @param {String} [overLabel=\"over\"] The label or animation to go to when the user rolls over the button.\n   * @param {String} [downLabel=\"down\"] The label or animation to go to when the user presses the button.\n   * @param {Boolean} [play=false] If the helper should call \"gotoAndPlay\" or \"gotoAndStop\" on the button when changing\n   * states.\n   * @param {DisplayObject} [hitArea] An optional item to use as the hit state for the button. If this is not defined,\n   * then the button's visible states will be used instead. Note that the same instance as the \"target\" argument can be\n   * used for the hitState.\n   * @param {String} [hitLabel] The label or animation on the hitArea instance that defines the hitArea bounds. If this is\n   * null, then the default state of the hitArea will be used. *\n   * @constructor\n   */\n\n  function ButtonHelper(target, outLabel, overLabel, downLabel, play, hitArea, hitLabel) {\n    if (!target.addEventListener) {\n      return;\n    } // public properties:\n\n    /**\n     * The target for this button helper.\n     * @property target\n     * @type MovieClip | Sprite\n     * @readonly\n     **/\n\n\n    this.target = target;\n    /**\n     * The label name or frame number to display when the user mouses out of the target. Defaults to \"over\".\n     * @property overLabel\n     * @type String | Number\n     **/\n\n    this.overLabel = overLabel == null ? \"over\" : overLabel;\n    /**\n     * The label name or frame number to display when the user mouses over the target. Defaults to \"out\".\n     * @property outLabel\n     * @type String | Number\n     **/\n\n    this.outLabel = outLabel == null ? \"out\" : outLabel;\n    /**\n     * The label name or frame number to display when the user presses on the target. Defaults to \"down\".\n     * @property downLabel\n     * @type String | Number\n     **/\n\n    this.downLabel = downLabel == null ? \"down\" : downLabel;\n    /**\n     * If true, then ButtonHelper will call gotoAndPlay, if false, it will use gotoAndStop. Default is false.\n     * @property play\n     * @default false\n     * @type Boolean\n     **/\n\n    this.play = play; //  private properties\n\n    /**\n     * @property _isPressed\n     * @type Boolean\n     * @protected\n     **/\n\n    this._isPressed = false;\n    /**\n     * @property _isOver\n     * @type Boolean\n     * @protected\n     **/\n\n    this._isOver = false;\n    /**\n     * @property _enabled\n     * @type Boolean\n     * @protected\n     **/\n\n    this._enabled = false; // setup:\n\n    target.mouseChildren = false; // prevents issues when children are removed from the display list when state changes.\n\n    this.enabled = true;\n    this.handleEvent({});\n\n    if (hitArea) {\n      if (hitLabel) {\n        hitArea.actionsEnabled = false;\n        hitArea.gotoAndStop && hitArea.gotoAndStop(hitLabel);\n      }\n\n      target.hitArea = hitArea;\n    }\n  }\n\n  var p = ButtonHelper.prototype; // getter / setters:\n\n  /**\n   * Use the {{#crossLink \"ButtonHelper/enabled:property\"}}{{/crossLink}} property instead.\n   * @method setEnabled\n   * @param {Boolean} value The enabled property to set the instance to.\n   * @[rptected\n   * @protected\n   **/\n\n  p._setEnabled = function (value) {\n    if (value == this._enabled) {\n      return;\n    }\n\n    var o = this.target;\n    this._enabled = value;\n\n    if (value) {\n      o.cursor = \"pointer\";\n      o.addEventListener(\"rollover\", this);\n      o.addEventListener(\"rollout\", this);\n      o.addEventListener(\"mousedown\", this);\n      o.addEventListener(\"pressup\", this);\n\n      if (o._reset) {\n        o.__reset = o._reset;\n        o._reset = this._reset;\n      }\n    } else {\n      o.cursor = null;\n      o.removeEventListener(\"rollover\", this);\n      o.removeEventListener(\"rollout\", this);\n      o.removeEventListener(\"mousedown\", this);\n      o.removeEventListener(\"pressup\", this);\n\n      if (o.__reset) {\n        o._reset = o.__reset;\n        delete o.__reset;\n      }\n    }\n  }; // ButtonHelper.setEnabled is @deprecated. Remove for 1.1+\n\n\n  p.setEnabled = createjs.deprecate(p._setEnabled, \"ButtonHelper.setEnabled\");\n  /**\n   * Use the {{#crossLink \"ButtonHelper/enabled:property\"}}{{/crossLink}} property instead.\n   * @method getEnabled\n   * @protected\n   * @return {Boolean}\n   **/\n\n  p._getEnabled = function () {\n    return this._enabled;\n  }; // ButtonHelper.getEnabled is @deprecated. Remove for 1.1+\n\n\n  p.getEnabled = createjs.deprecate(p._getEnabled, \"ButtonHelper.getEnabled\");\n  /**\n   * Enables or disables the button functionality on the target.\n   * @property enabled\n   * @type {Boolean}\n   **/\n\n  try {\n    Object.defineProperties(p, {\n      enabled: {\n        get: p._getEnabled,\n        set: p._setEnabled\n      }\n    });\n  } catch (e) {} // TODO: use Log\n  // public methods:\n\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n\n\n  p.toString = function () {\n    return \"[ButtonHelper]\";\n  }; // private methods:\n\n  /**\n   * @method handleEvent\n   * @param {Object} evt The mouse event to handle.\n   * @protected\n   **/\n\n\n  p.handleEvent = function (evt) {\n    var label,\n        t = this.target,\n        type = evt.type;\n\n    if (type == \"mousedown\") {\n      this._isPressed = true;\n      label = this.downLabel;\n    } else if (type == \"pressup\") {\n      this._isPressed = false;\n      label = this._isOver ? this.overLabel : this.outLabel;\n    } else if (type == \"rollover\") {\n      this._isOver = true;\n      label = this._isPressed ? this.downLabel : this.overLabel;\n    } else {\n      // rollout and default\n      this._isOver = false;\n      label = this._isPressed ? this.overLabel : this.outLabel;\n    }\n\n    if (this.play) {\n      t.gotoAndPlay && t.gotoAndPlay(label);\n    } else {\n      t.gotoAndStop && t.gotoAndStop(label);\n    }\n  };\n  /**\n   * Injected into target. Preserves the paused state through a reset.\n   * @method _reset\n   * @protected\n   **/\n\n\n  p._reset = function () {\n    // TODO: explore better ways to handle this issue. This is hacky & disrupts object signatures.\n    var p = this.paused;\n\n    this.__reset();\n\n    this.paused = p;\n  };\n\n  createjs.ButtonHelper = ButtonHelper;\n})(); //##############################################################################\n// Shadow.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor:\n\n  /**\n   * This class encapsulates the properties required to define a shadow to apply to a {{#crossLink \"DisplayObject\"}}{{/crossLink}}\n   * via its <code>shadow</code> property.\n   *\n   * <h4>Example</h4>\n   *\n   *      myImage.shadow = new createjs.Shadow(\"#000000\", 5, 5, 10);\n   *\n   * @class Shadow\n   * @constructor\n   * @param {String} color The color of the shadow. This can be any valid CSS color value.\n   * @param {Number} offsetX The x offset of the shadow in pixels.\n   * @param {Number} offsetY The y offset of the shadow in pixels.\n   * @param {Number} blur The size of the blurring effect.\n   **/\n\n  function Shadow(color, offsetX, offsetY, blur) {\n    // public properties:\n\n    /** \n     * The color of the shadow. This can be any valid CSS color value.\n     * @property color\n     * @type String\n     * @default null\n     */\n    this.color = color || \"black\";\n    /** The x offset of the shadow.\n     * @property offsetX\n     * @type Number\n     * @default 0\n     */\n\n    this.offsetX = offsetX || 0;\n    /** The y offset of the shadow.\n     * @property offsetY\n     * @type Number\n     * @default 0\n     */\n\n    this.offsetY = offsetY || 0;\n    /** The blur of the shadow.\n     * @property blur\n     * @type Number\n     * @default 0\n     */\n\n    this.blur = blur || 0;\n  }\n\n  var p = Shadow.prototype; // static public properties:\n\n  /**\n   * An identity shadow object (all properties are set to 0).\n   * @property identity\n   * @type Shadow\n   * @static\n   * @final\n   * @readonly\n   **/\n\n  Shadow.identity = new Shadow(\"transparent\", 0, 0, 0); // public methods:\n\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n\n  p.toString = function () {\n    return \"[Shadow]\";\n  };\n  /**\n   * Returns a clone of this Shadow instance.\n   * @method clone\n   * @return {Shadow} A clone of the current Shadow instance.\n   **/\n\n\n  p.clone = function () {\n    return new Shadow(this.color, this.offsetX, this.offsetY, this.blur);\n  };\n\n  createjs.Shadow = Shadow;\n})(); //##############################################################################\n// SpriteSheet.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor:\n\n  /**\n   * Encapsulates the properties and methods associated with a sprite sheet. A sprite sheet is a series of images (usually\n   * animation frames) combined into a larger image (or images). For example, an animation consisting of eight 100x100\n   * images could be combined into a single 400x200 sprite sheet (4 frames across by 2 high).\n   *\n   * The data passed to the SpriteSheet constructor defines:\n   * <ol>\n   * \t<li> The source image or images to use.</li>\n   * \t<li> The positions of individual image frames.</li>\n   * \t<li> Sequences of frames that form named animations. Optional.</li>\n   * \t<li> The target playback framerate. Optional.</li>\n   * </ol>\n   * <h3>SpriteSheet Format</h3>\n   * SpriteSheets are an object with two required properties (`images` and `frames`), and two optional properties\n   * (`framerate` and `animations`). This makes them easy to define in javascript code, or in JSON.\n   *\n   * <h4>images</h4>\n   * An array of source images. Images can be either an HTMlimage\n   * instance, or a uri to an image. The former is recommended to control preloading.\n   *\n   * \timages: [image1, \"path/to/image2.png\"],\n   *\n   * <h4>frames</h4>\n   * Defines the individual frames. There are two supported formats for frame data:\n   * When all of the frames are the same size (in a grid), use an object with `width`, `height`, `regX`, `regY`,\n   * and `count` properties.\n   *\n   * <ul>\n   *  <li>`width` & `height` are required and specify the dimensions of the frames</li>\n   *  <li>`regX` & `regY` indicate the registration point or \"origin\" of the frames</li>\n   *  <li>`spacing` indicate the spacing between frames</li>\n   *  <li>`margin` specify the margin around the image(s)</li>\n   *  <li>`count` allows you to specify the total number of frames in the spritesheet; if omitted, this will\n   *  be calculated based on the dimensions of the source images and the frames. Frames will be assigned\n   *  indexes based on their position in the source images (left to right, top to bottom).</li>\n   * </ul>\n   *\n   *  \tframes: {width:64, height:64, count:20, regX: 32, regY:64, spacing:0, margin:0}\n   *\n   * If the frames are of different sizes, use an array of frame definitions. Each definition is itself an array\n   * with 4 required and 3 optional entries, in the order:\n   *\n   * <ul>\n   *  <li>The first four, `x`, `y`, `width`, and `height` are required and define the frame rectangle.</li>\n   *  <li>The fifth, `imageIndex`, specifies the index of the source image (defaults to 0)</li>\n   *  <li>The last two, `regX` and `regY` specify the registration point of the frame</li>\n   * </ul>\n   *\n   * \tframes: [\n   * \t\t// x, y, width, height, imageIndex*, regX*, regY*\n   * \t\t[64, 0, 96, 64],\n   * \t\t[0, 0, 64, 64, 1, 32, 32]\n   * \t\t// etc.\n   * \t]\n   *\n   * <h4>animations</h4>\n   * Optional. An object defining sequences of frames to play as named animations. Each property corresponds to an\n   * animation of the same name. Each animation must specify the frames to play, and may\n   * also include a relative playback `speed` (ex. 2 would playback at double speed, 0.5 at half), and\n   * the name of the `next` animation to sequence to after it completes.\n   *\n   * There are three formats supported for defining the frames in an animation, which can be mixed and matched as appropriate:\n   * <ol>\n   * \t<li>for a single frame animation, you can simply specify the frame index\n   *\n   * \t\tanimations: {\n   * \t\t\tsit: 7\n   * \t\t}\n   *\n   * </li>\n   * <li>\n   *      for an animation of consecutive frames, you can use an array with two required, and two optional entries\n   * \t\tin the order: `start`, `end`, `next`, and `speed`. This will play the frames from start to end inclusive.\n   *\n   * \t\tanimations: {\n   * \t\t\t// start, end, next*, speed*\n   * \t\t\trun: [0, 8],\n   * \t\t\tjump: [9, 12, \"run\", 2]\n   * \t\t}\n   *\n   *  </li>\n   *  <li>\n   *     for non-consecutive frames, you can use an object with a `frames` property defining an array of frame\n   *     indexes to play in order. The object can also specify `next` and `speed` properties.\n   *\n   * \t\tanimations: {\n   * \t\t\twalk: {\n   * \t\t\t\tframes: [1,2,3,3,2,1]\n   * \t\t\t},\n   * \t\t\tshoot: {\n   * \t\t\t\tframes: [1,4,5,6],\n   * \t\t\t\tnext: \"walk\",\n   * \t\t\t\tspeed: 0.5\n   * \t\t\t}\n   * \t\t}\n   *\n   *  </li>\n   * </ol>\n   * <strong>Note:</strong> the `speed` property was added in EaselJS 0.7.0. Earlier versions had a `frequency`\n   * property instead, which was the inverse of `speed`. For example, a value of \"4\" would be 1/4 normal speed in\n   * earlier versions, but is 4x normal speed in EaselJS 0.7.0+.\n   *\n   * <h4>framerate</h4>\n   * Optional. Indicates the default framerate to play this spritesheet at in frames per second. See\n   * {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} for more information.\n   *\n   * \t\tframerate: 20\n   *\n   * Note that the Sprite framerate will only work if the stage update method is provided with the {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\n   * event generated by the {{#crossLink \"Ticker\"}}{{/crossLink}}.\n   *\n   * \t\tcreatejs.Ticker.on(\"tick\", handleTick);\n   * \t\tfunction handleTick(event) {\n   *\t\t\tstage.update(event);\n   *\t\t}\n   *\n   * <h3>Example</h3>\n   * To define a simple sprite sheet, with a single image \"sprites.jpg\" arranged in a regular 50x50 grid with three\n   * animations: \"stand\" showing the first frame, \"run\" looping frame 1-5 inclusive, and \"jump\" playing frame 6-8 and\n   * sequencing back to run.\n   *\n   * \t\tvar data = {\n   * \t\t\timages: [\"sprites.jpg\"],\n   * \t\t\tframes: {width:50, height:50},\n   * \t\t\tanimations: {\n   * \t\t\t\tstand:0,\n   * \t\t\t\trun:[1,5],\n   * \t\t\t\tjump:[6,8,\"run\"]\n   * \t\t\t}\n   * \t\t};\n   * \t\tvar spriteSheet = new createjs.SpriteSheet(data);\n   * \t\tvar animation = new createjs.Sprite(spriteSheet, \"run\");\n   *\n   * <h3>Generating SpriteSheet Images</h3>\n   * Spritesheets can be created manually by combining images in PhotoShop, and specifying the frame size or\n   * coordinates manually, however there are a number of tools that facilitate this.\n   * <ul>\n   *     <li>Exporting SpriteSheets or HTML5 content from Adobe Flash/Animate supports the EaselJS SpriteSheet format.</li>\n   *     <li>The popular <a href=\"https://www.codeandweb.com/texturepacker/easeljs\" target=\"_blank\">Texture Packer</a> has\n   *     EaselJS support.\n   *     <li>SWF animations in Adobe Flash/Animate can be exported to SpriteSheets using <a href=\"http://createjs.com/zoe\" target=\"_blank\">Zo&euml;</a></li>\n   * </ul>\n   *\n   * <h3>Cross Origin Issues</h3>\n   * <strong>Warning:</strong> Images loaded cross-origin will throw cross-origin security errors when interacted with\n   * using:\n   * <ul>\n   *     <li>a mouse</li>\n   *     <li>methods such as {{#crossLink \"Container/getObjectUnderPoint\"}}{{/crossLink}}</li>\n   *     <li>Filters (see {{#crossLink \"Filter\"}}{{/crossLink}})</li>\n   *     <li>caching (see {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}})</li>\n   * </ul>\n   * You can get around this by setting `crossOrigin` property on your images before passing them to EaselJS, or\n   * setting the `crossOrigin` property on PreloadJS' LoadQueue or LoadItems.\n   *\n   * \t\tvar image = new Image();\n   * \t\timg.crossOrigin=\"Anonymous\";\n   * \t\timg.src = \"http://server-with-CORS-support.com/path/to/image.jpg\";\n   *\n   * If you pass string paths to SpriteSheets, they will not work cross-origin. The server that stores the image must\n   * support cross-origin requests, or this will not work. For more information, check out\n   * <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS\" target=\"_blank\">CORS overview on MDN</a>.\n   *\n   * @class SpriteSheet\n   * @constructor\n   * @param {Object} data An object describing the SpriteSheet data.\n   * @extends EventDispatcher\n   **/\n\n  function SpriteSheet(data) {\n    this.EventDispatcher_constructor(); // public properties:\n\n    /**\n     * Indicates whether all images are finished loading.\n     * @property complete\n     * @type Boolean\n     * @readonly\n     **/\n\n    this.complete = true;\n    /**\n     * Specifies the framerate to use by default for Sprite instances using the SpriteSheet. See the Sprite class\n     * {{#crossLink \"Sprite/framerate:property\"}}{{/crossLink}} for more information.\n     * @property framerate\n     * @type Number\n     **/\n\n    this.framerate = 0; // private properties:\n\n    /**\n     * @property _animations\n     * @protected\n     * @type Array\n     **/\n\n    this._animations = null;\n    /**\n     * @property _frames\n     * @protected\n     * @type Array\n     **/\n\n    this._frames = null;\n    /**\n     * @property _images\n     * @protected\n     * @type Array\n     **/\n\n    this._images = null;\n    /**\n     * @property _data\n     * @protected\n     * @type Object\n     **/\n\n    this._data = null;\n    /**\n     * @property _loadCount\n     * @protected\n     * @type Number\n     **/\n\n    this._loadCount = 0; // only used for simple frame defs:\n\n    /**\n     * @property _frameHeight\n     * @protected\n     * @type Number\n     **/\n\n    this._frameHeight = 0;\n    /**\n     * @property _frameWidth\n     * @protected\n     * @type Number\n     **/\n\n    this._frameWidth = 0;\n    /**\n     * @property _numFrames\n     * @protected\n     * @type Number\n     **/\n\n    this._numFrames = 0;\n    /**\n     * @property _regX\n     * @protected\n     * @type Number\n     **/\n\n    this._regX = 0;\n    /**\n     * @property _regY\n     * @protected\n     * @type Number\n     **/\n\n    this._regY = 0;\n    /**\n     * @property _spacing\n     * @protected\n     * @type Number\n     **/\n\n    this._spacing = 0;\n    /**\n     * @property _margin\n     * @protected\n     * @type Number\n     **/\n\n    this._margin = 0; // setup:\n\n    this._parseData(data);\n  }\n\n  var p = createjs.extend(SpriteSheet, createjs.EventDispatcher); // TODO: deprecated\n  // p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n  // events:\n\n  /**\n   * Dispatched when all images are loaded.  Note that this only fires if the images\n   * were not fully loaded when the sprite sheet was initialized. You should check the complete property\n   * to prior to adding a listener. Ex.\n   *\n   * \tvar sheet = new createjs.SpriteSheet(data);\n   * \tif (!sheet.complete) {\n   * \t\t// not preloaded, listen for the complete event:\n   * \t\tsheet.addEventListener(\"complete\", handler);\n   * \t}\n   *\n   * @event complete\n   * @param {Object} target The object that dispatched the event.\n   * @param {String} type The event type.\n   * @since 0.6.0\n   */\n\n  /**\n   * Dispatched when getFrame is called with a valid frame index. This is primarily intended for use by {{#crossLink \"SpriteSheetBuilder\"}}{{/crossLink}}\n   * when doing on-demand rendering.\n   * @event getframe\n   * @param {Number} index The frame index.\n   * @param {Object} frame The frame object that getFrame will return.\n   */\n\n  /**\n   * Dispatched when an image encounters an error. A SpriteSheet will dispatch an error event for each image that\n   * encounters an error, and will still dispatch a {{#crossLink \"SpriteSheet/complete:event\"}}{{/crossLink}}\n   * event once all images are finished processing, even if an error is encountered.\n   * @event error\n   * @param {String} src The source of the image that failed to load.\n   * @since 0.8.2\n   */\n  // getter / setters:\n\n  /**\n   * Use the {{#crossLink \"SpriteSheet/animations:property\"}}{{/crossLink}} property instead.\n   * @method _getAnimations\n   * @protected\n   * @return {Array}\n   **/\n\n  p._getAnimations = function () {\n    return this._animations.slice();\n  }; // SpriteSheet.getAnimations is @deprecated. Remove for 1.1+\n\n\n  p.getAnimations = createjs.deprecate(p._getAnimations, \"SpriteSheet.getAnimations\");\n  /**\n   * Returns an array of all available animation names available on this sprite sheet as strings.\n   * @property animations\n   * @type {Array}\n   * @readonly\n   **/\n\n  try {\n    Object.defineProperties(p, {\n      animations: {\n        get: p._getAnimations\n      }\n    });\n  } catch (e) {} // public methods:\n\n  /**\n   * Returns the total number of frames in the specified animation, or in the whole sprite\n   * sheet if the animation param is omitted. Returns 0 if the spritesheet relies on calculated frame counts, and\n   * the images have not been fully loaded.\n   * @method getNumFrames\n   * @param {String} animation The name of the animation to get a frame count for.\n   * @return {Number} The number of frames in the animation, or in the entire sprite sheet if the animation param is omitted.\n   */\n\n\n  p.getNumFrames = function (animation) {\n    if (animation == null) {\n      return this._frames ? this._frames.length : this._numFrames || 0;\n    } else {\n      var data = this._data[animation];\n\n      if (data == null) {\n        return 0;\n      } else {\n        return data.frames.length;\n      }\n    }\n  };\n  /**\n   * Returns an object defining the specified animation. The returned object contains:<UL>\n   * \t<li>frames: an array of the frame ids in the animation</li>\n   * \t<li>speed: the playback speed for this animation</li>\n   * \t<li>name: the name of the animation</li>\n   * \t<li>next: the default animation to play next. If the animation loops, the name and next property will be the\n   * \tsame.</li>\n   * </UL>\n   * @method getAnimation\n   * @param {String} name The name of the animation to get.\n   * @return {Object} a generic object with frames, speed, name, and next properties.\n   **/\n\n\n  p.getAnimation = function (name) {\n    return this._data[name];\n  };\n  /**\n   * Returns an object specifying the image and source rect of the specified frame. The returned object has:<UL>\n   * \t<li>an image property holding a reference to the image object in which the frame is found</li>\n   * \t<li>a rect property containing a Rectangle instance which defines the boundaries for the frame within that\n   * \timage.</li>\n   * \t<li> A regX and regY property corresponding to the regX/Y values for the frame.\n   * </UL>\n   * @method getFrame\n   * @param {Number} frameIndex The index of the frame.\n   * @return {Object} a generic object with image and rect properties. Returns null if the frame does not exist.\n   **/\n\n\n  p.getFrame = function (frameIndex) {\n    var frame;\n\n    if (this._frames && (frame = this._frames[frameIndex])) {\n      return frame;\n    }\n\n    return null;\n  };\n  /**\n   * Returns a {{#crossLink \"Rectangle\"}}{{/crossLink}} instance defining the bounds of the specified frame relative\n   * to the origin. For example, a 90 x 70 frame with a regX of 50 and a regY of 40 would return:\n   *\n   * \t[x=-50, y=-40, width=90, height=70]\n   *\n   * @method getFrameBounds\n   * @param {Number} frameIndex The index of the frame.\n   * @param {Rectangle} [rectangle] A Rectangle instance to copy the values into. By default a new instance is created.\n   * @return {Rectangle} A Rectangle instance. Returns null if the frame does not exist, or the image is not fully loaded.\n   **/\n\n\n  p.getFrameBounds = function (frameIndex, rectangle) {\n    var frame = this.getFrame(frameIndex);\n    return frame ? (rectangle || new createjs.Rectangle()).setValues(-frame.regX, -frame.regY, frame.rect.width, frame.rect.height) : null;\n  };\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n\n\n  p.toString = function () {\n    return \"[SpriteSheet]\";\n  };\n  /**\n   * SpriteSheet cannot be cloned. A SpriteSheet can be shared by multiple Sprite instances without cloning it.\n   * @method clone\n   **/\n\n\n  p.clone = function () {\n    throw \"SpriteSheet cannot be cloned.\";\n  }; // private methods:\n\n  /**\n   * @method _parseData\n   * @param {Object} data An object describing the SpriteSheet data.\n   * @protected\n   **/\n\n\n  p._parseData = function (data) {\n    var i, l, o, a;\n\n    if (data == null) {\n      return;\n    }\n\n    this.framerate = data.framerate || 0; // parse images:\n\n    if (data.images && (l = data.images.length) > 0) {\n      a = this._images = [];\n\n      for (i = 0; i < l; i++) {\n        var img = data.images[i];\n\n        if (typeof img == \"string\") {\n          var src = img;\n          img = document.createElement(\"img\");\n          img.src = src;\n        }\n\n        a.push(img);\n\n        if (!img.getContext && !img.naturalWidth) {\n          this._loadCount++;\n          this.complete = false;\n\n          (function (o, src) {\n            img.onload = function () {\n              o._handleImageLoad(src);\n            };\n          })(this, src);\n\n          (function (o, src) {\n            img.onerror = function () {\n              o._handleImageError(src);\n            };\n          })(this, src);\n        }\n      }\n    } // parse frames:\n\n\n    if (data.frames == null) {// nothing\n    } else if (Array.isArray(data.frames)) {\n      this._frames = [];\n      a = data.frames;\n\n      for (i = 0, l = a.length; i < l; i++) {\n        var arr = a[i];\n\n        this._frames.push({\n          image: this._images[arr[4] ? arr[4] : 0],\n          rect: new createjs.Rectangle(arr[0], arr[1], arr[2], arr[3]),\n          regX: arr[5] || 0,\n          regY: arr[6] || 0\n        });\n      }\n    } else {\n      o = data.frames;\n      this._frameWidth = o.width;\n      this._frameHeight = o.height;\n      this._regX = o.regX || 0;\n      this._regY = o.regY || 0;\n      this._spacing = o.spacing || 0;\n      this._margin = o.margin || 0;\n      this._numFrames = o.count;\n\n      if (this._loadCount == 0) {\n        this._calculateFrames();\n      }\n    } // parse animations:\n\n\n    this._animations = [];\n\n    if ((o = data.animations) != null) {\n      this._data = {};\n      var name;\n\n      for (name in o) {\n        var anim = {\n          name: name\n        };\n        var obj = o[name];\n\n        if (typeof obj == \"number\") {\n          // single frame\n          a = anim.frames = [obj];\n        } else if (Array.isArray(obj)) {\n          // simple\n          if (obj.length == 1) {\n            anim.frames = [obj[0]];\n          } else {\n            anim.speed = obj[3];\n            anim.next = obj[2];\n            a = anim.frames = [];\n\n            for (i = obj[0]; i <= obj[1]; i++) {\n              a.push(i);\n            }\n          }\n        } else {\n          // complex\n          anim.speed = obj.speed;\n          anim.next = obj.next;\n          var frames = obj.frames;\n          a = anim.frames = typeof frames == \"number\" ? [frames] : frames.slice(0);\n        }\n\n        if (anim.next === true || anim.next === undefined) {\n          anim.next = name;\n        } // loop\n\n\n        if (anim.next === false || a.length < 2 && anim.next == name) {\n          anim.next = null;\n        } // stop\n\n\n        if (!anim.speed) {\n          anim.speed = 1;\n        }\n\n        this._animations.push(name);\n\n        this._data[name] = anim;\n      }\n    }\n  };\n  /**\n   * @method _handleImageLoad\n   * @protected\n   **/\n\n\n  p._handleImageLoad = function (src) {\n    if (--this._loadCount == 0) {\n      this._calculateFrames();\n\n      this.complete = true;\n      this.dispatchEvent(\"complete\");\n    }\n  };\n  /**\n   * @method _handleImageError\n   * @protected\n   */\n\n\n  p._handleImageError = function (src) {\n    var errorEvent = new createjs.Event(\"error\");\n    errorEvent.src = src;\n    this.dispatchEvent(errorEvent); // Complete is still dispatched.\n\n    if (--this._loadCount == 0) {\n      this.dispatchEvent(\"complete\");\n    }\n  };\n  /**\n   * @method _calculateFrames\n   * @protected\n   **/\n\n\n  p._calculateFrames = function () {\n    if (this._frames || this._frameWidth == 0) {\n      return;\n    }\n\n    this._frames = [];\n    var maxFrames = this._numFrames || 100000; // if we go over this, something is wrong.\n\n    var frameCount = 0,\n        frameWidth = this._frameWidth,\n        frameHeight = this._frameHeight;\n    var spacing = this._spacing,\n        margin = this._margin;\n\n    imgLoop: for (var i = 0, imgs = this._images; i < imgs.length; i++) {\n      var img = imgs[i],\n          imgW = img.width || img.naturalWidth,\n          imgH = img.height || img.naturalHeight;\n      var y = margin;\n\n      while (y <= imgH - margin - frameHeight) {\n        var x = margin;\n\n        while (x <= imgW - margin - frameWidth) {\n          if (frameCount >= maxFrames) {\n            break imgLoop;\n          }\n\n          frameCount++;\n\n          this._frames.push({\n            image: img,\n            rect: new createjs.Rectangle(x, y, frameWidth, frameHeight),\n            regX: this._regX,\n            regY: this._regY\n          });\n\n          x += frameWidth + spacing;\n        }\n\n        y += frameHeight + spacing;\n      }\n    }\n\n    this._numFrames = frameCount;\n  };\n\n  createjs.SpriteSheet = createjs.promote(SpriteSheet, \"EventDispatcher\");\n})(); //##############################################################################\n// Graphics.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor:\n\n  /**\n   * The Graphics class exposes an easy to use API for generating vector drawing instructions and drawing them to a\n   * specified context. Note that you can use Graphics without any dependency on the EaselJS framework by calling {{#crossLink \"Graphics/draw\"}}{{/crossLink}}\n   * directly, or it can be used with the {{#crossLink \"Shape\"}}{{/crossLink}} object to draw vector graphics within the\n   * context of an EaselJS display list.\n   *\n   * There are two approaches to working with Graphics object: calling methods on a Graphics instance (the \"Graphics API\"), or\n   * instantiating Graphics command objects and adding them to the graphics queue via {{#crossLink \"Graphics/append\"}}{{/crossLink}}.\n   * The former abstracts the latter, simplifying beginning and ending paths, fills, and strokes.\n   *\n   *      var g = new createjs.Graphics();\n   *      g.setStrokeStyle(1);\n   *      g.beginStroke(\"#000000\");\n   *      g.beginFill(\"red\");\n   *      g.drawCircle(0,0,30);\n   *\n   * All drawing methods in Graphics return the Graphics instance, so they can be chained together. For example,\n   * the following line of code would generate the instructions to draw a rectangle with a red stroke and blue fill:\n   *\n   *      myGraphics.beginStroke(\"red\").beginFill(\"blue\").drawRect(20, 20, 100, 50);\n   *\n   * Each graphics API call generates a command object (see below). The last command to be created can be accessed via\n   * {{#crossLink \"Graphics/command:property\"}}{{/crossLink}}:\n   *\n   *      var fillCommand = myGraphics.beginFill(\"red\").command;\n   *      // ... later, update the fill style/color:\n   *      fillCommand.style = \"blue\";\n   *      // or change it to a bitmap fill:\n   *      fillCommand.bitmap(myImage);\n   *\n   * For more direct control of rendering, you can instantiate and append command objects to the graphics queue directly. In this case, you\n   * need to manage path creation manually, and ensure that fill/stroke is applied to a defined path:\n   *\n   *      // start a new path. Graphics.beginCmd is a reusable BeginPath instance:\n   *      myGraphics.append(createjs.Graphics.beginCmd);\n   *      // we need to define the path before applying the fill:\n   *      var circle = new createjs.Graphics.Circle(0,0,30);\n   *      myGraphics.append(circle);\n   *      // fill the path we just defined:\n   *      var fill = new createjs.Graphics.Fill(\"red\");\n   *      myGraphics.append(fill);\n   *\n   * These approaches can be used together, for example to insert a custom command:\n   *\n   *      myGraphics.beginFill(\"red\");\n   *      var customCommand = new CustomSpiralCommand(etc);\n   *      myGraphics.append(customCommand);\n   *      myGraphics.beginFill(\"blue\");\n   *      myGraphics.drawCircle(0, 0, 30);\n   *\n   * See {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more info on creating custom commands.\n   *\n   * <h4>Tiny API</h4>\n   * The Graphics class also includes a \"tiny API\", which is one or two-letter methods that are shortcuts for all of the\n   * Graphics methods. These methods are great for creating compact instructions, and is used by the Toolkit for CreateJS\n   * to generate readable code. All tiny methods are marked as protected, so you can view them by enabling protected\n   * descriptions in the docs.\n   *\n   * <table>\n   *     <tr><td><b>Tiny</b></td><td><b>Method</b></td><td><b>Tiny</b></td><td><b>Method</b></td></tr>\n   *     <tr><td>mt</td><td>{{#crossLink \"Graphics/moveTo\"}}{{/crossLink}} </td>\n   *     <td>lt</td> <td>{{#crossLink \"Graphics/lineTo\"}}{{/crossLink}}</td></tr>\n   *     <tr><td>a/at</td><td>{{#crossLink \"Graphics/arc\"}}{{/crossLink}} / {{#crossLink \"Graphics/arcTo\"}}{{/crossLink}} </td>\n   *     <td>bt</td><td>{{#crossLink \"Graphics/bezierCurveTo\"}}{{/crossLink}} </td></tr>\n   *     <tr><td>qt</td><td>{{#crossLink \"Graphics/quadraticCurveTo\"}}{{/crossLink}} (also curveTo)</td>\n   *     <td>r</td><td>{{#crossLink \"Graphics/rect\"}}{{/crossLink}} </td></tr>\n   *     <tr><td>cp</td><td>{{#crossLink \"Graphics/closePath\"}}{{/crossLink}} </td>\n   *     <td>c</td><td>{{#crossLink \"Graphics/clear\"}}{{/crossLink}} </td></tr>\n   *     <tr><td>f</td><td>{{#crossLink \"Graphics/beginFill\"}}{{/crossLink}} </td>\n   *     <td>lf</td><td>{{#crossLink \"Graphics/beginLinearGradientFill\"}}{{/crossLink}} </td></tr>\n   *     <tr><td>rf</td><td>{{#crossLink \"Graphics/beginRadialGradientFill\"}}{{/crossLink}} </td>\n   *     <td>bf</td><td>{{#crossLink \"Graphics/beginBitmapFill\"}}{{/crossLink}} </td></tr>\n   *     <tr><td>ef</td><td>{{#crossLink \"Graphics/endFill\"}}{{/crossLink}} </td>\n   *     <td>ss / sd</td><td>{{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} / {{#crossLink \"Graphics/setStrokeDash\"}}{{/crossLink}} </td></tr>\n   *     <tr><td>s</td><td>{{#crossLink \"Graphics/beginStroke\"}}{{/crossLink}} </td>\n   *     <td>ls</td><td>{{#crossLink \"Graphics/beginLinearGradientStroke\"}}{{/crossLink}} </td></tr>\n   *     <tr><td>rs</td><td>{{#crossLink \"Graphics/beginRadialGradientStroke\"}}{{/crossLink}} </td>\n   *     <td>bs</td><td>{{#crossLink \"Graphics/beginBitmapStroke\"}}{{/crossLink}} </td></tr>\n   *     <tr><td>es</td><td>{{#crossLink \"Graphics/endStroke\"}}{{/crossLink}} </td>\n   *     <td>dr</td><td>{{#crossLink \"Graphics/drawRect\"}}{{/crossLink}} </td></tr>\n   *     <tr><td>rr</td><td>{{#crossLink \"Graphics/drawRoundRect\"}}{{/crossLink}} </td>\n   *     <td>rc</td><td>{{#crossLink \"Graphics/drawRoundRectComplex\"}}{{/crossLink}} </td></tr>\n   *     <tr><td>dc</td><td>{{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}} </td>\n   *     <td>de</td><td>{{#crossLink \"Graphics/drawEllipse\"}}{{/crossLink}} </td></tr>\n   *     <tr><td>dp</td><td>{{#crossLink \"Graphics/drawPolyStar\"}}{{/crossLink}} </td>\n   *     <td>p</td><td>{{#crossLink \"Graphics/decodePath\"}}{{/crossLink}} </td></tr>\n   * </table>\n   *\n   * Here is the above example, using the tiny API instead.\n   *\n   *      myGraphics.s(\"red\").f(\"blue\").r(20, 20, 100, 50);\n   *\n   * @class Graphics\n   * @constructor\n   **/\n\n  function Graphics() {\n    // public properties\n\n    /**\n     * Holds a reference to the last command that was created or appended. For example, you could retain a reference\n     * to a Fill command in order to dynamically update the color later by using:\n     *\n     * \t\tvar myFill = myGraphics.beginFill(\"red\").command;\n     * \t\t// update color later:\n     * \t\tmyFill.style = \"yellow\";\n     *\n     * @property command\n     * @type Object\n     **/\n    this.command = null; // private properties\n\n    /**\n     * @property _stroke\n     * @protected\n     * @type {Stroke}\n     **/\n\n    this._stroke = null;\n    /**\n     * @property _strokeStyle\n     * @protected\n     * @type {StrokeStyle}\n     **/\n\n    this._strokeStyle = null;\n    /**\n     * @property _oldStrokeStyle\n     * @protected\n     * @type {StrokeStyle}\n     **/\n\n    this._oldStrokeStyle = null;\n    /**\n     * @property _strokeDash\n     * @protected\n     * @type {StrokeDash}\n     **/\n\n    this._strokeDash = null;\n    /**\n     * @property _oldStrokeDash\n     * @protected\n     * @type {StrokeDash}\n     **/\n\n    this._oldStrokeDash = null;\n    /**\n     * @property _strokeIgnoreScale\n     * @protected\n     * @type Boolean\n     **/\n\n    this._strokeIgnoreScale = false;\n    /**\n     * @property _fill\n     * @protected\n     * @type {Fill}\n     **/\n\n    this._fill = null;\n    /**\n     * @property _instructions\n     * @protected\n     * @type {Array}\n     **/\n\n    this._instructions = [];\n    /**\n     * Indicates the last instruction index that was committed.\n     * @property _commitIndex\n     * @protected\n     * @type {Number}\n     **/\n\n    this._commitIndex = 0;\n    /**\n     * Uncommitted instructions.\n     * @property _activeInstructions\n     * @protected\n     * @type {Array}\n     **/\n\n    this._activeInstructions = [];\n    /**\n     * This indicates that there have been changes to the activeInstruction list since the last updateInstructions call.\n     * @property _dirty\n     * @protected\n     * @type {Boolean}\n     * @default false\n     **/\n\n    this._dirty = false;\n    /**\n     * Index to draw from if a store operation has happened.\n     * @property _storeIndex\n     * @protected\n     * @type {Number}\n     * @default 0\n     **/\n\n    this._storeIndex = 0; // setup:\n\n    this.clear();\n  }\n\n  var p = Graphics.prototype;\n  var G = Graphics; // shortcut\n  // static public methods:\n\n  /**\n   * Returns a CSS compatible color string based on the specified RGB numeric color values in the format\n   * \"rgba(255,255,255,1.0)\", or if alpha is null then in the format \"rgb(255,255,255)\". For example,\n   *\n   *      createjs.Graphics.getRGB(50, 100, 150, 0.5);\n   *      // Returns \"rgba(50,100,150,0.5)\"\n   *\n   * It also supports passing a single hex color value as the first param, and an optional alpha value as the second\n   * param. For example,\n   *\n   *      createjs.Graphics.getRGB(0xFF00FF, 0.2);\n   *      // Returns \"rgba(255,0,255,0.2)\"\n   *\n   * @method getRGB\n   * @static\n   * @param {Number} r The red component for the color, between 0 and 0xFF (255).\n   * @param {Number} g The green component for the color, between 0 and 0xFF (255).\n   * @param {Number} b The blue component for the color, between 0 and 0xFF (255).\n   * @param {Number} [alpha] The alpha component for the color where 0 is fully transparent and 1 is fully opaque.\n   * @return {String} A CSS compatible color string based on the specified RGB numeric color values in the format\n   * \"rgba(255,255,255,1.0)\", or if alpha is null then in the format \"rgb(255,255,255)\".\n   **/\n\n  Graphics.getRGB = function (r, g, b, alpha) {\n    if (r != null && b == null) {\n      alpha = g;\n      b = r & 0xFF;\n      g = r >> 8 & 0xFF;\n      r = r >> 16 & 0xFF;\n    }\n\n    if (alpha == null) {\n      return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n    } else {\n      return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + alpha + \")\";\n    }\n  };\n  /**\n   * Returns a CSS compatible color string based on the specified HSL numeric color values in the format \"hsla(360,100,100,1.0)\",\n   * or if alpha is null then in the format \"hsl(360,100,100)\".\n   *\n   *      createjs.Graphics.getHSL(150, 100, 70);\n   *      // Returns \"hsl(150,100,70)\"\n   *\n   * @method getHSL\n   * @static\n   * @param {Number} hue The hue component for the color, between 0 and 360.\n   * @param {Number} saturation The saturation component for the color, between 0 and 100.\n   * @param {Number} lightness The lightness component for the color, between 0 and 100.\n   * @param {Number} [alpha] The alpha component for the color where 0 is fully transparent and 1 is fully opaque.\n   * @return {String} A CSS compatible color string based on the specified HSL numeric color values in the format\n   * \"hsla(360,100,100,1.0)\", or if alpha is null then in the format \"hsl(360,100,100)\".\n   **/\n\n\n  Graphics.getHSL = function (hue, saturation, lightness, alpha) {\n    if (alpha == null) {\n      return \"hsl(\" + hue % 360 + \",\" + saturation + \"%,\" + lightness + \"%)\";\n    } else {\n      return \"hsla(\" + hue % 360 + \",\" + saturation + \"%,\" + lightness + \"%,\" + alpha + \")\";\n    }\n  }; // static properties:\n\n  /**\n   * A reusable instance of {{#crossLink \"Graphics/BeginPath\"}}{{/crossLink}} to avoid\n   * unnecessary instantiation.\n   * @property beginCmd\n   * @type {Graphics.BeginPath}\n   * @static\n   **/\n  // defined at the bottom of this file.\n\n  /**\n   * Map of Base64 characters to values. Used by {{#crossLink \"Graphics/decodePath\"}}{{/crossLink}}.\n   * @property BASE_64\n   * @static\n   * @final\n   * @readonly\n   * @type {Object}\n   **/\n\n\n  Graphics.BASE_64 = {\n    \"A\": 0,\n    \"B\": 1,\n    \"C\": 2,\n    \"D\": 3,\n    \"E\": 4,\n    \"F\": 5,\n    \"G\": 6,\n    \"H\": 7,\n    \"I\": 8,\n    \"J\": 9,\n    \"K\": 10,\n    \"L\": 11,\n    \"M\": 12,\n    \"N\": 13,\n    \"O\": 14,\n    \"P\": 15,\n    \"Q\": 16,\n    \"R\": 17,\n    \"S\": 18,\n    \"T\": 19,\n    \"U\": 20,\n    \"V\": 21,\n    \"W\": 22,\n    \"X\": 23,\n    \"Y\": 24,\n    \"Z\": 25,\n    \"a\": 26,\n    \"b\": 27,\n    \"c\": 28,\n    \"d\": 29,\n    \"e\": 30,\n    \"f\": 31,\n    \"g\": 32,\n    \"h\": 33,\n    \"i\": 34,\n    \"j\": 35,\n    \"k\": 36,\n    \"l\": 37,\n    \"m\": 38,\n    \"n\": 39,\n    \"o\": 40,\n    \"p\": 41,\n    \"q\": 42,\n    \"r\": 43,\n    \"s\": 44,\n    \"t\": 45,\n    \"u\": 46,\n    \"v\": 47,\n    \"w\": 48,\n    \"x\": 49,\n    \"y\": 50,\n    \"z\": 51,\n    \"0\": 52,\n    \"1\": 53,\n    \"2\": 54,\n    \"3\": 55,\n    \"4\": 56,\n    \"5\": 57,\n    \"6\": 58,\n    \"7\": 59,\n    \"8\": 60,\n    \"9\": 61,\n    \"+\": 62,\n    \"/\": 63\n  };\n  /**\n   * Maps numeric values for the caps parameter of {{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} to\n   * corresponding string values. This is primarily for use with the tiny API. The mappings are as follows: 0 to\n   * \"butt\", 1 to \"round\", and 2 to \"square\".\n   * For example, to set the line caps to \"square\":\n   *\n   *      myGraphics.ss(16, 2);\n   *\n   * @property STROKE_CAPS_MAP\n   * @static\n   * @final\n   * @readonly\n   * @type {Array}\n   **/\n\n  Graphics.STROKE_CAPS_MAP = [\"butt\", \"round\", \"square\"];\n  /**\n   * Maps numeric values for the joints parameter of {{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} to\n   * corresponding string values. This is primarily for use with the tiny API. The mappings are as follows: 0 to\n   * \"miter\", 1 to \"round\", and 2 to \"bevel\".\n   * For example, to set the line joints to \"bevel\":\n   *\n   *      myGraphics.ss(16, 0, 2);\n   *\n   * @property STROKE_JOINTS_MAP\n   * @static\n   * @final\n   * @readonly\n   * @type {Array}\n   **/\n\n  Graphics.STROKE_JOINTS_MAP = [\"miter\", \"round\", \"bevel\"];\n  /**\n   * @property _ctx\n   * @static\n   * @protected\n   * @type {CanvasRenderingContext2D}\n   **/\n\n  var canvas = createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\");\n\n  if (canvas.getContext) {\n    Graphics._ctx = canvas.getContext(\"2d\");\n    canvas.width = canvas.height = 1;\n  } // getter / setters:\n\n  /**\n   * Use the {{#crossLink \"Graphics/instructions:property\"}}{{/crossLink}} property instead.\n   * @method _getInstructions\n   * @protected\n   * @return {Array} The instructions array, useful for chaining\n   **/\n\n\n  p._getInstructions = function () {\n    this._updateInstructions();\n\n    return this._instructions;\n  }; // Graphics.getInstructions is @deprecated. Remove for 1.1+\n\n\n  p.getInstructions = createjs.deprecate(p._getInstructions, \"Graphics.getInstructions\");\n  /**\n   * Returns the graphics instructions array. Each entry is a graphics command object (ex. Graphics.Fill, Graphics.Rect)\n   * Modifying the returned array directly is not recommended, and is likely to result in unexpected behaviour.\n   *\n   * This property is mainly intended for introspection of the instructions (ex. for graphics export).\n   * @property instructions\n   * @type {Array}\n   * @readonly\n   **/\n\n  try {\n    Object.defineProperties(p, {\n      instructions: {\n        get: p._getInstructions\n      }\n    });\n  } catch (e) {} // public methods:\n\n  /**\n   * Returns true if this Graphics instance has no drawing commands.\n   * @method isEmpty\n   * @return {Boolean} Returns true if this Graphics instance has no drawing commands.\n   **/\n\n\n  p.isEmpty = function () {\n    return !(this._instructions.length || this._activeInstructions.length);\n  };\n  /**\n   * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n   * Returns true if the draw was handled (useful for overriding functionality).\n   *\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method draw\n   * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n   * @param {Object} data Optional data that is passed to graphics command exec methods. When called from a Shape instance, the shape passes itself as the data parameter. This can be used by custom graphic commands to insert contextual data.\n   **/\n\n\n  p.draw = function (ctx, data) {\n    this._updateInstructions();\n\n    var instr = this._instructions;\n\n    for (var i = this._storeIndex, l = instr.length; i < l; i++) {\n      instr[i].exec(ctx, data);\n    }\n  };\n  /**\n   * Draws only the path described for this Graphics instance, skipping any non-path instructions, including fill and\n   * stroke descriptions. Used for <code>DisplayObject.mask</code> to draw the clipping path, for example.\n   *\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method drawAsPath\n   * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n   **/\n\n\n  p.drawAsPath = function (ctx) {\n    this._updateInstructions();\n\n    var instr,\n        instrs = this._instructions;\n\n    for (var i = this._storeIndex, l = instrs.length; i < l; i++) {\n      // the first command is always a beginPath command.\n      if ((instr = instrs[i]).path !== false) {\n        instr.exec(ctx);\n      }\n    }\n  }; // public methods that map directly to context 2D calls:\n\n  /**\n   * Moves the drawing point to the specified position. A tiny API method \"mt\" also exists.\n   * @method moveTo\n   * @param {Number} x The x coordinate the drawing point should move to.\n   * @param {Number} y The y coordinate the drawing point should move to.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls).\n   * @chainable\n   **/\n\n\n  p.moveTo = function (x, y) {\n    return this.append(new G.MoveTo(x, y), true);\n  };\n  /**\n   * Draws a line from the current drawing point to the specified position, which become the new current drawing\n   * point. Note that you *must* call {{#crossLink \"Graphics/moveTo\"}}{{/crossLink}} before the first `lineTo()`.\n   * A tiny API method \"lt\" also exists.\n   *\n   * For detailed information, read the\n   * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#complex-shapes-(paths)\">\n   * whatwg spec</a>.\n   * @method lineTo\n   * @param {Number} x The x coordinate the drawing point should draw to.\n   * @param {Number} y The y coordinate the drawing point should draw to.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n\n\n  p.lineTo = function (x, y) {\n    return this.append(new G.LineTo(x, y));\n  };\n  /**\n   * Draws an arc with the specified control points and radius.  For detailed information, read the\n   * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-arcto\">\n   * whatwg spec</a>. A tiny API method \"at\" also exists.\n   * @method arcTo\n   * @param {Number} x1\n   * @param {Number} y1\n   * @param {Number} x2\n   * @param {Number} y2\n   * @param {Number} radius\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n\n\n  p.arcTo = function (x1, y1, x2, y2, radius) {\n    return this.append(new G.ArcTo(x1, y1, x2, y2, radius));\n  };\n  /**\n   * Draws an arc defined by the radius, startAngle and endAngle arguments, centered at the position (x, y). For\n   * example, to draw a full circle with a radius of 20 centered at (100, 100):\n   *\n   *      arc(100, 100, 20, 0, Math.PI*2);\n   *\n   * For detailed information, read the\n   * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-arc\">whatwg spec</a>.\n   * A tiny API method \"a\" also exists.\n   * @method arc\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} radius\n   * @param {Number} startAngle Measured in radians.\n   * @param {Number} endAngle Measured in radians.\n   * @param {Boolean} anticlockwise\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n\n\n  p.arc = function (x, y, radius, startAngle, endAngle, anticlockwise) {\n    return this.append(new G.Arc(x, y, radius, startAngle, endAngle, anticlockwise));\n  };\n  /**\n   * Draws a quadratic curve from the current drawing point to (x, y) using the control point (cpx, cpy). For detailed\n   * information, read the <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-quadraticcurveto\">\n   * whatwg spec</a>. A tiny API method \"qt\" also exists.\n   * @method quadraticCurveTo\n   * @param {Number} cpx\n   * @param {Number} cpy\n   * @param {Number} x\n   * @param {Number} y\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n\n\n  p.quadraticCurveTo = function (cpx, cpy, x, y) {\n    return this.append(new G.QuadraticCurveTo(cpx, cpy, x, y));\n  };\n  /**\n   * Draws a bezier curve from the current drawing point to (x, y) using the control points (cp1x, cp1y) and (cp2x,\n   * cp2y). For detailed information, read the\n   * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-beziercurveto\">\n   * whatwg spec</a>. A tiny API method \"bt\" also exists.\n   * @method bezierCurveTo\n   * @param {Number} cp1x\n   * @param {Number} cp1y\n   * @param {Number} cp2x\n   * @param {Number} cp2y\n   * @param {Number} x\n   * @param {Number} y\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n\n\n  p.bezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {\n    return this.append(new G.BezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y));\n  };\n  /**\n   * Draws a rectangle at (x, y) with the specified width and height using the current fill and/or stroke.\n   * For detailed information, read the\n   * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-rect\">\n   * whatwg spec</a>. A tiny API method \"r\" also exists.\n   * @method rect\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} w Width of the rectangle\n   * @param {Number} h Height of the rectangle\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n\n\n  p.rect = function (x, y, w, h) {\n    return this.append(new G.Rect(x, y, w, h));\n  };\n  /**\n   * Closes the current path, effectively drawing a line from the current drawing point to the first drawing point specified\n   * since the fill or stroke was last set. A tiny API method \"cp\" also exists.\n   * @method closePath\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n\n\n  p.closePath = function () {\n    return this._activeInstructions.length ? this.append(new G.ClosePath()) : this;\n  }; // public methods that roughly map to Adobe Flash/Animate graphics APIs:\n\n  /**\n   * Clears all drawing instructions, effectively resetting this Graphics instance. Any line and fill styles will need\n   * to be redefined to draw shapes following a clear call. A tiny API method \"c\" also exists.\n   * @method clear\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n\n\n  p.clear = function () {\n    this._instructions.length = this._activeInstructions.length = this._commitIndex = 0;\n    this._strokeStyle = this._oldStrokeStyle = this._stroke = this._fill = this._strokeDash = this._oldStrokeDash = null;\n    this._dirty = this._strokeIgnoreScale = false;\n    return this;\n  };\n  /**\n   * Begins a fill with the specified color. This ends the current sub-path. A tiny API method \"f\" also exists.\n   * @method beginFill\n   * @param {String} color A CSS compatible color value (ex. \"red\", \"#FF0000\", or \"rgba(255,0,0,0.5)\"). Setting to\n   * null will result in no fill.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n\n\n  p.beginFill = function (color) {\n    return this._setFill(color ? new G.Fill(color) : null);\n  };\n  /**\n   * Begins a linear gradient fill defined by the line (x0, y0) to (x1, y1). This ends the current sub-path. For\n   * example, the following code defines a black to white vertical gradient ranging from 20px to 120px, and draws a\n   * square to display it:\n   *\n   *      myGraphics.beginLinearGradientFill([\"#000\",\"#FFF\"], [0, 1], 0, 20, 0, 120).drawRect(20, 20, 120, 120);\n   *\n   * A tiny API method \"lf\" also exists.\n   * @method beginLinearGradientFill\n   * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define a gradient\n   * drawing from red to blue.\n   * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1, 0.9] would draw\n   * the first color to 10% then interpolating to the second color at 90%.\n   * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n   * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n   * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n   * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n\n\n  p.beginLinearGradientFill = function (colors, ratios, x0, y0, x1, y1) {\n    return this._setFill(new G.Fill().linearGradient(colors, ratios, x0, y0, x1, y1));\n  };\n  /**\n   * Begins a radial gradient fill. This ends the current sub-path. For example, the following code defines a red to\n   * blue radial gradient centered at (100, 100), with a radius of 50, and draws a circle to display it:\n   *\n   *      myGraphics.beginRadialGradientFill([\"#F00\",\"#00F\"], [0, 1], 100, 100, 0, 100, 100, 50).drawCircle(100, 100, 50);\n   *\n   * A tiny API method \"rf\" also exists.\n   * @method beginRadialGradientFill\n   * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n   * a gradient drawing from red to blue.\n   * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n   * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n   * @param {Number} x0 Center position of the inner circle that defines the gradient.\n   * @param {Number} y0 Center position of the inner circle that defines the gradient.\n   * @param {Number} r0 Radius of the inner circle that defines the gradient.\n   * @param {Number} x1 Center position of the outer circle that defines the gradient.\n   * @param {Number} y1 Center position of the outer circle that defines the gradient.\n   * @param {Number} r1 Radius of the outer circle that defines the gradient.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n\n\n  p.beginRadialGradientFill = function (colors, ratios, x0, y0, r0, x1, y1, r1) {\n    return this._setFill(new G.Fill().radialGradient(colors, ratios, x0, y0, r0, x1, y1, r1));\n  };\n  /**\n   * Begins a pattern fill using the specified image. This ends the current sub-path. A tiny API method \"bf\" also\n   * exists.\n   * @method beginBitmapFill\n   * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n   * as the pattern. Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n   * @param {String} repetition Optional. Indicates whether to repeat the image in the fill area. One of \"repeat\",\n   * \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\". Note that Firefox does not support \"repeat-x\" or\n   * \"repeat-y\" (latest tests were in FF 20.0), and will default to \"repeat\".\n   * @param {Matrix2D} matrix Optional. Specifies a transformation matrix for the bitmap fill. This transformation\n   * will be applied relative to the parent transform.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n\n\n  p.beginBitmapFill = function (image, repetition, matrix) {\n    return this._setFill(new G.Fill(null, matrix).bitmap(image, repetition));\n  };\n  /**\n   * Ends the current sub-path, and begins a new one with no fill. Functionally identical to <code>beginFill(null)</code>.\n   * A tiny API method \"ef\" also exists.\n   * @method endFill\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n\n\n  p.endFill = function () {\n    return this.beginFill();\n  };\n  /**\n   * Sets the stroke style. Like all drawing methods, this can be chained, so you can define\n   * the stroke style and color in a single line of code like so:\n   *\n   * \tmyGraphics.setStrokeStyle(8,\"round\").beginStroke(\"#F00\");\n   *\n   * A tiny API method \"ss\" also exists.\n   * @method setStrokeStyle\n   * @param {Number} thickness The width of the stroke.\n   * @param {String | Number} [caps=0] Indicates the type of caps to use at the end of lines. One of butt,\n   * round, or square. Defaults to \"butt\". Also accepts the values 0 (butt), 1 (round), and 2 (square) for use with\n   * the tiny API.\n   * @param {String | Number} [joints=0] Specifies the type of joints that should be used where two lines meet.\n   * One of bevel, round, or miter. Defaults to \"miter\". Also accepts the values 0 (miter), 1 (round), and 2 (bevel)\n   * for use with the tiny API.\n   * @param {Number} [miterLimit=10] If joints is set to \"miter\", then you can specify a miter limit ratio which\n   * controls at what point a mitered joint will be clipped.\n   * @param {Boolean} [ignoreScale=false] If true, the stroke will be drawn at the specified thickness regardless\n   * of active transformations.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n\n\n  p.setStrokeStyle = function (thickness, caps, joints, miterLimit, ignoreScale) {\n    this._updateInstructions(true);\n\n    this._strokeStyle = this.command = new G.StrokeStyle(thickness, caps, joints, miterLimit, ignoreScale); // ignoreScale lives on Stroke, not StrokeStyle, so we do a little trickery:\n\n    if (this._stroke) {\n      this._stroke.ignoreScale = ignoreScale;\n    }\n\n    this._strokeIgnoreScale = ignoreScale;\n    return this;\n  };\n  /**\n   * Sets or clears the stroke dash pattern.\n   *\n   * \tmyGraphics.setStrokeDash([20, 10], 0);\n   *\n   * A tiny API method `sd` also exists.\n   * @method setStrokeDash\n   * @param {Array} [segments] An array specifying the dash pattern, alternating between line and gap.\n   * For example, `[20,10]` would create a pattern of 20 pixel lines with 10 pixel gaps between them.\n   * Passing null or an empty array will clear the existing stroke dash.\n   * @param {Number} [offset=0] The offset of the dash pattern. For example, you could increment this value to create a \"marching ants\" effect.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n\n\n  p.setStrokeDash = function (segments, offset) {\n    this._updateInstructions(true);\n\n    this._strokeDash = this.command = new G.StrokeDash(segments, offset);\n    return this;\n  };\n  /**\n   * Begins a stroke with the specified color. This ends the current sub-path. A tiny API method \"s\" also exists.\n   * @method beginStroke\n   * @param {String} color A CSS compatible color value (ex. \"#FF0000\", \"red\", or \"rgba(255,0,0,0.5)\"). Setting to\n   * null will result in no stroke.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n\n\n  p.beginStroke = function (color) {\n    return this._setStroke(color ? new G.Stroke(color) : null);\n  };\n  /**\n   * Begins a linear gradient stroke defined by the line (x0, y0) to (x1, y1). This ends the current sub-path. For\n   * example, the following code defines a black to white vertical gradient ranging from 20px to 120px, and draws a\n   * square to display it:\n   *\n   *      myGraphics.setStrokeStyle(10).\n   *          beginLinearGradientStroke([\"#000\",\"#FFF\"], [0, 1], 0, 20, 0, 120).drawRect(20, 20, 120, 120);\n   *\n   * A tiny API method \"ls\" also exists.\n   * @method beginLinearGradientStroke\n   * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n   * a gradient drawing from red to blue.\n   * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n   * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n   * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n   * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n   * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n   * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n\n\n  p.beginLinearGradientStroke = function (colors, ratios, x0, y0, x1, y1) {\n    return this._setStroke(new G.Stroke().linearGradient(colors, ratios, x0, y0, x1, y1));\n  };\n  /**\n   * Begins a radial gradient stroke. This ends the current sub-path. For example, the following code defines a red to\n   * blue radial gradient centered at (100, 100), with a radius of 50, and draws a rectangle to display it:\n   *\n   *      myGraphics.setStrokeStyle(10)\n   *          .beginRadialGradientStroke([\"#F00\",\"#00F\"], [0, 1], 100, 100, 0, 100, 100, 50)\n   *          .drawRect(50, 90, 150, 110);\n   *\n   * A tiny API method \"rs\" also exists.\n   * @method beginRadialGradientStroke\n   * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n   * a gradient drawing from red to blue.\n   * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n   * 0.9] would draw the first color to 10% then interpolating to the second color at 90%, then draw the second color\n   * to 100%.\n   * @param {Number} x0 Center position of the inner circle that defines the gradient.\n   * @param {Number} y0 Center position of the inner circle that defines the gradient.\n   * @param {Number} r0 Radius of the inner circle that defines the gradient.\n   * @param {Number} x1 Center position of the outer circle that defines the gradient.\n   * @param {Number} y1 Center position of the outer circle that defines the gradient.\n   * @param {Number} r1 Radius of the outer circle that defines the gradient.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n\n\n  p.beginRadialGradientStroke = function (colors, ratios, x0, y0, r0, x1, y1, r1) {\n    return this._setStroke(new G.Stroke().radialGradient(colors, ratios, x0, y0, r0, x1, y1, r1));\n  };\n  /**\n   * Begins a pattern fill using the specified image. This ends the current sub-path. Note that unlike bitmap fills,\n   * strokes do not currently support a matrix parameter due to limitations in the canvas API. A tiny API method \"bs\"\n   * also exists.\n   * @method beginBitmapStroke\n   * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n   * as the pattern. Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n   * @param {String} [repetition=repeat] Optional. Indicates whether to repeat the image in the fill area. One of\n   * \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\".\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n\n\n  p.beginBitmapStroke = function (image, repetition) {\n    // NOTE: matrix is not supported for stroke because transforms on strokes also affect the drawn stroke width.\n    return this._setStroke(new G.Stroke().bitmap(image, repetition));\n  };\n  /**\n   * Ends the current sub-path, and begins a new one with no stroke. Functionally identical to <code>beginStroke(null)</code>.\n   * A tiny API method \"es\" also exists.\n   * @method endStroke\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n\n\n  p.endStroke = function () {\n    return this.beginStroke();\n  };\n  /**\n   * Maps the familiar ActionScript <code>curveTo()</code> method to the functionally similar {{#crossLink \"Graphics/quadraticCurveTo\"}}{{/crossLink}}\n   * method.\n   * @method curveTo\n   * @param {Number} cpx\n   * @param {Number} cpy\n   * @param {Number} x\n   * @param {Number} y\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n\n\n  p.curveTo = p.quadraticCurveTo;\n  /**\n   *\n   * Maps the familiar ActionScript <code>drawRect()</code> method to the functionally similar {{#crossLink \"Graphics/rect\"}}{{/crossLink}}\n   * method.\n   * @method drawRect\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} w Width of the rectangle\n   * @param {Number} h Height of the rectangle\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n\n  p.drawRect = p.rect;\n  /**\n   * Draws a rounded rectangle with all corners with the specified radius.\n   * @method drawRoundRect\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} w\n   * @param {Number} h\n   * @param {Number} radius Corner radius.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n\n  p.drawRoundRect = function (x, y, w, h, radius) {\n    return this.drawRoundRectComplex(x, y, w, h, radius, radius, radius, radius);\n  };\n  /**\n   * Draws a rounded rectangle with different corner radii. Supports positive and negative corner radii. A tiny API\n   * method \"rc\" also exists.\n   * @method drawRoundRectComplex\n   * @param {Number} x The horizontal coordinate to draw the round rect.\n   * @param {Number} y The vertical coordinate to draw the round rect.\n   * @param {Number} w The width of the round rect.\n   * @param {Number} h The height of the round rect.\n   * @param {Number} radiusTL Top left corner radius.\n   * @param {Number} radiusTR Top right corner radius.\n   * @param {Number} radiusBR Bottom right corner radius.\n   * @param {Number} radiusBL Bottom left corner radius.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n\n\n  p.drawRoundRectComplex = function (x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL) {\n    return this.append(new G.RoundRect(x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL));\n  };\n  /**\n   * Draws a circle with the specified radius at (x, y).\n   *\n   *      var g = new createjs.Graphics();\n   *\t    g.setStrokeStyle(1);\n   *\t    g.beginStroke(createjs.Graphics.getRGB(0,0,0));\n   *\t    g.beginFill(createjs.Graphics.getRGB(255,0,0));\n   *\t    g.drawCircle(0,0,3);\n   *\n   *\t    var s = new createjs.Shape(g);\n   *\t\ts.x = 100;\n   *\t\ts.y = 100;\n   *\n   *\t    stage.addChild(s);\n   *\t    stage.update();\n   *\n   * A tiny API method \"dc\" also exists.\n   * @method drawCircle\n   * @param {Number} x x coordinate center point of circle.\n   * @param {Number} y y coordinate center point of circle.\n   * @param {Number} radius Radius of circle.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n\n\n  p.drawCircle = function (x, y, radius) {\n    return this.append(new G.Circle(x, y, radius));\n  };\n  /**\n   * Draws an ellipse (oval) with a specified width (w) and height (h). Similar to {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}},\n   * except the width and height can be different. A tiny API method \"de\" also exists.\n   * @method drawEllipse\n   * @param {Number} x The left coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\n   * which draws from center.\n   * @param {Number} y The top coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\n   * which draws from the center.\n   * @param {Number} w The height (horizontal diameter) of the ellipse. The horizontal radius will be half of this\n   * number.\n   * @param {Number} h The width (vertical diameter) of the ellipse. The vertical radius will be half of this number.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n\n\n  p.drawEllipse = function (x, y, w, h) {\n    return this.append(new G.Ellipse(x, y, w, h));\n  };\n  /**\n   * Draws a star if pointSize is greater than 0, or a regular polygon if pointSize is 0 with the specified number of\n   * points. For example, the following code will draw a familiar 5 pointed star shape centered at 100, 100 and with a\n   * radius of 50:\n   *\n   *      myGraphics.beginFill(\"#FF0\").drawPolyStar(100, 100, 50, 5, 0.6, -90);\n   *      // Note: -90 makes the first point vertical\n   *\n   * A tiny API method \"dp\" also exists.\n   *\n   * @method drawPolyStar\n   * @param {Number} x Position of the center of the shape.\n   * @param {Number} y Position of the center of the shape.\n   * @param {Number} radius The outer radius of the shape.\n   * @param {Number} sides The number of points on the star or sides on the polygon.\n   * @param {Number} pointSize The depth or \"pointy-ness\" of the star points. A pointSize of 0 will draw a regular\n   * polygon (no points), a pointSize of 1 will draw nothing because the points are infinitely pointy.\n   * @param {Number} angle The angle of the first point / corner. For example a value of 0 will draw the first point\n   * directly to the right of the center.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n\n\n  p.drawPolyStar = function (x, y, radius, sides, pointSize, angle) {\n    return this.append(new G.PolyStar(x, y, radius, sides, pointSize, angle));\n  };\n  /**\n   * Appends a graphics command object to the graphics queue. Command objects expose an \"exec\" method\n   * that accepts two parameters: the Context2D to operate on, and an arbitrary data object passed into\n   * {{#crossLink \"Graphics/draw\"}}{{/crossLink}}. The latter will usually be the Shape instance that called draw.\n   *\n   * This method is used internally by Graphics methods, such as drawCircle, but can also be used directly to insert\n   * built-in or custom graphics commands. For example:\n   *\n   * \t\t// attach data to our shape, so we can access it during the draw:\n   * \t\tmyShape.color = \"red\";\n   *\n   * \t\t// append a Circle command object:\n   * \t\tmyShape.graphics.append(new createjs.Graphics.Circle(50, 50, 30));\n   *\n   * \t\t// append a custom command object with an exec method that sets the fill style\n   * \t\t// based on the shape's data, and then fills the circle.\n   * \t\tmyShape.graphics.append({exec:function(ctx, shape) {\n   * \t\t\tctx.fillStyle = shape.color;\n   * \t\t\tctx.fill();\n   * \t\t}});\n   *\n   * @method append\n   * @param {Object} command A graphics command object exposing an \"exec\" method.\n   * @param {boolean} clean The clean param is primarily for internal use. A value of true indicates that a command does not generate a path that should be stroked or filled.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n\n\n  p.append = function (command, clean) {\n    this._activeInstructions.push(command);\n\n    this.command = command;\n\n    if (!clean) {\n      this._dirty = true;\n    }\n\n    return this;\n  };\n  /**\n   * Decodes a compact encoded path string into a series of draw instructions.\n   * This format is not intended to be human readable, and is meant for use by authoring tools.\n   * The format uses a base64 character set, with each character representing 6 bits, to define a series of draw\n   * commands.\n   *\n   * Each command is comprised of a single \"header\" character followed by a variable number of alternating x and y\n   * position values. Reading the header bits from left to right (most to least significant): bits 1 to 3 specify the\n   * type of operation (0-moveTo, 1-lineTo, 2-quadraticCurveTo, 3-bezierCurveTo, 4-closePath, 5-7 unused). Bit 4\n   * indicates whether position values use 12 bits (2 characters) or 18 bits (3 characters), with a one indicating the\n   * latter. Bits 5 and 6 are currently unused.\n   *\n   * Following the header is a series of 0 (closePath), 2 (moveTo, lineTo), 4 (quadraticCurveTo), or 6 (bezierCurveTo)\n   * parameters. These parameters are alternating x/y positions represented by 2 or 3 characters (as indicated by the\n   * 4th bit in the command char). These characters consist of a 1 bit sign (1 is negative, 0 is positive), followed\n   * by an 11 (2 char) or 17 (3 char) bit integer value. All position values are in tenths of a pixel. Except in the\n   * case of move operations which are absolute, this value is a delta from the previous x or y position (as\n   * appropriate).\n   *\n   * For example, the string \"A3cAAMAu4AAA\" represents a line starting at -150,0 and ending at 150,0.\n   * <br />A - bits 000000. First 3 bits (000) indicate a moveTo operation. 4th bit (0) indicates 2 chars per\n   * parameter.\n   * <br />n0 - 110111011100. Absolute x position of -150.0px. First bit indicates a negative value, remaining bits\n   * indicate 1500 tenths of a pixel.\n   * <br />AA - 000000000000. Absolute y position of 0.\n   * <br />I - 001100. First 3 bits (001) indicate a lineTo operation. 4th bit (1) indicates 3 chars per parameter.\n   * <br />Au4 - 000000101110111000. An x delta of 300.0px, which is added to the previous x value of -150.0px to\n   * provide an absolute position of +150.0px.\n   * <br />AAA - 000000000000000000. A y delta value of 0.\n   *\n   * A tiny API method \"p\" also exists.\n   * @method decodePath\n   * @param {String} str The path string to decode.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n\n\n  p.decodePath = function (str) {\n    var instructions = [this.moveTo, this.lineTo, this.quadraticCurveTo, this.bezierCurveTo, this.closePath];\n    var paramCount = [2, 2, 4, 6, 0];\n    var i = 0,\n        l = str.length;\n    var params = [];\n    var x = 0,\n        y = 0;\n    var base64 = Graphics.BASE_64;\n\n    while (i < l) {\n      var c = str.charAt(i);\n      var n = base64[c];\n      var fi = n >> 3; // highest order bits 1-3 code for operation.\n\n      var f = instructions[fi]; // check that we have a valid instruction & that the unused bits are empty:\n\n      if (!f || n & 3) {\n        throw \"bad path data (@\" + i + \"): \" + c;\n      }\n\n      var pl = paramCount[fi];\n\n      if (!fi) {\n        x = y = 0;\n      } // move operations reset the position.\n\n\n      params.length = 0;\n      i++;\n      var charCount = (n >> 2 & 1) + 2; // 4th header bit indicates number size for this operation.\n\n      for (var p = 0; p < pl; p++) {\n        var num = base64[str.charAt(i)];\n        var sign = num >> 5 ? -1 : 1;\n        num = (num & 31) << 6 | base64[str.charAt(i + 1)];\n\n        if (charCount == 3) {\n          num = num << 6 | base64[str.charAt(i + 2)];\n        }\n\n        num = sign * num / 10;\n\n        if (p % 2) {\n          x = num += x;\n        } else {\n          y = num += y;\n        }\n\n        params[p] = num;\n        i += charCount;\n      }\n\n      f.apply(this, params);\n    }\n\n    return this;\n  };\n  /**\n   * Stores all graphics commands so they won't be executed in future draws. Calling store() a second time adds to\n   * the existing store. This also affects `drawAsPath()`.\n   *\n   * This is useful in cases where you are creating vector graphics in an iterative manner (ex. generative art), so\n   * that only new graphics need to be drawn (which can provide huge performance benefits), but you wish to retain all\n   * of the vector instructions for later use (ex. scaling, modifying, or exporting).\n   *\n   * Note that calling store() will force the active path (if any) to be ended in a manner similar to changing\n   * the fill or stroke.\n   *\n   * For example, consider a application where the user draws lines with the mouse. As each line segment (or collection of\n   * segments) are added to a Shape, it can be rasterized using {{#crossLink \"DisplayObject/updateCache\"}}{{/crossLink}},\n   * and then stored, so that it can be redrawn at a different scale when the application is resized, or exported to SVG.\n   *\n   * \t// set up cache:\n   * \tmyShape.cache(0,0,500,500,scale);\n   *\n   * \t// when the user drags, draw a new line:\n   * \tmyShape.graphics.moveTo(oldX,oldY).lineTo(newX,newY);\n   * \t// then draw it into the existing cache:\n   * \tmyShape.updateCache(\"source-over\");\n   * \t// store the new line, so it isn't redrawn next time:\n   * \tmyShape.store();\n   *\n   * \t// then, when the window resizes, we can re-render at a different scale:\n   * \t// first, unstore all our lines:\n   * \tmyShape.unstore();\n   * \t// then cache using the new scale:\n   * \tmyShape.cache(0,0,500,500,newScale);\n   * \t// finally, store the existing commands again:\n   * \tmyShape.store();\n   *\n   * @method store\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n\n\n  p.store = function () {\n    this._updateInstructions(true);\n\n    this._storeIndex = this._instructions.length;\n    return this;\n  };\n  /**\n   * Unstores any graphics commands that were previously stored using {{#crossLink \"Graphics/store\"}}{{/crossLink}}\n   * so that they will be executed in subsequent draw calls.\n   *\n   * @method unstore\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n\n\n  p.unstore = function () {\n    this._storeIndex = 0;\n    return this;\n  };\n  /**\n   * Returns a clone of this Graphics instance. Note that the individual command objects are not cloned.\n   * @method clone\n   * @return {Graphics} A clone of the current Graphics instance.\n   **/\n\n\n  p.clone = function () {\n    var o = new Graphics();\n    o.command = this.command;\n    o._stroke = this._stroke;\n    o._strokeStyle = this._strokeStyle;\n    o._strokeDash = this._strokeDash;\n    o._strokeIgnoreScale = this._strokeIgnoreScale;\n    o._fill = this._fill;\n    o._instructions = this._instructions.slice();\n    o._commitIndex = this._commitIndex;\n    o._activeInstructions = this._activeInstructions.slice();\n    o._dirty = this._dirty;\n    o._storeIndex = this._storeIndex;\n    return o;\n  };\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n\n\n  p.toString = function () {\n    return \"[Graphics]\";\n  }; // tiny API:\n\n  /**\n   * Shortcut to moveTo.\n   * @method mt\n   * @param {Number} x The x coordinate the drawing point should move to.\n   * @param {Number} y The y coordinate the drawing point should move to.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls).\n   * @chainable\n   * @protected\n   **/\n\n\n  p.mt = p.moveTo;\n  /**\n   * Shortcut to lineTo.\n   * @method lt\n   * @param {Number} x The x coordinate the drawing point should draw to.\n   * @param {Number} y The y coordinate the drawing point should draw to.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n\n  p.lt = p.lineTo;\n  /**\n   * Shortcut to arcTo.\n   * @method at\n   * @param {Number} x1\n   * @param {Number} y1\n   * @param {Number} x2\n   * @param {Number} y2\n   * @param {Number} radius\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n\n  p.at = p.arcTo;\n  /**\n   * Shortcut to bezierCurveTo.\n   * @method bt\n   * @param {Number} cp1x\n   * @param {Number} cp1y\n   * @param {Number} cp2x\n   * @param {Number} cp2y\n   * @param {Number} x\n   * @param {Number} y\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n\n  p.bt = p.bezierCurveTo;\n  /**\n   * Shortcut to quadraticCurveTo / curveTo.\n   * @method qt\n   * @param {Number} cpx\n   * @param {Number} cpy\n   * @param {Number} x\n   * @param {Number} y\n   * @protected\n   * @chainable\n   **/\n\n  p.qt = p.quadraticCurveTo;\n  /**\n   * Shortcut to arc.\n   * @method a\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} radius\n   * @param {Number} startAngle Measured in radians.\n   * @param {Number} endAngle Measured in radians.\n   * @param {Boolean} anticlockwise\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @protected\n   * @chainable\n   **/\n\n  p.a = p.arc;\n  /**\n   * Shortcut to rect.\n   * @method r\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} w Width of the rectangle\n   * @param {Number} h Height of the rectangle\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n\n  p.r = p.rect;\n  /**\n   * Shortcut to closePath.\n   * @method cp\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n\n  p.cp = p.closePath;\n  /**\n   * Shortcut to clear.\n   * @method c\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n\n  p.c = p.clear;\n  /**\n   * Shortcut to beginFill.\n   * @method f\n   * @param {String} color A CSS compatible color value (ex. \"red\", \"#FF0000\", or \"rgba(255,0,0,0.5)\"). Setting to\n   * null will result in no fill.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n\n  p.f = p.beginFill;\n  /**\n   * Shortcut to beginLinearGradientFill.\n   * @method lf\n   * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define a gradient\n   * drawing from red to blue.\n   * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1, 0.9] would draw\n   * the first color to 10% then interpolating to the second color at 90%.\n   * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n   * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n   * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n   * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n\n  p.lf = p.beginLinearGradientFill;\n  /**\n   * Shortcut to beginRadialGradientFill.\n   * @method rf\n   * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n   * a gradient drawing from red to blue.\n   * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n   * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n   * @param {Number} x0 Center position of the inner circle that defines the gradient.\n   * @param {Number} y0 Center position of the inner circle that defines the gradient.\n   * @param {Number} r0 Radius of the inner circle that defines the gradient.\n   * @param {Number} x1 Center position of the outer circle that defines the gradient.\n   * @param {Number} y1 Center position of the outer circle that defines the gradient.\n   * @param {Number} r1 Radius of the outer circle that defines the gradient.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n\n  p.rf = p.beginRadialGradientFill;\n  /**\n   * Shortcut to beginBitmapFill.\n   * @method bf\n   * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n   * as the pattern.\n   * @param {String} repetition Optional. Indicates whether to repeat the image in the fill area. One of \"repeat\",\n   * \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\". Note that Firefox does not support \"repeat-x\" or\n   * \"repeat-y\" (latest tests were in FF 20.0), and will default to \"repeat\".\n   * @param {Matrix2D} matrix Optional. Specifies a transformation matrix for the bitmap fill. This transformation\n   * will be applied relative to the parent transform.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n\n  p.bf = p.beginBitmapFill;\n  /**\n   * Shortcut to endFill.\n   * @method ef\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n\n  p.ef = p.endFill;\n  /**\n   * Shortcut to setStrokeStyle.\n   * @method ss\n   * @param {Number} thickness The width of the stroke.\n   * @param {String | Number} [caps=0] Indicates the type of caps to use at the end of lines. One of butt,\n   * round, or square. Defaults to \"butt\". Also accepts the values 0 (butt), 1 (round), and 2 (square) for use with\n   * the tiny API.\n   * @param {String | Number} [joints=0] Specifies the type of joints that should be used where two lines meet.\n   * One of bevel, round, or miter. Defaults to \"miter\". Also accepts the values 0 (miter), 1 (round), and 2 (bevel)\n   * for use with the tiny API.\n   * @param {Number} [miterLimit=10] If joints is set to \"miter\", then you can specify a miter limit ratio which\n   * controls at what point a mitered joint will be clipped.\n   * @param {Boolean} [ignoreScale=false] If true, the stroke will be drawn at the specified thickness regardless\n   * of active transformations.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n\n  p.ss = p.setStrokeStyle;\n  /**\n   * Shortcut to setStrokeDash.\n   * @method sd\n   * @param {Array} [segments] An array specifying the dash pattern, alternating between line and gap.\n   * For example, [20,10] would create a pattern of 20 pixel lines with 10 pixel gaps between them.\n   * Passing null or an empty array will clear any existing dash.\n   * @param {Number} [offset=0] The offset of the dash pattern. For example, you could increment this value to create a \"marching ants\" effect.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n\n  p.sd = p.setStrokeDash;\n  /**\n   * Shortcut to beginStroke.\n   * @method s\n   * @param {String} color A CSS compatible color value (ex. \"#FF0000\", \"red\", or \"rgba(255,0,0,0.5)\"). Setting to\n   * null will result in no stroke.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n\n  p.s = p.beginStroke;\n  /**\n   * Shortcut to beginLinearGradientStroke.\n   * @method ls\n   * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n   * a gradient drawing from red to blue.\n   * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n   * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n   * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n   * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n   * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n   * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n\n  p.ls = p.beginLinearGradientStroke;\n  /**\n   * Shortcut to beginRadialGradientStroke.\n   * @method rs\n   * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n   * a gradient drawing from red to blue.\n   * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n   * 0.9] would draw the first color to 10% then interpolating to the second color at 90%, then draw the second color\n   * to 100%.\n   * @param {Number} x0 Center position of the inner circle that defines the gradient.\n   * @param {Number} y0 Center position of the inner circle that defines the gradient.\n   * @param {Number} r0 Radius of the inner circle that defines the gradient.\n   * @param {Number} x1 Center position of the outer circle that defines the gradient.\n   * @param {Number} y1 Center position of the outer circle that defines the gradient.\n   * @param {Number} r1 Radius of the outer circle that defines the gradient.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n\n  p.rs = p.beginRadialGradientStroke;\n  /**\n   * Shortcut to beginBitmapStroke.\n   * @method bs\n   * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n   * as the pattern.\n   * @param {String} [repetition=repeat] Optional. Indicates whether to repeat the image in the fill area. One of\n   * \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\".\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n\n  p.bs = p.beginBitmapStroke;\n  /**\n   * Shortcut to endStroke.\n   * @method es\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n\n  p.es = p.endStroke;\n  /**\n   * Shortcut to drawRect.\n   * @method dr\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} w Width of the rectangle\n   * @param {Number} h Height of the rectangle\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n\n  p.dr = p.drawRect;\n  /**\n   * Shortcut to drawRoundRect.\n   * @method rr\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} w\n   * @param {Number} h\n   * @param {Number} radius Corner radius.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n\n  p.rr = p.drawRoundRect;\n  /**\n   * Shortcut to drawRoundRectComplex.\n   * @method rc\n   * @param {Number} x The horizontal coordinate to draw the round rect.\n   * @param {Number} y The vertical coordinate to draw the round rect.\n   * @param {Number} w The width of the round rect.\n   * @param {Number} h The height of the round rect.\n   * @param {Number} radiusTL Top left corner radius.\n   * @param {Number} radiusTR Top right corner radius.\n   * @param {Number} radiusBR Bottom right corner radius.\n   * @param {Number} radiusBL Bottom left corner radius.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n\n  p.rc = p.drawRoundRectComplex;\n  /**\n   * Shortcut to drawCircle.\n   * @method dc\n   * @param {Number} x x coordinate center point of circle.\n   * @param {Number} y y coordinate center point of circle.\n   * @param {Number} radius Radius of circle.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n\n  p.dc = p.drawCircle;\n  /**\n   * Shortcut to drawEllipse.\n   * @method de\n   * @param {Number} x The left coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\n   * which draws from center.\n   * @param {Number} y The top coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\n   * which draws from the center.\n   * @param {Number} w The height (horizontal diameter) of the ellipse. The horizontal radius will be half of this\n   * number.\n   * @param {Number} h The width (vertical diameter) of the ellipse. The vertical radius will be half of this number.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n\n  p.de = p.drawEllipse;\n  /**\n   * Shortcut to drawPolyStar.\n   * @method dp\n   * @param {Number} x Position of the center of the shape.\n   * @param {Number} y Position of the center of the shape.\n   * @param {Number} radius The outer radius of the shape.\n   * @param {Number} sides The number of points on the star or sides on the polygon.\n   * @param {Number} pointSize The depth or \"pointy-ness\" of the star points. A pointSize of 0 will draw a regular\n   * polygon (no points), a pointSize of 1 will draw nothing because the points are infinitely pointy.\n   * @param {Number} angle The angle of the first point / corner. For example a value of 0 will draw the first point\n   * directly to the right of the center.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n\n  p.dp = p.drawPolyStar;\n  /**\n   * Shortcut to decodePath.\n   * @method p\n   * @param {String} str The path string to decode.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n\n  p.p = p.decodePath; // private methods:\n\n  /**\n   * @method _updateInstructions\n   * @param commit\n   * @protected\n   **/\n\n  p._updateInstructions = function (commit) {\n    var instr = this._instructions,\n        active = this._activeInstructions,\n        commitIndex = this._commitIndex;\n\n    if (this._dirty && active.length) {\n      instr.length = commitIndex; // remove old, uncommitted commands\n\n      instr.push(Graphics.beginCmd);\n      var l = active.length,\n          ll = instr.length;\n      instr.length = ll + l;\n\n      for (var i = 0; i < l; i++) {\n        instr[i + ll] = active[i];\n      }\n\n      if (this._fill) {\n        instr.push(this._fill);\n      }\n\n      if (this._stroke) {\n        // doesn't need to be re-applied if it hasn't changed.\n        if (this._strokeDash !== this._oldStrokeDash) {\n          instr.push(this._strokeDash);\n        }\n\n        if (this._strokeStyle !== this._oldStrokeStyle) {\n          instr.push(this._strokeStyle);\n        }\n\n        if (commit) {\n          this._oldStrokeStyle = this._strokeStyle;\n          this._oldStrokeDash = this._strokeDash;\n        }\n\n        instr.push(this._stroke);\n      }\n\n      this._dirty = false;\n    }\n\n    if (commit) {\n      active.length = 0;\n      this._commitIndex = instr.length;\n    }\n  };\n  /**\n   * @method _setFill\n   * @param fill\n   * @protected\n   **/\n\n\n  p._setFill = function (fill) {\n    this._updateInstructions(true);\n\n    this.command = this._fill = fill;\n    return this;\n  };\n  /**\n   * @method _setStroke\n   * @param stroke\n   * @protected\n   **/\n\n\n  p._setStroke = function (stroke) {\n    this._updateInstructions(true);\n\n    if (this.command = this._stroke = stroke) {\n      stroke.ignoreScale = this._strokeIgnoreScale;\n    }\n\n    return this;\n  }; // Command Objects:\n\n  /**\n   * @namespace Graphics\n   */\n\n  /**\n   * Graphics command object. See {{#crossLink \"Graphics/lineTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information. See {{#crossLink \"Graphics\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n   * @class LineTo\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   **/\n\n  /**\n   * @property x\n   * @type Number\n   */\n\n  /**\n   * @property y\n   * @type Number\n   */\n\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @method exec\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n\n\n  (G.LineTo = function (x, y) {\n    this.x = x;\n    this.y = y;\n  }).prototype.exec = function (ctx) {\n    ctx.lineTo(this.x, this.y);\n  };\n  /**\n   * Graphics command object. See {{#crossLink \"Graphics/moveTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n   * @class MoveTo\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   **/\n\n  /**\n   * @property x\n   * @type Number\n   */\n\n  /**\n   * @property y\n   * @type Number\n   */\n\n  /**\n   * @method exec\n   * @param {CanvasRenderingContext2D} ctx\n   */\n\n\n  (G.MoveTo = function (x, y) {\n    this.x = x;\n    this.y = y;\n  }).prototype.exec = function (ctx) {\n    ctx.moveTo(this.x, this.y);\n  };\n  /**\n   * Graphics command object. See {{#crossLink \"Graphics/arcTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n   * @class ArcTo\n   * @constructor\n   * @param {Number} x1\n   * @param {Number} y1\n   * @param {Number} x2\n   * @param {Number} y2\n   * @param {Number} radius\n   **/\n\n  /**\n   * @property x1\n   * @type Number\n   */\n\n  /**\n   * @property y1\n   * @type Number\n   */\n\n  /**\n   * @property x2\n   * @type Number\n   */\n\n  /**\n   * @property y2\n   * @type Number\n   */\n\n  /**\n   * @property radius\n   * @type Number\n   */\n\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @method exec\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n\n\n  (G.ArcTo = function (x1, y1, x2, y2, radius) {\n    this.x1 = x1;\n    this.y1 = y1;\n    this.x2 = x2;\n    this.y2 = y2;\n    this.radius = radius;\n  }).prototype.exec = function (ctx) {\n    ctx.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius);\n  };\n  /**\n   * Graphics command object. See {{#crossLink \"Graphics/arc\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n   * @class Arc\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} radius\n   * @param {Number} startAngle\n   * @param {Number} endAngle\n   * @param {Number} anticlockwise\n   **/\n\n  /**\n   * @property x\n   * @type Number\n   */\n\n  /**\n   * @property y\n   * @type Number\n   */\n\n  /**\n   * @property radius\n   * @type Number\n   */\n\n  /**\n   * @property startAngle\n   * @type Number\n   */\n\n  /**\n   * @property endAngle\n   * @type Number\n   */\n\n  /**\n   * @property anticlockwise\n   * @type Number\n   */\n\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @method exec\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n\n\n  (G.Arc = function (x, y, radius, startAngle, endAngle, anticlockwise) {\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n    this.startAngle = startAngle;\n    this.endAngle = endAngle;\n    this.anticlockwise = !!anticlockwise;\n  }).prototype.exec = function (ctx) {\n    ctx.arc(this.x, this.y, this.radius, this.startAngle, this.endAngle, this.anticlockwise);\n  };\n  /**\n   * Graphics command object. See {{#crossLink \"Graphics/quadraticCurveTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n   * @class QuadraticCurveTo\n   * @constructor\n   * @param {Number} cpx\n   * @param {Number} cpy\n   * @param {Number} x\n   * @param {Number} y\n   **/\n\n  /**\n   * @property cpx\n   * @type Number\n   */\n\n  /**\n   * @property cpy\n   * @type Number\n   */\n\n  /**\n   * @property x\n   * @type Number\n   */\n\n  /**\n   * @property y\n   * @type Number\n   */\n\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @method exec\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n\n\n  (G.QuadraticCurveTo = function (cpx, cpy, x, y) {\n    this.cpx = cpx;\n    this.cpy = cpy;\n    this.x = x;\n    this.y = y;\n  }).prototype.exec = function (ctx) {\n    ctx.quadraticCurveTo(this.cpx, this.cpy, this.x, this.y);\n  };\n  /**\n   * Graphics command object. See {{#crossLink \"Graphics/bezierCurveTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n   * @class BezierCurveTo\n   * @constructor\n   * @param {Number} cp1x\n   * @param {Number} cp1y\n   * @param {Number} cp2x\n   * @param {Number} cp2y\n   * @param {Number} x\n   * @param {Number} y\n   **/\n\n  /**\n   * @property cp1x\n   * @type Number\n   */\n\n  /**\n   * @property cp1y\n   * @type Number\n   */\n\n  /**\n   * @property cp2x\n   * @type Number\n   */\n\n  /**\n   * @property cp2y\n   * @type Number\n   */\n\n  /**\n   * @property x\n   * @type Number\n   */\n\n  /**\n   * @property y\n   * @type Number\n   */\n\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @method exec\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n\n\n  (G.BezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {\n    this.cp1x = cp1x;\n    this.cp1y = cp1y;\n    this.cp2x = cp2x;\n    this.cp2y = cp2y;\n    this.x = x;\n    this.y = y;\n  }).prototype.exec = function (ctx) {\n    ctx.bezierCurveTo(this.cp1x, this.cp1y, this.cp2x, this.cp2y, this.x, this.y);\n  };\n  /**\n   * Graphics command object. See {{#crossLink \"Graphics/rect\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n   * @class Rect\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} w\n   * @param {Number} h\n   **/\n\n  /**\n   * @property x\n   * @type Number\n   */\n\n  /**\n   * @property y\n   * @type Number\n   */\n\n  /**\n   * @property w\n   * @type Number\n   */\n\n  /**\n   * @property h\n   * @type Number\n   */\n\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @method exec\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n\n\n  (G.Rect = function (x, y, w, h) {\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n  }).prototype.exec = function (ctx) {\n    ctx.rect(this.x, this.y, this.w, this.h);\n  };\n  /**\n   * Graphics command object. See {{#crossLink \"Graphics/closePath\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n   * @class ClosePath\n   * @constructor\n   **/\n\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @method exec\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n\n\n  (G.ClosePath = function () {}).prototype.exec = function (ctx) {\n    ctx.closePath();\n  };\n  /**\n   * Graphics command object to begin a new path. See {{#crossLink \"Graphics\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n   * @class BeginPath\n   * @constructor\n   **/\n\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @method exec\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n\n\n  (G.BeginPath = function () {}).prototype.exec = function (ctx) {\n    ctx.beginPath();\n  };\n  /**\n   * Graphics command object. See {{#crossLink \"Graphics/beginFill\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n   * @class Fill\n   * @constructor\n   * @param {Object} style A valid Context2D fillStyle.\n   * @param {Matrix2D} matrix\n   **/\n\n  /**\n   * A valid Context2D fillStyle.\n   * @property style\n   * @type Object\n   */\n\n  /**\n   * @property matrix\n   * @type Matrix2D\n   */\n\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @method exec\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n\n\n  p = (G.Fill = function (style, matrix) {\n    this.style = style;\n    this.matrix = matrix;\n  }).prototype;\n\n  p.exec = function (ctx) {\n    if (!this.style) {\n      return;\n    }\n\n    ctx.fillStyle = this.style;\n    var mtx = this.matrix;\n\n    if (mtx) {\n      ctx.save();\n      ctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\n    }\n\n    ctx.fill();\n\n    if (mtx) {\n      ctx.restore();\n    }\n  };\n  /**\n   * Creates a linear gradient style and assigns it to {{#crossLink \"Fill/style:property\"}}{{/crossLink}}.\n   * See {{#crossLink \"Graphics/beginLinearGradientFill\"}}{{/crossLink}} for more information.\n   * @method linearGradient\n   * @param {Array} colors\n   *\n   * @param {Array} ratios\n   * @param {Number} x0\n   * @param {Number} y0\n   * @param {Number} x1\n   * @param {Number} y1\n   * @return {Fill} Returns this Fill object for chaining or assignment.\n   */\n\n\n  p.linearGradient = function (colors, ratios, x0, y0, x1, y1) {\n    var o = this.style = Graphics._ctx.createLinearGradient(x0, y0, x1, y1);\n\n    for (var i = 0, l = colors.length; i < l; i++) {\n      o.addColorStop(ratios[i], colors[i]);\n    }\n\n    o.props = {\n      colors: colors,\n      ratios: ratios,\n      x0: x0,\n      y0: y0,\n      x1: x1,\n      y1: y1,\n      type: \"linear\"\n    };\n    return this;\n  };\n  /**\n   * Creates a radial gradient style and assigns it to {{#crossLink \"Fill/style:property\"}}{{/crossLink}}.\n   * See {{#crossLink \"Graphics/beginRadialGradientFill\"}}{{/crossLink}} for more information.\n   * @method radialGradient\n   * @param {Array} colors\n   * @param {Array} ratios\n   * @param {Number} x0\n   * @param {Number} y0\n   * @param {Number} r0\n   * @param {Number} x1\n   * @param {Number} y1\n   * @param {Number} r1\n   * @return {Fill} Returns this Fill object for chaining or assignment.\n   */\n\n\n  p.radialGradient = function (colors, ratios, x0, y0, r0, x1, y1, r1) {\n    var o = this.style = Graphics._ctx.createRadialGradient(x0, y0, r0, x1, y1, r1);\n\n    for (var i = 0, l = colors.length; i < l; i++) {\n      o.addColorStop(ratios[i], colors[i]);\n    }\n\n    o.props = {\n      colors: colors,\n      ratios: ratios,\n      x0: x0,\n      y0: y0,\n      r0: r0,\n      x1: x1,\n      y1: y1,\n      r1: r1,\n      type: \"radial\"\n    };\n    return this;\n  };\n  /**\n   * Creates a bitmap fill style and assigns it to the {{#crossLink \"Fill/style:property\"}}{{/crossLink}}.\n   * See {{#crossLink \"Graphics/beginBitmapFill\"}}{{/crossLink}} for more information.\n   * @method bitmap\n   * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image  Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n   * @param {String} [repetition] One of: repeat, repeat-x, repeat-y, or no-repeat.\n   * @return {Fill} Returns this Fill object for chaining or assignment.\n   */\n\n\n  p.bitmap = function (image, repetition) {\n    if (image.naturalWidth || image.getContext || image.readyState >= 2) {\n      var o = this.style = Graphics._ctx.createPattern(image, repetition || \"\");\n\n      o.props = {\n        image: image,\n        repetition: repetition,\n        type: \"bitmap\"\n      };\n    }\n\n    return this;\n  };\n\n  p.path = false;\n  /**\n   * Graphics command object. See {{#crossLink \"Graphics/beginStroke\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n   * @class Stroke\n   * @constructor\n   * @param {Object} style A valid Context2D fillStyle.\n   * @param {Boolean} ignoreScale\n   **/\n\n  /**\n   * A valid Context2D strokeStyle.\n   * @property style\n   * @type Object\n   */\n\n  /**\n   * @property ignoreScale\n   * @type Boolean\n   */\n\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @method exec\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n\n  p = (G.Stroke = function (style, ignoreScale) {\n    this.style = style;\n    this.ignoreScale = ignoreScale;\n  }).prototype;\n\n  p.exec = function (ctx) {\n    if (!this.style) {\n      return;\n    }\n\n    ctx.strokeStyle = this.style;\n\n    if (this.ignoreScale) {\n      ctx.save();\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n    }\n\n    ctx.stroke();\n\n    if (this.ignoreScale) {\n      ctx.restore();\n    }\n  };\n  /**\n   * Creates a linear gradient style and assigns it to {{#crossLink \"Stroke/style:property\"}}{{/crossLink}}.\n   * See {{#crossLink \"Graphics/beginLinearGradientStroke\"}}{{/crossLink}} for more information.\n   * @method linearGradient\n   * @param {Array} colors\n   * @param {Array} ratios\n   * @param {Number} x0\n   * @param {Number} y0\n   * @param {Number} x1\n   * @param {Number} y1\n   * @return {Fill} Returns this Stroke object for chaining or assignment.\n   */\n\n\n  p.linearGradient = G.Fill.prototype.linearGradient;\n  /**\n   * Creates a radial gradient style and assigns it to {{#crossLink \"Stroke/style:property\"}}{{/crossLink}}.\n   * See {{#crossLink \"Graphics/beginRadialGradientStroke\"}}{{/crossLink}} for more information.\n   * @method radialGradient\n   * @param {Array} colors\n   * @param {Array} ratios\n   * @param {Number} x0\n   * @param {Number} y0\n   * @param {Number} r0\n   * @param {Number} x1\n   * @param {Number} y1\n   * @param {Number} r1\n   * @return {Fill} Returns this Stroke object for chaining or assignment.\n   */\n\n  p.radialGradient = G.Fill.prototype.radialGradient;\n  /**\n   * Creates a bitmap fill style and assigns it to {{#crossLink \"Stroke/style:property\"}}{{/crossLink}}.\n   * See {{#crossLink \"Graphics/beginBitmapStroke\"}}{{/crossLink}} for more information.\n   * @method bitmap\n   * @param {HTMLImageElement} image\n   * @param {String} [repetition] One of: repeat, repeat-x, repeat-y, or no-repeat.\n   * @return {Fill} Returns this Stroke object for chaining or assignment.\n   */\n\n  p.bitmap = G.Fill.prototype.bitmap;\n  p.path = false;\n  /**\n   * Graphics command object. See {{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n   * @class StrokeStyle\n   * @constructor\n   * @param {Number} width\n   * @param {String} [caps=butt]\n   * @param {String} [joints=miter]\n   * @param {Number} [miterLimit=10]\n   * @param {Boolean} [ignoreScale=false]\n   **/\n\n  /**\n   * @property width\n   * @type Number\n   */\n\n  /**\n   * One of: butt, round, square\n   * @property caps\n   * @type String\n   */\n\n  /**\n   * One of: round, bevel, miter\n   * @property joints\n   * @type String\n   */\n\n  /**\n   * @property miterLimit\n   * @type Number\n   */\n\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @method exec\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n\n  p = (G.StrokeStyle = function (width, caps, joints, miterLimit, ignoreScale) {\n    this.width = width;\n    this.caps = caps;\n    this.joints = joints;\n    this.miterLimit = miterLimit;\n    this.ignoreScale = ignoreScale;\n  }).prototype;\n\n  p.exec = function (ctx) {\n    ctx.lineWidth = this.width == null ? \"1\" : this.width;\n    ctx.lineCap = this.caps == null ? \"butt\" : isNaN(this.caps) ? this.caps : Graphics.STROKE_CAPS_MAP[this.caps];\n    ctx.lineJoin = this.joints == null ? \"miter\" : isNaN(this.joints) ? this.joints : Graphics.STROKE_JOINTS_MAP[this.joints];\n    ctx.miterLimit = this.miterLimit == null ? \"10\" : this.miterLimit;\n    ctx.ignoreScale = this.ignoreScale == null ? false : this.ignoreScale;\n  };\n\n  p.path = false;\n  /**\n   * Graphics command object. See {{#crossLink \"Graphics/setStrokeDash\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n   * @class StrokeDash\n   * @constructor\n   * @param {Array} [segments]\n   * @param {Number} [offset=0]\n   **/\n\n  /**\n   * @property segments\n   * @type Array\n   */\n\n  /**\n   * @property offset\n   * @type Number\n   */\n\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @method exec\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n\n  (G.StrokeDash = function (segments, offset) {\n    this.segments = segments;\n    this.offset = offset || 0;\n  }).prototype.exec = function (ctx) {\n    if (ctx.setLineDash) {\n      // feature detection.\n      ctx.setLineDash(this.segments || G.StrokeDash.EMPTY_SEGMENTS); // instead of [] to reduce churn.\n\n      ctx.lineDashOffset = this.offset || 0;\n    }\n  };\n  /**\n   * The default value for segments (ie. no dash).\n   * @property EMPTY_SEGMENTS\n   * @static\n   * @final\n   * @readonly\n   * @protected\n   * @type {Array}\n   **/\n\n\n  G.StrokeDash.EMPTY_SEGMENTS = [];\n  /**\n   * Graphics command object. See {{#crossLink \"Graphics/drawRoundRectComplex\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n   * @class RoundRect\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} w\n   * @param {Number} h\n   * @param {Number} radiusTL\n   * @param {Number} radiusTR\n   * @param {Number} radiusBR\n   * @param {Number} radiusBL\n   **/\n\n  /**\n   * @property x\n   * @type Number\n   */\n\n  /**\n   * @property y\n   * @type Number\n   */\n\n  /**\n   * @property w\n   * @type Number\n   */\n\n  /**\n   * @property h\n   * @type Number\n   */\n\n  /**\n   * @property radiusTL\n   * @type Number\n   */\n\n  /**\n   * @property radiusTR\n   * @type Number\n   */\n\n  /**\n   * @property radiusBR\n   * @type Number\n   */\n\n  /**\n   * @property radiusBL\n   * @type Number\n   */\n\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @method exec\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n\n  (G.RoundRect = function (x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL) {\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n    this.radiusTL = radiusTL;\n    this.radiusTR = radiusTR;\n    this.radiusBR = radiusBR;\n    this.radiusBL = radiusBL;\n  }).prototype.exec = function (ctx) {\n    var max = (w < h ? w : h) / 2;\n    var mTL = 0,\n        mTR = 0,\n        mBR = 0,\n        mBL = 0;\n    var x = this.x,\n        y = this.y,\n        w = this.w,\n        h = this.h;\n    var rTL = this.radiusTL,\n        rTR = this.radiusTR,\n        rBR = this.radiusBR,\n        rBL = this.radiusBL;\n\n    if (rTL < 0) {\n      rTL *= mTL = -1;\n    }\n\n    if (rTL > max) {\n      rTL = max;\n    }\n\n    if (rTR < 0) {\n      rTR *= mTR = -1;\n    }\n\n    if (rTR > max) {\n      rTR = max;\n    }\n\n    if (rBR < 0) {\n      rBR *= mBR = -1;\n    }\n\n    if (rBR > max) {\n      rBR = max;\n    }\n\n    if (rBL < 0) {\n      rBL *= mBL = -1;\n    }\n\n    if (rBL > max) {\n      rBL = max;\n    }\n\n    ctx.moveTo(x + w - rTR, y);\n    ctx.arcTo(x + w + rTR * mTR, y - rTR * mTR, x + w, y + rTR, rTR);\n    ctx.lineTo(x + w, y + h - rBR);\n    ctx.arcTo(x + w + rBR * mBR, y + h + rBR * mBR, x + w - rBR, y + h, rBR);\n    ctx.lineTo(x + rBL, y + h);\n    ctx.arcTo(x - rBL * mBL, y + h + rBL * mBL, x, y + h - rBL, rBL);\n    ctx.lineTo(x, y + rTL);\n    ctx.arcTo(x - rTL * mTL, y - rTL * mTL, x + rTL, y, rTL);\n    ctx.closePath();\n  };\n  /**\n   * Graphics command object. See {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n   * @class Circle\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} radius\n   **/\n\n  /**\n   * @property x\n   * @type Number\n   */\n\n  /**\n   * @property y\n   * @type Number\n   */\n\n  /**\n   * @property radius\n   * @type Number\n   */\n\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @method exec\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n\n\n  (G.Circle = function (x, y, radius) {\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n  }).prototype.exec = function (ctx) {\n    ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\n  };\n  /**\n   * Graphics command object. See {{#crossLink \"Graphics/drawEllipse\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n   * @class Ellipse\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} w\n   * @param {Number} h\n   **/\n\n  /**\n   * @property x\n   * @type Number\n   */\n\n  /**\n   * @property y\n   * @type Number\n   */\n\n  /**\n   * @property w\n   * @type Number\n   */\n\n  /**\n   * @property h\n   * @type Number\n   */\n\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @method exec\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n\n\n  (G.Ellipse = function (x, y, w, h) {\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n  }).prototype.exec = function (ctx) {\n    var x = this.x,\n        y = this.y;\n    var w = this.w,\n        h = this.h;\n    var k = 0.5522848;\n    var ox = w / 2 * k;\n    var oy = h / 2 * k;\n    var xe = x + w;\n    var ye = y + h;\n    var xm = x + w / 2;\n    var ym = y + h / 2;\n    ctx.moveTo(x, ym);\n    ctx.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n    ctx.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n    ctx.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n    ctx.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n  };\n  /**\n   * Graphics command object. See {{#crossLink \"Graphics/drawPolyStar\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n   * @class PolyStar\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} radius\n   * @param {Number} sides\n   * @param {Number} pointSize\n   * @param {Number} angle\n   **/\n\n  /**\n   * @property x\n   * @type Number\n   */\n\n  /**\n   * @property y\n   * @type Number\n   */\n\n  /**\n   * @property radius\n   * @type Number\n   */\n\n  /**\n   * @property sides\n   * @type Number\n   */\n\n  /**\n   * @property pointSize\n   * @type Number\n   */\n\n  /**\n   * @property angle\n   * @type Number\n   */\n\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @method exec\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n\n\n  (G.PolyStar = function (x, y, radius, sides, pointSize, angle) {\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n    this.sides = sides;\n    this.pointSize = pointSize;\n    this.angle = angle;\n  }).prototype.exec = function (ctx) {\n    var x = this.x,\n        y = this.y;\n    var radius = this.radius;\n    var angle = (this.angle || 0) / 180 * Math.PI;\n    var sides = this.sides;\n    var ps = 1 - (this.pointSize || 0);\n    var a = Math.PI / sides;\n    ctx.moveTo(x + Math.cos(angle) * radius, y + Math.sin(angle) * radius);\n\n    for (var i = 0; i < sides; i++) {\n      angle += a;\n\n      if (ps != 1) {\n        ctx.lineTo(x + Math.cos(angle) * radius * ps, y + Math.sin(angle) * radius * ps);\n      }\n\n      angle += a;\n      ctx.lineTo(x + Math.cos(angle) * radius, y + Math.sin(angle) * radius);\n    }\n\n    ctx.closePath();\n  }; // docced above.\n\n\n  Graphics.beginCmd = new G.BeginPath(); // so we don't have to instantiate multiple instances.\n\n  createjs.Graphics = Graphics;\n})(); //##############################################################################\n// DisplayObject.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor:\n\n  /**\n   * DisplayObject is an abstract class that should not be constructed directly. Instead construct subclasses such as\n   * {{#crossLink \"Container\"}}{{/crossLink}}, {{#crossLink \"Bitmap\"}}{{/crossLink}}, and {{#crossLink \"Shape\"}}{{/crossLink}}.\n   * DisplayObject is the base class for all display classes in the EaselJS library. It defines the core properties and\n   * methods that are shared between all display objects, such as transformation properties (x, y, scaleX, scaleY, etc),\n   * caching, and mouse handlers.\n   * @class DisplayObject\n   * @extends EventDispatcher\n   * @constructor\n   **/\n\n  function DisplayObject() {\n    this.EventDispatcher_constructor(); // public properties:\n\n    /**\n     * The alpha (transparency) for this display object. 0 is fully transparent, 1 is fully opaque.\n     * @property alpha\n     * @type {Number}\n     * @default 1\n     **/\n\n    this.alpha = 1;\n    /**\n     * If a cache is active, this returns the canvas that holds the image of this display object. See {{#crossLink \"DisplayObject/cache:method\"}}{{/crossLink}}\n     * for more information. Use this to display the result of a cache. This will be a HTMLCanvasElement unless special cache rules have been deliberately enabled for this cache.\n     * @property cacheCanvas\n     * @type {HTMLCanvasElement | Object}\n     * @default null\n     * @readonly\n     **/\n\n    this.cacheCanvas = null;\n    /**\n     * If a cache has been made, this returns the class that is managing the cacheCanvas and its properties. See {{#crossLink \"BitmapCache\"}}{{/crossLink}}\n     * for more information. Use this to control, inspect, and change the cache. In special circumstances this may be a modified or subclassed BitmapCache.\n     * @property bitmapCache\n     * @type {BitmapCache}\n     * @default null\n     * @readonly\n     **/\n\n    this.bitmapCache = null;\n    /**\n     * Unique ID for this display object. Makes display objects easier for some uses.\n     * @property id\n     * @type {Number}\n     * @default -1\n     **/\n\n    this.id = createjs.UID.get();\n    /**\n     * Indicates whether to include this object when running mouse interactions. Setting this to `false` for children\n     * of a {{#crossLink \"Container\"}}{{/crossLink}} will cause events on the Container to not fire when that child is\n     * clicked. Setting this property to `false` does not prevent the {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}}\n     * method from returning the child.\n     *\n     * <strong>Note:</strong> In EaselJS 0.7.0, the mouseEnabled property will not work properly with nested Containers. Please\n     * check out the latest NEXT version in <a href=\"https://github.com/CreateJS/EaselJS/tree/master/lib\">GitHub</a> for an updated version with this issue resolved. The fix will be\n     * provided in the next release of EaselJS.\n     * @property mouseEnabled\n     * @type {Boolean}\n     * @default true\n     **/\n\n    this.mouseEnabled = true;\n    /**\n     * If false, the tick will not run on this display object (or its children). This can provide some performance benefits.\n     * In addition to preventing the \"tick\" event from being dispatched, it will also prevent tick related updates\n     * on some display objects (ex. Sprite & MovieClip frame advancing, and DOMElement display properties).\n     * @property tickEnabled\n     * @type Boolean\n     * @default true\n     **/\n\n    this.tickEnabled = true;\n    /**\n     * An optional name for this display object. Included in {{#crossLink \"DisplayObject/toString\"}}{{/crossLink}} . Useful for\n     * debugging.\n     * @property name\n     * @type {String}\n     * @default null\n     **/\n\n    this.name = null;\n    /**\n     * A reference to the {{#crossLink \"Container\"}}{{/crossLink}} or {{#crossLink \"Stage\"}}{{/crossLink}} object that\n     * contains this display object, or null if it has not been added\n     * to one.\n     * @property parent\n     * @final\n     * @type {Container}\n     * @default null\n     * @readonly\n     **/\n\n    this.parent = null;\n    /**\n     * The left offset for this display object's registration point. For example, to make a 100x100px Bitmap rotate\n     * around its center, you would set regX and {{#crossLink \"DisplayObject/regY:property\"}}{{/crossLink}} to 50.\n     * Cached object's registration points should be set based on pre-cache conditions, not cached size.\n     * @property regX\n     * @type {Number}\n     * @default 0\n     **/\n\n    this.regX = 0;\n    /**\n     * The y offset for this display object's registration point. For example, to make a 100x100px Bitmap rotate around\n     * its center, you would set {{#crossLink \"DisplayObject/regX:property\"}}{{/crossLink}} and regY to 50.\n     * Cached object's registration points should be set based on pre-cache conditions, not cached size.\n     * @property regY\n     * @type {Number}\n     * @default 0\n     **/\n\n    this.regY = 0;\n    /**\n     * The rotation in degrees for this display object.\n     * @property rotation\n     * @type {Number}\n     * @default 0\n     **/\n\n    this.rotation = 0;\n    /**\n     * The factor to stretch this display object horizontally. For example, setting scaleX to 2 will stretch the display\n     * object to twice its nominal width. To horizontally flip an object, set the scale to a negative number.\n     * @property scaleX\n     * @type {Number}\n     * @default 1\n     **/\n\n    this.scaleX = 1;\n    /**\n     * The factor to stretch this display object vertically. For example, setting scaleY to 0.5 will stretch the display\n     * object to half its nominal height. To vertically flip an object, set the scale to a negative number.\n     * @property scaleY\n     * @type {Number}\n     * @default 1\n     **/\n\n    this.scaleY = 1;\n    /**\n     * The factor to skew this display object horizontally.\n     * @property skewX\n     * @type {Number}\n     * @default 0\n     **/\n\n    this.skewX = 0;\n    /**\n     * The factor to skew this display object vertically.\n     * @property skewY\n     * @type {Number}\n     * @default 0\n     **/\n\n    this.skewY = 0;\n    /**\n     * A shadow object that defines the shadow to render on this display object. Set to `null` to remove a shadow. If\n     * null, this property is inherited from the parent container.\n     * @property shadow\n     * @type {Shadow}\n     * @default null\n     **/\n\n    this.shadow = null;\n    /**\n     * Indicates whether this display object should be rendered to the canvas and included when running the Stage\n     * {{#crossLink \"Stage/getObjectsUnderPoint\"}}{{/crossLink}} method.\n     * @property visible\n     * @type {Boolean}\n     * @default true\n     **/\n\n    this.visible = true;\n    /**\n     * The x (horizontal) position of the display object, relative to its parent.\n     * @property x\n     * @type {Number}\n     * @default 0\n     **/\n\n    this.x = 0;\n    /** The y (vertical) position of the display object, relative to its parent.\n     * @property y\n     * @type {Number}\n     * @default 0\n     **/\n\n    this.y = 0;\n    /**\n     * If set, defines the transformation for this display object, overriding all other transformation properties\n     * (x, y, rotation, scale, skew).\n     * @property transformMatrix\n     * @type {Matrix2D}\n     * @default null\n     **/\n\n    this.transformMatrix = null;\n    /**\n     * The composite operation indicates how the pixels of this display object will be composited with the elements\n     * behind it. If `null`, this property is inherited from the parent container. For more information, read the\n     * <a href=\"https://html.spec.whatwg.org/multipage/scripting.html#dom-context-2d-globalcompositeoperation\">\n     * whatwg spec on compositing</a>. For a list of supported compositeOperation value, visit\n     * <a href=\"https://drafts.fxtf.org/compositing/\">the W3C draft on Compositing and Blending</a>.\n     * @property compositeOperation\n     * @type {String}\n     * @default null\n     **/\n\n    this.compositeOperation = null;\n    /**\n     * Indicates whether the display object should be drawn to a whole pixel when\n     * {{#crossLink \"Stage/snapToPixelEnabled\"}}{{/crossLink}} is true. To enable/disable snapping on whole\n     * categories of display objects, set this value on the prototype (Ex. Text.prototype.snapToPixel = true).\n     * @property snapToPixel\n     * @type {Boolean}\n     * @default true\n     **/\n\n    this.snapToPixel = true;\n    /**\n     * An array of Filter objects to apply to this display object. Filters are only applied / updated when {{#crossLink \"cache\"}}{{/crossLink}}\n     * or {{#crossLink \"updateCache\"}}{{/crossLink}} is called on the display object, and only apply to the area that is\n     * cached.\n     * @property filters\n     * @type {Array}\n     * @default null\n     **/\n\n    this.filters = null;\n    /**\n     * A Shape instance that defines a vector mask (clipping path) for this display object.  The shape's transformation\n     * will be applied relative to the display object's parent coordinates (as if it were a child of the parent).\n     * @property mask\n     * @type {Shape}\n     * @default null\n     */\n\n    this.mask = null;\n    /**\n     * A display object that will be tested when checking mouse interactions or testing {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}}.\n     * The hit area will have its transformation applied relative to this display object's coordinate space (as though\n     * the hit test object were a child of this display object and relative to its regX/Y). The hitArea will be tested\n     * using only its own `alpha` value regardless of the alpha value on the target display object, or the target's\n     * ancestors (parents).\n     * \n     * If set on a {{#crossLink \"Container\"}}{{/crossLink}}, children of the Container will not receive mouse events.\n     * This is similar to setting {{#crossLink \"mouseChildren\"}}{{/crossLink}} to false.\n     *\n     * Note that hitArea is NOT currently used by the `hitTest()` method, nor is it supported for {{#crossLink \"Stage\"}}{{/crossLink}}.\n     * @property hitArea\n     * @type {DisplayObject}\n     * @default null\n     */\n\n    this.hitArea = null;\n    /**\n     * A CSS cursor (ex. \"pointer\", \"help\", \"text\", etc) that will be displayed when the user hovers over this display\n     * object. You must enable mouseover events using the {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}} method to\n     * use this property. Setting a non-null cursor on a Container will override the cursor set on its descendants.\n     * @property cursor\n     * @type {String}\n     * @default null\n     */\n\n    this.cursor = null; // private properties:\n\n    /**\n     * Moved to {{#crossLink \"BitmapCache\"}}{{/crossLink}}\n     * @property _cacheScale\n     * @protected\n     * @type {Number}\n     * @default 1\n     * @deprecated\n     **/\n\n    /**\n     * Moved to {{#crossLink \"BitmapCache\"}}{{/crossLink}}\n     * @property _cacheDataURLID\n     * @protected\n     * @type {Number}\n     * @default 0\n     * @deprecated\n     */\n\n    /**\n     * Moved to {{#crossLink \"BitmapCache\"}}{{/crossLink}}\n     * @property _cacheDataURL\n     * @protected\n     * @type {String}\n     * @default null\n     * @deprecated\n     */\n\n    /**\n     * @property _props\n     * @protected\n     * @type {DisplayObject}\n     * @default null\n     **/\n\n    this._props = new createjs.DisplayProps();\n    /**\n     * @property _rectangle\n     * @protected\n     * @type {Rectangle}\n     * @default null\n     **/\n\n    this._rectangle = new createjs.Rectangle();\n    /**\n     * @property _bounds\n     * @protected\n     * @type {Rectangle}\n     * @default null\n     **/\n\n    this._bounds = null;\n    /**\n     * Where StageGL should look for required display properties, matters only for leaf display objects. Containers\n     * or cached objects won't use this property, it's for native display of terminal elements.\n     * @property _webGLRenderStyle\n     * @protected\n     * @type {number}\n     * @default 0\n     */\n\n    this._webGLRenderStyle = DisplayObject._StageGL_NONE;\n  }\n\n  var p = createjs.extend(DisplayObject, createjs.EventDispatcher); // static properties:\n\n  /**\n   * Listing of mouse event names. Used in _hasMouseEventListener.\n   * @property _MOUSE_EVENTS\n   * @protected\n   * @static\n   * @type {Array}\n   **/\n\n  DisplayObject._MOUSE_EVENTS = [\"click\", \"dblclick\", \"mousedown\", \"mouseout\", \"mouseover\", \"pressmove\", \"pressup\", \"rollout\", \"rollover\"];\n  /**\n   * Suppresses errors generated when using features like hitTest, mouse events, and {{#crossLink \"getObjectsUnderPoint\"}}{{/crossLink}}\n   * with cross domain content.\n   * @property suppressCrossDomainErrors\n   * @static\n   * @type {Boolean}\n   * @default false\n   **/\n\n  DisplayObject.suppressCrossDomainErrors = false;\n  /**\n   * @property _snapToPixelEnabled\n   * @protected\n   * @static\n   * @type {Boolean}\n   * @default false\n   **/\n\n  DisplayObject._snapToPixelEnabled = false; // stage.snapToPixelEnabled is temporarily copied here during a draw to provide global access.\n\n  /**\n   * Enum like property for determining StageGL render lookup, i.e. where to expect properties.\n   * @property _StageGL_NONE\n   * @protected\n   * @static\n   * @type {number}\n   */\n\n  DisplayObject._StageGL_NONE = 0;\n  /**\n   * Enum like property for determining StageGL render lookup, i.e. where to expect properties.\n   * @property _StageGL_SPRITE\n   * @protected\n   * @static\n   * @type {number}\n   */\n\n  DisplayObject._StageGL_SPRITE = 1;\n  /**\n   * Enum like property for determining StageGL render lookup, i.e. where to expect properties.\n   * @property _StageGL_BITMAP\n   * @protected\n   * @static\n   * @type {number}\n   */\n\n  DisplayObject._StageGL_BITMAP = 2;\n  /**\n   * @property _hitTestCanvas\n   * @type {HTMLCanvasElement | Object}\n   * @static\n   * @protected\n   **/\n\n  /**\n   * @property _hitTestContext\n   * @type {CanvasRenderingContext2D}\n   * @static\n   * @protected\n   **/\n\n  var canvas = createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\"); // prevent errors on load in browsers without canvas.\n\n  if (canvas.getContext) {\n    DisplayObject._hitTestCanvas = canvas;\n    DisplayObject._hitTestContext = canvas.getContext(\"2d\");\n    canvas.width = canvas.height = 1;\n  } // events:\n\n  /**\n   * Dispatched when the user presses their left mouse button over the display object. See the \n   * {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n   * @event mousedown\n   * @since 0.6.0\n   */\n\n  /**\n   * Dispatched when the user presses their left mouse button and then releases it while over the display object.\n   * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n   * @event click\n   * @since 0.6.0\n   */\n\n  /**\n   * Dispatched when the user double clicks their left mouse button over this display object.\n   * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n   * @event dblclick\n   * @since 0.6.0\n   */\n\n  /**\n   * Dispatched when the user's mouse enters this display object. This event must be enabled using \n   * {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}. See also {{#crossLink \"DisplayObject/rollover:event\"}}{{/crossLink}}.\n   * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n   * @event mouseover\n   * @since 0.6.0\n   */\n\n  /**\n   * Dispatched when the user's mouse leaves this display object. This event must be enabled using \n   * {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}. See also {{#crossLink \"DisplayObject/rollout:event\"}}{{/crossLink}}.\n   * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n   * @event mouseout\n   * @since 0.6.0\n   */\n\n  /**\n   * This event is similar to {{#crossLink \"DisplayObject/mouseover:event\"}}{{/crossLink}}, with the following\n   * differences: it does not bubble, and it considers {{#crossLink \"Container\"}}{{/crossLink}} instances as an\n   * aggregate of their content.\n   * \n   * For example, myContainer contains two overlapping children: shapeA and shapeB. The user moves their mouse over\n   * shapeA and then directly on to shapeB. With a listener for {{#crossLink \"mouseover:event\"}}{{/crossLink}} on\n   * myContainer, two events would be received, each targeting a child element:<OL>\n   * <LI>when the mouse enters shapeA (target=shapeA)</LI>\n   * <LI>when the mouse enters shapeB (target=shapeB)</LI>\n   * </OL>\n   * However, with a listener for \"rollover\" instead, only a single event is received when the mouse first enters\n   * the aggregate myContainer content (target=myContainer).\n   * \n   * This event must be enabled using {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}.\n   * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n   * @event rollover\n   * @since 0.7.0\n   */\n\n  /**\n   * This event is similar to {{#crossLink \"DisplayObject/mouseout:event\"}}{{/crossLink}}, with the following\n   * differences: it does not bubble, and it considers {{#crossLink \"Container\"}}{{/crossLink}} instances as an\n   * aggregate of their content.\n   * \n   * For example, myContainer contains two overlapping children: shapeA and shapeB. The user moves their mouse over\n   * shapeA, then directly on to shapeB, then off both. With a listener for {{#crossLink \"mouseout:event\"}}{{/crossLink}}\n   * on myContainer, two events would be received, each targeting a child element:<OL>\n   * <LI>when the mouse leaves shapeA (target=shapeA)</LI>\n   * <LI>when the mouse leaves shapeB (target=shapeB)</LI>\n   * </OL>\n   * However, with a listener for \"rollout\" instead, only a single event is received when the mouse leaves\n   * the aggregate myContainer content (target=myContainer).\n   * \n   * This event must be enabled using {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}.\n   * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n   * @event rollout\n   * @since 0.7.0\n   */\n\n  /**\n   * After a {{#crossLink \"DisplayObject/mousedown:event\"}}{{/crossLink}} occurs on a display object, a pressmove\n   * event will be generated on that object whenever the mouse moves until the mouse press is released. This can be\n   * useful for dragging and similar operations.\n   *\n   * **Please note** that if the initial mouse target from a `mousedown` event is removed from the stage after being pressed\n   * (e.g. during a `pressmove` event), a `pressmove` event is still generated. However since it is no longer in the\n   * display list, the event can not bubble. This means that previous ancestors (parent containers) will not receive\n   * the event, and therefore can not re-dispatch it. If you intend to listen for `{{#crossLink \"DisplayObject/pressup:event\"}}{{/crossLink}}`\n   * or `pressmove` on a dynamic object (such as a {{#crossLink \"MovieClip\"}}{{/crossLink}} or {{#crossLink \"Container\"}}{{/crossLink}}),\n   * then ensure you set {{#crossLink \"Container/mouseChildren:property\"}}{{/crossLink}} to `false`.\n   * @event pressmove\n   * @since 0.7.0\n   */\n\n  /**\n   * After a {{#crossLink \"DisplayObject/mousedown:event\"}}{{/crossLink}} occurs on a display object, a pressup event\n   * will be generated on that object when that mouse press is released. This can be useful for dragging and similar\n   * operations.\n   *\n   * **Please note** that if the initial mouse target from a `mousedown` event is removed from the stage after being pressed\n   * (e.g. during a `pressmove` event), a `pressup` event is still generated. However since it is no longer in the\n   * display list, the event can not bubble. This means that previous ancestors (parent containers) will not receive\n   * the event, and therefore can not re-dispatch it. If you intend to listen for `{{#crossLink \"DisplayObject/pressmove:event\"}}{{/crossLink}}`\n   * or `pressup` on a dynamic object (such as a {{#crossLink \"MovieClip\"}}{{/crossLink}} or {{#crossLink \"Container\"}}{{/crossLink}}),\n   * then ensure you set {{#crossLink \"Container/mouseChildren:property\"}}{{/crossLink}} to `false`.\n   * @event pressup\n   * @since 0.7.0\n   */\n\n  /**\n   * Dispatched when the display object is added to a parent container.\n   * @event added\n   */\n\n  /**\n   * Dispatched when the display object is removed from its parent container.\n   * @event removed\n   */\n\n  /**\n   * Dispatched on each display object on a stage whenever the stage updates. This occurs immediately before the\n   * rendering (draw) pass. When {{#crossLink \"Stage/update\"}}{{/crossLink}} is called, first all display objects on\n   * the stage dispatch the tick event, then all of the display objects are drawn to stage. Children will have their\n   * {{#crossLink \"tick:event\"}}{{/crossLink}} event dispatched in order of their depth prior to the event being\n   * dispatched on their parent.\n   * @event tick\n   * @param {Object} target The object that dispatched the event.\n   * @param {String} type The event type.\n   * @param {Array} params An array containing any arguments that were passed to the Stage.update() method. For\n   *      example if you called stage.update(\"hello\"), then the params would be [\"hello\"].\n   * @since 0.6.0\n   */\n  // getter / setters:\n\n  /**\n   * Use the {{#crossLink \"DisplayObject/stage:property\"}}{{/crossLink}} property instead.\n   * @method _getStage\n   * @protected\n   * @return {Stage}\n   **/\n\n\n  p._getStage = function () {\n    // uses dynamic access to avoid circular dependencies;\n    var o = this,\n        _Stage = createjs[\"Stage\"];\n\n    while (o.parent) {\n      o = o.parent;\n    }\n\n    if (o instanceof _Stage) {\n      return o;\n    }\n\n    return null;\n  }; // DisplayObject.getStage is @deprecated. Remove for 1.1+\n\n\n  p.getStage = createjs.deprecate(p._getStage, \"DisplayObject.getStage\");\n  /**\n   * Returns the Stage instance that this display object will be rendered on, or null if it has not been added to one.\n   * @property stage\n   * @type {Stage}\n   * @readonly\n   **/\n\n  /**\n   * Returns an ID number that uniquely identifies the current cache for this display object. This can be used to\n   * determine if the cache has changed since a previous check.\n   * Moved to {{#crossLink \"BitmapCache\"}}{{/crossLink}}\n   * @property cacheID\n   * @deprecated\n   * @type {Number}\n   * @default 0\n   */\n\n  /**\n   * Set both the {{#crossLink \"DisplayObject/scaleX:property\"}}{{/crossLink}} and the {{#crossLink \"DisplayObject/scaleY\"}}{{/crossLink}}\n   * property to the same value. Note that when you get the value, if the `scaleX` and `scaleY` are different values,\n   * it will return only the `scaleX`.\n   * @property scaleX\n   * @type {Number}\n   * @default 1\n   */\n\n  try {\n    Object.defineProperties(p, {\n      stage: {\n        get: p._getStage\n      },\n      cacheID: {\n        get: function () {\n          return this.bitmapCache && this.bitmapCache.cacheID;\n        },\n        set: function (a) {\n          this.bitmapCache && (this.bitmapCache.cacheID = a);\n        }\n      },\n      scale: {\n        get: function () {\n          return this.scaleX;\n        },\n        set: function (scale) {\n          this.scaleX = this.scaleY = scale;\n        }\n      }\n    });\n  } catch (e) {} // public methods:\n\n  /**\n   * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n   * This does not account for whether it would be visible within the boundaries of the stage.\n   *\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method isVisible\n   * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n   **/\n\n\n  p.isVisible = function () {\n    return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0);\n  };\n  /**\n   * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n   * Returns <code>true</code> if the draw was handled (useful for overriding functionality).\n   *\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method draw\n   * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n   * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache. For example,\n   * used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\n   * @return {Boolean}\n   **/\n\n\n  p.draw = function (ctx, ignoreCache) {\n    var cache = this.bitmapCache;\n\n    if (cache && !ignoreCache) {\n      return cache.draw(ctx);\n    }\n\n    return false;\n  };\n  /**\n   * Applies this display object's transformation, alpha, globalCompositeOperation, clipping path (mask), and shadow\n   * to the specified context. This is typically called prior to {{#crossLink \"DisplayObject/draw\"}}{{/crossLink}}.\n   * @method updateContext\n   * @param {CanvasRenderingContext2D} ctx The canvas 2D to update.\n   **/\n\n\n  p.updateContext = function (ctx) {\n    var o = this,\n        mask = o.mask,\n        mtx = o._props.matrix;\n\n    if (mask && mask.graphics && !mask.graphics.isEmpty()) {\n      mask.getMatrix(mtx);\n      ctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\n      mask.graphics.drawAsPath(ctx);\n      ctx.clip();\n      mtx.invert();\n      ctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\n    }\n\n    this.getMatrix(mtx);\n    var tx = mtx.tx,\n        ty = mtx.ty;\n\n    if (DisplayObject._snapToPixelEnabled && o.snapToPixel) {\n      tx = tx + (tx < 0 ? -0.5 : 0.5) | 0;\n      ty = ty + (ty < 0 ? -0.5 : 0.5) | 0;\n    }\n\n    ctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, tx, ty);\n    ctx.globalAlpha *= o.alpha;\n\n    if (o.compositeOperation) {\n      ctx.globalCompositeOperation = o.compositeOperation;\n    }\n\n    if (o.shadow) {\n      this._applyShadow(ctx, o.shadow);\n    }\n  };\n  /**\n   * Draws the display object into a new element, which is then used for subsequent draws. Intended for complex content\n   * that does not change frequently (ex. a Container with many children that do not move, or a complex vector Shape),\n   * this can provide for much faster rendering because the content does not need to be re-rendered each tick. The\n   * cached display object can be moved, rotated, faded, etc freely, however if its content changes, you must manually\n   * update the cache by calling <code>updateCache()</code> again. You must specify the cached area via the x, y, w,\n   * and h parameters. This defines the rectangle that will be rendered and cached using this display object's coordinates.\n   *\n   * <h4>Example</h4>\n   * For example if you defined a Shape that drew a circle at 0, 0 with a radius of 25:\n   *\n   *      var shape = new createjs.Shape();\n   *      shape.graphics.beginFill(\"#ff0000\").drawCircle(0, 0, 25);\n   *      shape.cache(-25, -25, 50, 50);\n   *\n   * Note that filters need to be defined <em>before</em> the cache is applied or you will have to call updateCache after\n   * application. Check out the {{#crossLink \"Filter\"}}{{/crossLink}} class for more information. Some filters\n   * (ex. BlurFilter) may not work as expected in conjunction with the scale param.\n   * \n   * Usually, the resulting cacheCanvas will have the dimensions width * scale, height * scale, however some filters (ex. BlurFilter)\n   * will add padding to the canvas dimensions.\n   *\n   * In previous versions caching was handled on DisplayObject but has since been moved to {{#crossLink \"BitmapCache\"}}{{/crossLink}}.\n   * This allows for easier interaction and alternate cache methods like WebGL with {{#crossLink \"StageGL\"}}{{/crossLink}}.\n   * For more information on the options object, see the BitmapCache {{#crossLink \"BitmapCache/define\"}}{{/crossLink}}.\n   *\n   * @method cache\n   * @param {Number} x The x coordinate origin for the cache region.\n   * @param {Number} y The y coordinate origin for the cache region.\n   * @param {Number} width The width of the cache region.\n   * @param {Number} height The height of the cache region.\n   * @param {Number} [scale=1] The scale at which the cache will be created. For example, if you cache a vector shape using\n   * \tmyShape.cache(0,0,100,100,2) then the resulting cacheCanvas will be 200x200 px. This lets you scale and rotate\n   * \tcached elements with greater fidelity. Default is 1.\n   * @param {Object} [options=undefined] Specify additional parameters for the cache logic\n   **/\n\n\n  p.cache = function (x, y, width, height, scale, options) {\n    if (!this.bitmapCache) {\n      this.bitmapCache = new createjs.BitmapCache();\n    }\n\n    this.bitmapCache.define(this, x, y, width, height, scale, options);\n  };\n  /**\n   * Redraws the display object to its cache. Calling updateCache without an active cache will throw an error.\n   * If compositeOperation is null the current cache will be cleared prior to drawing. Otherwise the display object\n   * will be drawn over the existing cache using the specified compositeOperation.\n   *\n   * <h4>Example</h4>\n   * Clear the current graphics of a cached shape, draw some new instructions, and then update the cache. The new line\n   * will be drawn on top of the old one.\n   *\n   *      // Not shown: Creating the shape, and caching it.\n   *      shapeInstance.clear();\n   *      shapeInstance.setStrokeStyle(3).beginStroke(\"#ff0000\").moveTo(100, 100).lineTo(200,200);\n   *      shapeInstance.updateCache();\n   *\n   * In previous versions caching was handled on DisplayObject but has since been moved to {{#crossLink \"BitmapCache\"}}{{/crossLink}}.\n   * This allows for easier interaction and alternate cache methods like WebGL and {{#crossLink \"StageGL\"}}{{/crossLink}}.\n   *\n   * @method updateCache\n   * @param {String} compositeOperation The compositeOperation to use, or null to clear the cache and redraw it.\n   * <a href=\"https://html.spec.whatwg.org/multipage/scripting.html#dom-context-2d-globalcompositeoperation\">\n   * whatwg spec on compositing</a>.\n   **/\n\n\n  p.updateCache = function (compositeOperation) {\n    if (!this.bitmapCache) {\n      throw \"cache() must be called before updateCache()\";\n    }\n\n    this.bitmapCache.update(compositeOperation);\n  };\n  /**\n   * Clears the current cache. See {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} for more information.\n   * @method uncache\n   **/\n\n\n  p.uncache = function () {\n    if (this.bitmapCache) {\n      this.bitmapCache.release();\n      this.bitmapCache = undefined;\n    }\n  };\n  /**\n   * Returns a data URL for the cache, or null if this display object is not cached.\n   * Only generated if the cache has changed, otherwise returns last result.\n   * @method getCacheDataURL\n   * @return {String} The image data url for the cache.\n   **/\n\n\n  p.getCacheDataURL = function () {\n    return this.bitmapCache ? this.bitmapCache.getDataURL() : null;\n  };\n  /**\n   * Transforms the specified x and y position from the coordinate space of the display object\n   * to the global (stage) coordinate space. For example, this could be used to position an HTML label\n   * over a specific point on a nested display object. Returns a Point instance with x and y properties\n   * correlating to the transformed coordinates on the stage.\n   *\n   * <h4>Example</h4>\n   *\n   *      displayObject.x = 300;\n   *      displayObject.y = 200;\n   *      stage.addChild(displayObject);\n   *      var point = displayObject.localToGlobal(100, 100);\n   *      // Results in x=400, y=300\n   *\n   * @method localToGlobal\n   * @param {Number} x The x position in the source display object to transform.\n   * @param {Number} y The y position in the source display object to transform.\n   * @param {Point | Object} [pt] An object to copy the result into. If omitted a new Point object with x/y properties will be returned. \n   * @return {Point} A Point instance with x and y properties correlating to the transformed coordinates\n   * on the stage.\n   **/\n\n\n  p.localToGlobal = function (x, y, pt) {\n    return this.getConcatenatedMatrix(this._props.matrix).transformPoint(x, y, pt || new createjs.Point());\n  };\n  /**\n   * Transforms the specified x and y position from the global (stage) coordinate space to the\n   * coordinate space of the display object. For example, this could be used to determine\n   * the current mouse position within the display object. Returns a Point instance with x and y properties\n   * correlating to the transformed position in the display object's coordinate space.\n   *\n   * <h4>Example</h4>\n   *\n   *      displayObject.x = 300;\n   *      displayObject.y = 200;\n   *      stage.addChild(displayObject);\n   *      var point = displayObject.globalToLocal(100, 100);\n   *      // Results in x=-200, y=-100\n   *\n   * @method globalToLocal\n   * @param {Number} x The x position on the stage to transform.\n   * @param {Number} y The y position on the stage to transform.\n   * @param {Point | Object} [pt] An object to copy the result into. If omitted a new Point object with x/y properties will be returned. \n   * @return {Point} A Point instance with x and y properties correlating to the transformed position in the\n   * display object's coordinate space.\n   **/\n\n\n  p.globalToLocal = function (x, y, pt) {\n    return this.getConcatenatedMatrix(this._props.matrix).invert().transformPoint(x, y, pt || new createjs.Point());\n  };\n  /**\n   * Transforms the specified x and y position from the coordinate space of this display object to the coordinate\n   * space of the target display object. Returns a Point instance with x and y properties correlating to the\n   * transformed position in the target's coordinate space. Effectively the same as using the following code with\n   * {{#crossLink \"DisplayObject/localToGlobal\"}}{{/crossLink}} and {{#crossLink \"DisplayObject/globalToLocal\"}}{{/crossLink}}.\n   *\n   *      var pt = this.localToGlobal(x, y);\n   *      pt = target.globalToLocal(pt.x, pt.y);\n   *\n   * @method localToLocal\n   * @param {Number} x The x position in the source display object to transform.\n   * @param {Number} y The y position on the source display object to transform.\n   * @param {DisplayObject} target The target display object to which the coordinates will be transformed.\n   * @param {Point | Object} [pt] An object to copy the result into. If omitted a new Point object with x/y properties will be returned. \n   * @return {Point} Returns a Point instance with x and y properties correlating to the transformed position\n   * in the target's coordinate space.\n   **/\n\n\n  p.localToLocal = function (x, y, target, pt) {\n    pt = this.localToGlobal(x, y, pt);\n    return target.globalToLocal(pt.x, pt.y, pt);\n  };\n  /**\n   * Shortcut method to quickly set the transform properties on the display object. All parameters are optional.\n   * Omitted parameters will have the default value set.\n   *\n   * <h4>Example</h4>\n   *\n   *      displayObject.setTransform(100, 100, 2, 2);\n   *\n   * @method setTransform\n   * @param {Number} [x=0] The horizontal translation (x position) in pixels\n   * @param {Number} [y=0] The vertical translation (y position) in pixels\n   * @param {Number} [scaleX=1] The horizontal scale, as a percentage of 1\n   * @param {Number} [scaleY=1] the vertical scale, as a percentage of 1\n   * @param {Number} [rotation=0] The rotation, in degrees\n   * @param {Number} [skewX=0] The horizontal skew factor\n   * @param {Number} [skewY=0] The vertical skew factor\n   * @param {Number} [regX=0] The horizontal registration point in pixels\n   * @param {Number} [regY=0] The vertical registration point in pixels\n   * @return {DisplayObject} Returns this instance. Useful for chaining commands.\n   * @chainable\n  */\n\n\n  p.setTransform = function (x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {\n    this.x = x || 0;\n    this.y = y || 0;\n    this.scaleX = scaleX == null ? 1 : scaleX;\n    this.scaleY = scaleY == null ? 1 : scaleY;\n    this.rotation = rotation || 0;\n    this.skewX = skewX || 0;\n    this.skewY = skewY || 0;\n    this.regX = regX || 0;\n    this.regY = regY || 0;\n    return this;\n  };\n  /**\n   * Returns a matrix based on this object's current transform.\n   * @method getMatrix\n   * @param {Matrix2D} matrix Optional. A Matrix2D object to populate with the calculated values. If null, a new\n   * Matrix object is returned.\n   * @return {Matrix2D} A matrix representing this display object's transform.\n   **/\n\n\n  p.getMatrix = function (matrix) {\n    var o = this,\n        mtx = matrix && matrix.identity() || new createjs.Matrix2D();\n    return o.transformMatrix ? mtx.copy(o.transformMatrix) : mtx.appendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation, o.skewX, o.skewY, o.regX, o.regY);\n  };\n  /**\n   * Generates a Matrix2D object representing the combined transform of the display object and all of its\n   * parent Containers up to the highest level ancestor (usually the {{#crossLink \"Stage\"}}{{/crossLink}}). This can\n   * be used to transform positions between coordinate spaces, such as with {{#crossLink \"DisplayObject/localToGlobal\"}}{{/crossLink}}\n   * and {{#crossLink \"DisplayObject/globalToLocal\"}}{{/crossLink}}.\n   * @method getConcatenatedMatrix\n   * @param {Matrix2D} [matrix] A {{#crossLink \"Matrix2D\"}}{{/crossLink}} object to populate with the calculated values.\n   * If null, a new Matrix2D object is returned.\n   * @return {Matrix2D} The combined matrix.\n   **/\n\n\n  p.getConcatenatedMatrix = function (matrix) {\n    var o = this,\n        mtx = this.getMatrix(matrix);\n\n    while (o = o.parent) {\n      mtx.prependMatrix(o.getMatrix(o._props.matrix));\n    }\n\n    return mtx;\n  };\n  /**\n   * Generates a DisplayProps object representing the combined display properties of the  object and all of its\n   * parent Containers up to the highest level ancestor (usually the {{#crossLink \"Stage\"}}{{/crossLink}}).\n   * @method getConcatenatedDisplayProps\n   * @param {DisplayProps} [props] A {{#crossLink \"DisplayProps\"}}{{/crossLink}} object to populate with the calculated values.\n   * If null, a new DisplayProps object is returned.\n   * @return {DisplayProps} The combined display properties.\n   **/\n\n\n  p.getConcatenatedDisplayProps = function (props) {\n    props = props ? props.identity() : new createjs.DisplayProps();\n    var o = this,\n        mtx = o.getMatrix(props.matrix);\n\n    do {\n      props.prepend(o.visible, o.alpha, o.shadow, o.compositeOperation); // we do this to avoid problems with the matrix being used for both operations when o._props.matrix is passed in as the props param.\n      // this could be simplified (ie. just done as part of the prepend above) if we switched to using a pool.\n\n      if (o != this) {\n        mtx.prependMatrix(o.getMatrix(o._props.matrix));\n      }\n    } while (o = o.parent);\n\n    return props;\n  };\n  /**\n   * Tests whether the display object intersects the specified point in local coordinates (ie. draws a pixel with alpha > 0 at\n   * the specified position). This ignores the alpha, shadow, hitArea, mask, and compositeOperation of the display object.\n   *\n   * <h4>Example</h4>\n   *\n   *      stage.addEventListener(\"stagemousedown\", handleMouseDown);\n   *      function handleMouseDown(event) {\n   *          var hit = myShape.hitTest(event.stageX, event.stageY);\n   *      }\n   *\n   * Please note that shape-to-shape collision is not currently supported by EaselJS.\n   * @method hitTest\n   * @param {Number} x The x position to check in the display object's local coordinates.\n   * @param {Number} y The y position to check in the display object's local coordinates.\n   * @return {Boolean} A Boolean indicating whether a visible portion of the DisplayObject intersect the specified\n   * local Point.\n  */\n\n\n  p.hitTest = function (x, y) {\n    var ctx = DisplayObject._hitTestContext;\n    ctx.setTransform(1, 0, 0, 1, -x, -y);\n    this.draw(ctx);\n\n    var hit = this._testHit(ctx);\n\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.clearRect(0, 0, 2, 2);\n    return hit;\n  };\n  /**\n   * Provides a chainable shortcut method for setting a number of properties on the instance.\n   *\n   * <h4>Example</h4>\n   *\n   *      var myGraphics = new createjs.Graphics().beginFill(\"#ff0000\").drawCircle(0, 0, 25);\n   *      var shape = stage.addChild(new Shape()).set({graphics:myGraphics, x:100, y:100, alpha:0.5});\n   *\n   * @method set\n   * @param {Object} props A generic object containing properties to copy to the DisplayObject instance.\n   * @return {DisplayObject} Returns the instance the method is called on (useful for chaining calls.)\n   * @chainable\n  */\n\n\n  p.set = function (props) {\n    for (var n in props) {\n      this[n] = props[n];\n    }\n\n    return this;\n  };\n  /**\n   * Returns a rectangle representing this object's bounds in its local coordinate system (ie. with no transformation).\n   * Objects that have been cached will return the bounds of the cache.\n   * \n   * Not all display objects can calculate their own bounds (ex. Shape). For these objects, you can use \n   * {{#crossLink \"DisplayObject/setBounds\"}}{{/crossLink}} so that they are included when calculating Container\n   * bounds.\n   * \n   * <table>\n   * \t<tr><td><b>All</b></td><td>\n   * \t\tAll display objects support setting bounds manually using setBounds(). Likewise, display objects that\n   * \t\thave been cached using cache() will return the bounds of their cache. Manual and cache bounds will override\n   * \t\tthe automatic calculations listed below.\n   * \t</td></tr>\n   * \t<tr><td><b>Bitmap</b></td><td>\n   * \t\tReturns the width and height of the sourceRect (if specified) or image, extending from (x=0,y=0).\n   * \t</td></tr>\n   * \t<tr><td><b>Sprite</b></td><td>\n   * \t\tReturns the bounds of the current frame. May have non-zero x/y if a frame registration point was specified\n   * \t\tin the spritesheet data. See also {{#crossLink \"SpriteSheet/getFrameBounds\"}}{{/crossLink}}\n   * \t</td></tr>\n   * \t<tr><td><b>Container</b></td><td>\n   * \t\tReturns the aggregate (combined) bounds of all children that return a non-null value from getBounds().\n   * \t</td></tr>\n   * \t<tr><td><b>Shape</b></td><td>\n   * \t\tDoes not currently support automatic bounds calculations. Use setBounds() to manually define bounds.\n   * \t</td></tr>\n   * \t<tr><td><b>Text</b></td><td>\n   * \t\tReturns approximate bounds. Horizontal values (x/width) are quite accurate, but vertical values (y/height) are\n   * \t\tnot, especially when using textBaseline values other than \"top\".\n   * \t</td></tr>\n   * \t<tr><td><b>BitmapText</b></td><td>\n   * \t\tReturns approximate bounds. Values will be more accurate if spritesheet frame registration points are close\n   * \t\tto (x=0,y=0).\n   * \t</td></tr>\n  * </table>\n   * \n   * Bounds can be expensive to calculate for some objects (ex. text, or containers with many children), and\n   * are recalculated each time you call getBounds(). You can prevent recalculation on static objects by setting the\n   * bounds explicitly:\n   * \n   * \tvar bounds = obj.getBounds();\n   * \tobj.setBounds(bounds.x, bounds.y, bounds.width, bounds.height);\n   * \t// getBounds will now use the set values, instead of recalculating\n   * \n   * To reduce memory impact, the returned Rectangle instance may be reused internally; clone the instance or copy its\n   * values if you need to retain it.\n   * \n   * \tvar myBounds = obj.getBounds().clone();\n   * \t// OR:\n   * \tmyRect.copy(obj.getBounds());\n   * \n   * @method getBounds\n   * @return {Rectangle} A Rectangle instance representing the bounds, or null if bounds are not available for this\n   * object.\n   **/\n\n\n  p.getBounds = function () {\n    if (this._bounds) {\n      return this._rectangle.copy(this._bounds);\n    }\n\n    var cacheCanvas = this.cacheCanvas;\n\n    if (cacheCanvas) {\n      var scale = this._cacheScale;\n      return this._rectangle.setValues(this._cacheOffsetX, this._cacheOffsetY, cacheCanvas.width / scale, cacheCanvas.height / scale);\n    }\n\n    return null;\n  };\n  /**\n   * Returns a rectangle representing this object's bounds in its parent's coordinate system (ie. with transformations applied).\n   * Objects that have been cached will return the transformed bounds of the cache.\n   * \n   * Not all display objects can calculate their own bounds (ex. Shape). For these objects, you can use \n   * {{#crossLink \"DisplayObject/setBounds\"}}{{/crossLink}} so that they are included when calculating Container\n   * bounds.\n   * \n   * To reduce memory impact, the returned Rectangle instance may be reused internally; clone the instance or copy its\n   * values if you need to retain it.\n   * \n   * Container instances calculate aggregate bounds for all children that return bounds via getBounds.\n   * @method getTransformedBounds\n   * @return {Rectangle} A Rectangle instance representing the bounds, or null if bounds are not available for this object.\n   **/\n\n\n  p.getTransformedBounds = function () {\n    return this._getBounds();\n  };\n  /**\n   * Allows you to manually specify the bounds of an object that either cannot calculate their own bounds (ex. Shape &\n   * Text) for future reference, or so the object can be included in Container bounds. Manually set bounds will always\n   * override calculated bounds.\n   * \n   * The bounds should be specified in the object's local (untransformed) coordinates. For example, a Shape instance\n   * with a 25px radius circle centered at 0,0 would have bounds of (-25, -25, 50, 50).\n   * @method setBounds\n   * @param {Number} x The x origin of the bounds. Pass null to remove the manual bounds.\n   * @param {Number} y The y origin of the bounds.\n   * @param {Number} width The width of the bounds.\n   * @param {Number} height The height of the bounds.\n   **/\n\n\n  p.setBounds = function (x, y, width, height) {\n    if (x == null) {\n      this._bounds = x;\n      return;\n    }\n\n    this._bounds = (this._bounds || new createjs.Rectangle()).setValues(x, y, width, height);\n  };\n  /**\n   * Returns a clone of this DisplayObject. Some properties that are specific to this instance's current context are\n   * reverted to their defaults (for example .parent). Caches are not maintained across clones, and some elements\n   * are copied by reference (masks, individual filter instances, hit area)\n   * @method clone\n   * @return {DisplayObject} A clone of the current DisplayObject instance.\n   **/\n\n\n  p.clone = function () {\n    return this._cloneProps(new DisplayObject());\n  };\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n\n\n  p.toString = function () {\n    return \"[DisplayObject (name=\" + this.name + \")]\";\n  }; // private methods:\n\n  /**\n   * Called before the object gets drawn and is a chance to ensure the display state of the object is correct.\n   * Mostly used by {{#crossLink \"MovieClip\"}}{{/crossLink}} and {{#crossLink \"BitmapText\"}}{{/crossLink}} to\n   * correct their internal state and children prior to being drawn.\n   *\n   * Is manually called via draw in a {{#crossLink \"Stage\"}}{{/crossLink}} but is automatically called when\n   * present in a {{#crossLink \"StageGL\"}}{{/crossLink}} instance.\n   *\n   * @method _updateState\n   * @default null\n   */\n\n\n  p._updateState = null; // separated so it can be used more easily in subclasses:\n\n  /**\n   * @method _cloneProps\n   * @param {DisplayObject} o The DisplayObject instance which will have properties from the current DisplayObject\n   * instance copied into.\n   * @return {DisplayObject} o\n   * @protected\n   **/\n\n  p._cloneProps = function (o) {\n    o.alpha = this.alpha;\n    o.mouseEnabled = this.mouseEnabled;\n    o.tickEnabled = this.tickEnabled;\n    o.name = this.name;\n    o.regX = this.regX;\n    o.regY = this.regY;\n    o.rotation = this.rotation;\n    o.scaleX = this.scaleX;\n    o.scaleY = this.scaleY;\n    o.shadow = this.shadow;\n    o.skewX = this.skewX;\n    o.skewY = this.skewY;\n    o.visible = this.visible;\n    o.x = this.x;\n    o.y = this.y;\n    o.compositeOperation = this.compositeOperation;\n    o.snapToPixel = this.snapToPixel;\n    o.filters = this.filters == null ? null : this.filters.slice(0);\n    o.mask = this.mask;\n    o.hitArea = this.hitArea;\n    o.cursor = this.cursor;\n    o._bounds = this._bounds;\n    return o;\n  };\n  /**\n   * @method _applyShadow\n   * @protected\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Shadow} shadow\n   **/\n\n\n  p._applyShadow = function (ctx, shadow) {\n    shadow = shadow || Shadow.identity;\n    ctx.shadowColor = shadow.color;\n    ctx.shadowOffsetX = shadow.offsetX;\n    ctx.shadowOffsetY = shadow.offsetY;\n    ctx.shadowBlur = shadow.blur;\n  };\n  /**\n   * @method _tick\n   * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n   * @protected\n   **/\n\n\n  p._tick = function (evtObj) {\n    // because tick can be really performance sensitive, check for listeners before calling dispatchEvent.\n    var ls = this._listeners;\n\n    if (ls && ls[\"tick\"]) {\n      // reset & reuse the event object to avoid construction / GC costs:\n      evtObj.target = null;\n      evtObj.propagationStopped = evtObj.immediatePropagationStopped = false;\n      this.dispatchEvent(evtObj);\n    }\n  };\n  /**\n   * @method _testHit\n   * @protected\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {Boolean}\n   **/\n\n\n  p._testHit = function (ctx) {\n    try {\n      var hit = ctx.getImageData(0, 0, 1, 1).data[3] > 1;\n    } catch (e) {\n      if (!DisplayObject.suppressCrossDomainErrors) {\n        throw \"An error has occurred. This is most likely due to security restrictions on reading canvas pixel data with local or cross-domain images.\";\n      }\n    }\n\n    return hit;\n  };\n  /**\n   * @method _getBounds\n   * @param {Matrix2D} matrix\n   * @param {Boolean} ignoreTransform If true, does not apply this object's transform.\n   * @return {Rectangle}\n   * @protected\n   **/\n\n\n  p._getBounds = function (matrix, ignoreTransform) {\n    return this._transformBounds(this.getBounds(), matrix, ignoreTransform);\n  };\n  /**\n   * @method _transformBounds\n   * @param {Rectangle} bounds\n   * @param {Matrix2D} matrix\n   * @param {Boolean} ignoreTransform\n   * @return {Rectangle}\n   * @protected\n   **/\n\n\n  p._transformBounds = function (bounds, matrix, ignoreTransform) {\n    if (!bounds) {\n      return bounds;\n    }\n\n    var x = bounds.x,\n        y = bounds.y,\n        width = bounds.width,\n        height = bounds.height,\n        mtx = this._props.matrix;\n    mtx = ignoreTransform ? mtx.identity() : this.getMatrix(mtx);\n\n    if (x || y) {\n      mtx.appendTransform(0, 0, 1, 1, 0, 0, 0, -x, -y);\n    } // TODO: simplify this.\n\n\n    if (matrix) {\n      mtx.prependMatrix(matrix);\n    }\n\n    var x_a = width * mtx.a,\n        x_b = width * mtx.b;\n    var y_c = height * mtx.c,\n        y_d = height * mtx.d;\n    var tx = mtx.tx,\n        ty = mtx.ty;\n    var minX = tx,\n        maxX = tx,\n        minY = ty,\n        maxY = ty;\n\n    if ((x = x_a + tx) < minX) {\n      minX = x;\n    } else if (x > maxX) {\n      maxX = x;\n    }\n\n    if ((x = x_a + y_c + tx) < minX) {\n      minX = x;\n    } else if (x > maxX) {\n      maxX = x;\n    }\n\n    if ((x = y_c + tx) < minX) {\n      minX = x;\n    } else if (x > maxX) {\n      maxX = x;\n    }\n\n    if ((y = x_b + ty) < minY) {\n      minY = y;\n    } else if (y > maxY) {\n      maxY = y;\n    }\n\n    if ((y = x_b + y_d + ty) < minY) {\n      minY = y;\n    } else if (y > maxY) {\n      maxY = y;\n    }\n\n    if ((y = y_d + ty) < minY) {\n      minY = y;\n    } else if (y > maxY) {\n      maxY = y;\n    }\n\n    return bounds.setValues(minX, minY, maxX - minX, maxY - minY);\n  };\n  /**\n   * Indicates whether the display object has any mouse event listeners or a cursor.\n   * @method _isMouseOpaque\n   * @return {Boolean}\n   * @protected\n   **/\n\n\n  p._hasMouseEventListener = function () {\n    var evts = DisplayObject._MOUSE_EVENTS;\n\n    for (var i = 0, l = evts.length; i < l; i++) {\n      if (this.hasEventListener(evts[i])) {\n        return true;\n      }\n    }\n\n    return !!this.cursor;\n  };\n\n  createjs.DisplayObject = createjs.promote(DisplayObject, \"EventDispatcher\");\n})(); //##############################################################################\n// Container.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor:\n\n  /**\n   * A Container is a nestable display list that allows you to work with compound display elements. For  example you could\n   * group arm, leg, torso and head {{#crossLink \"Bitmap\"}}{{/crossLink}} instances together into a Person Container, and\n   * transform them as a group, while still being able to move the individual parts relative to each other. Children of\n   * containers have their <code>transform</code> and <code>alpha</code> properties concatenated with their parent\n   * Container.\n   *\n   * For example, a {{#crossLink \"Shape\"}}{{/crossLink}} with x=100 and alpha=0.5, placed in a Container with <code>x=50</code>\n   * and <code>alpha=0.7</code> will be rendered to the canvas at <code>x=150</code> and <code>alpha=0.35</code>.\n   * Containers have some overhead, so you generally shouldn't create a Container to hold a single child.\n   *\n   * <h4>Example</h4>\n   *\n   *      var container = new createjs.Container();\n   *      container.addChild(bitmapInstance, shapeInstance);\n   *      container.x = 100;\n   *\n   * @class Container\n   * @extends DisplayObject\n   * @constructor\n   **/\n\n  function Container() {\n    this.DisplayObject_constructor(); // public properties:\n\n    /**\n     * The array of children in the display list. You should usually use the child management methods such as\n     * {{#crossLink \"Container/addChild\"}}{{/crossLink}}, {{#crossLink \"Container/removeChild\"}}{{/crossLink}},\n     * {{#crossLink \"Container/swapChildren\"}}{{/crossLink}}, etc, rather than accessing this directly, but it is\n     * included for advanced uses.\n     * @property children\n     * @type Array\n     * @default null\n     **/\n\n    this.children = [];\n    /**\n     * Indicates whether the children of this container are independently enabled for mouse/pointer interaction.\n     * If false, the children will be aggregated under the container - for example, a click on a child shape would\n     * trigger a click event on the container.\n     * @property mouseChildren\n     * @type Boolean\n     * @default true\n     **/\n\n    this.mouseChildren = true;\n    /**\n     * If false, the tick will not be propagated to children of this Container. This can provide some performance benefits.\n     * In addition to preventing the \"tick\" event from being dispatched, it will also prevent tick related updates\n     * on some display objects (ex. Sprite & MovieClip frame advancing, DOMElement visibility handling).\n     * @property tickChildren\n     * @type Boolean\n     * @default true\n     **/\n\n    this.tickChildren = true;\n  }\n\n  var p = createjs.extend(Container, createjs.DisplayObject); // getter / setters:\n\n  /**\n   * Use the {{#crossLink \"Container/numChildren:property\"}}{{/crossLink}} property instead.\n   * @method _getNumChildren\n   * @protected\n   * @return {Number}\n   **/\n\n  p._getNumChildren = function () {\n    return this.children.length;\n  }; // Container.getNumChildren is @deprecated. Remove for 1.1+\n\n\n  p.getNumChildren = createjs.deprecate(p._getNumChildren, \"Container.getNumChildren\");\n  /**\n   * Returns the number of children in the container.\n   * @property numChildren\n   * @type {Number}\n   * @readonly\n   **/\n\n  try {\n    Object.defineProperties(p, {\n      numChildren: {\n        get: p._getNumChildren\n      }\n    });\n  } catch (e) {} // public methods:\n\n  /**\n   * Constructor alias for backwards compatibility. This method will be removed in future versions.\n   * Subclasses should be updated to use {{#crossLink \"Utility Methods/extends\"}}{{/crossLink}}.\n   * @method initialize\n   * @deprecated in favour of `createjs.promote()`\n   **/\n\n\n  p.initialize = Container; // TODO: deprecated.\n\n  /**\n   * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n   * This does not account for whether it would be visible within the boundaries of the stage.\n   *\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method isVisible\n   * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n   **/\n\n  p.isVisible = function () {\n    var hasContent = this.cacheCanvas || this.children.length;\n    return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n  };\n  /**\n   * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n   * Returns true if the draw was handled (useful for overriding functionality).\n   *\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method draw\n   * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n   * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache.\n   * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n   * into itself).\n   **/\n\n\n  p.draw = function (ctx, ignoreCache) {\n    if (this.DisplayObject_draw(ctx, ignoreCache)) {\n      return true;\n    } // this ensures we don't have issues with display list changes that occur during a draw:\n\n\n    var list = this.children.slice();\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var child = list[i];\n\n      if (!child.isVisible()) {\n        continue;\n      } // draw the child:\n\n\n      ctx.save();\n      child.updateContext(ctx);\n      child.draw(ctx);\n      ctx.restore();\n    }\n\n    return true;\n  };\n  /**\n   * Adds a child to the top of the display list.\n   *\n   * <h4>Example</h4>\n   *\n   * \t\tcontainer.addChild(bitmapInstance);\n   *\n   * You can also add multiple children at once:\n   *\n   * \t\tcontainer.addChild(bitmapInstance, shapeInstance, textInstance);\n   *\n   * @method addChild\n   * @param {DisplayObject} child The display object to add.\n   * @return {DisplayObject} The child that was added, or the last child if multiple children were added.\n   **/\n\n\n  p.addChild = function (child) {\n    if (child == null) {\n      return child;\n    }\n\n    var l = arguments.length;\n\n    if (l > 1) {\n      for (var i = 0; i < l; i++) {\n        this.addChild(arguments[i]);\n      }\n\n      return arguments[l - 1];\n    } // Note: a lot of duplication with addChildAt, but push is WAY faster than splice.\n\n\n    var par = child.parent,\n        silent = par === this;\n    par && par._removeChildAt(createjs.indexOf(par.children, child), silent);\n    child.parent = this;\n    this.children.push(child);\n\n    if (!silent) {\n      child.dispatchEvent(\"added\");\n    }\n\n    return child;\n  };\n  /**\n   * Adds a child to the display list at the specified index, bumping children at equal or greater indexes up one, and\n   * setting its parent to this Container.\n   *\n   * <h4>Example</h4>\n   *\n   *      addChildAt(child1, index);\n   *\n   * You can also add multiple children, such as:\n   *\n   *      addChildAt(child1, child2, ..., index);\n   *\n   * The index must be between 0 and numChildren. For example, to add myShape under otherShape in the display list,\n   * you could use:\n   *\n   *      container.addChildAt(myShape, container.getChildIndex(otherShape));\n   *\n   * This would also bump otherShape's index up by one. Fails silently if the index is out of range.\n   *\n   * @method addChildAt\n   * @param {DisplayObject} child The display object to add.\n   * @param {Number} index The index to add the child at.\n   * @return {DisplayObject} Returns the last child that was added, or the last child if multiple children were added.\n   **/\n\n\n  p.addChildAt = function (child, index) {\n    var l = arguments.length;\n    var indx = arguments[l - 1]; // can't use the same name as the index param or it replaces arguments[1]\n\n    if (indx < 0 || indx > this.children.length) {\n      return arguments[l - 2];\n    }\n\n    if (l > 2) {\n      for (var i = 0; i < l - 1; i++) {\n        this.addChildAt(arguments[i], indx + i);\n      }\n\n      return arguments[l - 2];\n    }\n\n    var par = child.parent,\n        silent = par === this;\n    par && par._removeChildAt(createjs.indexOf(par.children, child), silent);\n    child.parent = this;\n    this.children.splice(index, 0, child);\n\n    if (!silent) {\n      child.dispatchEvent(\"added\");\n    }\n\n    return child;\n  };\n  /**\n   * Removes the specified child from the display list. Note that it is faster to use removeChildAt() if the index is\n   * already known.\n   *\n   * <h4>Example</h4>\n   *\n   *      container.removeChild(child);\n   *\n   * You can also remove multiple children:\n   *\n   *      removeChild(child1, child2, ...);\n   *\n   * Returns true if the child (or children) was removed, or false if it was not in the display list.\n   * @method removeChild\n   * @param {DisplayObject} child The child to remove.\n   * @return {Boolean} true if the child (or children) was removed, or false if it was not in the display list.\n   **/\n\n\n  p.removeChild = function (child) {\n    var l = arguments.length;\n\n    if (l > 1) {\n      var good = true;\n\n      for (var i = 0; i < l; i++) {\n        good = good && this.removeChild(arguments[i]);\n      }\n\n      return good;\n    }\n\n    return this._removeChildAt(createjs.indexOf(this.children, child));\n  };\n  /**\n   * Removes the child at the specified index from the display list, and sets its parent to null.\n   *\n   * <h4>Example</h4>\n   *\n   *      container.removeChildAt(2);\n   *\n   * You can also remove multiple children:\n   *\n   *      container.removeChild(2, 7, ...)\n   *\n   * Returns true if the child (or children) was removed, or false if any index was out of range.\n   * @method removeChildAt\n   * @param {Number} index The index of the child to remove.\n   * @return {Boolean} true if the child (or children) was removed, or false if any index was out of range.\n   **/\n\n\n  p.removeChildAt = function (index) {\n    var l = arguments.length;\n\n    if (l > 1) {\n      var a = [];\n\n      for (var i = 0; i < l; i++) {\n        a[i] = arguments[i];\n      }\n\n      a.sort(function (a, b) {\n        return b - a;\n      });\n      var good = true;\n\n      for (var i = 0; i < l; i++) {\n        good = good && this._removeChildAt(a[i]);\n      }\n\n      return good;\n    }\n\n    return this._removeChildAt(index);\n  };\n  /**\n   * Removes all children from the display list.\n   *\n   * <h4>Example</h4>\n   *\n   * \tcontainer.removeAllChildren();\n   *\n   * @method removeAllChildren\n   **/\n\n\n  p.removeAllChildren = function () {\n    var kids = this.children;\n\n    while (kids.length) {\n      this._removeChildAt(0);\n    }\n  };\n  /**\n   * Returns the child at the specified index.\n   *\n   * <h4>Example</h4>\n   *\n   *      container.getChildAt(2);\n   *\n   * @method getChildAt\n   * @param {Number} index The index of the child to return.\n   * @return {DisplayObject} The child at the specified index. Returns null if there is no child at the index.\n   **/\n\n\n  p.getChildAt = function (index) {\n    return this.children[index];\n  };\n  /**\n   * Returns the child with the specified name.\n   * @method getChildByName\n   * @param {String} name The name of the child to return.\n   * @return {DisplayObject} The child with the specified name.\n   **/\n\n\n  p.getChildByName = function (name) {\n    var kids = this.children;\n\n    for (var i = 0, l = kids.length; i < l; i++) {\n      if (kids[i].name == name) {\n        return kids[i];\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Performs an array sort operation on the child list.\n   *\n   * <h4>Example: Display children with a higher y in front.</h4>\n   * \n   *      var sortFunction = function(obj1, obj2, options) {\n   *          if (obj1.y > obj2.y) { return 1; }\n   *          if (obj1.y < obj2.y) { return -1; }\n   *          return 0;\n   *      }\n   *      container.sortChildren(sortFunction);\n   *\n   * @method sortChildren\n   * @param {Function} sortFunction the function to use to sort the child list. See JavaScript's <code>Array.sort</code>\n   * documentation for details.\n   **/\n\n\n  p.sortChildren = function (sortFunction) {\n    this.children.sort(sortFunction);\n  };\n  /**\n   * Returns the index of the specified child in the display list, or -1 if it is not in the display list.\n   *\n   * <h4>Example</h4>\n   *\n   *      var index = container.getChildIndex(child);\n   *\n   * @method getChildIndex\n   * @param {DisplayObject} child The child to return the index of.\n   * @return {Number} The index of the specified child. -1 if the child is not found.\n   **/\n\n\n  p.getChildIndex = function (child) {\n    return createjs.indexOf(this.children, child);\n  };\n  /**\n   * Swaps the children at the specified indexes. Fails silently if either index is out of range.\n   * @method swapChildrenAt\n   * @param {Number} index1\n   * @param {Number} index2\n   **/\n\n\n  p.swapChildrenAt = function (index1, index2) {\n    var kids = this.children;\n    var o1 = kids[index1];\n    var o2 = kids[index2];\n\n    if (!o1 || !o2) {\n      return;\n    }\n\n    kids[index1] = o2;\n    kids[index2] = o1;\n  };\n  /**\n   * Swaps the specified children's depth in the display list. Fails silently if either child is not a child of this\n   * Container.\n   * @method swapChildren\n   * @param {DisplayObject} child1\n   * @param {DisplayObject} child2\n   **/\n\n\n  p.swapChildren = function (child1, child2) {\n    var kids = this.children;\n    var index1, index2;\n\n    for (var i = 0, l = kids.length; i < l; i++) {\n      if (kids[i] == child1) {\n        index1 = i;\n      }\n\n      if (kids[i] == child2) {\n        index2 = i;\n      }\n\n      if (index1 != null && index2 != null) {\n        break;\n      }\n    }\n\n    if (i == l) {\n      return;\n    } // TODO: throw error?\n\n\n    kids[index1] = child2;\n    kids[index2] = child1;\n  };\n  /**\n   * Changes the depth of the specified child. Fails silently if the child is not a child of this container, or the index is out of range.\n   * @param {DisplayObject} child\n   * @param {Number} index  \n   * @method setChildIndex\n   **/\n\n\n  p.setChildIndex = function (child, index) {\n    var kids = this.children,\n        l = kids.length;\n\n    if (child.parent != this || index < 0 || index >= l) {\n      return;\n    }\n\n    for (var i = 0; i < l; i++) {\n      if (kids[i] == child) {\n        break;\n      }\n    }\n\n    if (i == l || i == index) {\n      return;\n    }\n\n    kids.splice(i, 1);\n    kids.splice(index, 0, child);\n  };\n  /**\n   * Returns true if the specified display object either is this container or is a descendent (child, grandchild, etc)\n   * of this container.\n   * @method contains\n   * @param {DisplayObject} child The DisplayObject to be checked.\n   * @return {Boolean} true if the specified display object either is this container or is a descendent.\n   **/\n\n\n  p.contains = function (child) {\n    while (child) {\n      if (child == this) {\n        return true;\n      }\n\n      child = child.parent;\n    }\n\n    return false;\n  };\n  /**\n   * Tests whether the display object intersects the specified local point (ie. draws a pixel with alpha > 0 at the\n   * specified position). This ignores the alpha, shadow and compositeOperation of the display object, and all\n   * transform properties including regX/Y.\n   * @method hitTest\n   * @param {Number} x The x position to check in the display object's local coordinates.\n   * @param {Number} y The y position to check in the display object's local coordinates.\n   * @return {Boolean} A Boolean indicating whether there is a visible section of a DisplayObject that overlaps the specified\n   * coordinates.\n   **/\n\n\n  p.hitTest = function (x, y) {\n    // TODO: optimize to use the fast cache check where possible.\n    return this.getObjectUnderPoint(x, y) != null;\n  };\n  /**\n   * Returns an array of all display objects under the specified coordinates that are in this container's display\n   * list. This routine ignores any display objects with {{#crossLink \"DisplayObject/mouseEnabled:property\"}}{{/crossLink}}\n   * set to `false`. The array will be sorted in order of visual depth, with the top-most display object at index 0.\n   * This uses shape based hit detection, and can be an expensive operation to run, so it is best to use it carefully.\n   * For example, if testing for objects under the mouse, test on tick (instead of on {{#crossLink \"DisplayObject/mousemove:event\"}}{{/crossLink}}),\n   * and only if the mouse's position has changed.\n   * \n   * <ul>\n   *     <li>By default (mode=0) this method evaluates all display objects.</li>\n   *     <li>By setting the `mode` parameter to `1`, the {{#crossLink \"DisplayObject/mouseEnabled:property\"}}{{/crossLink}}\n   * \t\tand {{#crossLink \"mouseChildren:property\"}}{{/crossLink}} properties will be respected.</li>\n   * \t   <li>Setting the `mode` to `2` additionally excludes display objects that do not have active mouse event\n   * \t   \tlisteners or a {{#crossLink \"DisplayObject:cursor:property\"}}{{/crossLink}} property. That is, only objects\n   * \t   \tthat would normally intercept mouse interaction will be included. This can significantly improve performance\n   * \t   \tin some cases by reducing the number of display objects that need to be tested.</li>\n   * </li>\n   * \n   * This method accounts for both {{#crossLink \"DisplayObject/hitArea:property\"}}{{/crossLink}} and {{#crossLink \"DisplayObject/mask:property\"}}{{/crossLink}}.\n   * @method getObjectsUnderPoint\n   * @param {Number} x The x position in the container to test.\n   * @param {Number} y The y position in the container to test.\n   * @param {Number} [mode=0] The mode to use to determine which display objects to include. 0-all, 1-respect mouseEnabled/mouseChildren, 2-only mouse opaque objects.\n   * @return {Array} An Array of DisplayObjects under the specified coordinates.\n   **/\n\n\n  p.getObjectsUnderPoint = function (x, y, mode) {\n    var arr = [];\n    var pt = this.localToGlobal(x, y);\n\n    this._getObjectsUnderPoint(pt.x, pt.y, arr, mode > 0, mode == 1);\n\n    return arr;\n  };\n  /**\n   * Similar to {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}}, but returns only the top-most display\n   * object. This runs significantly faster than <code>getObjectsUnderPoint()</code>, but is still potentially an expensive\n   * operation. See {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}} for more information.\n   * @method getObjectUnderPoint\n   * @param {Number} x The x position in the container to test.\n   * @param {Number} y The y position in the container to test.\n   * @param {Number} mode The mode to use to determine which display objects to include.  0-all, 1-respect mouseEnabled/mouseChildren, 2-only mouse opaque objects.\n   * @return {DisplayObject} The top-most display object under the specified coordinates.\n   **/\n\n\n  p.getObjectUnderPoint = function (x, y, mode) {\n    var pt = this.localToGlobal(x, y);\n    return this._getObjectsUnderPoint(pt.x, pt.y, null, mode > 0, mode == 1);\n  };\n  /**\n   * Docced in superclass.\n   */\n\n\n  p.getBounds = function () {\n    return this._getBounds(null, true);\n  };\n  /**\n   * Docced in superclass.\n   */\n\n\n  p.getTransformedBounds = function () {\n    return this._getBounds();\n  };\n  /**\n   * Returns a clone of this Container. Some properties that are specific to this instance's current context are\n   * reverted to their defaults (for example .parent).\n   * @method clone\n   * @param {Boolean} [recursive=false] If true, all of the descendants of this container will be cloned recursively. If false, the\n   * properties of the container will be cloned, but the new instance will not have any children.\n   * @return {Container} A clone of the current Container instance.\n   **/\n\n\n  p.clone = function (recursive) {\n    var o = this._cloneProps(new Container());\n\n    if (recursive) {\n      this._cloneChildren(o);\n    }\n\n    return o;\n  };\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n\n\n  p.toString = function () {\n    return \"[Container (name=\" + this.name + \")]\";\n  }; // private methods:\n\n  /**\n   * @method _tick\n   * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n   * @protected\n   **/\n\n\n  p._tick = function (evtObj) {\n    if (this.tickChildren) {\n      for (var i = this.children.length - 1; i >= 0; i--) {\n        var child = this.children[i];\n\n        if (child.tickEnabled && child._tick) {\n          child._tick(evtObj);\n        }\n      }\n    }\n\n    this.DisplayObject__tick(evtObj);\n  };\n  /**\n   * Recursively clones all children of this container, and adds them to the target container.\n   * @method cloneChildren\n   * @protected\n   * @param {Container} o The target container.\n   **/\n\n\n  p._cloneChildren = function (o) {\n    if (o.children.length) {\n      o.removeAllChildren();\n    }\n\n    var arr = o.children;\n\n    for (var i = 0, l = this.children.length; i < l; i++) {\n      var clone = this.children[i].clone(true);\n      clone.parent = o;\n      arr.push(clone);\n    }\n  };\n  /**\n   * Removes the child at the specified index from the display list, and sets its parent to null.\n   * Used by `removeChildAt`, `addChild`, and `addChildAt`.\n   * @method removeChildAt\n   * @protected\n   * @param {Number} index The index of the child to remove.\n   * @param {Boolean} [silent] Prevents dispatch of `removed` event if true.\n   * @return {Boolean} true if the child (or children) was removed, or false if any index was out of range.\n   **/\n\n\n  p._removeChildAt = function (index, silent) {\n    if (index < 0 || index > this.children.length - 1) {\n      return false;\n    }\n\n    var child = this.children[index];\n\n    if (child) {\n      child.parent = null;\n    }\n\n    this.children.splice(index, 1);\n\n    if (!silent) {\n      child.dispatchEvent(\"removed\");\n    }\n\n    return true;\n  };\n  /**\n   * @method _getObjectsUnderPoint\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Array} arr\n   * @param {Boolean} mouse If true, it will respect mouse interaction properties like mouseEnabled, mouseChildren, and active listeners.\n   * @param {Boolean} activeListener If true, there is an active mouse event listener on a parent object.\n   * @param {Number} currentDepth Indicates the current depth of the search.\n   * @return {DisplayObject}\n   * @protected\n   **/\n\n\n  p._getObjectsUnderPoint = function (x, y, arr, mouse, activeListener, currentDepth) {\n    currentDepth = currentDepth || 0;\n\n    if (!currentDepth && !this._testMask(this, x, y)) {\n      return null;\n    }\n\n    var mtx,\n        ctx = createjs.DisplayObject._hitTestContext;\n    activeListener = activeListener || mouse && this._hasMouseEventListener(); // draw children one at a time, and check if we get a hit:\n\n    var children = this.children,\n        l = children.length;\n\n    for (var i = l - 1; i >= 0; i--) {\n      var child = children[i];\n      var hitArea = child.hitArea;\n\n      if (!child.visible || !hitArea && !child.isVisible() || mouse && !child.mouseEnabled) {\n        continue;\n      }\n\n      if (!hitArea && !this._testMask(child, x, y)) {\n        continue;\n      } // if a child container has a hitArea then we only need to check its hitAre2a, so we can treat it as a normal DO:\n\n\n      if (!hitArea && child instanceof Container) {\n        var result = child._getObjectsUnderPoint(x, y, arr, mouse, activeListener, currentDepth + 1);\n\n        if (!arr && result) {\n          return mouse && !this.mouseChildren ? this : result;\n        }\n      } else {\n        if (mouse && !activeListener && !child._hasMouseEventListener()) {\n          continue;\n        } // TODO: can we pass displayProps forward, to avoid having to calculate this backwards every time? It's kind of a mixed bag. When we're only hunting for DOs with event listeners, it may not make sense.\n\n\n        var props = child.getConcatenatedDisplayProps(child._props);\n        mtx = props.matrix;\n\n        if (hitArea) {\n          mtx.appendMatrix(hitArea.getMatrix(hitArea._props.matrix));\n          props.alpha = hitArea.alpha;\n        }\n\n        ctx.globalAlpha = props.alpha;\n        ctx.setTransform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx - x, mtx.ty - y);\n        (hitArea || child).draw(ctx);\n\n        if (!this._testHit(ctx)) {\n          continue;\n        }\n\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        ctx.clearRect(0, 0, 2, 2);\n\n        if (arr) {\n          arr.push(child);\n        } else {\n          return mouse && !this.mouseChildren ? this : child;\n        }\n      }\n    }\n\n    return null;\n  };\n  /**\n   * @method _testMask\n   * @param {DisplayObject} target\n   * @param {Number} x\n   * @param {Number} y\n   * @return {Boolean} Indicates whether the x/y is within the masked region.\n   * @protected\n   **/\n\n\n  p._testMask = function (target, x, y) {\n    var mask = target.mask;\n\n    if (!mask || !mask.graphics || mask.graphics.isEmpty()) {\n      return true;\n    }\n\n    var mtx = this._props.matrix,\n        parent = target.parent;\n    mtx = parent ? parent.getConcatenatedMatrix(mtx) : mtx.identity();\n    mtx = mask.getMatrix(mask._props.matrix).prependMatrix(mtx);\n    var ctx = createjs.DisplayObject._hitTestContext;\n    ctx.setTransform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx - x, mtx.ty - y); // draw the mask as a solid fill:\n\n    mask.graphics.drawAsPath(ctx);\n    ctx.fillStyle = \"#000\";\n    ctx.fill();\n\n    if (!this._testHit(ctx)) {\n      return false;\n    }\n\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.clearRect(0, 0, 2, 2);\n    return true;\n  };\n  /**\n   * @method _getBounds\n   * @param {Matrix2D} matrix\n   * @param {Boolean} ignoreTransform If true, does not apply this object's transform.\n   * @return {Rectangle}\n   * @protected\n   **/\n\n\n  p._getBounds = function (matrix, ignoreTransform) {\n    var bounds = this.DisplayObject_getBounds();\n\n    if (bounds) {\n      return this._transformBounds(bounds, matrix, ignoreTransform);\n    }\n\n    var mtx = this._props.matrix;\n    mtx = ignoreTransform ? mtx.identity() : this.getMatrix(mtx);\n\n    if (matrix) {\n      mtx.prependMatrix(matrix);\n    }\n\n    var l = this.children.length,\n        rect = null;\n\n    for (var i = 0; i < l; i++) {\n      var child = this.children[i];\n\n      if (!child.visible || !(bounds = child._getBounds(mtx))) {\n        continue;\n      }\n\n      if (rect) {\n        rect.extend(bounds.x, bounds.y, bounds.width, bounds.height);\n      } else {\n        rect = bounds.clone();\n      }\n    }\n\n    return rect;\n  };\n\n  createjs.Container = createjs.promote(Container, \"DisplayObject\");\n})(); //##############################################################################\n// Stage.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor:\n\n  /**\n   * A stage is the root level {{#crossLink \"Container\"}}{{/crossLink}} for a display list. Each time its {{#crossLink \"Stage/tick\"}}{{/crossLink}}\n   * method is called, it will render its display list to its target canvas.\n   *\n   * <h4>Example</h4>\n   * This example creates a stage, adds a child to it, then uses {{#crossLink \"Ticker\"}}{{/crossLink}} to update the child\n   * and redraw the stage using {{#crossLink \"Stage/update\"}}{{/crossLink}}.\n   *\n   *      var stage = new createjs.Stage(\"canvasElementId\");\n   *      var image = new createjs.Bitmap(\"imagePath.png\");\n   *      stage.addChild(image);\n   *      createjs.Ticker.addEventListener(\"tick\", handleTick);\n   *      function handleTick(event) {\n   *          image.x += 10;\n   *          stage.update();\n   *      }\n   *\n   * @class Stage\n   * @extends Container\n   * @constructor\n   * @param {HTMLCanvasElement | String | Object} canvas A canvas object that the Stage will render to, or the string id\n   * of a canvas object in the current document.\n   **/\n\n  function Stage(canvas) {\n    this.Container_constructor(); // public properties:\n\n    /**\n     * Indicates whether the stage should automatically clear the canvas before each render. You can set this to <code>false</code>\n     * to manually control clearing (for generative art, or when pointing multiple stages at the same canvas for\n     * example).\n     *\n     * <h4>Example</h4>\n     *\n     *      var stage = new createjs.Stage(\"canvasId\");\n     *      stage.autoClear = false;\n     *\n     * @property autoClear\n     * @type Boolean\n     * @default true\n     **/\n\n    this.autoClear = true;\n    /**\n     * The canvas the stage will render to. Multiple stages can share a single canvas, but you must disable autoClear for all but the\n     * first stage that will be ticked (or they will clear each other's render).\n     *\n     * When changing the canvas property you must disable the events on the old canvas, and enable events on the\n     * new canvas or mouse events will not work as expected. For example:\n     *\n     *      myStage.enableDOMEvents(false);\n     *      myStage.canvas = anotherCanvas;\n     *      myStage.enableDOMEvents(true);\n     *\n     * @property canvas\n     * @type HTMLCanvasElement | Object\n     **/\n\n    this.canvas = typeof canvas == \"string\" ? document.getElementById(canvas) : canvas;\n    /**\n     * The current mouse X position on the canvas. If the mouse leaves the canvas, this will indicate the most recent\n     * position over the canvas, and mouseInBounds will be set to false.\n     * @property mouseX\n     * @type Number\n     * @readonly\n     **/\n\n    this.mouseX = 0;\n    /**\n     * The current mouse Y position on the canvas. If the mouse leaves the canvas, this will indicate the most recent\n     * position over the canvas, and mouseInBounds will be set to false.\n     * @property mouseY\n     * @type Number\n     * @readonly\n     **/\n\n    this.mouseY = 0;\n    /**\n     * Specifies the area of the stage to affect when calling update. This can be use to selectively\n     * re-draw specific regions of the canvas. If null, the whole canvas area is drawn.\n     * @property drawRect\n     * @type {Rectangle}\n     */\n\n    this.drawRect = null;\n    /**\n     * Indicates whether display objects should be rendered on whole pixels. You can set the\n     * {{#crossLink \"DisplayObject/snapToPixel\"}}{{/crossLink}} property of\n     * display objects to false to enable/disable this behaviour on a per instance basis.\n     * @property snapToPixelEnabled\n     * @type Boolean\n     * @default false\n     **/\n\n    this.snapToPixelEnabled = false;\n    /**\n     * Indicates whether the mouse is currently within the bounds of the canvas.\n     * @property mouseInBounds\n     * @type Boolean\n     * @default false\n     **/\n\n    this.mouseInBounds = false;\n    /**\n     * If true, tick callbacks will be called on all display objects on the stage prior to rendering to the canvas.\n     * @property tickOnUpdate\n     * @type Boolean\n     * @default true\n     **/\n\n    this.tickOnUpdate = true;\n    /**\n     * If true, mouse move events will continue to be called when the mouse leaves the target canvas. See\n     * {{#crossLink \"Stage/mouseInBounds:property\"}}{{/crossLink}}, and {{#crossLink \"MouseEvent\"}}{{/crossLink}}\n     * x/y/rawX/rawY.\n     * @property mouseMoveOutside\n     * @type Boolean\n     * @default false\n     **/\n\n    this.mouseMoveOutside = false;\n    /**\n     * Prevents selection of other elements in the html page if the user clicks and drags, or double clicks on the canvas.\n     * This works by calling `preventDefault()` on any mousedown events (or touch equivalent) originating on the canvas.\n     * @property preventSelection\n     * @type Boolean\n     * @default true\n     **/\n\n    this.preventSelection = true;\n    /**\n     * The hitArea property is not supported for Stage.\n     * @property hitArea\n     * @type {DisplayObject}\n     * @default null\n     */\n    // private properties:\n\n    /**\n     * Holds objects with data for each active pointer id. Each object has the following properties:\n     * x, y, event, target, overTarget, overX, overY, inBounds, posEvtObj (native event that last updated position)\n     * @property _pointerData\n     * @type {Object}\n     * @private\n     */\n\n    this._pointerData = {};\n    /**\n     * Number of active pointers.\n     * @property _pointerCount\n     * @type {Object}\n     * @private\n     */\n\n    this._pointerCount = 0;\n    /**\n     * The ID of the primary pointer.\n     * @property _primaryPointerID\n     * @type {Object}\n     * @private\n     */\n\n    this._primaryPointerID = null;\n    /**\n     * @property _mouseOverIntervalID\n     * @protected\n     * @type Number\n     **/\n\n    this._mouseOverIntervalID = null;\n    /**\n     * @property _nextStage\n     * @protected\n     * @type Stage\n     **/\n\n    this._nextStage = null;\n    /**\n     * @property _prevStage\n     * @protected\n     * @type Stage\n     **/\n\n    this._prevStage = null; // initialize:\n\n    this.enableDOMEvents(true);\n  }\n\n  var p = createjs.extend(Stage, createjs.Container); // events:\n\n  /**\n   * Dispatched when the user moves the mouse over the canvas.\n   * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n   * @event stagemousemove\n   * @since 0.6.0\n   */\n\n  /**\n   * Dispatched when the user presses their left mouse button on the canvas. See the {{#crossLink \"MouseEvent\"}}{{/crossLink}}\n   * class for a listing of event properties.\n   * @event stagemousedown\n   * @since 0.6.0\n   */\n\n  /**\n   * Dispatched when the user the user presses somewhere on the stage, then releases the mouse button anywhere that the page can detect it (this varies slightly between browsers).\n   * You can use {{#crossLink \"Stage/mouseInBounds:property\"}}{{/crossLink}} to check whether the mouse is currently within the stage bounds.\n   * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n   * @event stagemouseup\n   * @since 0.6.0\n   */\n\n  /**\n   * Dispatched when the mouse moves from within the canvas area (mouseInBounds == true) to outside it (mouseInBounds == false).\n   * This is currently only dispatched for mouse input (not touch). See the {{#crossLink \"MouseEvent\"}}{{/crossLink}}\n   * class for a listing of event properties.\n   * @event mouseleave\n   * @since 0.7.0\n   */\n\n  /**\n   * Dispatched when the mouse moves into the canvas area (mouseInBounds == false) from outside it (mouseInBounds == true).\n   * This is currently only dispatched for mouse input (not touch). See the {{#crossLink \"MouseEvent\"}}{{/crossLink}}\n   * class for a listing of event properties.\n   * @event mouseenter\n   * @since 0.7.0\n   */\n\n  /**\n   * Dispatched each update immediately before the tick event is propagated through the display list.\n   * You can call preventDefault on the event object to cancel propagating the tick event.\n   * @event tickstart\n   * @since 0.7.0\n   */\n\n  /**\n   * Dispatched each update immediately after the tick event is propagated through the display list. Does not fire if\n   * tickOnUpdate is false. Precedes the \"drawstart\" event.\n   * @event tickend\n   * @since 0.7.0\n   */\n\n  /**\n   * Dispatched each update immediately before the canvas is cleared and the display list is drawn to it.\n   * You can call preventDefault on the event object to cancel the draw.\n   * @event drawstart\n   * @since 0.7.0\n   */\n\n  /**\n   * Dispatched each update immediately after the display list is drawn to the canvas and the canvas context is restored.\n   * @event drawend\n   * @since 0.7.0\n   */\n  // getter / setters:\n\n  /**\n   * Specifies a target stage that will have mouse / touch interactions relayed to it after this stage handles them.\n   * This can be useful in cases where you have multiple layered canvases and want user interactions\n   * events to pass through. For example, this would relay mouse events from topStage to bottomStage:\n   *\n   *      topStage.nextStage = bottomStage;\n   *\n   * To disable relaying, set nextStage to null.\n   * \n   * MouseOver, MouseOut, RollOver, and RollOut interactions are also passed through using the mouse over settings\n   * of the top-most stage, but are only processed if the target stage has mouse over interactions enabled.\n   * Considerations when using roll over in relay targets:<OL>\n   * <LI> The top-most (first) stage must have mouse over interactions enabled (via enableMouseOver)</LI>\n   * <LI> All stages that wish to participate in mouse over interaction must enable them via enableMouseOver</LI>\n   * <LI> All relay targets will share the frequency value of the top-most stage</LI>\n   * </OL>\n   * To illustrate, in this example the targetStage would process mouse over interactions at 10hz (despite passing\n   * 30 as it's desired frequency):\n   * \ttopStage.nextStage = targetStage;\n   * \ttopStage.enableMouseOver(10);\n   * \ttargetStage.enableMouseOver(30);\n   * \n   * If the target stage's canvas is completely covered by this stage's canvas, you may also want to disable its\n   * DOM events using:\n   * \n   *\ttargetStage.enableDOMEvents(false);\n   * \n   * @property nextStage\n   * @type {Stage}\n   **/\n\n  p._get_nextStage = function () {\n    return this._nextStage;\n  };\n\n  p._set_nextStage = function (value) {\n    if (this._nextStage) {\n      this._nextStage._prevStage = null;\n    }\n\n    if (value) {\n      value._prevStage = this;\n    }\n\n    this._nextStage = value;\n  };\n\n  try {\n    Object.defineProperties(p, {\n      nextStage: {\n        get: p._get_nextStage,\n        set: p._set_nextStage\n      }\n    });\n  } catch (e) {} // TODO: use Log\n  // public methods:\n\n  /**\n   * Each time the update method is called, the stage will call {{#crossLink \"Stage/tick\"}}{{/crossLink}}\n   * unless {{#crossLink \"Stage/tickOnUpdate:property\"}}{{/crossLink}} is set to false,\n   * and then render the display list to the canvas.\n   *\n   * @method update\n   * @param {Object} [props] Props object to pass to `tick()`. Should usually be a {{#crossLink \"Ticker\"}}{{/crossLink}} event object, or similar object with a delta property.\n   **/\n\n\n  p.update = function (props) {\n    if (!this.canvas) {\n      return;\n    }\n\n    if (this.tickOnUpdate) {\n      this.tick(props);\n    }\n\n    if (this.dispatchEvent(\"drawstart\", false, true) === false) {\n      return;\n    }\n\n    createjs.DisplayObject._snapToPixelEnabled = this.snapToPixelEnabled;\n    var r = this.drawRect,\n        ctx = this.canvas.getContext(\"2d\");\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n\n    if (this.autoClear) {\n      if (r) {\n        ctx.clearRect(r.x, r.y, r.width, r.height);\n      } else {\n        ctx.clearRect(0, 0, this.canvas.width + 1, this.canvas.height + 1);\n      }\n    }\n\n    ctx.save();\n\n    if (this.drawRect) {\n      ctx.beginPath();\n      ctx.rect(r.x, r.y, r.width, r.height);\n      ctx.clip();\n    }\n\n    this.updateContext(ctx);\n    this.draw(ctx, false);\n    ctx.restore();\n    this.dispatchEvent(\"drawend\");\n  };\n  /**\n   * Propagates a tick event through the display list. This is automatically called by {{#crossLink \"Stage/update\"}}{{/crossLink}}\n   * unless {{#crossLink \"Stage/tickOnUpdate:property\"}}{{/crossLink}} is set to false.\n   *\n   * If a props object is passed to `tick()`, then all of its properties will be copied to the event object that is\n   * propagated to listeners.\n   *\n   * Some time-based features in EaselJS (for example {{#crossLink \"Sprite/framerate\"}}{{/crossLink}} require that\n   * a {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}} event object (or equivalent object with a delta property) be\n   * passed as the `props` parameter to `tick()`. For example:\n   *\n   * \tTicker.on(\"tick\", handleTick);\n   * \tfunction handleTick(evtObj) {\n   * \t\t// clone the event object from Ticker, and add some custom data to it:\n   * \t\tvar evt = evtObj.clone().set({greeting:\"hello\", name:\"world\"});\n   * \t\t\n   * \t\t// pass it to stage.update():\n   * \t\tmyStage.update(evt); // subsequently calls tick() with the same param\n   * \t}\n   * \t\n   * \t// ...\n   * \tmyDisplayObject.on(\"tick\", handleDisplayObjectTick);\n   * \tfunction handleDisplayObjectTick(evt) {\n   * \t\tconsole.log(evt.delta); // the delta property from the Ticker tick event object\n   * \t\tconsole.log(evt.greeting, evt.name); // custom data: \"hello world\"\n   * \t}\n   * \n   * @method tick\n   * @param {Object} [props] An object with properties that should be copied to the event object. Should usually be a Ticker event object, or similar object with a delta property.\n   **/\n\n\n  p.tick = function (props) {\n    if (!this.tickEnabled || this.dispatchEvent(\"tickstart\", false, true) === false) {\n      return;\n    }\n\n    var evtObj = new createjs.Event(\"tick\");\n\n    if (props) {\n      for (var n in props) {\n        if (props.hasOwnProperty(n)) {\n          evtObj[n] = props[n];\n        }\n      }\n    }\n\n    this._tick(evtObj);\n\n    this.dispatchEvent(\"tickend\");\n  };\n  /**\n   * Default event handler that calls the Stage {{#crossLink \"Stage/update\"}}{{/crossLink}} method when a {{#crossLink \"DisplayObject/tick:event\"}}{{/crossLink}}\n   * event is received. This allows you to register a Stage instance as a event listener on {{#crossLink \"Ticker\"}}{{/crossLink}}\n   * directly, using:\n   *\n   *      Ticker.addEventListener(\"tick\", myStage);\n   *\n   * Note that if you subscribe to ticks using this pattern, then the tick event object will be passed through to\n   * display object tick handlers, instead of <code>delta</code> and <code>paused</code> parameters.\n   * @property handleEvent\n   * @type Function\n   **/\n\n\n  p.handleEvent = function (evt) {\n    if (evt.type == \"tick\") {\n      this.update(evt);\n    }\n  };\n  /**\n   * Clears the target canvas. Useful if {{#crossLink \"Stage/autoClear:property\"}}{{/crossLink}} is set to `false`.\n   * @method clear\n   **/\n\n\n  p.clear = function () {\n    if (!this.canvas) {\n      return;\n    }\n\n    var ctx = this.canvas.getContext(\"2d\");\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.clearRect(0, 0, this.canvas.width + 1, this.canvas.height + 1);\n  };\n  /**\n   * Returns a data url that contains a Base64-encoded image of the contents of the stage. The returned data url can\n   * be specified as the src value of an image element.\n   * @method toDataURL\n   * @param {String} [backgroundColor] The background color to be used for the generated image. Any valid CSS color\n   * value is allowed. The default value is a transparent background.\n   * @param {String} [mimeType=\"image/png\"] The MIME type of the image format to be create. The default is \"image/png\". If an unknown MIME type\n   * is passed in, or if the browser does not support the specified MIME type, the default value will be used.\n   * @return {String} a Base64 encoded image.\n   **/\n\n\n  p.toDataURL = function (backgroundColor, mimeType) {\n    var data,\n        ctx = this.canvas.getContext('2d'),\n        w = this.canvas.width,\n        h = this.canvas.height;\n\n    if (backgroundColor) {\n      data = ctx.getImageData(0, 0, w, h);\n      var compositeOperation = ctx.globalCompositeOperation;\n      ctx.globalCompositeOperation = \"destination-over\";\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(0, 0, w, h);\n    }\n\n    var dataURL = this.canvas.toDataURL(mimeType || \"image/png\");\n\n    if (backgroundColor) {\n      ctx.putImageData(data, 0, 0);\n      ctx.globalCompositeOperation = compositeOperation;\n    }\n\n    return dataURL;\n  };\n  /**\n   * Enables or disables (by passing a frequency of 0) mouse over ({{#crossLink \"DisplayObject/mouseover:event\"}}{{/crossLink}}\n   * and {{#crossLink \"DisplayObject/mouseout:event\"}}{{/crossLink}}) and roll over events ({{#crossLink \"DisplayObject/rollover:event\"}}{{/crossLink}}\n   * and {{#crossLink \"DisplayObject/rollout:event\"}}{{/crossLink}}) for this stage's display list. These events can\n   * be expensive to generate, so they are disabled by default. The frequency of the events can be controlled\n   * independently of mouse move events via the optional `frequency` parameter.\n   *\n   * <h4>Example</h4>\n   *\n   *      var stage = new createjs.Stage(\"canvasId\");\n   *      stage.enableMouseOver(10); // 10 updates per second\n   *\n   * @method enableMouseOver\n   * @param {Number} [frequency=20] Optional param specifying the maximum number of times per second to broadcast\n   * mouse over/out events. Set to 0 to disable mouse over events completely. Maximum is 50. A lower frequency is less\n   * responsive, but uses less CPU.\n   **/\n\n\n  p.enableMouseOver = function (frequency) {\n    if (this._mouseOverIntervalID) {\n      clearInterval(this._mouseOverIntervalID);\n      this._mouseOverIntervalID = null;\n\n      if (frequency == 0) {\n        this._testMouseOver(true);\n      }\n    }\n\n    if (frequency == null) {\n      frequency = 20;\n    } else if (frequency <= 0) {\n      return;\n    }\n\n    var o = this;\n    this._mouseOverIntervalID = setInterval(function () {\n      o._testMouseOver();\n    }, 1000 / Math.min(50, frequency));\n  };\n  /**\n   * Enables or disables the event listeners that stage adds to DOM elements (window, document and canvas). It is good\n   * practice to disable events when disposing of a Stage instance, otherwise the stage will continue to receive\n   * events from the page.\n   *\n   * When changing the canvas property you must disable the events on the old canvas, and enable events on the\n   * new canvas or mouse events will not work as expected. For example:\n   *\n   *      myStage.enableDOMEvents(false);\n   *      myStage.canvas = anotherCanvas;\n   *      myStage.enableDOMEvents(true);\n   *\n   * @method enableDOMEvents\n   * @param {Boolean} [enable=true] Indicates whether to enable or disable the events. Default is true.\n   **/\n\n\n  p.enableDOMEvents = function (enable) {\n    if (enable == null) {\n      enable = true;\n    }\n\n    var n,\n        o,\n        ls = this._eventListeners;\n\n    if (!enable && ls) {\n      for (n in ls) {\n        o = ls[n];\n        o.t.removeEventListener(n, o.f, false);\n      }\n\n      this._eventListeners = null;\n    } else if (enable && !ls && this.canvas) {\n      var t = window.addEventListener ? window : document;\n\n      var _this = this;\n\n      ls = this._eventListeners = {};\n      ls[\"mouseup\"] = {\n        t: t,\n        f: function (e) {\n          _this._handleMouseUp(e);\n        }\n      };\n      ls[\"mousemove\"] = {\n        t: t,\n        f: function (e) {\n          _this._handleMouseMove(e);\n        }\n      };\n      ls[\"dblclick\"] = {\n        t: this.canvas,\n        f: function (e) {\n          _this._handleDoubleClick(e);\n        }\n      };\n      ls[\"mousedown\"] = {\n        t: this.canvas,\n        f: function (e) {\n          _this._handleMouseDown(e);\n        }\n      };\n\n      for (n in ls) {\n        o = ls[n];\n        o.t.addEventListener(n, o.f, false);\n      }\n    }\n  };\n  /**\n   * Stage instances cannot be cloned.\n   * @method clone\n   **/\n\n\n  p.clone = function () {\n    throw \"Stage cannot be cloned.\";\n  };\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n\n\n  p.toString = function () {\n    return \"[Stage (name=\" + this.name + \")]\";\n  }; // private methods:\n\n  /**\n   * @method _getElementRect\n   * @protected\n   * @param {HTMLElement} e\n   **/\n\n\n  p._getElementRect = function (e) {\n    var bounds;\n\n    try {\n      bounds = e.getBoundingClientRect();\n    } // this can fail on disconnected DOM elements in IE9\n    catch (err) {\n      bounds = {\n        top: e.offsetTop,\n        left: e.offsetLeft,\n        width: e.offsetWidth,\n        height: e.offsetHeight\n      };\n    }\n\n    var offX = (window.pageXOffset || document.scrollLeft || 0) - (document.clientLeft || document.body.clientLeft || 0);\n    var offY = (window.pageYOffset || document.scrollTop || 0) - (document.clientTop || document.body.clientTop || 0);\n    var styles = window.getComputedStyle ? getComputedStyle(e, null) : e.currentStyle; // IE <9 compatibility.\n\n    var padL = parseInt(styles.paddingLeft) + parseInt(styles.borderLeftWidth);\n    var padT = parseInt(styles.paddingTop) + parseInt(styles.borderTopWidth);\n    var padR = parseInt(styles.paddingRight) + parseInt(styles.borderRightWidth);\n    var padB = parseInt(styles.paddingBottom) + parseInt(styles.borderBottomWidth); // note: in some browsers bounds properties are read only.\n\n    return {\n      left: bounds.left + offX + padL,\n      right: bounds.right + offX - padR,\n      top: bounds.top + offY + padT,\n      bottom: bounds.bottom + offY - padB\n    };\n  };\n  /**\n   * @method _getPointerData\n   * @protected\n   * @param {Number} id\n   **/\n\n\n  p._getPointerData = function (id) {\n    var data = this._pointerData[id];\n\n    if (!data) {\n      data = this._pointerData[id] = {\n        x: 0,\n        y: 0\n      };\n    }\n\n    return data;\n  };\n  /**\n   * @method _handleMouseMove\n   * @protected\n   * @param {MouseEvent} e\n   **/\n\n\n  p._handleMouseMove = function (e) {\n    if (!e) {\n      e = window.event;\n    }\n\n    this._handlePointerMove(-1, e, e.pageX, e.pageY);\n  };\n  /**\n   * @method _handlePointerMove\n   * @protected\n   * @param {Number} id\n   * @param {Event} e\n   * @param {Number} pageX\n   * @param {Number} pageY\n   * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n   **/\n\n\n  p._handlePointerMove = function (id, e, pageX, pageY, owner) {\n    if (this._prevStage && owner === undefined) {\n      return;\n    } // redundant listener.\n\n\n    if (!this.canvas) {\n      return;\n    }\n\n    var nextStage = this._nextStage,\n        o = this._getPointerData(id);\n\n    var inBounds = o.inBounds;\n\n    this._updatePointerPosition(id, e, pageX, pageY);\n\n    if (inBounds || o.inBounds || this.mouseMoveOutside) {\n      if (id === -1 && o.inBounds == !inBounds) {\n        this._dispatchMouseEvent(this, inBounds ? \"mouseleave\" : \"mouseenter\", false, id, o, e);\n      }\n\n      this._dispatchMouseEvent(this, \"stagemousemove\", false, id, o, e);\n\n      this._dispatchMouseEvent(o.target, \"pressmove\", true, id, o, e);\n    }\n\n    nextStage && nextStage._handlePointerMove(id, e, pageX, pageY, null);\n  };\n  /**\n   * @method _updatePointerPosition\n   * @protected\n   * @param {Number} id\n   * @param {Event} e\n   * @param {Number} pageX\n   * @param {Number} pageY\n   **/\n\n\n  p._updatePointerPosition = function (id, e, pageX, pageY) {\n    var rect = this._getElementRect(this.canvas);\n\n    pageX -= rect.left;\n    pageY -= rect.top;\n    var w = this.canvas.width;\n    var h = this.canvas.height;\n    pageX /= (rect.right - rect.left) / w;\n    pageY /= (rect.bottom - rect.top) / h;\n\n    var o = this._getPointerData(id);\n\n    if (o.inBounds = pageX >= 0 && pageY >= 0 && pageX <= w - 1 && pageY <= h - 1) {\n      o.x = pageX;\n      o.y = pageY;\n    } else if (this.mouseMoveOutside) {\n      o.x = pageX < 0 ? 0 : pageX > w - 1 ? w - 1 : pageX;\n      o.y = pageY < 0 ? 0 : pageY > h - 1 ? h - 1 : pageY;\n    }\n\n    o.posEvtObj = e;\n    o.rawX = pageX;\n    o.rawY = pageY;\n\n    if (id === this._primaryPointerID || id === -1) {\n      this.mouseX = o.x;\n      this.mouseY = o.y;\n      this.mouseInBounds = o.inBounds;\n    }\n  };\n  /**\n   * @method _handleMouseUp\n   * @protected\n   * @param {MouseEvent} e\n   **/\n\n\n  p._handleMouseUp = function (e) {\n    this._handlePointerUp(-1, e, false);\n  };\n  /**\n   * @method _handlePointerUp\n   * @protected\n   * @param {Number} id\n   * @param {Event} e\n   * @param {Boolean} clear\n   * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n   **/\n\n\n  p._handlePointerUp = function (id, e, clear, owner) {\n    var nextStage = this._nextStage,\n        o = this._getPointerData(id);\n\n    if (this._prevStage && owner === undefined) {\n      return;\n    } // redundant listener.\n\n\n    var target = null,\n        oTarget = o.target;\n\n    if (!owner && (oTarget || nextStage)) {\n      target = this._getObjectsUnderPoint(o.x, o.y, null, true);\n    }\n\n    if (o.down) {\n      this._dispatchMouseEvent(this, \"stagemouseup\", false, id, o, e, target);\n\n      o.down = false;\n    }\n\n    if (target == oTarget) {\n      this._dispatchMouseEvent(oTarget, \"click\", true, id, o, e);\n    }\n\n    this._dispatchMouseEvent(oTarget, \"pressup\", true, id, o, e);\n\n    if (clear) {\n      if (id == this._primaryPointerID) {\n        this._primaryPointerID = null;\n      }\n\n      delete this._pointerData[id];\n    } else {\n      o.target = null;\n    }\n\n    nextStage && nextStage._handlePointerUp(id, e, clear, owner || target && this);\n  };\n  /**\n   * @method _handleMouseDown\n   * @protected\n   * @param {MouseEvent} e\n   **/\n\n\n  p._handleMouseDown = function (e) {\n    this._handlePointerDown(-1, e, e.pageX, e.pageY);\n  };\n  /**\n   * @method _handlePointerDown\n   * @protected\n   * @param {Number} id\n   * @param {Event} e\n   * @param {Number} pageX\n   * @param {Number} pageY\n   * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n   **/\n\n\n  p._handlePointerDown = function (id, e, pageX, pageY, owner) {\n    if (this.preventSelection) {\n      e.preventDefault();\n    }\n\n    if (this._primaryPointerID == null || id === -1) {\n      this._primaryPointerID = id;\n    } // mouse always takes over.\n\n\n    if (pageY != null) {\n      this._updatePointerPosition(id, e, pageX, pageY);\n    }\n\n    var target = null,\n        nextStage = this._nextStage,\n        o = this._getPointerData(id);\n\n    if (!owner) {\n      target = o.target = this._getObjectsUnderPoint(o.x, o.y, null, true);\n    }\n\n    if (o.inBounds) {\n      this._dispatchMouseEvent(this, \"stagemousedown\", false, id, o, e, target);\n\n      o.down = true;\n    }\n\n    this._dispatchMouseEvent(target, \"mousedown\", true, id, o, e);\n\n    nextStage && nextStage._handlePointerDown(id, e, pageX, pageY, owner || target && this);\n  };\n  /**\n   * @method _testMouseOver\n   * @param {Boolean} clear If true, clears the mouseover / rollover (ie. no target)\n   * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n   * @param {Stage} eventTarget The stage that the cursor is actively over.\n   * @protected\n   **/\n\n\n  p._testMouseOver = function (clear, owner, eventTarget) {\n    if (this._prevStage && owner === undefined) {\n      return;\n    } // redundant listener.\n\n\n    var nextStage = this._nextStage;\n\n    if (!this._mouseOverIntervalID) {\n      // not enabled for mouseover, but should still relay the event.\n      nextStage && nextStage._testMouseOver(clear, owner, eventTarget);\n      return;\n    }\n\n    var o = this._getPointerData(-1); // only update if the mouse position has changed. This provides a lot of optimization, but has some trade-offs.\n\n\n    if (!o || !clear && this.mouseX == this._mouseOverX && this.mouseY == this._mouseOverY && this.mouseInBounds) {\n      return;\n    }\n\n    var e = o.posEvtObj;\n    var isEventTarget = eventTarget || e && e.target == this.canvas;\n    var target = null,\n        common = -1,\n        cursor = \"\",\n        t,\n        i,\n        l;\n\n    if (!owner && (clear || this.mouseInBounds && isEventTarget)) {\n      target = this._getObjectsUnderPoint(this.mouseX, this.mouseY, null, true);\n      this._mouseOverX = this.mouseX;\n      this._mouseOverY = this.mouseY;\n    }\n\n    var oldList = this._mouseOverTarget || [];\n    var oldTarget = oldList[oldList.length - 1];\n    var list = this._mouseOverTarget = []; // generate ancestor list and check for cursor:\n\n    t = target;\n\n    while (t) {\n      list.unshift(t);\n\n      if (!cursor) {\n        cursor = t.cursor;\n      }\n\n      t = t.parent;\n    }\n\n    this.canvas.style.cursor = cursor;\n\n    if (!owner && eventTarget) {\n      eventTarget.canvas.style.cursor = cursor;\n    } // find common ancestor:\n\n\n    for (i = 0, l = list.length; i < l; i++) {\n      if (list[i] != oldList[i]) {\n        break;\n      }\n\n      common = i;\n    }\n\n    if (oldTarget != target) {\n      this._dispatchMouseEvent(oldTarget, \"mouseout\", true, -1, o, e, target);\n    }\n\n    for (i = oldList.length - 1; i > common; i--) {\n      this._dispatchMouseEvent(oldList[i], \"rollout\", false, -1, o, e, target);\n    }\n\n    for (i = list.length - 1; i > common; i--) {\n      this._dispatchMouseEvent(list[i], \"rollover\", false, -1, o, e, oldTarget);\n    }\n\n    if (oldTarget != target) {\n      this._dispatchMouseEvent(target, \"mouseover\", true, -1, o, e, oldTarget);\n    }\n\n    nextStage && nextStage._testMouseOver(clear, owner || target && this, eventTarget || isEventTarget && this);\n  };\n  /**\n   * @method _handleDoubleClick\n   * @protected\n   * @param {MouseEvent} e\n   * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n   **/\n\n\n  p._handleDoubleClick = function (e, owner) {\n    var target = null,\n        nextStage = this._nextStage,\n        o = this._getPointerData(-1);\n\n    if (!owner) {\n      target = this._getObjectsUnderPoint(o.x, o.y, null, true);\n\n      this._dispatchMouseEvent(target, \"dblclick\", true, -1, o, e);\n    }\n\n    nextStage && nextStage._handleDoubleClick(e, owner || target && this);\n  };\n  /**\n   * @method _dispatchMouseEvent\n   * @protected\n   * @param {DisplayObject} target\n   * @param {String} type\n   * @param {Boolean} bubbles\n   * @param {Number} pointerId\n   * @param {Object} o\n   * @param {MouseEvent} [nativeEvent]\n   * @param {DisplayObject} [relatedTarget]\n   **/\n\n\n  p._dispatchMouseEvent = function (target, type, bubbles, pointerId, o, nativeEvent, relatedTarget) {\n    // TODO: might be worth either reusing MouseEvent instances, or adding a willTrigger method to avoid GC.\n    if (!target || !bubbles && !target.hasEventListener(type)) {\n      return;\n    }\n    /*\n    // TODO: account for stage transformations?\n    this._mtx = this.getConcatenatedMatrix(this._mtx).invert();\n    var pt = this._mtx.transformPoint(o.x, o.y);\n    var evt = new createjs.MouseEvent(type, bubbles, false, pt.x, pt.y, nativeEvent, pointerId, pointerId==this._primaryPointerID || pointerId==-1, o.rawX, o.rawY);\n    */\n\n\n    var evt = new createjs.MouseEvent(type, bubbles, false, o.x, o.y, nativeEvent, pointerId, pointerId === this._primaryPointerID || pointerId === -1, o.rawX, o.rawY, relatedTarget);\n    target.dispatchEvent(evt);\n  };\n\n  createjs.Stage = createjs.promote(Stage, \"Container\");\n})(); //##############################################################################\n// StageGL.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n/*\n * README IF EDITING:\n * Terminology for developers:\n *\n * Vertex: a point that help defines a shape, 3 per triangle. Usually has an x,y,z but can have more/less info.\n * Vertex Property: a piece of information attached to the vertex like a vector3 containing x,y,z\n * Index/Indices: used in groups of 3 to define a triangle, points to vertices by their index in an array (some render\n * \t\tmodes do not use these)\n * Card: a group of 2 triangles used to display a rectangular image\n * U/V: common names for the [0-1] texture co-ordinates on an image\n * Batch: a single call to the renderer, best done as little as possible so multiple cards are put into a single batch\n * Buffer: WebGL array data\n * Program/Shader: For every vertex we run the Vertex shader. The results are used per pixel by the Fragment shader. When\n * \t\tcombined and paired these are a shader \"program\"\n * Texture: WebGL representation of image data and associated extra information\n * Slot: A space on the GPU into which textures can be loaded for use in a batch, using \"ActiveTexture\" switches texture slot.\n */\n\n(function () {\n  \"use strict\";\n  /**\n   * A StageGL instance is the root level {{#crossLink \"Container\"}}{{/crossLink}} for an WebGL-optimized display list,\n   * which is used in place of the usual {{#crossLink \"Stage\"}}{{/crossLink}}. This class should behave identically to\n   * a {{#crossLink \"Stage\"}}{{/crossLink}} except for WebGL-specific functionality.\n   *\n   * Each time the {{#crossLink \"Stage/tick\"}}{{/crossLink}} method is called, the display list is rendered to the\n   * target &lt;canvas/&gt; instance, ignoring non-WebGL-compatible display objects. On devices and browsers that don't\n   * support WebGL, content will automatically be rendered to canvas 2D context instead.\n   *\n   * <h4>Limitations</h4>\n   * - {{#crossLink \"Shape\"}}{{/crossLink}}, {{#crossLink \"Shadow\"}}{{/crossLink}}, and {{#crossLink \"Text\"}}{{/crossLink}}\n   * \tare not rendered when added to the display list.\n   * - To display something StageGL cannot render, {{#crossLink \"displayObject/cache\"}}{{/crossLink}} the object.\n   *\tCaches can be rendered regardless of source.\n   * - Images are wrapped as a webGL \"Texture\". Each graphics card has a limit to its concurrent Textures, too many \n   * Textures will noticeably slow performance.\n   * - Each cache counts as an individual Texture. As such {{#crossLink \"SpriteSheet\"}}{{/crossLink}} and \n   * {{#crossLink \"SpriteSheetBuilder\"}}{{/crossLink}} are recommended practices to help keep texture counts low.\n   * - To use any image node (DOM Image/Canvas Element) between multiple StageGL instances it must be a \n   * {{#crossLink \"Bitmap/clone\"}}{{/crossLink}}, otherwise the GPU texture loading and tracking will get confused.\n   * - to avoid an up/down scaled render you must call {{#crossLink \"StageGL/updateViewport\"}}{{/crossLink}} if you\n   * resize your canvas after making a StageGL instance, this will properly size the WebGL context stored in memory.\n   * - Best performance in demanding scenarios will come from manual management of texture memory, but it is handled\n   * automatically by default. See {{#crossLink \"StageGL/releaseTexture\"}}{{/crossLink}} for details.\n   *\n   * <h4>Example</h4>\n   * This example creates a StageGL instance, adds a child to it, then uses the EaselJS {{#crossLink \"Ticker\"}}{{/crossLink}}\n   * to update the child and redraw the stage.\n   *\n   *      var stage = new createjs.StageGL(\"canvasElementId\");\n   *\n   *      var image = new createjs.Bitmap(\"imagePath.png\");\n   *      stage.addChild(image);\n   *\n   *      createjs.Ticker.on(\"tick\", handleTick);\n   *\n   *      function handleTick(event) {\n   *          image.x += 10;\n   *          stage.update();\n   *      }\n   *\n   * <h4>Notes</h4>\n   * - StageGL is not currently included in the minified version of EaselJS.\n   * - {{#crossLink \"SpriteContainer\"}}{{/crossLink}} (the previous approach to WebGL with EaselJS) has been deprecated.\n   * - Earlier versions of WebGL support in EaselJS (SpriteStage and SpriteContainer) had hard limitations on images\n   * \tper container, which have been solved.\n   *\n   * @class StageGL\n   * @extends Stage\n   * @constructor\n   * @param {HTMLCanvasElement | String | Object} canvas A canvas object that StageGL will render to, or the string id\n   *  of a canvas object in the current DOM.\n   * @param {Object} options All the option parameters in a reference object, some are not supported by some browsers.\n   * @param {Boolean} [options.preserveBuffer=false] If `true`, the canvas is NOT auto-cleared by WebGL (the spec\n   *  discourages setting this to `true`). This is useful if you want persistent draw effects.\n   * @param {Boolean} [options.antialias=false] Specifies whether or not the browser's WebGL implementation should try\n   *  to perform anti-aliasing. This will also enable linear pixel sampling on power-of-two textures (smoother images).\n   * @param {Boolean} [options.transparent=false] If `true`, the canvas is transparent. This is <strong>very</strong>\n   * expensive, and should be used with caution.\n   * @param {Boolean} [options.premultiply=false] Alters color handling. If `true`, this assumes the shader must\n   * account for pre-multiplied alpha. This can help avoid visual halo effects with some assets, but may also cause\n   * problems with other assets.\n   * @param {Integer} [options.autoPurge=1200] How often the system should automatically dump unused textures with\n   * `purgeTextures(autoPurge)` every `autoPurge/2` draws. See {{#crossLink \"StageGL/purgeTextures\"}}{{/crossLink}} for more\n   * information.\n   */\n\n  function StageGL(canvas, options) {\n    this.Stage_constructor(canvas);\n\n    if (options !== undefined) {\n      if (typeof options !== \"object\") {\n        throw \"Invalid options object\";\n      }\n\n      var premultiply = options.premultiply;\n      var transparent = options.transparent;\n      var antialias = options.antialias;\n      var preserveBuffer = options.preserveBuffer;\n      var autoPurge = options.autoPurge;\n    } // public properties:\n\n    /**\n     * Console log potential issues and problems. This is designed to have <em>minimal</em> performance impact, so\n     * if extensive debugging information is required, this may be inadequate. See {{#crossLink \"WebGLInspector\"}}{{/crossLink}}\n     * @property vocalDebug\n     * @type {Boolean}\n     * @default false\n     */\n\n\n    this.vocalDebug = false; // private properties:\n\n    /**\n     * Specifies whether or not the canvas is auto-cleared by WebGL. The WebGL spec discourages `true`.\n     * If true, the canvas is NOT auto-cleared by WebGL. Used when the canvas context is created and requires\n     * context re-creation to update.\n     * @property _preserveBuffer\n     * @protected\n     * @type {Boolean}\n     * @default false\n     */\n\n    this._preserveBuffer = preserveBuffer || false;\n    /**\n     * Specifies whether or not the browser's WebGL implementation should try to perform anti-aliasing.\n     * @property _antialias\n     * @protected\n     * @type {Boolean}\n     * @default false\n     */\n\n    this._antialias = antialias || false;\n    /**\n     * Specifies whether or not the browser's WebGL implementation should be transparent.\n     * @property _transparent\n     * @protected\n     * @type {Boolean}\n     * @default false\n     */\n\n    this._transparent = transparent || false;\n    /**\n     * Specifies whether or not StageGL is handling colours as premultiplied alpha.\n     * @property _premultiply\n     * @protected\n     * @type {Boolean}\n     * @default false\n     */\n\n    this._premultiply = premultiply || false;\n    /**\n     * Internal value of {{#crossLink \"StageGL/autoPurge\"}}{{/crossLink}}\n     * @property _autoPurge\n     * @protected\n     * @type {Integer}\n     * @default null\n     */\n\n    this._autoPurge = undefined;\n    this.autoPurge = autoPurge; //getter/setter handles setting the real value and validating\n\n    /**\n     * The width in px of the drawing surface saved in memory.\n     * @property _viewportWidth\n     * @protected\n     * @type {Number}\n     * @default 0\n     */\n\n    this._viewportWidth = 0;\n    /**\n     * The height in px of the drawing surface saved in memory.\n     * @property _viewportHeight\n     * @protected\n     * @type {Number}\n     * @default 0\n     */\n\n    this._viewportHeight = 0;\n    /**\n     * A 2D projection matrix used to convert WebGL's viewspace into canvas co-ordinates. Regular canvas display\n     * uses Top-Left values of [0,0] where WebGL uses a Center [0,0] Top-Right [1,1] (euclidean) system.\n     * @property _projectionMatrix\n     * @protected\n     * @type {Float32Array}\n     * @default null\n     */\n\n    this._projectionMatrix = null;\n    /**\n     * The current WebGL canvas context. Often shorthanded to just \"gl\" in many parts of the code.\n     * @property _webGLContext\n     * @protected\n     * @type {WebGLRenderingContext}\n     * @default null\n     */\n\n    this._webGLContext = null;\n    /**\n     * The color to use when the WebGL canvas has been cleared. May appear as a background color. Defaults to grey.\n     * @property _clearColor\n     * @protected\n     * @type {Object}\n     * @default {r: 0.50, g: 0.50, b: 0.50, a: 0.00}\n     */\n\n    this._clearColor = {\n      r: 0.50,\n      g: 0.50,\n      b: 0.50,\n      a: 0.00\n    };\n    /**\n     * The maximum number of cards (aka a single sprite) that can be drawn in one draw call. Use getter/setters to\n     * modify otherwise internal buffers may be incorrect sizes.\n     * @property _maxCardsPerBatch\n     * @protected\n     * @type {Number}\n     * @default StageGL.DEFAULT_MAX_BATCH_SIZE (10000)\n     */\n\n    this._maxCardsPerBatch = StageGL.DEFAULT_MAX_BATCH_SIZE; //TODO: write getter/setters for this\n\n    /**\n     * The shader program used to draw the current batch.\n     * @property _activeShader\n     * @protected\n     * @type {WebGLProgram}\n     * @default null\n     */\n\n    this._activeShader = null;\n    /**\n     * The vertex position data for the current draw call.\n     * @property _vertices\n     * @protected\n     * @type {Float32Array}\n     * @default null\n     */\n\n    this._vertices = null;\n    /**\n     * The WebGL buffer attached to {{#crossLink \"StageGL/_vertices:property\"}}{{/crossLink}}.\n     * @property _vertexPositionBuffer\n     * @protected\n     * @type {WebGLBuffer}\n     * @default null\n     */\n\n    this._vertexPositionBuffer = null;\n    /**\n     * The vertex U/V data for the current draw call.\n     * @property _uvs\n     * @protected\n     * @type {Float32Array}\n     * @default null\n     */\n\n    this._uvs = null;\n    /**\n     * The WebGL buffer attached to {{#crossLink \"StageGL/_uvs:property\"}}{{/crossLink}}.\n     * @property _uvPositionBuffer\n     * @protected\n     * @type {WebGLBuffer}\n     * @default null\n     */\n\n    this._uvPositionBuffer = null;\n    /**\n     * The vertex indices data for the current draw call.\n     * @property _indices\n     * @protected\n     * @type {Float32Array}\n     * @default null\n     */\n\n    this._indices = null;\n    /**\n     * The WebGL buffer attached to {{#crossLink \"StageGL/_indices:property\"}}{{/crossLink}}.\n     * @property _textureIndexBuffer\n     * @protected\n     * @type {WebGLBuffer}\n     * @default null\n     */\n\n    this._textureIndexBuffer = null;\n    /**\n     * The vertices data for the current draw call.\n     * @property _alphas\n     * @protected\n     * @type {Float32Array}\n     * @default null\n     */\n\n    this._alphas = null;\n    /**\n     * The WebGL buffer attached to {{#crossLink \"StageGL/_alphas:property\"}}{{/crossLink}}.\n     * @property _alphaBuffer\n     * @protected\n     * @type {WebGLBuffer}\n     * @default null\n     */\n\n    this._alphaBuffer = null;\n    /**\n     * An index based lookup of every WebGL Texture currently in use.\n     * @property _drawTexture\n     * @protected\n     * @type {Array}\n     */\n\n    this._textureDictionary = [];\n    /**\n     * A string based lookup hash of which index a texture is stored at in the dictionary. The lookup string is\n     * often the src url.\n     * @property _textureIDs\n     * @protected\n     * @type {Object}\n     */\n\n    this._textureIDs = {};\n    /**\n     * An array of all the textures currently loaded into the GPU. The index in the array matches the GPU index.\n     * @property _batchTextures\n     * @protected\n     * @type {Array}\n     */\n\n    this._batchTextures = [];\n    /**\n     * An array of all the simple filler textures used to prevent issues with missing textures in a batch.\n     * @property _baseTextures\n     * @protected\n     * @type {Array}\n     */\n\n    this._baseTextures = [];\n    /**\n     * The number of concurrent textures the GPU can handle. This value is dynamically set from WebGL during initialization\n     * via `gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS)`. The WebGL spec states that the lowest guaranteed value is 8,\n     * but it could be higher. Do not set this value higher than the value returned by the GPU. Setting it lower will\n     * probably reduce performance, but may be advisable to reserve slots for custom filter work.\n     * NOTE: Can also act as a length for {{#crossLink \"StageGL/_batchTextures:property\"}}.\n     * @property _batchTextureCount\n     * @protected\n     * @type {Number}\n     * @default 8\n     */\n\n    this._batchTextureCount = 8;\n    /**\n     * The location at which the last texture was inserted into a GPU slot in {{#crossLink \"StageGL/_batchTextures:property\"}}{{/crossLink}}.\n     * Manual control of this variable can yield improvements in performance by intelligently replacing textures\n     * inside a batch to reduce texture re-load. It is impossible to write automated general use code, as it requires\n     * display list look ahead inspection and/or render foreknowledge.\n     * @property _lastTextureInsert\n     * @protected\n     * @type {Number}\n     * @default -1\n     */\n\n    this._lastTextureInsert = -1;\n    /**\n     * The current batch being drawn, A batch consists of a call to `drawElements` on the GPU. Many of these calls\n     * can occur per draw.\n     * @property _batchId\n     * @protected\n     * @type {Number}\n     * @default 0\n     */\n\n    this._batchID = 0;\n    /**\n     * The current draw being performed, may contain multiple batches. Comparing to {{#crossLink \"StageGL/_batchID:property\"}}{{/crossLink}}\n     * can reveal batching efficiency.\n     * @property _drawID\n     * @protected\n     * @type {Number}\n     * @default 0\n     */\n\n    this._drawID = 0;\n    /**\n     * Used to prevent textures in certain GPU slots from being replaced by an insert.\n     * @property _slotBlackList\n     * @protected\n     * @type {Array}\n     */\n\n    this._slotBlacklist = [];\n    /**\n     * Used to prevent nested draw calls from accidentally overwriting drawing information by tracking depth.\n     * @property _isDrawing\n     * @protected\n     * @type {Number}\n     * @default 0\n     */\n\n    this._isDrawing = 0;\n    /**\n     * Used to ensure every canvas used as a texture source has a unique ID.\n     * @property _lastTrackedCanvas\n     * @protected\n     * @type {Number}\n     * @default 0\n     */\n\n    this._lastTrackedCanvas = 0;\n    /**\n     * Controls whether final rendering output of a {{#crossLink \"cacheDraw\"}}{{/crossLink}} is the canvas or a render\n     * texture. See the {{#crossLink \"cache\"}}{{/crossLink}} function modifications for full implications and discussion.\n     * @property isCacheControlled\n     * @protected\n     * @type {Boolean}\n     * @default false\n     * @todo LM: is this supposed to be _isCacheControlled since its private?\n     */\n\n    this.isCacheControlled = false;\n    /**\n     * Used to counter-position the object being cached so it aligns with the cache surface. Additionally ensures\n     * that all rendering starts with a top level container.\n     * @property _cacheContainer\n     * @protected\n     * @type {Container}\n     * @default An instance of an EaselJS Container.\n     */\n\n    this._cacheContainer = new createjs.Container(); // and begin\n\n    this._initializeWebGL();\n  }\n\n  var p = createjs.extend(StageGL, createjs.Stage); // static methods:\n\n  /**\n   * Calculate the U/V co-ordinate based info for sprite frames. Instead of pixel count it uses a 0-1 space. Also includes\n   * the ability to get info back for a specific frame, or only calculate that one frame.\n   *\n   *     //generate UV rects for all entries\n   *     StageGL.buildUVRects( spriteSheetA );\n   *     //generate all, fetch the first\n   *     var firstFrame = StageGL.buildUVRects( spriteSheetB, 0 );\n   *     //generate the rect for just a single frame for performance's sake\n   *     var newFrame = StageGL.buildUVRects( dynamicSpriteSheet, newFrameIndex, true );\n   *\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method buildUVRects\n   * @param  {SpriteSheet} spritesheet The spritesheet to find the frames on\n   * @param  {int} [target=-1] The index of the frame to return\n   * @param  {Boolean} [onlyTarget=false] Whether \"target\" is the only frame that gets calculated\n   * @static\n   * @return {Object} the target frame if supplied and present or a generic frame {t, l, b, r}\n   */\n\n  StageGL.buildUVRects = function (spritesheet, target, onlyTarget) {\n    if (!spritesheet || !spritesheet._frames) {\n      return null;\n    }\n\n    if (target === undefined) {\n      target = -1;\n    }\n\n    if (onlyTarget === undefined) {\n      onlyTarget = false;\n    }\n\n    var start = target != -1 && onlyTarget ? target : 0;\n    var end = target != -1 && onlyTarget ? target + 1 : spritesheet._frames.length;\n\n    for (var i = start; i < end; i++) {\n      var f = spritesheet._frames[i];\n\n      if (f.uvRect || f.image.width <= 0 || f.image.height <= 0) {\n        continue;\n      }\n\n      var r = f.rect;\n      f.uvRect = {\n        t: r.y / f.image.height,\n        l: r.x / f.image.width,\n        b: (r.y + r.height) / f.image.height,\n        r: (r.x + r.width) / f.image.width\n      };\n    }\n\n    return spritesheet._frames[target != -1 ? target : 0].uvRect || {\n      t: 0,\n      l: 0,\n      b: 1,\n      r: 1\n    };\n  };\n  /**\n   * Test a context to see if it has WebGL enabled on it.\n   * @method isWebGLActive\n   * @param {CanvasContext} ctx The context to test\n   * @static\n   * @return {Boolean} Whether WebGL is enabled\n   */\n\n\n  StageGL.isWebGLActive = function (ctx) {\n    return ctx && ctx instanceof WebGLRenderingContext && typeof WebGLRenderingContext !== 'undefined';\n  }; // static properties:\n\n  /**\n   * The number of properties defined per vertex (x, y, textureU, textureV, textureIndex, alpha)\n   * @property VERTEX_PROPERTY_COUNT\n   * @static\n   * @final\n   * @type {Number}\n   * @default 6\n   * @readonly\n   */\n\n\n  StageGL.VERTEX_PROPERTY_COUNT = 6;\n  /**\n   * The number of triangle indices it takes to form a Card. 3 per triangle, 2 triangles.\n   * @property INDICIES_PER_CARD\n   * @static\n   * @final\n   * @type {Number}\n   * @default 6\n   * @readonly\n   */\n\n  StageGL.INDICIES_PER_CARD = 6;\n  /**\n   * The default value for the maximum number of cards we want to process in a batch. See\n   * {{#crossLink \"StageGL/WEBGL_MAX_INDEX_NUM:property\"}}{{/crossLink}} for a hard limit.\n   * @property DEFAULT_MAX_BATCH_SIZE\n   * @static\n   * @final\n   * @type {Number}\n   * @default 10000\n   * @readonly\n   */\n\n  StageGL.DEFAULT_MAX_BATCH_SIZE = 10000;\n  /**\n   * The maximum size WebGL allows for element index numbers. Uses a 16 bit unsigned integer. It takes 6 indices to\n   * make a unique card.\n   * @property WEBGL_MAX_INDEX_NUM\n   * @static\n   * @final\n   * @type {Number}\n   * @default 65536\n   * @readonly\n   */\n\n  StageGL.WEBGL_MAX_INDEX_NUM = Math.pow(2, 16);\n  /**\n   * Default U/V rect for dealing with full coverage from an image source.\n   * @property UV_RECT\n   * @static\n   * @final\n   * @type {Object}\n   * @default {t:0, l:0, b:1, r:1}\n   * @readonly\n   */\n\n  StageGL.UV_RECT = {\n    t: 0,\n    l: 0,\n    b: 1,\n    r: 1\n  };\n\n  try {\n    /**\n     * Vertex positions for a card that covers the entire render. Used with render targets primarily.\n     * @property COVER_VERT\n     * @static\n     * @final\n     * @type {Float32Array}\n     * @readonly\n     */\n    StageGL.COVER_VERT = new Float32Array([-1, 1, //TL\n    1, 1, //TR\n    -1, -1, //BL\n    1, 1, //TR\n    1, -1, //BR\n    -1, -1 //BL\n    ]);\n    /**\n     * U/V for {{#crossLink \"StageGL/COVER_VERT:property\"}}{{/crossLink}}.\n     * @property COVER_UV\n     * @static\n     * @final\n     * @type {Float32Array}\n     * @readonly\n     */\n\n    StageGL.COVER_UV = new Float32Array([0, 0, //TL\n    1, 0, //TR\n    0, 1, //BL\n    1, 0, //TR\n    1, 1, //BR\n    0, 1 //BL\n    ]);\n    /**\n     * Flipped U/V for {{#crossLink \"StageGL:COVER_VERT:property\"}}{{/crossLink}}.\n     * @property COVER_UV_FLIP\n     * @static\n     * @final\n     * @type {Float32Array}\n     * @readonly\n     */\n\n    StageGL.COVER_UV_FLIP = new Float32Array([0, 1, //TL\n    1, 1, //TR\n    0, 0, //BL\n    1, 1, //TR\n    1, 0, //BR\n    0, 0 //BL\n    ]);\n  } catch (e) {}\n  /* Breaking in older browsers, but those browsers wont run StageGL so no recovery or warning needed */\n\n  /**\n   * Portion of the shader that contains the \"varying\" properties required in both vertex and fragment shaders. The\n   * regular shader is designed to render all expected objects. Shader code may contain templates that are replaced\n   * pre-compile.\n   * @property REGULAR_VARYING_HEADER\n   * @static\n   * @final\n   * @type {String}\n   * @readonly\n   */\n\n\n  StageGL.REGULAR_VARYING_HEADER = \"precision mediump float;\" + \"varying vec2 vTextureCoord;\" + \"varying lowp float indexPicker;\" + \"varying lowp float alphaValue;\";\n  /**\n   * Actual full header for the vertex shader. Includes the varying header. The regular shader is designed to render\n   * all expected objects. Shader code may contain templates that are replaced pre-compile.\n   * @property REGULAR_VERTEX_HEADER\n   * @static\n   * @final\n   * @type {String}\n   * @readonly\n   */\n\n  StageGL.REGULAR_VERTEX_HEADER = StageGL.REGULAR_VARYING_HEADER + \"attribute vec2 vertexPosition;\" + \"attribute vec2 uvPosition;\" + \"attribute lowp float textureIndex;\" + \"attribute lowp float objectAlpha;\" + \"uniform mat4 pMatrix;\";\n  /**\n   * Actual full header for the fragment shader. Includes the varying header. The regular shader is designed to render\n   * all expected objects. Shader code may contain templates that are replaced pre-compile.\n   * @property REGULAR_FRAGMENT_HEADER\n   * @static\n   * @final\n   * @type {String}\n   * @readonly\n   */\n\n  StageGL.REGULAR_FRAGMENT_HEADER = StageGL.REGULAR_VARYING_HEADER + \"uniform sampler2D uSampler[{{count}}];\";\n  /**\n   * Body of the vertex shader. The regular shader is designed to render all expected objects. Shader code may contain\n   * templates that are replaced pre-compile.\n   * @property REGULAR_VERTEX_BODY\n   * @static\n   * @final\n   * @type {String}\n   * @readonly\n   */\n\n  StageGL.REGULAR_VERTEX_BODY = \"void main(void) {\" + //DHG TODO: This doesn't work. Must be something wrong with the hand built matrix see js... bypass for now\n  //vertexPosition, round if flag\n  //\"gl_Position = pMatrix * vec4(vertexPosition.x, vertexPosition.y, 0.0, 1.0);\" +\n  \"gl_Position = vec4(\" + \"(vertexPosition.x * pMatrix[0][0]) + pMatrix[3][0],\" + \"(vertexPosition.y * pMatrix[1][1]) + pMatrix[3][1],\" + \"pMatrix[3][2],\" + \"1.0\" + \");\" + \"alphaValue = objectAlpha;\" + \"indexPicker = textureIndex;\" + \"vTextureCoord = uvPosition;\" + \"}\";\n  /**\n   * Body of the fragment shader. The regular shader is designed to render all expected objects. Shader code may\n   * contain templates that are replaced pre-compile.\n   * @property REGULAR_FRAGMENT_BODY\n   * @static\n   * @final\n   * @type {String}\n   * @readonly\n   */\n\n  StageGL.REGULAR_FRAGMENT_BODY = \"void main(void) {\" + \"vec4 color = vec4(1.0, 0.0, 0.0, 1.0);\" + \"if (indexPicker <= 0.5) {\" + \"color = texture2D(uSampler[0], vTextureCoord);\" + \"{{alternates}}\" + \"}\" + \"{{fragColor}}\" + \"}\";\n  StageGL.REGULAR_FRAG_COLOR_NORMAL = \"gl_FragColor = vec4(color.rgb, color.a * alphaValue);\";\n  StageGL.REGULAR_FRAG_COLOR_PREMULTIPLY = \"if(color.a > 0.0035) {\" + // 1/255 = 0.0039, so ignore any value below 1 because it's probably noise\n  \"gl_FragColor = vec4(color.rgb/color.a, color.a * alphaValue);\" + \"} else {\" + \"gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\" + \"}\"; //TODO: DHG: a real particle shader\n\n  /**\n   * @property PARTICLE_VERTEX_BODY\n   * @todo\n   * @final\n   * @static\n   * @type {String}\n   * @readonly\n   */\n\n  StageGL.PARTICLE_VERTEX_BODY = StageGL.REGULAR_VERTEX_BODY;\n  /**\n   * @property PARTICLE_FRAGMENT_BODY\n   * @todo\n   * @final\n   * @static\n   * @type {String}\n   * @readonly\n   */\n\n  StageGL.PARTICLE_FRAGMENT_BODY = StageGL.REGULAR_FRAGMENT_BODY;\n  /**\n   * Portion of the shader that contains the \"varying\" properties required in both vertex and fragment shaders. The\n   * cover shader is designed to be a simple vertex/uv only texture render that covers the render surface. Shader\n   * code may contain templates that are replaced pre-compile.\n   * @property COVER_VARYING_HEADER\n   * @static\n   * @final\n   * @type {String}\n   * @readonly\n   */\n\n  StageGL.COVER_VARYING_HEADER = \"precision mediump float;\" + \"varying highp vec2 vRenderCoord;\" + \"varying highp vec2 vTextureCoord;\";\n  /**\n   * Actual full header for the vertex shader. Includes the varying header. The cover shader is designed to be a\n   * simple vertex/uv only texture render that covers the render surface. Shader code may contain templates that are\n   * replaced pre-compile.\n   * @property COVER_VERTEX_HEADER\n   * @static\n   * @final\n   * @type {String}\n   * @readonly\n   */\n\n  StageGL.COVER_VERTEX_HEADER = StageGL.COVER_VARYING_HEADER + \"attribute vec2 vertexPosition;\" + \"attribute vec2 uvPosition;\" + \"uniform float uUpright;\";\n  /**\n   * Actual full header for the fragment shader. Includes the varying header. The cover shader is designed to be a\n   * simple vertex/uv only texture render that covers the render surface. Shader code may contain templates that are\n   * replaced pre-compile.\n   * @property COVER_FRAGMENT_HEADER\n   * @static\n   * @final\n   * @type {String}\n   * @readonly\n   */\n\n  StageGL.COVER_FRAGMENT_HEADER = StageGL.COVER_VARYING_HEADER + \"uniform sampler2D uSampler;\";\n  /**\n   * Body of the vertex shader. The cover shader is designed to be a simple vertex/uv only texture render that covers\n   * the render surface. Shader code may contain templates that are replaced pre-compile.\n   * @property COVER_VERTEX_BODY\n   * @static\n   * @final\n   * @type {String}\n   * @readonly\n   */\n\n  StageGL.COVER_VERTEX_BODY = \"void main(void) {\" + \"gl_Position = vec4(vertexPosition.x, vertexPosition.y, 0.0, 1.0);\" + \"vRenderCoord = uvPosition;\" + \"vTextureCoord = vec2(uvPosition.x, abs(uUpright - uvPosition.y));\" + \"}\";\n  /**\n   * Body of the fragment shader. The cover shader is designed to be a simple vertex/uv only texture render that\n   * covers the render surface. Shader code may contain templates that are replaced pre-compile.\n   * @property COVER_FRAGMENT_BODY\n   * @static\n   * @final\n   * @type {String}\n   * @readonly\n   */\n\n  StageGL.COVER_FRAGMENT_BODY = \"void main(void) {\" + \"vec4 color = texture2D(uSampler, vRenderCoord);\" + \"gl_FragColor = color;\" + \"}\"; // events:\n\n  /**\n   * Dispatched each update immediately before the canvas is cleared and the display list is drawn to it. You can call\n   * {{#crossLink \"Event/preventDefault\"}}{{/crossLink}} on the event to cancel the draw.\n   * @event drawstart\n   */\n\n  /**\n   * Dispatched each update immediately after the display list is drawn to the canvas and the canvas context is restored.\n   * @event drawend\n   */\n  // getter / setters:\n\n  p._get_isWebGL = function () {\n    return !!this._webGLContext;\n  };\n\n  p._set_autoPurge = function (value) {\n    value = isNaN(value) ? 1200 : value;\n\n    if (value != -1) {\n      value = value < 10 ? 10 : value;\n    }\n\n    this._autoPurge = value;\n  };\n\n  p._get_autoPurge = function () {\n    return Number(this._autoPurge);\n  };\n\n  try {\n    Object.defineProperties(p, {\n      /**\n       * Indicates whether WebGL is being used for rendering. For example, this would be `false` if WebGL is not\n       * supported in the browser.\n       * @property isWebGL\n       * @type {Boolean}\n       * @readonly\n       */\n      isWebGL: {\n        get: p._get_isWebGL\n      },\n\n      /**\n       * Specifies whether or not StageGL is automatically purging unused textures. Higher numbers purge less\n       * often. Values below 10 are upgraded to 10, and -1 disables this feature.\n       * @property autoPurge\n       * @protected\n       * @type {Integer}\n       * @default 1000\n       */\n      autoPurge: {\n        get: p._get_autoPurge,\n        set: p._set_autoPurge\n      }\n    });\n  } catch (e) {} // TODO: use Log\n  // constructor methods:\n\n  /**\n   * Create and properly initialize the WebGL instance.\n   * @method _initializeWebGL\n   * @protected\n   * @return {WebGLRenderingContext}\n   */\n\n\n  p._initializeWebGL = function () {\n    if (this.canvas) {\n      if (!this._webGLContext || this._webGLContext.canvas !== this.canvas) {\n        // A context hasn't been defined yet,\n        // OR the defined context belongs to a different canvas, so reinitialize.\n        // defaults and options\n        var options = {\n          depth: false,\n          // Disable the depth buffer as it isn't used.\n          alpha: this._transparent,\n          // Make the canvas background transparent.\n          stencil: true,\n          antialias: this._antialias,\n          premultipliedAlpha: this._premultiply,\n          // Assume the drawing buffer contains colors with premultiplied alpha.\n          preserveDrawingBuffer: this._preserveBuffer\n        };\n\n        var gl = this._webGLContext = this._fetchWebGLContext(this.canvas, options);\n\n        if (!gl) {\n          return null;\n        }\n\n        this.updateSimultaneousTextureCount(gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS));\n        this._maxTextureSlots = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n\n        this._createBuffers(gl);\n\n        this._initTextures(gl);\n\n        gl.disable(gl.DEPTH_TEST);\n        gl.enable(gl.BLEND);\n        gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this._premultiply); //gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, gl.NONE);\n\n        this._webGLContext.clearColor(this._clearColor.r, this._clearColor.g, this._clearColor.b, this._clearColor.a);\n\n        this.updateViewport(this._viewportWidth || this.canvas.width, this._viewportHeight || this.canvas.height);\n      }\n    } else {\n      this._webGLContext = null;\n    }\n\n    return this._webGLContext;\n  }; // public methods:\n\n  /**\n   * Docced in superclass\n   */\n\n\n  p.update = function (props) {\n    if (!this.canvas) {\n      return;\n    }\n\n    if (this.tickOnUpdate) {\n      this.tick(props);\n    }\n\n    this.dispatchEvent(\"drawstart\");\n\n    if (this.autoClear) {\n      this.clear();\n    }\n\n    if (this._webGLContext) {\n      // Use WebGL.\n      this._batchDraw(this, this._webGLContext);\n\n      if (this._autoPurge != -1 && !(this._drawID % (this._autoPurge / 2 | 0))) {\n        this.purgeTextures(this._autoPurge);\n      }\n    } else {\n      // Use 2D.\n      var ctx = this.canvas.getContext(\"2d\");\n      ctx.save();\n      this.updateContext(ctx);\n      this.draw(ctx, false);\n      ctx.restore();\n    }\n\n    this.dispatchEvent(\"drawend\");\n  };\n  /**\n   * Docced in superclass\n   */\n\n\n  p.clear = function () {\n    if (!this.canvas) {\n      return;\n    }\n\n    if (StageGL.isWebGLActive(this._webGLContext)) {\n      var gl = this._webGLContext;\n      var cc = this._clearColor;\n      var adjust = this._transparent ? cc.a : 1.0; // Use WebGL settings; adjust for pre multiplied alpha appropriate to scenario\n\n      this._webGLContext.clearColor(cc.r * adjust, cc.g * adjust, cc.b * adjust, adjust);\n\n      gl.clear(gl.COLOR_BUFFER_BIT);\n\n      this._webGLContext.clearColor(cc.r, cc.g, cc.b, cc.a);\n    } else {\n      // Use 2D.\n      this.Stage_clear();\n    }\n  };\n  /**\n   * Draws the stage into the supplied context if possible. Many WebGL properties only exist on their context. As such\n   * you cannot share contexts among many StageGLs and each context requires a unique StageGL instance. Contexts that\n   * don't match the context managed by this StageGL will be treated as a 2D context.\n   *\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method draw\n   * @param {CanvasRenderingContext2D | WebGLRenderingContext} context The context object to draw into.\n   * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache. For\n   *  example, used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\n   * @return {Boolean} If the draw was handled by this function\n   */\n\n\n  p.draw = function (context, ignoreCache) {\n    if (context === this._webGLContext && StageGL.isWebGLActive(this._webGLContext)) {\n      var gl = this._webGLContext;\n\n      this._batchDraw(this, gl, ignoreCache);\n\n      return true;\n    } else {\n      return this.Stage_draw(context, ignoreCache);\n    }\n  };\n  /**\n   * Draws the target into the correct context, be it a canvas or Render Texture using WebGL.\n   *\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method cacheDraw\n   * @param {DisplayObject} target The object we're drawing into cache.\n   * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\n   * @param {Array} filters The filters we're drawing into cache.\n   * @param {BitmapCache} manager The BitmapCache instance looking after the cache\n   * @return {Boolean} If the draw was handled by this function\n   */\n\n\n  p.cacheDraw = function (target, filters, manager) {\n    if (StageGL.isWebGLActive(this._webGLContext)) {\n      var gl = this._webGLContext;\n\n      this._cacheDraw(gl, target, filters, manager);\n\n      return true;\n    } else {\n      return false;\n    }\n  };\n  /**\n   * Blocks, or frees a texture \"slot\" on the GPU. Can be useful if you are overflowing textures. When overflowing\n   * textures they are re-uploaded to the GPU every time they're encountered, this can be expensive with large textures.\n   * By blocking the slot you reduce available slots, potentially increasing draw calls, but mostly you prevent a\n   * texture being re-uploaded if it would have moved slots due to overflow.\n   *\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * For example, block the slot a background image is stored in so there is less re-loading of that image.\n   * @method protectTextureSlot\n   * @param  {Number} id The slot to be affected\n   * @param  {Boolean} [lock=false] Whether this slot is the one being locked.\n   */\n\n\n  p.protectTextureSlot = function (id, lock) {\n    if (id > this._maxTextureSlots || id < 0) {\n      throw \"Slot outside of acceptable range\";\n    }\n\n    this._slotBlacklist[id] = !!lock;\n  };\n  /**\n   * Render textures can't draw into themselves so any item being used for renderTextures needs two to alternate between.\n   * This function creates, gets, and toggles the render surface between the two.\n   *\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method getTargetRenderTexture\n   * @param  {DisplayObject} target The object associated with the render textures, usually a cached object.\n   * @param  {Number} w The width to create the texture at.\n   * @param  {Number} h The height to create the texture at.\n   * @return {Objet}\n   * @todo fill in return type\n   */\n\n\n  p.getTargetRenderTexture = function (target, w, h) {\n    var result,\n        toggle = false;\n    var gl = this._webGLContext;\n\n    if (target.__lastRT !== undefined && target.__lastRT === target.__rtA) {\n      toggle = true;\n    }\n\n    if (!toggle) {\n      if (target.__rtA === undefined) {\n        target.__rtA = this.getRenderBufferTexture(w, h);\n      } else {\n        if (w != target.__rtA._width || h != target.__rtA._height) {\n          this.resizeTexture(target.__rtA, w, h);\n        }\n\n        this.setTextureParams(gl);\n      }\n\n      result = target.__rtA;\n    } else {\n      if (target.__rtB === undefined) {\n        target.__rtB = this.getRenderBufferTexture(w, h);\n      } else {\n        if (w != target.__rtB._width || h != target.__rtB._height) {\n          this.resizeTexture(target.__rtB, w, h);\n        }\n\n        this.setTextureParams(gl);\n      }\n\n      result = target.__rtB;\n    }\n\n    if (!result) {\n      throw \"Problems creating render textures, known causes include using too much VRAM by not releasing WebGL texture instances\";\n    }\n\n    target.__lastRT = result;\n    return result;\n  };\n  /**\n   * For every image encountered StageGL registers and tracks it automatically. This tracking can cause memory leaks \n   * if not purged. StageGL, by default, automatically purges them. This does have a cost and may unfortunately find\n   * false positives. This function is for manual management of this memory instead of the automatic system controlled\n   * by the {{#crossLink \"StageGL/autoPurge:property\"}}{{/crossLink}} property.\n   *\n   * This function will recursively remove all textures found on the object, its children, cache, etc. It will uncache \n   * objects and remove any texture it finds REGARDLESS of whether it is currently in use elsewhere. It is up to the\n   * developer to ensure that a texture in use is not removed.\n   *\n   * Textures in use, or to be used again shortly, should not be removed. This is simply for performance reasons.\n   * Removing a texture in use will cause the texture to have to be re-uploaded slowing rendering.\n   * @method releaseTexture\n   * @param  {DisplayObject | Texture | Image | Canvas} item An object that used the texture to be discarded.\n   */\n\n\n  p.releaseTexture = function (item) {\n    var i, l;\n\n    if (!item) {\n      return;\n    } // this is a container object\n\n\n    if (item.children) {\n      for (i = 0, l = item.children.length; i < l; i++) {\n        this.releaseTexture(item.children[i]);\n      }\n    } // this has a cache canvas\n\n\n    if (item.cacheCanvas) {\n      item.uncache();\n    }\n\n    var foundImage = undefined;\n\n    if (item._storeID !== undefined) {\n      // this is a texture itself\n      if (item === this._textureDictionary[item._storeID]) {\n        this._killTextureObject(item);\n\n        item._storeID = undefined;\n        return;\n      } // this is an image or canvas\n\n\n      foundImage = item;\n    } else if (item._webGLRenderStyle === 2) {\n      // this is a Bitmap class\n      foundImage = item.image;\n    } else if (item._webGLRenderStyle === 1) {\n      // this is a SpriteSheet, we can't tell which image we used from the list easily so remove them all!\n      for (i = 0, l = item.spriteSheet._images.length; i < l; i++) {\n        this.releaseTexture(item.spriteSheet._images[i]);\n      }\n\n      return;\n    } // did we find anything\n\n\n    if (foundImage === undefined) {\n      if (this.vocalDebug) {\n        console.log(\"No associated texture found on release\");\n      }\n\n      return;\n    } // remove it\n\n\n    this._killTextureObject(this._textureDictionary[foundImage._storeID]);\n\n    foundImage._storeID = undefined;\n  };\n  /**\n   * Similar to {{#crossLink \"releaseTexture\"}}{{/crossLink}}, but this function differs by searching for textures to\n   * release. It works by assuming that it can purge any texture which was last used more than \"count\" draw calls ago.\n   * Because this process is unaware of the objects and whether they may be used on your stage, false positives can\n   * occur. It is recommended to manually manage your memory with {{#crossLink \"StageGL/releaseTexture\"}}{{/crossLink}},\n   * however, there are many use cases where this is simpler and error-free. This process is also run by default under\n   * the hood to prevent leaks. To disable it see the {{#crossLink \"StageGL/autoPurge:property\"}}{{/crossLink}} property.\n   * @method purgeTextures\n   * @param {Number} [count=100] How many renders ago the texture was last used\n   */\n\n\n  p.purgeTextures = function (count) {\n    if (count == undefined) {\n      count = 100;\n    }\n\n    var dict = this._textureDictionary;\n    var l = dict.length;\n\n    for (var i = 0; i < l; i++) {\n      var item = dict[i];\n\n      if (!item) {\n        continue;\n      }\n\n      if (item._drawID + count <= this._drawID) {\n        // use draw not batch as draw is more indicative of time\n        this._killTextureObject(item);\n      }\n    }\n  };\n  /**\n   * Try to set the max textures the system can handle. It should default to the hardware maximum, and lower values\n   * may limit performance. Some devices have been known to mis-report their max textures, or you may need a standard\n   * baseline cross devices for testing. Barring the previous suggestions, there is little need to call this function\n   * as the library will automatically try to find the best value.\n   *\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method updateSimultaneousTextureCount\n   * @param {Number} [count=1] The number of textures intended for simultaneous loading.\n   */\n\n\n  p.updateSimultaneousTextureCount = function (count) {\n    // TODO: DHG: make sure API works in all instances, may be some issues with buffers etc I haven't foreseen\n    var gl = this._webGLContext;\n    var success = false;\n\n    if (count < 1 || isNaN(count)) {\n      count = 1;\n    }\n\n    this._batchTextureCount = count;\n\n    while (!success) {\n      try {\n        this._activeShader = this._fetchShaderProgram(gl);\n        success = true;\n      } catch (e) {\n        if (this._batchTextureCount == 1) {\n          throw \"Cannot compile shader \" + e;\n        }\n\n        this._batchTextureCount -= 4;\n\n        if (this._batchTextureCount < 1) {\n          this._batchTextureCount = 1;\n        }\n\n        if (this.vocalDebug) {\n          console.log(\"Reducing desired texture count due to errors: \" + this._batchTextureCount);\n        }\n      }\n    }\n  };\n  /**\n   * Update the WebGL viewport. Note that this does <strong>not</strong> update the canvas element's width/height, but\n   * the render surface's instead. This is necessary after manually resizing the canvas element on the DOM to avoid a\n   * up/down scaled render.\n   * @method updateViewport\n   * @param {Integer} width The width of the render surface in pixels.\n   * @param {Integer} height The height of the render surface in pixels.\n   */\n\n\n  p.updateViewport = function (width, height) {\n    this._viewportWidth = width | 0;\n    this._viewportHeight = height | 0;\n    var gl = this._webGLContext;\n\n    if (gl) {\n      gl.viewport(0, 0, this._viewportWidth, this._viewportHeight); // WebGL works with a -1,1 space on its screen. It also follows Y-Up\n      // we need to flip the y, scale and then translate the co-ordinates to match this\n      // additionally we offset into they Y so the polygons are inside the camera's \"clipping\" plane\n\n      this._projectionMatrix = new Float32Array([2 / this._viewportWidth, 0, 0, 0, 0, -2 / this._viewportHeight, 1, 0, 0, 0, 1, 0, -1, 1, 0.1, 0]); // create the flipped version for use with render texture flipping\n      // DHG: this would be a slice/clone but some platforms don't offer them for Float32Array\n\n      this._projectionMatrixFlip = new Float32Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n\n      this._projectionMatrixFlip.set(this._projectionMatrix);\n\n      this._projectionMatrixFlip[5] *= -1;\n      this._projectionMatrixFlip[13] *= -1;\n    }\n  };\n  /**\n   * Fetches the shader compiled and set up to work with the provided filter/object. The shader is compiled on first\n   * use and returned on subsequent calls.\n   * @method getFilterShader\n   * @param  {Filter|Object} filter The object which will provide the information needed to construct the filter shader.\n   * @return {WebGLProgram}\n   */\n\n\n  p.getFilterShader = function (filter) {\n    if (!filter) {\n      filter = this;\n    }\n\n    var gl = this._webGLContext;\n    var targetShader = this._activeShader;\n\n    if (filter._builtShader) {\n      targetShader = filter._builtShader;\n\n      if (filter.shaderParamSetup) {\n        gl.useProgram(targetShader);\n        filter.shaderParamSetup(gl, this, targetShader);\n      }\n    } else {\n      try {\n        targetShader = this._fetchShaderProgram(gl, \"filter\", filter.VTX_SHADER_BODY, filter.FRAG_SHADER_BODY, filter.shaderParamSetup && filter.shaderParamSetup.bind(filter));\n        filter._builtShader = targetShader;\n        targetShader._name = filter.toString();\n      } catch (e) {\n        console && console.log(\"SHADER SWITCH FAILURE\", e);\n      }\n    }\n\n    return targetShader;\n  };\n  /**\n   * Returns a base texture that has no image or data loaded. Not intended for loading images. It may return `null`\n   * in some error cases, and trying to use a \"null\" texture can cause renders to fail.\n   * @method getBaseTexture\n   * @param  {uint} [w=1] The width of the texture in pixels, defaults to 1\n   * @param  {uint} [h=1] The height of the texture in pixels, defaults to 1\n   */\n\n\n  p.getBaseTexture = function (w, h) {\n    var width = Math.ceil(w > 0 ? w : 1) || 1;\n    var height = Math.ceil(h > 0 ? h : 1) || 1;\n    var gl = this._webGLContext;\n    var texture = gl.createTexture();\n    this.resizeTexture(texture, width, height);\n    this.setTextureParams(gl, false);\n    return texture;\n  };\n  /**\n   * Resizes a supplied texture element. May generate invalid textures in some error cases such as; when the texture\n   * is too large, when an out of texture memory error occurs, or other error scenarios. Trying to use an invalid texture\n   * can cause renders to hard stop on some devices. Check the WebGL bound texture after running this function.\n   *\n   * NOTE: The supplied texture must have been made with the WebGL \"texImage2D\" function, all default APIs in StageGL\n   * use this, so this note only matters for library developers and plugins.\n   *\n   * @protected\n   * @method resizeTexture\n   * @param  {WebGLTexture} texture The GL Texture to be modified.\n   * @param  {uint} [width=1] The width of the texture in pixels, defaults to 1\n   * @param  {uint} [height=1] The height of the texture in pixels, defaults to 1\n   */\n\n\n  p.resizeTexture = function (texture, width, height) {\n    var gl = this._webGLContext;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(gl.TEXTURE_2D, // target\n    0, // level of detail\n    gl.RGBA, // internal format\n    width, height, 0, // width, height, border (only for array/null sourced textures)\n    gl.RGBA, // format (match internal format)\n    gl.UNSIGNED_BYTE, // type of texture(pixel color depth)\n    null // image data, we can do null because we're doing array data\n    );\n    texture.width = width;\n    texture.height = height;\n  };\n  /**\n   * Returns a base texture (see {{#crossLink \"StageGL/getBaseTexture\"}}{{/crossLink}}) for details. Also includes an\n   * attached and linked render buffer in `texture._frameBuffer`. RenderTextures can be thought of as an internal\n   * canvas on the GPU that can be drawn to.\n   * @method getRenderBufferTexture\n   * @param  {Number} w The width of the texture in pixels.\n   * @param  {Number} h The height of the texture in pixels.\n   * @return {Texture} the basic texture instance with a render buffer property.\n   */\n\n\n  p.getRenderBufferTexture = function (w, h) {\n    var gl = this._webGLContext; // get the texture\n\n    var renderTexture = this.getBaseTexture(w, h);\n\n    if (!renderTexture) {\n      return null;\n    } // get the frame buffer\n\n\n    var frameBuffer = gl.createFramebuffer();\n\n    if (!frameBuffer) {\n      return null;\n    } // set its width and height for spoofing as an image\n\n\n    renderTexture.width = w;\n    renderTexture.height = h; // attach frame buffer to texture and provide cross links to look up each other\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, renderTexture, 0);\n    frameBuffer._renderTexture = renderTexture;\n    renderTexture._frameBuffer = frameBuffer; // these keep track of themselves simply to reduce complexity of some lookup code\n\n    renderTexture._storeID = this._textureDictionary.length;\n    this._textureDictionary[renderTexture._storeID] = renderTexture;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    return renderTexture;\n  };\n  /**\n   * Common utility function used to apply the correct texture processing parameters for the bound texture.\n   * @method setTextureParams\n   * @param  {WebGLRenderingContext} gl The canvas WebGL context object to draw into.\n   * @param  {Boolean} [isPOT=false] Marks whether the texture is \"Power of Two\", this may allow better quality AA.\n   */\n\n\n  p.setTextureParams = function (gl, isPOT) {\n    if (isPOT && this._antialias) {\n      //non POT linear works in some devices, but performance is NOT good, investigate\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    } else {\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    }\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  };\n  /**\n   * Changes the webGL clear, aka \"background\" color to the provided value. A transparent clear is recommended, as\n   * non-transparent colours may create undesired boxes around some visuals.\n   *\n   * The clear color will also be used for filters and other \"render textures\". The stage background will ignore the\n   * transparency value and display a solid color normally. For the stage to recognize and use transparency it must be\n   * created with the transparent flag set to `true` (see {{#crossLink \"StageGL/constructor\"}}{{/crossLink}})).\n   *\n   * Using \"transparent white\" to demonstrate, the valid data formats are as follows:\n   * <ul>\n   *     <li>\"#FFF\"</li>\n   *     <li>\"#FFFFFF\"</li>\n   *     <li>\"#FFFFFF00\"</li>\n   *     <li>\"rgba(255,255,255,0.0)\"</li>\n   * </ul>\n   * @method setClearColor\n   * @param {String|int} [color=0x00000000] The new color to use as the background\n   */\n\n\n  p.setClearColor = function (color) {\n    var r, g, b, a, output;\n\n    if (typeof color == \"string\") {\n      if (color.indexOf(\"#\") == 0) {\n        if (color.length == 4) {\n          color = \"#\" + color.charAt(1) + color.charAt(1) + color.charAt(2) + color.charAt(2) + color.charAt(3) + color.charAt(3);\n        }\n\n        r = Number(\"0x\" + color.slice(1, 3)) / 255;\n        g = Number(\"0x\" + color.slice(3, 5)) / 255;\n        b = Number(\"0x\" + color.slice(5, 7)) / 255;\n        a = Number(\"0x\" + color.slice(7, 9)) / 255;\n      } else if (color.indexOf(\"rgba(\") == 0) {\n        output = color.slice(5, -1).split(\",\");\n        r = Number(output[0]) / 255;\n        g = Number(output[1]) / 255;\n        b = Number(output[2]) / 255;\n        a = Number(output[3]);\n      }\n    } else {\n      // >>> is an unsigned shift which is what we want as 0x80000000 and up are negative values\n      r = ((color & 0xFF000000) >>> 24) / 255;\n      g = ((color & 0x00FF0000) >>> 16) / 255;\n      b = ((color & 0x0000FF00) >>> 8) / 255;\n      a = (color & 0x000000FF) / 255;\n    }\n\n    this._clearColor.r = r || 0;\n    this._clearColor.g = g || 0;\n    this._clearColor.b = b || 0;\n    this._clearColor.a = a || 0;\n\n    if (!this._webGLContext) {\n      return;\n    }\n\n    this._webGLContext.clearColor(this._clearColor.r, this._clearColor.g, this._clearColor.b, this._clearColor.a);\n  };\n  /**\n   * docced in subclass\n   */\n\n\n  p.toString = function () {\n    return \"[StageGL (name=\" + this.name + \")]\";\n  }; // private methods:\n\n  /**\n   * Sets up and returns the WebGL context for the canvas. May return undefined in error scenarios. These can include \n   * situations where the canvas element already has a context, 2D or GL.\n   * @param  {Canvas} canvas The DOM canvas element to attach to\n   * @param  {Object} options The options to be handed into the WebGL object, see WebGL spec\n   * @method _fetchWebGLContext\n   * @protected\n   * @return {WebGLRenderingContext} The WebGL context, may return undefined in error scenarios\n   */\n\n\n  p._fetchWebGLContext = function (canvas, options) {\n    var gl;\n\n    try {\n      gl = canvas.getContext(\"webgl\", options) || canvas.getContext(\"experimental-webgl\", options);\n    } catch (e) {// don't do anything in catch, null check will handle it\n    }\n\n    if (!gl) {\n      var msg = \"Could not initialize WebGL\";\n      console.error ? console.error(msg) : console.log(msg);\n    } else {\n      gl.viewportWidth = canvas.width;\n      gl.viewportHeight = canvas.height;\n    }\n\n    return gl;\n  };\n  /**\n   * Create the completed Shader Program from the vertex and fragment shaders. Allows building of custom shaders for\n   * filters. Once compiled, shaders are saved so. If the Shader code requires dynamic alterations re-run this function\n   * to generate a new shader.\n   * @method _fetchShaderProgram\n   * @param  {WebGLRenderingContext} gl The canvas WebGL context object to draw into.\n   * @param  {String} [shaderName=\"regular\"] Working values: \"regular\", \"override\", and \"filter\". Which type of shader to build.\n   * Filter and override both accept the custom params. Regular and override have all features. Filter is a special case reduced feature shader meant to be over-ridden.\n   * @param  {String} [customVTX] Extra vertex shader information to replace a regular draw, see \n   * {{#crossLink \"StageGL/COVER_VERTEX_BODY\"}}{{/crossLink}} for default and {{#crossLink \"Filter\"}}{{/crossLink}} for examples.\n   * @param  {String} [customFRAG] Extra fragment shader information to replace a regular draw, see \n   * {{#crossLink \"StageGL/COVER_FRAGMENT_BODY\"}}{{/crossLink}} for default and {{#crossLink \"Filter\"}}{{/crossLink}} for examples.\n   * @param  {Function} [shaderParamSetup] Function to run so custom shader parameters can get applied for the render.\n   * @protected\n   * @return {WebGLProgram} The compiled and linked shader\n   */\n\n\n  p._fetchShaderProgram = function (gl, shaderName, customVTX, customFRAG, shaderParamSetup) {\n    gl.useProgram(null); // safety to avoid collisions\n    // build the correct shader string out of the right headers and bodies\n\n    var targetFrag, targetVtx;\n\n    switch (shaderName) {\n      case \"filter\":\n        targetVtx = StageGL.COVER_VERTEX_HEADER + (customVTX || StageGL.COVER_VERTEX_BODY);\n        targetFrag = StageGL.COVER_FRAGMENT_HEADER + (customFRAG || StageGL.COVER_FRAGMENT_BODY);\n        break;\n\n      case \"particle\":\n        //TODO\n        targetVtx = StageGL.REGULAR_VERTEX_HEADER + StageGL.PARTICLE_VERTEX_BODY;\n        targetFrag = StageGL.REGULAR_FRAGMENT_HEADER + StageGL.PARTICLE_FRAGMENT_BODY;\n        break;\n\n      case \"override\":\n        targetVtx = StageGL.REGULAR_VERTEX_HEADER + (customVTX || StageGL.REGULAR_VERTEX_BODY);\n        targetFrag = StageGL.REGULAR_FRAGMENT_HEADER + (customFRAG || StageGL.REGULAR_FRAGMENT_BODY);\n        break;\n\n      case \"regular\":\n      default:\n        targetVtx = StageGL.REGULAR_VERTEX_HEADER + StageGL.REGULAR_VERTEX_BODY;\n        targetFrag = StageGL.REGULAR_FRAGMENT_HEADER + StageGL.REGULAR_FRAGMENT_BODY;\n        break;\n    } // create the separate vars\n\n\n    var vertexShader = this._createShader(gl, gl.VERTEX_SHADER, targetVtx);\n\n    var fragmentShader = this._createShader(gl, gl.FRAGMENT_SHADER, targetFrag); // link them together\n\n\n    var shaderProgram = gl.createProgram();\n    gl.attachShader(shaderProgram, vertexShader);\n    gl.attachShader(shaderProgram, fragmentShader);\n    gl.linkProgram(shaderProgram);\n    shaderProgram._type = shaderName; // check compile status\n\n    if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n      gl.useProgram(this._activeShader);\n      throw gl.getProgramInfoLog(shaderProgram);\n    } // set up the parameters on the shader\n\n\n    gl.useProgram(shaderProgram);\n\n    switch (shaderName) {\n      case \"filter\":\n        // get the places in memory the shader is stored so we can feed information into them\n        // then save it off on the shader because it's so tied to the shader itself\n        shaderProgram.vertexPositionAttribute = gl.getAttribLocation(shaderProgram, \"vertexPosition\");\n        gl.enableVertexAttribArray(shaderProgram.vertexPositionAttribute);\n        shaderProgram.uvPositionAttribute = gl.getAttribLocation(shaderProgram, \"uvPosition\");\n        gl.enableVertexAttribArray(shaderProgram.uvPositionAttribute);\n        shaderProgram.samplerUniform = gl.getUniformLocation(shaderProgram, \"uSampler\");\n        gl.uniform1i(shaderProgram.samplerUniform, 0);\n        shaderProgram.uprightUniform = gl.getUniformLocation(shaderProgram, \"uUpright\");\n        gl.uniform1f(shaderProgram.uprightUniform, 0); // if there's some custom attributes be sure to hook them up\n\n        if (shaderParamSetup) {\n          shaderParamSetup(gl, this, shaderProgram);\n        }\n\n        break;\n\n      case \"override\":\n      case \"particle\":\n      case \"regular\":\n      default:\n        // get the places in memory the shader is stored so we can feed information into them\n        // then save it off on the shader because it's so tied to the shader itself\n        shaderProgram.vertexPositionAttribute = gl.getAttribLocation(shaderProgram, \"vertexPosition\");\n        gl.enableVertexAttribArray(shaderProgram.vertexPositionAttribute);\n        shaderProgram.uvPositionAttribute = gl.getAttribLocation(shaderProgram, \"uvPosition\");\n        gl.enableVertexAttribArray(shaderProgram.uvPositionAttribute);\n        shaderProgram.textureIndexAttribute = gl.getAttribLocation(shaderProgram, \"textureIndex\");\n        gl.enableVertexAttribArray(shaderProgram.textureIndexAttribute);\n        shaderProgram.alphaAttribute = gl.getAttribLocation(shaderProgram, \"objectAlpha\");\n        gl.enableVertexAttribArray(shaderProgram.alphaAttribute);\n        var samplers = [];\n\n        for (var i = 0; i < this._batchTextureCount; i++) {\n          samplers[i] = i;\n        }\n\n        shaderProgram.samplerData = samplers;\n        shaderProgram.samplerUniform = gl.getUniformLocation(shaderProgram, \"uSampler\");\n        gl.uniform1iv(shaderProgram.samplerUniform, samplers);\n        shaderProgram.pMatrixUniform = gl.getUniformLocation(shaderProgram, \"pMatrix\");\n        break;\n    }\n\n    gl.useProgram(this._activeShader);\n    return shaderProgram;\n  };\n  /**\n   * Creates a shader from the specified string replacing templates. Template items are defined via `{{` `key` `}}``.\n   * @method _createShader\n   * @param  {WebGLRenderingContext} gl The canvas WebGL context object to draw into.\n   * @param  {Number} type The type of shader to create. gl.VERTEX_SHADER | gl.FRAGMENT_SHADER\n   * @param  {String} str The definition for the shader.\n   * @return {WebGLShader}\n   * @protected\n   */\n\n\n  p._createShader = function (gl, type, str) {\n    // inject the static number\n    str = str.replace(/{{count}}/g, this._batchTextureCount); // resolve issue with no dynamic samplers by creating correct samplers in if else chain\n    // TODO: WebGL 2.0 does not need this support\n\n    var insert = \"\";\n\n    for (var i = 1; i < this._batchTextureCount; i++) {\n      insert += \"} else if (indexPicker <= \" + i + \".5) { color = texture2D(uSampler[\" + i + \"], vTextureCoord);\";\n    }\n\n    str = str.replace(/{{alternates}}/g, insert);\n    str = str.replace(/{{fragColor}}/g, this._premultiply ? StageGL.REGULAR_FRAG_COLOR_PREMULTIPLY : StageGL.REGULAR_FRAG_COLOR_NORMAL); // actually compile the shader\n\n    var shader = gl.createShader(type);\n    gl.shaderSource(shader, str);\n    gl.compileShader(shader); // check compile status\n\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n      throw gl.getShaderInfoLog(shader);\n    }\n\n    return shader;\n  };\n  /**\n   * Sets up the necessary vertex property buffers, including position and U/V.\n   * @method _createBuffers\n   * @param {WebGLRenderingContext} gl\n   * @protected\n   */\n\n\n  p._createBuffers = function (gl) {\n    var groupCount = this._maxCardsPerBatch * StageGL.INDICIES_PER_CARD;\n    var groupSize, i, l; // INFO:\n    // all buffers are created using this pattern\n    // create a WebGL buffer\n    // attach it to context\n    // figure out how many parts it has to an entry\n    // fill it with empty data to reserve the memory\n    // attach the empty data to the GPU\n    // track the sizes on the buffer object\n    // INFO:\n    // a single buffer may be optimal in some situations and would be approached like this,\n    // currently not implemented due to lack of need and potential complications with drawCover\n    // var vertexBuffer = this._vertexBuffer = gl.createBuffer();\n    // gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    // groupSize = 2 + 2 + 1 + 1; //x/y, u/v, index, alpha\n    // var vertexData = this._vertexData = new Float32Array(groupCount * groupSize);\n    // for (i=0; i<vertexData.length; i+=groupSize) {\n    // \tvertexData[i+0] = vertexData[i+1] = 0;\n    // \tvertexData[i+2] = vertexData[i+3] = 0.5;\n    // \tvertexData[i+4] = 0;\n    // \tvertexData[i+5] = 1;\n    // }\n    // vertexBuffer.itemSize = groupSize;\n    // vertexBuffer.numItems = groupCount;\n    // TODO bechmark and test using unified buffer\n    // the actual position information\n\n    var vertexPositionBuffer = this._vertexPositionBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexPositionBuffer);\n    groupSize = 2;\n    var vertices = this._vertices = new Float32Array(groupCount * groupSize);\n\n    for (i = 0, l = vertices.length; i < l; i += groupSize) {\n      vertices[i] = vertices[i + 1] = 0;\n    }\n\n    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.DYNAMIC_DRAW);\n    vertexPositionBuffer.itemSize = groupSize;\n    vertexPositionBuffer.numItems = groupCount; // where on the texture it gets its information\n\n    var uvPositionBuffer = this._uvPositionBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, uvPositionBuffer);\n    groupSize = 2;\n    var uvs = this._uvs = new Float32Array(groupCount * groupSize);\n\n    for (i = 0, l = uvs.length; i < l; i += groupSize) {\n      uvs[i] = uvs[i + 1] = 0;\n    }\n\n    gl.bufferData(gl.ARRAY_BUFFER, uvs, gl.DYNAMIC_DRAW);\n    uvPositionBuffer.itemSize = groupSize;\n    uvPositionBuffer.numItems = groupCount; // what texture it should use\n\n    var textureIndexBuffer = this._textureIndexBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, textureIndexBuffer);\n    groupSize = 1;\n    var indices = this._indices = new Float32Array(groupCount * groupSize);\n\n    for (i = 0, l = indices.length; i < l; i++) {\n      indices[i] = 0;\n    }\n\n    gl.bufferData(gl.ARRAY_BUFFER, indices, gl.DYNAMIC_DRAW);\n    textureIndexBuffer.itemSize = groupSize;\n    textureIndexBuffer.numItems = groupCount; // what alpha it should have\n\n    var alphaBuffer = this._alphaBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, alphaBuffer);\n    groupSize = 1;\n    var alphas = this._alphas = new Float32Array(groupCount * groupSize);\n\n    for (i = 0, l = alphas.length; i < l; i++) {\n      alphas[i] = 1;\n    }\n\n    gl.bufferData(gl.ARRAY_BUFFER, alphas, gl.DYNAMIC_DRAW);\n    alphaBuffer.itemSize = groupSize;\n    alphaBuffer.numItems = groupCount;\n  };\n  /**\n   * Do all the setup steps for textures in the system.\n   * @method _initTextures\n   * @protected\n   */\n\n\n  p._initTextures = function () {\n    //TODO: DHG: add a cleanup routine in here in case this happens mid stream\n    // reset counters\n    this._lastTextureInsert = -1; // clear containers\n\n    this._textureDictionary = [];\n    this._textureIDs = {};\n    this._baseTextures = [];\n    this._batchTextures = []; // fill in blanks as it helps the renderer be stable while textures are loading and reduces need for safety code\n\n    for (var i = 0; i < this._batchTextureCount; i++) {\n      var tex = this.getBaseTexture();\n      this._baseTextures[i] = this._batchTextures[i] = tex;\n\n      if (!tex) {\n        throw \"Problems creating basic textures, known causes include using too much VRAM by not releasing WebGL texture instances\";\n      }\n    }\n  };\n  /**\n   * Load a specific texture, accounting for potential delay, as it might not be preloaded.\n   * @method _loadTextureImage\n   * @param {WebGLRenderingContext} gl\n   * @param {Image} image Actual image to be loaded\n   * @return {WebGLTexture} The resulting Texture object\n   * @protected\n   */\n\n\n  p._loadTextureImage = function (gl, image) {\n    var src = image.src;\n\n    if (!src) {\n      // one time canvas property setup\n      image._isCanvas = true;\n      src = image.src = \"canvas_\" + this._lastTrackedCanvas++;\n    } // put the texture into our storage system\n\n\n    var storeID = this._textureIDs[src];\n\n    if (storeID === undefined) {\n      storeID = this._textureIDs[src] = this._textureDictionary.length;\n    }\n\n    if (this._textureDictionary[storeID] === undefined) {\n      this._textureDictionary[storeID] = this.getBaseTexture();\n    }\n\n    var texture = this._textureDictionary[storeID];\n\n    if (texture) {\n      // get texture params all set up\n      texture._batchID = this._batchID;\n      texture._storeID = storeID;\n      texture._imageData = image;\n\n      this._insertTextureInBatch(gl, texture); // get the data into the texture or wait for it to load\n\n\n      image._storeID = storeID;\n\n      if (image.complete || image.naturalWidth || image._isCanvas) {\n        // is it already loaded\n        this._updateTextureImageData(gl, image);\n      } else {\n        image.addEventListener(\"load\", this._updateTextureImageData.bind(this, gl, image));\n      }\n    } else {\n      // we really really should have a texture, try to recover the error by using a saved empty texture so we don't crash\n      var msg = \"Problem creating desired texture, known causes include using too much VRAM by not releasing WebGL texture instances\";\n      console.error && console.error(msg) || console.log(msg);\n      texture = this._baseTextures[0];\n      texture._batchID = this._batchID;\n      texture._storeID = -1;\n      texture._imageData = texture;\n\n      this._insertTextureInBatch(gl, texture);\n    }\n\n    return texture;\n  };\n  /**\n   * Necessary to upload the actual image data to the GPU. Without this the texture will be blank. Called automatically\n   * in most cases due to loading and caching APIs. Flagging an image source with `_invalid = true` will trigger this\n   * next time the image is rendered.\n   * @param {WebGLRenderingContext} gl\n   * @param {Image | Canvas} image The image data to be uploaded\n   * @protected\n   */\n\n\n  p._updateTextureImageData = function (gl, image) {\n    // the bitwise & is intentional, cheap exponent 2 check\n    var isNPOT = image.width & image.width - 1 || image.height & image.height - 1;\n    var texture = this._textureDictionary[image._storeID];\n    gl.activeTexture(gl.TEXTURE0 + texture._activeIndex);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    texture.isPOT = !isNPOT;\n    this.setTextureParams(gl, texture.isPOT);\n\n    try {\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n    } catch (e) {\n      var errString = \"\\nAn error has occurred. This is most likely due to security restrictions on WebGL images with local or cross-domain origins\";\n\n      if (console.error) {\n        //TODO: LM: I recommend putting this into a log function internally, since you do it so often, and each is implemented differently.\n        console.error(errString);\n        console.error(e);\n      } else if (console) {\n        console.log(errString);\n        console.log(e);\n      }\n    }\n\n    image._invalid = false;\n    texture._w = image.width;\n    texture._h = image.height;\n\n    if (this.vocalDebug) {\n      if (isNPOT) {\n        console.warn(\"NPOT(Non Power of Two) Texture: \" + image.src);\n      }\n\n      if (image.width > gl.MAX_TEXTURE_SIZE || image.height > gl.MAX_TEXTURE_SIZE) {\n        console && console.error(\"Oversized Texture: \" + image.width + \"x\" + image.height + \" vs \" + gl.MAX_TEXTURE_SIZE + \"max\");\n      }\n    }\n  };\n  /**\n   * Adds the texture to a spot in the current batch, forcing a draw if no spots are free.\n   * @method _insertTextureInBatch\n   * @param {WebGLRenderingContext} gl The canvas WebGL context object to draw into.\n   * @param {WebGLTexture} texture The texture to be inserted.\n   * @protected\n   */\n\n\n  p._insertTextureInBatch = function (gl, texture) {\n    // if it wasn't used last batch\n    if (this._batchTextures[texture._activeIndex] !== texture) {\n      // we've got to find it a a spot.\n      var found = -1;\n      var start = (this._lastTextureInsert + 1) % this._batchTextureCount;\n      var look = start;\n\n      do {\n        if (this._batchTextures[look]._batchID != this._batchID && !this._slotBlacklist[look]) {\n          found = look;\n          break;\n        }\n\n        look = (look + 1) % this._batchTextureCount;\n      } while (look !== start); // we couldn't find anywhere for it go, meaning we're maxed out\n\n\n      if (found === -1) {\n        this.batchReason = \"textureOverflow\";\n\n        this._drawBuffers(gl); // <------------------------------------------------------------------------\n\n\n        this.batchCardCount = 0;\n        found = start;\n      } // lets put it into that spot\n\n\n      this._batchTextures[found] = texture;\n      texture._activeIndex = found;\n      var image = texture._imageData;\n\n      if (image && image._invalid && texture._drawID !== undefined) {\n        this._updateTextureImageData(gl, image);\n      } else {\n        gl.activeTexture(gl.TEXTURE0 + found);\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        this.setTextureParams(gl);\n      }\n\n      this._lastTextureInsert = found;\n    } else {\n      var image = texture._imageData;\n\n      if (texture._storeID != undefined && image && image._invalid) {\n        this._updateTextureImageData(gl, image);\n      }\n    }\n\n    texture._drawID = this._drawID;\n    texture._batchID = this._batchID;\n  };\n  /**\n   * Remove and clean the texture, expects a texture and is inflexible. Mostly for internal use, recommended to call \n   * {{#crossLink \"StageGL/releaseTexture\"}}{{/crossLink}} instead as it will call this with the correct texture object(s).\n   * Note: Testing shows this may not happen immediately, have to wait frames for WebGL to have actually adjust memory.\n   * @method _killTextureObject\n   * @param {Texture} tex The texture to be cleaned out\n   * @protected\n   */\n\n\n  p._killTextureObject = function (tex) {\n    if (!tex) {\n      return;\n    }\n\n    var gl = this._webGLContext; // remove linkage\n\n    if (tex._storeID !== undefined && tex._storeID >= 0) {\n      this._textureDictionary[tex._storeID] = undefined;\n\n      for (var n in this._textureIDs) {\n        if (this._textureIDs[n] == tex._storeID) {\n          delete this._textureIDs[n];\n        }\n      }\n\n      if (tex._imageData) {\n        tex._imageData._storeID = undefined;\n      }\n\n      tex._imageData = tex._storeID = undefined;\n    } // make sure to drop it out of an active slot\n\n\n    if (tex._activeIndex !== undefined && this._batchTextures[tex._activeIndex] === tex) {\n      this._batchTextures[tex._activeIndex] = this._baseTextures[tex._activeIndex];\n    } // remove buffers if present\n\n\n    try {\n      if (tex._frameBuffer) {\n        gl.deleteFramebuffer(tex._frameBuffer);\n      }\n\n      tex._frameBuffer = undefined;\n    } catch (e) {\n      /* suppress delete errors because it's already gone or didn't need deleting probably */\n      if (this.vocalDebug) {\n        console.log(e);\n      }\n    } // remove entry\n\n\n    try {\n      gl.deleteTexture(tex);\n    } catch (e) {\n      /* suppress delete errors because it's already gone or didn't need deleting probably */\n      if (this.vocalDebug) {\n        console.log(e);\n      }\n    }\n  };\n  /**\n   * Store or restore current batch textures into a backup array\n   * @method _backupBatchTextures\n   * @param {Boolean} restore Perform a restore instead of a store.\n   * @param {Array} [target=this._backupTextures] Where to perform the backup, defaults to internal backup.\n   * @protected\n   */\n\n\n  p._backupBatchTextures = function (restore, target) {\n    var gl = this._webGLContext;\n\n    if (!this._backupTextures) {\n      this._backupTextures = [];\n    }\n\n    if (target === undefined) {\n      target = this._backupTextures;\n    }\n\n    for (var i = 0; i < this._batchTextureCount; i++) {\n      gl.activeTexture(gl.TEXTURE0 + i);\n\n      if (restore) {\n        this._batchTextures[i] = target[i];\n      } else {\n        target[i] = this._batchTextures[i];\n        this._batchTextures[i] = this._baseTextures[i];\n      }\n\n      gl.bindTexture(gl.TEXTURE_2D, this._batchTextures[i]);\n      this.setTextureParams(gl, this._batchTextures[i].isPOT);\n    }\n\n    if (restore && target === this._backupTextures) {\n      this._backupTextures = [];\n    }\n  };\n  /**\n   * Begin the drawing process for a regular render.\n   * @method _batchDraw\n   * @param {WebGLRenderingContext} gl The canvas WebGL context object to draw into.\n   * @param {Stage || Container} sceneGraph {{#crossLink \"Container\"}}{{/crossLink}} object with all that needs to rendered, preferably a Stage.\n   * @param {Boolean} ignoreCache\n   * @protected\n   */\n\n\n  p._batchDraw = function (sceneGraph, gl, ignoreCache) {\n    if (this._isDrawing > 0) {\n      this._drawBuffers(gl);\n    }\n\n    this._isDrawing++;\n    this._drawID++;\n    this.batchCardCount = 0;\n    this.depth = 0;\n\n    this._appendToBatchGroup(sceneGraph, gl, new createjs.Matrix2D(), this.alpha, ignoreCache);\n\n    this.batchReason = \"drawFinish\";\n\n    this._drawBuffers(gl); // <--------------------------------------------------------\n\n\n    this._isDrawing--;\n  };\n  /**\n   * Perform the drawing process to fill a specific cache texture, including applying filters.\n   * @method _cacheDraw\n   * @param {DisplayObject} target The object we're drawing into the cache. For example, used for drawing the cache\n   * (to prevent it from simply drawing an existing cache back into itself).\n   * @param {Array} filters The filters we're drawing into cache.\n   * @param {BitmapCache} manager The BitmapCache instance looking after the cache\n   * @protected\n   */\n\n\n  p._cacheDraw = function (gl, target, filters, manager) {\n    /*\n    Implicitly there are 4 modes to this function: filtered-sameContext, filtered-uniqueContext, sameContext, uniqueContext.\n    Each situation must be handled slightly differently as 'sameContext' or 'uniqueContext' define how the output works,\n    one drawing directly into the main context and the other drawing into a stored renderTexture respectively.\n    When the draw is a 'filtered' draw, the filters are applied sequentially and will draw into saved textures repeatedly.\n    Once the final filter is done the final output is treated depending upon whether it is a same or unique context.\n    The internal complexity comes from reducing over-draw, shared code, and issues like textures needing to be flipped\n    sometimes when written to render textures.\n    */\n    var renderTexture;\n    var shaderBackup = this._activeShader;\n    var blackListBackup = this._slotBlacklist;\n    var lastTextureSlot = this._maxTextureSlots - 1;\n    var wBackup = this._viewportWidth,\n        hBackup = this._viewportHeight; // protect the last slot so that we have somewhere to bind the renderTextures so it doesn't get upset\n\n    this.protectTextureSlot(lastTextureSlot, true); // create offset container for drawing item\n\n    var mtx = target.getMatrix();\n    mtx = mtx.clone();\n    mtx.scale(1 / manager.scale, 1 / manager.scale);\n    mtx = mtx.invert();\n    mtx.translate(-manager.offX / manager.scale * target.scaleX, -manager.offY / manager.scale * target.scaleY);\n    var container = this._cacheContainer;\n    container.children = [target];\n    container.transformMatrix = mtx;\n\n    this._backupBatchTextures(false);\n\n    if (filters && filters.length) {\n      this._drawFilters(target, filters, manager);\n    } else {\n      // is this for another stage or mine?\n      if (this.isCacheControlled) {\n        // draw item to canvas\t\t\t\tI -> C\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        this._batchDraw(container, gl, true);\n      } else {\n        gl.activeTexture(gl.TEXTURE0 + lastTextureSlot);\n        target.cacheCanvas = this.getTargetRenderTexture(target, manager._drawWidth, manager._drawHeight);\n        renderTexture = target.cacheCanvas; // draw item to render texture\t\tI -> T\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture._frameBuffer);\n        this.updateViewport(manager._drawWidth, manager._drawHeight);\n        this._projectionMatrix = this._projectionMatrixFlip;\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        this._batchDraw(container, gl, true);\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        this.updateViewport(wBackup, hBackup);\n      }\n    }\n\n    this._backupBatchTextures(true);\n\n    this.protectTextureSlot(lastTextureSlot, false);\n    this._activeShader = shaderBackup;\n    this._slotBlacklist = blackListBackup;\n  };\n  /**\n   * Sub portion of _cacheDraw, split off for readability. Do not call independently.\n   * @method _drawFilters\n   * @param {DisplayObject} target The object we're drawing with a filter.\n   * @param {Array} filters The filters we're drawing into cache.\n   * @param {BitmapCache} manager The BitmapCache instance looking after the cache\n   */\n\n\n  p._drawFilters = function (target, filters, manager) {\n    var gl = this._webGLContext;\n    var renderTexture;\n    var lastTextureSlot = this._maxTextureSlots - 1;\n    var wBackup = this._viewportWidth,\n        hBackup = this._viewportHeight;\n    var container = this._cacheContainer;\n    var filterCount = filters.length; // we don't know which texture slot we're dealing with previously and we need one out of the way\n    // once we're using that slot activate it so when we make and bind our RenderTexture it's safe there\n\n    gl.activeTexture(gl.TEXTURE0 + lastTextureSlot);\n    renderTexture = this.getTargetRenderTexture(target, manager._drawWidth, manager._drawHeight); // draw item to render texture\t\tI -> T\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture._frameBuffer);\n    this.updateViewport(manager._drawWidth, manager._drawHeight);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    this._batchDraw(container, gl, true); // bind the result texture to slot 0 as all filters and cover draws assume original content is in slot 0\n\n\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, renderTexture);\n    this.setTextureParams(gl);\n    var flipY = false;\n    var i = 0,\n        filter = filters[i];\n\n    do {\n      // this is safe because we wouldn't be in apply filters without a filter count of at least 1\n      // swap to correct shader\n      this._activeShader = this.getFilterShader(filter);\n\n      if (!this._activeShader) {\n        continue;\n      } // now the old result is stored in slot 0, make a new render texture\n\n\n      gl.activeTexture(gl.TEXTURE0 + lastTextureSlot);\n      renderTexture = this.getTargetRenderTexture(target, manager._drawWidth, manager._drawHeight);\n      gl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture._frameBuffer); // draw result to render texture\tR -> T\n\n      gl.viewport(0, 0, manager._drawWidth, manager._drawHeight);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n\n      this._drawCover(gl, flipY); // bind the result texture to slot 0 as all filters and cover draws assume original content is in slot 0\n\n\n      gl.activeTexture(gl.TEXTURE0);\n      gl.bindTexture(gl.TEXTURE_2D, renderTexture);\n      this.setTextureParams(gl); // use flipping to keep things upright, things already cancel out on a single filter\n      // this needs to be here as multiPass is not accurate to _this_ frame until after shader acquisition\n\n      if (filterCount > 1 || filters[0]._multiPass) {\n        flipY = !flipY;\n      } // work through the multipass if it's there, otherwise move on\n\n\n      filter = filter._multiPass !== null ? filter._multiPass : filters[++i];\n    } while (filter); // is this for another stage or mine\n\n\n    if (this.isCacheControlled) {\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      this.updateViewport(wBackup, hBackup); // draw result to canvas\t\t\tR -> C\n\n      this._activeShader = this.getFilterShader(this);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n\n      this._drawCover(gl, flipY);\n    } else {\n      //TODO: DHG: this is less than ideal. A flipped initial render for this circumstance might help. Adjust the perspective matrix?\n      if (flipY) {\n        gl.activeTexture(gl.TEXTURE0 + lastTextureSlot);\n        renderTexture = this.getTargetRenderTexture(target, manager._drawWidth, manager._drawHeight);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture._frameBuffer);\n        this._activeShader = this.getFilterShader(this);\n        gl.viewport(0, 0, manager._drawWidth, manager._drawHeight);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        this._drawCover(gl, !flipY);\n      }\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      this.updateViewport(wBackup, hBackup); // make sure the last texture is the active thing to draw\n\n      target.cacheCanvas = renderTexture;\n    }\n  };\n  /**\n   * Add all the contents of a container to the pending buffers, called recursively on each container. This may\n   * trigger a draw if a buffer runs out of space. This is the main workforce of the render loop.\n   * @method _appendToBatchGroup\n   * @param {Container} container The {{#crossLink \"Container\"}}{{/crossLink}} that contains everything to be drawn.\n   * @param {WebGLRenderingContext} gl The canvas WebGL context object to draw into.\n   * @param {Matrix2D} concatMtx The effective (concatenated) transformation matrix when beginning this container\n   * @param {Number} concatAlpha The effective (concatenated) alpha when beginning this container\n   * @param {Boolean} ignoreCache Don't use an element's cache during this draw\n   * @protected\n   */\n\n\n  p._appendToBatchGroup = function (container, gl, concatMtx, concatAlpha, ignoreCache) {\n    // sort out shared properties\n    if (!container._glMtx) {\n      container._glMtx = new createjs.Matrix2D();\n    }\n\n    var cMtx = container._glMtx;\n    cMtx.copy(concatMtx);\n\n    if (container.transformMatrix) {\n      cMtx.appendMatrix(container.transformMatrix);\n    } else {\n      cMtx.appendTransform(container.x, container.y, container.scaleX, container.scaleY, container.rotation, container.skewX, container.skewY, container.regX, container.regY);\n    } // sub components of figuring out the position an object holds\n\n\n    var subL, subT, subR, subB; // actually apply its data to the buffers\n\n    var l = container.children.length;\n\n    for (var i = 0; i < l; i++) {\n      var item = container.children[i];\n\n      if (!(item.visible && concatAlpha)) {\n        continue;\n      }\n\n      if (!item.cacheCanvas || ignoreCache) {\n        if (item._updateState) {\n          item._updateState();\n        }\n\n        if (item.children) {\n          this._appendToBatchGroup(item, gl, cMtx, item.alpha * concatAlpha);\n\n          continue;\n        }\n      } // check for overflowing batch, if yes then force a render\n      // TODO: DHG: consider making this polygon count dependant for things like vector draws\n\n\n      if (this.batchCardCount + 1 > this._maxCardsPerBatch) {\n        this.batchReason = \"vertexOverflow\";\n\n        this._drawBuffers(gl); // <------------------------------------------------------------\n\n\n        this.batchCardCount = 0;\n      } // keep track of concatenated position\n\n\n      if (!item._glMtx) {\n        item._glMtx = new createjs.Matrix2D();\n      }\n\n      var iMtx = item._glMtx;\n      iMtx.copy(cMtx);\n\n      if (item.transformMatrix) {\n        iMtx.appendMatrix(item.transformMatrix);\n      } else {\n        iMtx.appendTransform(item.x, item.y, item.scaleX, item.scaleY, item.rotation, item.skewX, item.skewY, item.regX, item.regY);\n      }\n\n      var uvRect, texIndex, image, frame, texture, src;\n      var useCache = item.cacheCanvas && !ignoreCache;\n\n      if (item._webGLRenderStyle === 2 || useCache) {\n        // BITMAP / Cached Canvas\n        image = (ignoreCache ? false : item.cacheCanvas) || item.image;\n      } else if (item._webGLRenderStyle === 1) {\n        // SPRITE\n        frame = item.spriteSheet.getFrame(item.currentFrame); //TODO: Faster way?\n\n        if (frame === null) {\n          continue;\n        }\n\n        image = frame.image;\n      } else {\n        // MISC (DOM objects render themselves later)\n        continue;\n      }\n\n      var uvs = this._uvs;\n      var vertices = this._vertices;\n      var texI = this._indices;\n      var alphas = this._alphas; // calculate texture\n\n      if (!image) {\n        continue;\n      }\n\n      if (image._storeID === undefined) {\n        // this texture is new to us so load it and add it to the batch\n        texture = this._loadTextureImage(gl, image);\n\n        this._insertTextureInBatch(gl, texture);\n      } else {\n        // fetch the texture (render textures know how to look themselves up to simplify this logic)\n        texture = this._textureDictionary[image._storeID];\n\n        if (!texture) {\n          if (this.vocalDebug) {\n            console.log(\"Texture should not be looked up while not being stored.\");\n          }\n\n          continue;\n        } // put it in the batch if needed\n\n\n        if (texture._batchID !== this._batchID) {\n          this._insertTextureInBatch(gl, texture);\n        }\n      }\n\n      texIndex = texture._activeIndex;\n\n      if (item._webGLRenderStyle === 2 || useCache) {\n        // BITMAP / Cached Canvas\n        if (!useCache && item.sourceRect) {\n          // calculate uvs\n          if (!item._uvRect) {\n            item._uvRect = {};\n          }\n\n          src = item.sourceRect;\n          uvRect = item._uvRect;\n          uvRect.t = src.y / image.height;\n          uvRect.l = src.x / image.width;\n          uvRect.b = (src.y + src.height) / image.height;\n          uvRect.r = (src.x + src.width) / image.width; // calculate vertices\n\n          subL = 0;\n          subT = 0;\n          subR = src.width + subL;\n          subB = src.height + subT;\n        } else {\n          // calculate uvs\n          uvRect = StageGL.UV_RECT; // calculate vertices\n\n          if (useCache) {\n            src = item.bitmapCache;\n            subL = src.x + src._filterOffX / src.scale;\n            subT = src.y + src._filterOffY / src.scale;\n            subR = src._drawWidth / src.scale + subL;\n            subB = src._drawHeight / src.scale + subT;\n          } else {\n            subL = 0;\n            subT = 0;\n            subR = image.width + subL;\n            subB = image.height + subT;\n          }\n        }\n      } else if (item._webGLRenderStyle === 1) {\n        // SPRITE\n        var rect = frame.rect; // calculate uvs\n\n        uvRect = frame.uvRect;\n\n        if (!uvRect) {\n          uvRect = StageGL.buildUVRects(item.spriteSheet, item.currentFrame, false);\n        } // calculate vertices\n\n\n        subL = -frame.regX;\n        subT = -frame.regY;\n        subR = rect.width - frame.regX;\n        subB = rect.height - frame.regY;\n      } // These must be calculated here else a forced draw might happen after they're set\n\n\n      var offV1 = this.batchCardCount * StageGL.INDICIES_PER_CARD; // offset for 1 component vectors\n\n      var offV2 = offV1 * 2; // offset for 2 component vectors\n      //DHG: See Matrix2D.transformPoint for why this math specifically\n      // apply vertices\n\n      vertices[offV2] = subL * iMtx.a + subT * iMtx.c + iMtx.tx;\n      vertices[offV2 + 1] = subL * iMtx.b + subT * iMtx.d + iMtx.ty;\n      vertices[offV2 + 2] = subL * iMtx.a + subB * iMtx.c + iMtx.tx;\n      vertices[offV2 + 3] = subL * iMtx.b + subB * iMtx.d + iMtx.ty;\n      vertices[offV2 + 4] = subR * iMtx.a + subT * iMtx.c + iMtx.tx;\n      vertices[offV2 + 5] = subR * iMtx.b + subT * iMtx.d + iMtx.ty;\n      vertices[offV2 + 6] = vertices[offV2 + 2];\n      vertices[offV2 + 7] = vertices[offV2 + 3];\n      vertices[offV2 + 8] = vertices[offV2 + 4];\n      vertices[offV2 + 9] = vertices[offV2 + 5];\n      vertices[offV2 + 10] = subR * iMtx.a + subB * iMtx.c + iMtx.tx;\n      vertices[offV2 + 11] = subR * iMtx.b + subB * iMtx.d + iMtx.ty; // apply uvs\n\n      uvs[offV2] = uvRect.l;\n      uvs[offV2 + 1] = uvRect.t;\n      uvs[offV2 + 2] = uvRect.l;\n      uvs[offV2 + 3] = uvRect.b;\n      uvs[offV2 + 4] = uvRect.r;\n      uvs[offV2 + 5] = uvRect.t;\n      uvs[offV2 + 6] = uvRect.l;\n      uvs[offV2 + 7] = uvRect.b;\n      uvs[offV2 + 8] = uvRect.r;\n      uvs[offV2 + 9] = uvRect.t;\n      uvs[offV2 + 10] = uvRect.r;\n      uvs[offV2 + 11] = uvRect.b; // apply texture\n\n      texI[offV1] = texI[offV1 + 1] = texI[offV1 + 2] = texI[offV1 + 3] = texI[offV1 + 4] = texI[offV1 + 5] = texIndex; // apply alpha\n\n      alphas[offV1] = alphas[offV1 + 1] = alphas[offV1 + 2] = alphas[offV1 + 3] = alphas[offV1 + 4] = alphas[offV1 + 5] = item.alpha * concatAlpha;\n      this.batchCardCount++;\n    }\n  };\n  /**\n   * Draws all the currently defined cards in the buffer to the render surface.\n   * @method _drawBuffers\n   * @param {WebGLRenderingContext} gl The canvas WebGL context object to draw into.\n   * @protected\n   */\n\n\n  p._drawBuffers = function (gl) {\n    if (this.batchCardCount <= 0) {\n      return;\n    } // prevents error logs on stages filled with un-renederable content.\n\n\n    if (this.vocalDebug) {\n      console.log(\"Draw[\" + this._drawID + \":\" + this._batchID + \"] : \" + this.batchReason);\n    }\n\n    var shaderProgram = this._activeShader;\n    var vertexPositionBuffer = this._vertexPositionBuffer;\n    var textureIndexBuffer = this._textureIndexBuffer;\n    var uvPositionBuffer = this._uvPositionBuffer;\n    var alphaBuffer = this._alphaBuffer;\n    gl.useProgram(shaderProgram);\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexPositionBuffer);\n    gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, vertexPositionBuffer.itemSize, gl.FLOAT, false, 0, 0);\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, this._vertices);\n    gl.bindBuffer(gl.ARRAY_BUFFER, textureIndexBuffer);\n    gl.vertexAttribPointer(shaderProgram.textureIndexAttribute, textureIndexBuffer.itemSize, gl.FLOAT, false, 0, 0);\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, this._indices);\n    gl.bindBuffer(gl.ARRAY_BUFFER, uvPositionBuffer);\n    gl.vertexAttribPointer(shaderProgram.uvPositionAttribute, uvPositionBuffer.itemSize, gl.FLOAT, false, 0, 0);\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, this._uvs);\n    gl.bindBuffer(gl.ARRAY_BUFFER, alphaBuffer);\n    gl.vertexAttribPointer(shaderProgram.alphaAttribute, alphaBuffer.itemSize, gl.FLOAT, false, 0, 0);\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, this._alphas);\n    gl.uniformMatrix4fv(shaderProgram.pMatrixUniform, gl.FALSE, this._projectionMatrix);\n\n    for (var i = 0; i < this._batchTextureCount; i++) {\n      var texture = this._batchTextures[i];\n      gl.activeTexture(gl.TEXTURE0 + i);\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      this.setTextureParams(gl, texture.isPOT);\n    }\n\n    gl.drawArrays(gl.TRIANGLES, 0, this.batchCardCount * StageGL.INDICIES_PER_CARD);\n    this._batchID++;\n  };\n  /**\n   * Draws a card that covers the entire render surface. Mainly used for filters.\n   * @method _drawBuffers\n   * @param {WebGLRenderingContext} gl The canvas WebGL context object to draw into.\n   * @param {Boolean} flipY Covers are used for things like RenderTextures and because of 3D vs Canvas space this can\n   * end up meaning the `y` space sometimes requires flipping in the render.\n   * @protected\n   */\n\n\n  p._drawCover = function (gl, flipY) {\n    if (this._isDrawing > 0) {\n      this._drawBuffers(gl);\n    }\n\n    if (this.vocalDebug) {\n      console.log(\"Draw[\" + this._drawID + \":\" + this._batchID + \"] : \" + \"Cover\");\n    }\n\n    var shaderProgram = this._activeShader;\n    var vertexPositionBuffer = this._vertexPositionBuffer;\n    var uvPositionBuffer = this._uvPositionBuffer;\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.useProgram(shaderProgram);\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexPositionBuffer);\n    gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, vertexPositionBuffer.itemSize, gl.FLOAT, false, 0, 0);\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, StageGL.COVER_VERT);\n    gl.bindBuffer(gl.ARRAY_BUFFER, uvPositionBuffer);\n    gl.vertexAttribPointer(shaderProgram.uvPositionAttribute, uvPositionBuffer.itemSize, gl.FLOAT, false, 0, 0);\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, flipY ? StageGL.COVER_UV_FLIP : StageGL.COVER_UV);\n    gl.uniform1i(shaderProgram.samplerUniform, 0);\n    gl.uniform1f(shaderProgram.uprightUniform, flipY ? 0 : 1);\n    gl.drawArrays(gl.TRIANGLES, 0, StageGL.INDICIES_PER_CARD);\n  };\n\n  createjs.StageGL = createjs.promote(StageGL, \"Stage\");\n})(); //##############################################################################\n// Bitmap.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  /**\n   * A Bitmap represents an Image, Canvas, or Video in the display list. A Bitmap can be instantiated using an existing\n   * HTML element, or a string.\n   *\n   * <h4>Example</h4>\n   *\n   * \tvar bitmap = new createjs.Bitmap(\"imagePath.jpg\");\n   *\n   * <strong>Notes:</strong>\n   * <ol>\n   * \t<li>When using a video source that may loop or seek, use a {{#crossLink \"VideoBuffer\"}}{{/crossLink}} object to\n   * \t prevent blinking / flashing.\n   * \t<li>When a string path or image tag that is not yet loaded is used, the stage may need to be redrawn before it\n   * \t will be displayed.</li>\n   * \t<li>Bitmaps with an SVG source currently will not respect an alpha value other than 0 or 1. To get around this,\n   * \tthe Bitmap can be cached.</li>\n   * \t<li>Bitmaps with an SVG source will taint the canvas with cross-origin data, which prevents interactivity. This\n   * \thappens in all browsers except recent Firefox builds.</li>\n   * \t<li>Images loaded cross-origin will throw cross-origin security errors when interacted with using a mouse, using\n   * \tmethods such as `getObjectUnderPoint`, or using filters, or caching. You can get around this by setting\n   * \t`crossOrigin` flags on your images before passing them to EaselJS, eg: `img.crossOrigin=\"Anonymous\";`</li>\n   * </ol>\n   *\n   * @class Bitmap\n   * @extends DisplayObject\n   * @constructor\n   * @param {CanvasImageSource | String | Object} imageOrUri The source image to display. This can be a CanvasImageSource\n   * (image, video, canvas), an object with a `getImage` method that returns a CanvasImageSource, or a string URL to an image.\n   * If the latter, a new Image instance with the URL as its src will be used.\n   **/\n  function Bitmap(imageOrUri) {\n    this.DisplayObject_constructor(); // public properties:\n\n    /**\n     * The source image to display. This can be a CanvasImageSource\n     * (image, video, canvas), an object with a `getImage` method that returns a CanvasImageSource, or a string URL to an image.\n     * If the latter, a new Image instance with the URL as its src will be used.\n     * @property image\n     * @type CanvasImageSource | Object\n     **/\n\n    if (typeof imageOrUri == \"string\") {\n      this.image = document.createElement(\"img\");\n      this.image.src = imageOrUri;\n    } else {\n      this.image = imageOrUri;\n    }\n    /**\n     * Specifies an area of the source image to draw. If omitted, the whole image will be drawn.\n     * Notes:\n     * <ul>\n     *     <li>that video sources must have a width / height set to work correctly with `sourceRect`</li>\n     *     <li>Cached objects will ignore the `sourceRect` property</li>\n     * </ul>\n     * @property sourceRect\n     * @type Rectangle\n     * @default null\n     */\n\n\n    this.sourceRect = null; // private properties:\n\n    /**\n     * Docced in superclass.\n     */\n\n    this._webGLRenderStyle = createjs.DisplayObject._StageGL_BITMAP;\n  }\n\n  var p = createjs.extend(Bitmap, createjs.DisplayObject); // public methods:\n\n  /**\n   * Constructor alias for backwards compatibility. This method will be removed in future versions.\n   * Subclasses should be updated to use {{#crossLink \"Utility Methods/extends\"}}{{/crossLink}}.\n   * @method initialize\n   * @deprecated in favour of `createjs.promote()`\n   **/\n\n  p.initialize = Bitmap; // TODO: deprecated.\n\n  /**\n   * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n   * This does not account for whether it would be visible within the boundaries of the stage.\n   *\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method isVisible\n   * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n   **/\n\n  p.isVisible = function () {\n    var image = this.image;\n    var hasContent = this.cacheCanvas || image && (image.naturalWidth || image.getContext || image.readyState >= 2);\n    return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n  };\n  /**\n   * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n   * Returns true if the draw was handled (useful for overriding functionality).\n   *\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method draw\n   * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n   * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache.\n   * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n   * into itself).\n   * @return {Boolean}\n   **/\n\n\n  p.draw = function (ctx, ignoreCache) {\n    if (this.DisplayObject_draw(ctx, ignoreCache)) {\n      return true;\n    }\n\n    var img = this.image,\n        rect = this.sourceRect;\n\n    if (img.getImage) {\n      img = img.getImage();\n    }\n\n    if (!img) {\n      return true;\n    }\n\n    if (rect) {\n      // some browsers choke on out of bound values, so we'll fix them:\n      var x1 = rect.x,\n          y1 = rect.y,\n          x2 = x1 + rect.width,\n          y2 = y1 + rect.height,\n          x = 0,\n          y = 0,\n          w = img.width,\n          h = img.height;\n\n      if (x1 < 0) {\n        x -= x1;\n        x1 = 0;\n      }\n\n      if (x2 > w) {\n        x2 = w;\n      }\n\n      if (y1 < 0) {\n        y -= y1;\n        y1 = 0;\n      }\n\n      if (y2 > h) {\n        y2 = h;\n      }\n\n      ctx.drawImage(img, x1, y1, x2 - x1, y2 - y1, x, y, x2 - x1, y2 - y1);\n    } else {\n      ctx.drawImage(img, 0, 0);\n    }\n\n    return true;\n  }; //Note, the doc sections below document using the specified APIs (from DisplayObject)  from\n  //Bitmap. This is why they have no method implementations.\n\n  /**\n   * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n   * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n   *\n   * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n   * To see the API for caching, please visit the DisplayObject {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\n   * method.\n   * @method cache\n   **/\n\n  /**\n   * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n   * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n   *\n   * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n   * To see the API for caching, please visit the DisplayObject {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\n   * method.\n   * @method updateCache\n   **/\n\n  /**\n   * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n   * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n   *\n   * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n   * To see the API for caching, please visit the DisplayObject {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\n   * method.\n   * @method uncache\n   **/\n\n  /**\n   * Docced in superclass.\n   */\n\n\n  p.getBounds = function () {\n    var rect = this.DisplayObject_getBounds();\n\n    if (rect) {\n      return rect;\n    }\n\n    var image = this.image,\n        o = this.sourceRect || image;\n    var hasContent = image && (image.naturalWidth || image.getContext || image.readyState >= 2);\n    return hasContent ? this._rectangle.setValues(0, 0, o.width, o.height) : null;\n  };\n  /**\n   * Returns a clone of the Bitmap instance.\n   * @method clone\n   * @param {Boolean} node Whether the underlying dom element should be cloned as well.\n   * @return {Bitmap} a clone of the Bitmap instance.\n   **/\n\n\n  p.clone = function (node) {\n    var image = this.image;\n\n    if (image && node) {\n      image = image.cloneNode();\n    }\n\n    var o = new Bitmap(image);\n\n    if (this.sourceRect) {\n      o.sourceRect = this.sourceRect.clone();\n    }\n\n    this._cloneProps(o);\n\n    return o;\n  };\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n\n\n  p.toString = function () {\n    return \"[Bitmap (name=\" + this.name + \")]\";\n  };\n\n  createjs.Bitmap = createjs.promote(Bitmap, \"DisplayObject\");\n})(); //##############################################################################\n// Sprite.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor:\n\n  /**\n   * Displays a frame or sequence of frames (ie. an animation) from a SpriteSheet instance. A sprite sheet is a series of\n   * images (usually animation frames) combined into a single image. For example, an animation consisting of 8 100x100\n   * images could be combined into a 400x200 sprite sheet (4 frames across by 2 high). You can display individual frames,\n   * play frames as an animation, and even sequence animations together.\n   *\n   * See the {{#crossLink \"SpriteSheet\"}}{{/crossLink}} class for more information on setting up frames and animations.\n   *\n   * <h4>Example</h4>\n   *\n   *      var instance = new createjs.Sprite(spriteSheet);\n   *      instance.gotoAndStop(\"frameName\");\n   *\n   * Until {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} or {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}} is called,\n   * only the first defined frame defined in the sprite sheet will be displayed.\n   *\n   * @class Sprite\n   * @extends DisplayObject\n   * @constructor\n   * @param {SpriteSheet} spriteSheet The SpriteSheet instance to play back. This includes the source image(s), frame\n   * dimensions, and frame data. See {{#crossLink \"SpriteSheet\"}}{{/crossLink}} for more information.\n   * @param {String|Number} [frameOrAnimation] The frame number or animation to play initially.\n   **/\n\n  function Sprite(spriteSheet, frameOrAnimation) {\n    this.DisplayObject_constructor(); // public properties:\n\n    /**\n     * The frame index that will be drawn when draw is called. Note that with some {{#crossLink \"SpriteSheet\"}}{{/crossLink}}\n     * definitions, this will advance non-sequentially. This will always be an integer value.\n     * @property currentFrame\n     * @type {Number}\n     * @default 0\n     * @readonly\n     **/\n\n    this.currentFrame = 0;\n    /**\n     * Returns the name of the currently playing animation.\n     * @property currentAnimation\n     * @type {String}\n     * @final\n     * @readonly\n     **/\n\n    this.currentAnimation = null;\n    /**\n     * Prevents the animation from advancing each tick automatically. For example, you could create a sprite\n     * sheet of icons, set paused to true, and display the appropriate icon by setting <code>currentFrame</code>.\n     * @property paused\n     * @type {Boolean}\n     * @default false\n     **/\n\n    this.paused = true;\n    /**\n     * The SpriteSheet instance to play back. This includes the source image, frame dimensions, and frame\n     * data. See {{#crossLink \"SpriteSheet\"}}{{/crossLink}} for more information.\n     * @property spriteSheet\n     * @type {SpriteSheet}\n     * @readonly\n     **/\n\n    this.spriteSheet = spriteSheet;\n    /**\n     * Specifies the current frame index within the currently playing animation. When playing normally, this will increase\n     * from 0 to n-1, where n is the number of frames in the current animation.\n     *\n     * This could be a non-integer value if\n     * using time-based playback (see {{#crossLink \"Sprite/framerate\"}}{{/crossLink}}, or if the animation's speed is\n     * not an integer.\n     * @property currentAnimationFrame\n     * @type {Number}\n     * @default 0\n     **/\n\n    this.currentAnimationFrame = 0;\n    /**\n     * By default Sprite instances advance one frame per tick. Specifying a framerate for the Sprite (or its related\n     * SpriteSheet) will cause it to advance based on elapsed time between ticks as appropriate to maintain the target\n     * framerate.\n     *\n     * For example, if a Sprite with a framerate of 10 is placed on a Stage being updated at 40fps, then the Sprite will\n     * advance roughly one frame every 4 ticks. This will not be exact, because the time between each tick will\n     * vary slightly between frames.\n     *\n     * This feature is dependent on the tick event object (or an object with an appropriate \"delta\" property) being\n     * passed into {{#crossLink \"Stage/update\"}}{{/crossLink}}.\n     * @property framerate\n     * @type {Number}\n     * @default 0\n     **/\n\n    this.framerate = 0; // private properties:\n\n    /**\n     * Current animation object.\n     * @property _animation\n     * @protected\n     * @type {Object}\n     * @default null\n     **/\n\n    this._animation = null;\n    /**\n     * Current frame index.\n     * @property _currentFrame\n     * @protected\n     * @type {Number}\n     * @default null\n     **/\n\n    this._currentFrame = null;\n    /**\n     * Skips the next auto advance. Used by gotoAndPlay to avoid immediately jumping to the next frame\n     * @property _skipAdvance\n     * @protected\n     * @type {Boolean}\n     * @default false\n     **/\n\n    this._skipAdvance = false;\n    /**\n     * Docced in superclass.\n     */\n\n    this._webGLRenderStyle = createjs.DisplayObject._StageGL_SPRITE;\n\n    if (frameOrAnimation != null) {\n      this.gotoAndPlay(frameOrAnimation);\n    }\n  }\n\n  var p = createjs.extend(Sprite, createjs.DisplayObject);\n  /**\n   * Constructor alias for backwards compatibility. This method will be removed in future versions.\n   * Subclasses should be updated to use {{#crossLink \"Utility Methods/extends\"}}{{/crossLink}}.\n   * @method initialize\n   * @deprecated in favour of `createjs.promote()`\n   **/\n\n  p.initialize = Sprite; // TODO: Deprecated. This is for backwards support of Flash/Animate spritesheet export.\n  // events:\n\n  /**\n   * Dispatched when an animation reaches its ends.\n   * @event animationend\n   * @param {Object} target The object that dispatched the event.\n   * @param {String} type The event type.\n   * @param {String} name The name of the animation that just ended.\n   * @param {String} next The name of the next animation that will be played, or null. This will be the same as name if the animation is looping.\n   * @since 0.6.0\n   */\n\n  /**\n   * Dispatched any time the current frame changes. For example, this could be due to automatic advancement on a tick,\n   * or calling gotoAndPlay() or gotoAndStop().\n   * @event change\n   * @param {Object} target The object that dispatched the event.\n   * @param {String} type The event type.\n   */\n  // public methods:\n\n  /**\n   * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n   * This does not account for whether it would be visible within the boundaries of the stage.\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method isVisible\n   * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n   **/\n\n  p.isVisible = function () {\n    var hasContent = this.cacheCanvas || this.spriteSheet.complete;\n    return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n  };\n  /**\n   * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n   * Returns true if the draw was handled (useful for overriding functionality).\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method draw\n   * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n   * @param {Boolean} ignoreCache Indicates whether the draw operation should ignore any current cache.\n   * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n   * into itself).\n   **/\n\n\n  p.draw = function (ctx, ignoreCache) {\n    if (this.DisplayObject_draw(ctx, ignoreCache)) {\n      return true;\n    }\n\n    this._normalizeFrame();\n\n    var o = this.spriteSheet.getFrame(this._currentFrame | 0);\n\n    if (!o) {\n      return false;\n    }\n\n    var rect = o.rect;\n\n    if (rect.width && rect.height) {\n      ctx.drawImage(o.image, rect.x, rect.y, rect.width, rect.height, -o.regX, -o.regY, rect.width, rect.height);\n    }\n\n    return true;\n  }; //Note, the doc sections below document using the specified APIs (from DisplayObject)  from\n  //Bitmap. This is why they have no method implementations.\n\n  /**\n   * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n   * You should not cache Sprite instances as it can degrade performance.\n   * @method cache\n   **/\n\n  /**\n   * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n   * You should not cache Sprite instances as it can degrade performance.\n   * @method updateCache\n   **/\n\n  /**\n   * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n   * You should not cache Sprite instances as it can degrade performance.\n   * @method uncache\n   **/\n\n  /**\n   * Play (unpause) the current animation. The Sprite will be paused if either {{#crossLink \"Sprite/stop\"}}{{/crossLink}}\n   * or {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} is called. Single frame animations will remain\n   * unchanged.\n   * @method play\n   **/\n\n\n  p.play = function () {\n    this.paused = false;\n  };\n  /**\n   * Stop playing a running animation. The Sprite will be playing if {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}}\n   * is called. Note that calling {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}} or {{#crossLink \"Sprite/play\"}}{{/crossLink}}\n   * will resume playback.\n   * @method stop\n   **/\n\n\n  p.stop = function () {\n    this.paused = true;\n  };\n  /**\n   * Sets paused to false and plays the specified animation name, named frame, or frame number.\n   * @method gotoAndPlay\n   * @param {String|Number} frameOrAnimation The frame number or animation name that the playhead should move to\n   * and begin playing.\n   **/\n\n\n  p.gotoAndPlay = function (frameOrAnimation) {\n    this.paused = false;\n    this._skipAdvance = true;\n\n    this._goto(frameOrAnimation);\n  };\n  /**\n   * Sets paused to true and seeks to the specified animation name, named frame, or frame number.\n   * @method gotoAndStop\n   * @param {String|Number} frameOrAnimation The frame number or animation name that the playhead should move to\n   * and stop.\n   **/\n\n\n  p.gotoAndStop = function (frameOrAnimation) {\n    this.paused = true;\n\n    this._goto(frameOrAnimation);\n  };\n  /**\n   * Advances the playhead. This occurs automatically each tick by default.\n   * @param [time] {Number} The amount of time in ms to advance by. Only applicable if framerate is set on the Sprite\n   * or its SpriteSheet.\n   * @method advance\n  */\n\n\n  p.advance = function (time) {\n    var fps = this.framerate || this.spriteSheet.framerate;\n    var t = fps && time != null ? time / (1000 / fps) : 1;\n\n    this._normalizeFrame(t);\n  };\n  /**\n   * Returns a {{#crossLink \"Rectangle\"}}{{/crossLink}} instance defining the bounds of the current frame relative to\n   * the origin. For example, a 90 x 70 frame with <code>regX=50</code> and <code>regY=40</code> would return a\n   * rectangle with [x=-50, y=-40, width=90, height=70]. This ignores transformations on the display object.\n   *\n   * Also see the SpriteSheet {{#crossLink \"SpriteSheet/getFrameBounds\"}}{{/crossLink}} method.\n   * @method getBounds\n   * @return {Rectangle} A Rectangle instance. Returns null if the frame does not exist, or the image is not fully\n   * loaded.\n   **/\n\n\n  p.getBounds = function () {\n    // TODO: should this normalizeFrame?\n    return this.DisplayObject_getBounds() || this.spriteSheet.getFrameBounds(this.currentFrame, this._rectangle);\n  };\n  /**\n   * Returns a clone of the Sprite instance. Note that the same SpriteSheet is shared between cloned\n   * instances.\n   * @method clone\n   * @return {Sprite} a clone of the Sprite instance.\n   **/\n\n\n  p.clone = function () {\n    return this._cloneProps(new Sprite(this.spriteSheet));\n  };\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n\n\n  p.toString = function () {\n    return \"[Sprite (name=\" + this.name + \")]\";\n  }; // private methods:\n\n  /**\n   * @method _cloneProps\n   * @param {Sprite} o\n   * @return {Sprite} o\n   * @protected\n   **/\n\n\n  p._cloneProps = function (o) {\n    this.DisplayObject__cloneProps(o);\n    o.currentFrame = this.currentFrame;\n    o.currentAnimation = this.currentAnimation;\n    o.paused = this.paused;\n    o.currentAnimationFrame = this.currentAnimationFrame;\n    o.framerate = this.framerate;\n    o._animation = this._animation;\n    o._currentFrame = this._currentFrame;\n    o._skipAdvance = this._skipAdvance;\n    return o;\n  };\n  /**\n   * Advances the <code>currentFrame</code> if paused is not true. This is called automatically when the {{#crossLink \"Stage\"}}{{/crossLink}}\n   * ticks.\n   * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n   * @protected\n   * @method _tick\n   **/\n\n\n  p._tick = function (evtObj) {\n    if (!this.paused) {\n      if (!this._skipAdvance) {\n        this.advance(evtObj && evtObj.delta);\n      }\n\n      this._skipAdvance = false;\n    }\n\n    this.DisplayObject__tick(evtObj);\n  };\n  /**\n   * Normalizes the current frame, advancing animations and dispatching callbacks as appropriate.\n   * @protected\n   * @method _normalizeFrame\n   **/\n\n\n  p._normalizeFrame = function (frameDelta) {\n    frameDelta = frameDelta || 0;\n    var animation = this._animation;\n    var paused = this.paused;\n    var frame = this._currentFrame;\n    var l;\n\n    if (animation) {\n      var speed = animation.speed || 1;\n      var animFrame = this.currentAnimationFrame;\n      l = animation.frames.length;\n\n      if (animFrame + frameDelta * speed >= l) {\n        var next = animation.next;\n\n        if (this._dispatchAnimationEnd(animation, frame, paused, next, l - 1)) {\n          // something changed in the event stack, so we shouldn't make any more changes here.\n          return;\n        } else if (next) {\n          // sequence. Automatically calls _normalizeFrame again with the remaining frames.\n          return this._goto(next, frameDelta - (l - animFrame) / speed);\n        } else {\n          // end.\n          this.paused = true;\n          animFrame = animation.frames.length - 1;\n        }\n      } else {\n        animFrame += frameDelta * speed;\n      }\n\n      this.currentAnimationFrame = animFrame;\n      this._currentFrame = animation.frames[animFrame | 0];\n    } else {\n      frame = this._currentFrame += frameDelta;\n      l = this.spriteSheet.getNumFrames();\n\n      if (frame >= l && l > 0) {\n        if (!this._dispatchAnimationEnd(animation, frame, paused, l - 1)) {\n          // looped.\n          if ((this._currentFrame -= l) >= l) {\n            return this._normalizeFrame();\n          }\n        }\n      }\n    }\n\n    frame = this._currentFrame | 0;\n\n    if (this.currentFrame != frame) {\n      this.currentFrame = frame;\n      this.dispatchEvent(\"change\");\n    }\n  };\n  /**\n   * Dispatches the \"animationend\" event. Returns true if a handler changed the animation (ex. calling {{#crossLink \"Sprite/stop\"}}{{/crossLink}},\n   * {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}}, etc.)\n   * @property _dispatchAnimationEnd\n   * @private\n   * @type {Function}\n   **/\n\n\n  p._dispatchAnimationEnd = function (animation, frame, paused, next, end) {\n    var name = animation ? animation.name : null;\n\n    if (this.hasEventListener(\"animationend\")) {\n      var evt = new createjs.Event(\"animationend\");\n      evt.name = name;\n      evt.next = next;\n      this.dispatchEvent(evt);\n    } // did the animation get changed in the event stack?:\n\n\n    var changed = this._animation != animation || this._currentFrame != frame; // if the animation hasn't changed, but the sprite was paused, then we want to stick to the last frame:\n\n    if (!changed && !paused && this.paused) {\n      this.currentAnimationFrame = end;\n      changed = true;\n    }\n\n    return changed;\n  };\n  /**\n   * Moves the playhead to the specified frame number or animation.\n   * @method _goto\n   * @param {String|Number} frameOrAnimation The frame number or animation that the playhead should move to.\n   * @param {Boolean} [frame] The frame of the animation to go to. Defaults to 0.\n   * @protected\n   **/\n\n\n  p._goto = function (frameOrAnimation, frame) {\n    this.currentAnimationFrame = 0;\n\n    if (isNaN(frameOrAnimation)) {\n      var data = this.spriteSheet.getAnimation(frameOrAnimation);\n\n      if (data) {\n        this._animation = data;\n        this.currentAnimation = frameOrAnimation;\n\n        this._normalizeFrame(frame);\n      }\n    } else {\n      this.currentAnimation = this._animation = null;\n      this._currentFrame = frameOrAnimation;\n\n      this._normalizeFrame();\n    }\n  };\n\n  createjs.Sprite = createjs.promote(Sprite, \"DisplayObject\");\n})(); //##############################################################################\n// Shape.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor:\n\n  /**\n   * A Shape allows you to display vector art in the display list. It composites a {{#crossLink \"Graphics\"}}{{/crossLink}}\n   * instance which exposes all of the vector drawing methods. The Graphics instance can be shared between multiple Shape\n   * instances to display the same vector graphics with different positions or transforms.\n   *\n   * If the vector art will not\n   * change between draws, you may want to use the {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} method to reduce the\n   * rendering cost.\n   *\n   * <h4>Example</h4>\n   *\n   *      var graphics = new createjs.Graphics().beginFill(\"#ff0000\").drawRect(0, 0, 100, 100);\n   *      var shape = new createjs.Shape(graphics);\n   *\n   *      //Alternatively use can also use the graphics property of the Shape class to renderer the same as above.\n   *      var shape = new createjs.Shape();\n   *      shape.graphics.beginFill(\"#ff0000\").drawRect(0, 0, 100, 100);\n   *\n   * @class Shape\n   * @extends DisplayObject\n   * @constructor\n   * @param {Graphics} graphics Optional. The graphics instance to display. If null, a new Graphics instance will be created.\n   **/\n\n  function Shape(graphics) {\n    this.DisplayObject_constructor(); // public properties:\n\n    /**\n     * The graphics instance to display.\n     * @property graphics\n     * @type Graphics\n     **/\n\n    this.graphics = graphics ? graphics : new createjs.Graphics();\n  }\n\n  var p = createjs.extend(Shape, createjs.DisplayObject); // TODO: deprecated\n  // p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n  // public methods:\n\n  /**\n   * Returns true or false indicating whether the Shape would be visible if drawn to a canvas.\n   * This does not account for whether it would be visible within the boundaries of the stage.\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method isVisible\n   * @return {Boolean} Boolean indicating whether the Shape would be visible if drawn to a canvas\n   **/\n\n  p.isVisible = function () {\n    var hasContent = this.cacheCanvas || this.graphics && !this.graphics.isEmpty();\n    return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n  };\n  /**\n   * Draws the Shape into the specified context ignoring its visible, alpha, shadow, and transform. Returns true if\n   * the draw was handled (useful for overriding functionality).\n   *\n   * <i>NOTE: This method is mainly for internal use, though it may be useful for advanced uses.</i>\n   * @method draw\n   * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n   * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache. For example,\n   * used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\n   * @return {Boolean}\n   **/\n\n\n  p.draw = function (ctx, ignoreCache) {\n    if (this.DisplayObject_draw(ctx, ignoreCache)) {\n      return true;\n    }\n\n    this.graphics.draw(ctx, this);\n    return true;\n  };\n  /**\n   * Returns a clone of this Shape. Some properties that are specific to this instance's current context are reverted to\n   * their defaults (for example .parent).\n   * @method clone\n   * @param {Boolean} recursive If true, this Shape's {{#crossLink \"Graphics\"}}{{/crossLink}} instance will also be\n   * cloned. If false, the Graphics instance will be shared with the new Shape.\n   **/\n\n\n  p.clone = function (recursive) {\n    var g = recursive && this.graphics ? this.graphics.clone() : this.graphics;\n    return this._cloneProps(new Shape(g));\n  };\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n\n\n  p.toString = function () {\n    return \"[Shape (name=\" + this.name + \")]\";\n  };\n\n  createjs.Shape = createjs.promote(Shape, \"DisplayObject\");\n})(); //##############################################################################\n// Text.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor:\n\n  /**\n   * Display one or more lines of dynamic text (not user editable) in the display list. Line wrapping support (using the\n   * lineWidth) is very basic, wrapping on spaces and tabs only. Note that as an alternative to Text, you can position HTML\n   * text above or below the canvas relative to items in the display list using the {{#crossLink \"DisplayObject/localToGlobal\"}}{{/crossLink}}\n   * method, or using {{#crossLink \"DOMElement\"}}{{/crossLink}}.\n   *\n   * <b>Please note that Text does not support HTML text, and can only display one font style at a time.</b> To use\n   * multiple font styles, you will need to create multiple text instances, and position them manually.\n   *\n   * <h4>Example</h4>\n   *\n   *      var text = new createjs.Text(\"Hello World\", \"20px Arial\", \"#ff7700\");\n   *      text.x = 100;\n   *      text.textBaseline = \"alphabetic\";\n   *\n   * CreateJS Text supports web fonts (the same rules as Canvas). The font must be loaded and supported by the browser\n   * before it can be displayed.\n   *\n   * <strong>Note:</strong> Text can be expensive to generate, so cache instances where possible. Be aware that not all\n   * browsers will render Text exactly the same.\n   * @class Text\n   * @extends DisplayObject\n   * @constructor\n   * @param {String} [text] The text to display.\n   * @param {String} [font] The font style to use. Any valid value for the CSS font attribute is acceptable (ex. \"bold\n   * 36px Arial\").\n   * @param {String} [color] The color to draw the text in. Any valid value for the CSS color attribute is acceptable (ex.\n   * \"#F00\", \"red\", or \"#FF0000\").\n   **/\n\n  function Text(text, font, color) {\n    this.DisplayObject_constructor(); // public properties:\n\n    /**\n     * The text to display.\n     * @property text\n     * @type String\n     **/\n\n    this.text = text;\n    /**\n     * The font style to use. Any valid value for the CSS font attribute is acceptable (ex. \"bold 36px Arial\").\n     * @property font\n     * @type String\n     **/\n\n    this.font = font;\n    /**\n     * The color to draw the text in. Any valid value for the CSS color attribute is acceptable (ex. \"#F00\"). Default is \"#000\".\n     * It will also accept valid canvas fillStyle values.\n     * @property color\n     * @type String\n     **/\n\n    this.color = color;\n    /**\n     * The horizontal text alignment. Any of \"start\", \"end\", \"left\", \"right\", and \"center\". For detailed\n     * information view the\n     * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">\n     * whatwg spec</a>. Default is \"left\".\n     * @property textAlign\n     * @type String\n     **/\n\n    this.textAlign = \"left\";\n    /**\n     * The vertical alignment point on the font. Any of \"top\", \"hanging\", \"middle\", \"alphabetic\", \"ideographic\", or\n     * \"bottom\". For detailed information view the <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">\n     * whatwg spec</a>. Default is \"top\".\n     * @property textBaseline\n     * @type String\n    */\n\n    this.textBaseline = \"top\";\n    /**\n     * The maximum width to draw the text. If maxWidth is specified (not null), the text will be condensed or\n     * shrunk to make it fit in this width. For detailed information view the\n     * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">\n     * whatwg spec</a>.\n     * @property maxWidth\n     * @type Number\n    */\n\n    this.maxWidth = null;\n    /**\n     * If greater than 0, the text will be drawn as a stroke (outline) of the specified width.\n     * @property outline\n     * @type Number\n     **/\n\n    this.outline = 0;\n    /**\n     * Indicates the line height (vertical distance between baselines) for multi-line text. If null or 0,\n     * the value of getMeasuredLineHeight is used.\n     * @property lineHeight\n     * @type Number\n     **/\n\n    this.lineHeight = 0;\n    /**\n     * Indicates the maximum width for a line of text before it is wrapped to multiple lines. If null,\n     * the text will not be wrapped.\n     * @property lineWidth\n     * @type Number\n     **/\n\n    this.lineWidth = null;\n  }\n\n  var p = createjs.extend(Text, createjs.DisplayObject); // TODO: deprecated\n  // p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n  // static properties:\n\n  /**\n   * @property _workingContext\n   * @type CanvasRenderingContext2D\n   * @private\n   **/\n\n  var canvas = createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\");\n\n  if (canvas.getContext) {\n    Text._workingContext = canvas.getContext(\"2d\");\n    canvas.width = canvas.height = 1;\n  } // constants:\n\n  /**\n   * Lookup table for the ratio to offset bounds x calculations based on the textAlign property.\n   * @property H_OFFSETS\n   * @type Object\n   * @protected\n   * @static\n   **/\n\n\n  Text.H_OFFSETS = {\n    start: 0,\n    left: 0,\n    center: -0.5,\n    end: -1,\n    right: -1\n  };\n  /**\n   * Lookup table for the ratio to offset bounds y calculations based on the textBaseline property.\n   * @property H_OFFSETS\n   * @type Object\n   * @protected\n   * @static\n   **/\n\n  Text.V_OFFSETS = {\n    top: 0,\n    hanging: -0.01,\n    middle: -0.4,\n    alphabetic: -0.8,\n    ideographic: -0.85,\n    bottom: -1\n  }; // public methods:\n\n  /**\n   * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n   * This does not account for whether it would be visible within the boundaries of the stage.\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method isVisible\n   * @return {Boolean} Whether the display object would be visible if drawn to a canvas\n   **/\n\n  p.isVisible = function () {\n    var hasContent = this.cacheCanvas || this.text != null && this.text !== \"\";\n    return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n  };\n  /**\n   * Draws the Text into the specified context ignoring its visible, alpha, shadow, and transform.\n   * Returns true if the draw was handled (useful for overriding functionality).\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method draw\n   * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n   * @param {Boolean} ignoreCache Indicates whether the draw operation should ignore any current cache.\n   * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n   * into itself).\n   **/\n\n\n  p.draw = function (ctx, ignoreCache) {\n    if (this.DisplayObject_draw(ctx, ignoreCache)) {\n      return true;\n    }\n\n    var col = this.color || \"#000\";\n\n    if (this.outline) {\n      ctx.strokeStyle = col;\n      ctx.lineWidth = this.outline * 1;\n    } else {\n      ctx.fillStyle = col;\n    }\n\n    this._drawText(this._prepContext(ctx));\n\n    return true;\n  };\n  /**\n   * Returns the measured, untransformed width of the text without wrapping. Use getBounds for a more robust value.\n   * @method getMeasuredWidth\n   * @return {Number} The measured, untransformed width of the text.\n   **/\n\n\n  p.getMeasuredWidth = function () {\n    return this._getMeasuredWidth(this.text);\n  };\n  /**\n   * Returns an approximate line height of the text, ignoring the lineHeight property. This is based on the measured\n   * width of a \"M\" character multiplied by 1.2, which provides an approximate line height for most fonts.\n   * @method getMeasuredLineHeight\n   * @return {Number} an approximate line height of the text, ignoring the lineHeight property. This is\n   * based on the measured width of a \"M\" character multiplied by 1.2, which approximates em for most fonts.\n   **/\n\n\n  p.getMeasuredLineHeight = function () {\n    return this._getMeasuredWidth(\"M\") * 1.2;\n  };\n  /**\n   * Returns the approximate height of multi-line text by multiplying the number of lines against either the\n   * <code>lineHeight</code> (if specified) or {{#crossLink \"Text/getMeasuredLineHeight\"}}{{/crossLink}}. Note that\n   * this operation requires the text flowing logic to run, which has an associated CPU cost.\n   * @method getMeasuredHeight\n   * @return {Number} The approximate height of the untransformed multi-line text.\n   **/\n\n\n  p.getMeasuredHeight = function () {\n    return this._drawText(null, {}).height;\n  };\n  /**\n   * Docced in superclass.\n   */\n\n\n  p.getBounds = function () {\n    var rect = this.DisplayObject_getBounds();\n\n    if (rect) {\n      return rect;\n    }\n\n    if (this.text == null || this.text === \"\") {\n      return null;\n    }\n\n    var o = this._drawText(null, {});\n\n    var w = this.maxWidth && this.maxWidth < o.width ? this.maxWidth : o.width;\n    var x = w * Text.H_OFFSETS[this.textAlign || \"left\"];\n    var lineHeight = this.lineHeight || this.getMeasuredLineHeight();\n    var y = lineHeight * Text.V_OFFSETS[this.textBaseline || \"top\"];\n    return this._rectangle.setValues(x, y, w, o.height);\n  };\n  /**\n   * Returns an object with width, height, and lines properties. The width and height are the visual width and height\n   * of the drawn text. The lines property contains an array of strings, one for\n   * each line of text that will be drawn, accounting for line breaks and wrapping. These strings have trailing\n   * whitespace removed.\n   * @method getMetrics\n   * @return {Object} An object with width, height, and lines properties.\n   **/\n\n\n  p.getMetrics = function () {\n    var o = {\n      lines: []\n    };\n    o.lineHeight = this.lineHeight || this.getMeasuredLineHeight();\n    o.vOffset = o.lineHeight * Text.V_OFFSETS[this.textBaseline || \"top\"];\n    return this._drawText(null, o, o.lines);\n  };\n  /**\n   * Returns a clone of the Text instance.\n   * @method clone\n   * @return {Text} a clone of the Text instance.\n   **/\n\n\n  p.clone = function () {\n    return this._cloneProps(new Text(this.text, this.font, this.color));\n  };\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n\n\n  p.toString = function () {\n    return \"[Text (text=\" + (this.text.length > 20 ? this.text.substr(0, 17) + \"...\" : this.text) + \")]\";\n  }; // private methods:\n\n  /**\n   * @method _cloneProps\n   * @param {Text} o\n   * @protected\n   * @return {Text} o\n   **/\n\n\n  p._cloneProps = function (o) {\n    this.DisplayObject__cloneProps(o);\n    o.textAlign = this.textAlign;\n    o.textBaseline = this.textBaseline;\n    o.maxWidth = this.maxWidth;\n    o.outline = this.outline;\n    o.lineHeight = this.lineHeight;\n    o.lineWidth = this.lineWidth;\n    return o;\n  };\n  /**\n   * @method _getWorkingContext\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {CanvasRenderingContext2D}\n   * @protected\n   **/\n\n\n  p._prepContext = function (ctx) {\n    ctx.font = this.font || \"10px sans-serif\";\n    ctx.textAlign = this.textAlign || \"left\";\n    ctx.textBaseline = this.textBaseline || \"top\";\n    ctx.lineJoin = \"miter\";\n    ctx.miterLimit = 2.5;\n    return ctx;\n  };\n  /**\n   * Draws multiline text.\n   * @method _drawText\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Object} o\n   * @param {Array} lines\n   * @return {Object}\n   * @protected\n   **/\n\n\n  p._drawText = function (ctx, o, lines) {\n    var paint = !!ctx;\n\n    if (!paint) {\n      ctx = Text._workingContext;\n      ctx.save();\n\n      this._prepContext(ctx);\n    }\n\n    var lineHeight = this.lineHeight || this.getMeasuredLineHeight();\n    var maxW = 0,\n        count = 0;\n    var hardLines = String(this.text).split(/(?:\\r\\n|\\r|\\n)/);\n\n    for (var i = 0, l = hardLines.length; i < l; i++) {\n      var str = hardLines[i];\n      var w = null;\n\n      if (this.lineWidth != null && (w = ctx.measureText(str).width) > this.lineWidth) {\n        // text wrapping:\n        var words = str.split(/(\\s)/);\n        str = words[0];\n        w = ctx.measureText(str).width;\n\n        for (var j = 1, jl = words.length; j < jl; j += 2) {\n          // Line needs to wrap:\n          var wordW = ctx.measureText(words[j] + words[j + 1]).width;\n\n          if (w + wordW > this.lineWidth) {\n            if (paint) {\n              this._drawTextLine(ctx, str, count * lineHeight);\n            }\n\n            if (lines) {\n              lines.push(str);\n            }\n\n            if (w > maxW) {\n              maxW = w;\n            }\n\n            str = words[j + 1];\n            w = ctx.measureText(str).width;\n            count++;\n          } else {\n            str += words[j] + words[j + 1];\n            w += wordW;\n          }\n        }\n      }\n\n      if (paint) {\n        this._drawTextLine(ctx, str, count * lineHeight);\n      }\n\n      if (lines) {\n        lines.push(str);\n      }\n\n      if (o && w == null) {\n        w = ctx.measureText(str).width;\n      }\n\n      if (w > maxW) {\n        maxW = w;\n      }\n\n      count++;\n    }\n\n    if (o) {\n      o.width = maxW;\n      o.height = count * lineHeight;\n    }\n\n    if (!paint) {\n      ctx.restore();\n    }\n\n    return o;\n  };\n  /**\n   * @method _drawTextLine\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {String} text\n   * @param {Number} y\n   * @protected\n   **/\n\n\n  p._drawTextLine = function (ctx, text, y) {\n    // Chrome 17 will fail to draw the text if the last param is included but null, so we feed it a large value instead:\n    if (this.outline) {\n      ctx.strokeText(text, 0, y, this.maxWidth || 0xFFFF);\n    } else {\n      ctx.fillText(text, 0, y, this.maxWidth || 0xFFFF);\n    }\n  };\n  /**\n   * @method _getMeasuredWidth\n   * @param {String} text\n   * @protected\n   **/\n\n\n  p._getMeasuredWidth = function (text) {\n    var ctx = Text._workingContext;\n    ctx.save();\n\n    var w = this._prepContext(ctx).measureText(text).width;\n\n    ctx.restore();\n    return w;\n  };\n\n  createjs.Text = createjs.promote(Text, \"DisplayObject\");\n})(); //##############################################################################\n// BitmapText.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor:\n\n  /**\n   * Displays text using bitmap glyphs defined in a sprite sheet. Multi-line text is supported using new line characters,\n   * but automatic wrapping is not supported. See the {{#crossLink \"BitmapText/spriteSheet:property\"}}{{/crossLink}}\n   * property for more information on defining glyphs.\n   *\n   * <strong>Important:</strong> While BitmapText extends Container, it is not designed to be used as one.\n   * As such, methods like addChild and removeChild are disabled.\n   *\n   *\n   * @class BitmapText\n   * @extends DisplayObject\n   * @param {String} [text=\"\"] The text to display.\n   * @param {SpriteSheet} [spriteSheet=null] The spritesheet that defines the character glyphs.\n   * @constructor\n   **/\n\n  function BitmapText(text, spriteSheet) {\n    this.Container_constructor(); // public properties:\n\n    /**\n     * The text to display.\n     * @property text\n     * @type String\n     * @default \"\"\n     **/\n\n    this.text = text || \"\";\n    /**\n     * A SpriteSheet instance that defines the glyphs for this bitmap text. Each glyph/character\n     * should have a single frame animation defined in the sprite sheet named the same as\n     * corresponding character. For example, the following animation definition:\n     *\n     * \t\t\"A\": {frames: [0]}\n     *\n     * would indicate that the frame at index 0 of the spritesheet should be drawn for the \"A\" character. The short form\n     * is also acceptable:\n     * \n     * \t\t\"A\": 0\n     *\n     * Note that if a character in the text is not found in the sprite sheet, it will also\n     * try to use the alternate case (upper or lower).\n     *\n     * See SpriteSheet for more information on defining sprite sheet data.\n     * @property spriteSheet\n     * @type SpriteSheet\n     * @default null\n     **/\n\n    this.spriteSheet = spriteSheet;\n    /**\n     * The height of each line of text. If 0, then it will use a line height calculated\n     * by checking for the height of the \"1\", \"T\", or \"L\" character (in that order). If\n     * those characters are not defined, it will use the height of the first frame of the\n     * sprite sheet.\n     * @property lineHeight\n     * @type Number\n     * @default 0\n     **/\n\n    this.lineHeight = 0;\n    /**\n     * This spacing (in pixels) will be added after each character in the output.\n     * @property letterSpacing\n     * @type Number\n     * @default 0\n     **/\n\n    this.letterSpacing = 0;\n    /**\n     * If a space character is not defined in the sprite sheet, then empty pixels equal to\n     * spaceWidth will be inserted instead. If 0, then it will use a value calculated\n     * by checking for the width of the \"1\", \"l\", \"E\", or \"A\" character (in that order). If\n     * those characters are not defined, it will use the width of the first frame of the\n     * sprite sheet.\n     * @property spaceWidth\n     * @type Number\n     * @default 0\n     **/\n\n    this.spaceWidth = 0; // private properties:\n\n    /**\n    * @property _oldProps\n    * @type Object\n    * @protected\n    **/\n\n    this._oldProps = {\n      text: 0,\n      spriteSheet: 0,\n      lineHeight: 0,\n      letterSpacing: 0,\n      spaceWidth: 0\n    };\n    /**\n     * Used to track the object which this class attached listeners to, helps optimize listener attachment.\n     * @property _oldStage\n     * @type Stage\n     * @protected\n     */\n\n    this._oldStage = null;\n    /**\n     * The event listener proxy triggered drawing draw for special circumstances.\n     * @property _drawAction\n     * @type function\n     * @protected\n     */\n\n    this._drawAction = null;\n  }\n\n  var p = createjs.extend(BitmapText, createjs.Container); // static properties:\n\n  /**\n   * BitmapText uses Sprite instances to draw text. To reduce the creation and destruction of instances (and thus garbage collection), it maintains\n   * an internal object pool of sprite instances to reuse. Increasing this value can cause more sprites to be\n   * retained, slightly increasing memory use, but reducing instantiation.\n   * @property maxPoolSize\n   * @type Number\n   * @static\n   * @default 100\n   **/\n\n  BitmapText.maxPoolSize = 100;\n  /**\n   * Sprite object pool.\n   * @type {Array}\n   * @static\n   * @private\n   */\n\n  BitmapText._spritePool = []; // public methods:\n\n  /**\n   * Docced in superclass.\n   **/\n\n  p.draw = function (ctx, ignoreCache) {\n    if (this.DisplayObject_draw(ctx, ignoreCache)) {\n      return;\n    }\n\n    this._updateState();\n\n    this.Container_draw(ctx, ignoreCache);\n  };\n  /**\n   * Docced in superclass.\n   **/\n\n\n  p.getBounds = function () {\n    this._updateText();\n\n    return this.Container_getBounds();\n  };\n  /**\n   * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n   * This does not account for whether it would be visible within the boundaries of the stage.\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method isVisible\n   * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n   **/\n\n\n  p.isVisible = function () {\n    var hasContent = this.cacheCanvas || this.spriteSheet && this.spriteSheet.complete && this.text;\n    return !!(this.visible && this.alpha > 0 && this.scaleX !== 0 && this.scaleY !== 0 && hasContent);\n  };\n\n  p.clone = function () {\n    return this._cloneProps(new BitmapText(this.text, this.spriteSheet));\n  };\n  /**\n   * <strong>Disabled in BitmapText.</strong>\n   * @method addChild\n   **/\n\n  /**\n   * <strong>Disabled in BitmapText.</strong>\n   * @method addChildAt\n   **/\n\n  /**\n   * <strong>Disabled in BitmapText.</strong>\n   * @method removeChild\n   **/\n\n  /**\n   * <strong>Disabled in BitmapText.</strong>\n   * @method removeChildAt\n   **/\n\n  /**\n   * <strong>Disabled in BitmapText.</strong>\n   * @method removeAllChildren\n   **/\n\n\n  p.addChild = p.addChildAt = p.removeChild = p.removeChildAt = p.removeAllChildren = function () {}; // private methods:\n\n  /**\n   * Docced in superclass.\n   **/\n\n\n  p._updateState = function () {\n    this._updateText();\n  };\n  /**\n  * @method _cloneProps\n  * @param {BitmapText} o\n  * @return {BitmapText} o\n  * @protected\n  **/\n\n\n  p._cloneProps = function (o) {\n    this.Container__cloneProps(o);\n    o.lineHeight = this.lineHeight;\n    o.letterSpacing = this.letterSpacing;\n    o.spaceWidth = this.spaceWidth;\n    return o;\n  };\n  /**\n   * @method _getFrameIndex\n   * @param {String} character\n   * @param {SpriteSheet} spriteSheet\n   * @return {Number}\n   * @protected\n   **/\n\n\n  p._getFrameIndex = function (character, spriteSheet) {\n    var c,\n        o = spriteSheet.getAnimation(character);\n\n    if (!o) {\n      character != (c = character.toUpperCase()) || character != (c = character.toLowerCase()) || (c = null);\n\n      if (c) {\n        o = spriteSheet.getAnimation(c);\n      }\n    }\n\n    return o && o.frames[0];\n  };\n  /**\n   * @method _getFrame\n   * @param {String} character\n   * @param {SpriteSheet} spriteSheet\n   * @return {Object}\n   * @protected\n   **/\n\n\n  p._getFrame = function (character, spriteSheet) {\n    var index = this._getFrameIndex(character, spriteSheet);\n\n    return index == null ? index : spriteSheet.getFrame(index);\n  };\n  /**\n   * @method _getLineHeight\n   * @param {SpriteSheet} ss\n   * @return {Number}\n   * @protected\n   **/\n\n\n  p._getLineHeight = function (ss) {\n    var frame = this._getFrame(\"1\", ss) || this._getFrame(\"T\", ss) || this._getFrame(\"L\", ss) || ss.getFrame(0);\n    return frame ? frame.rect.height : 1;\n  };\n  /**\n   * @method _getSpaceWidth\n   * @param {SpriteSheet} ss\n   * @return {Number}\n   * @protected\n   **/\n\n\n  p._getSpaceWidth = function (ss) {\n    var frame = this._getFrame(\"1\", ss) || this._getFrame(\"l\", ss) || this._getFrame(\"e\", ss) || this._getFrame(\"a\", ss) || ss.getFrame(0);\n    return frame ? frame.rect.width : 1;\n  };\n  /**\n   * @method _updateText\n   * @protected\n   **/\n\n\n  p._updateText = function () {\n    var x = 0,\n        y = 0,\n        o = this._oldProps,\n        change = false,\n        spaceW = this.spaceWidth,\n        lineH = this.lineHeight,\n        ss = this.spriteSheet;\n    var pool = BitmapText._spritePool,\n        kids = this.children,\n        childIndex = 0,\n        numKids = kids.length,\n        sprite;\n\n    for (var n in o) {\n      if (o[n] != this[n]) {\n        o[n] = this[n];\n        change = true;\n      }\n    }\n\n    if (!change) {\n      return;\n    }\n\n    var hasSpace = !!this._getFrame(\" \", ss);\n\n    if (!hasSpace && !spaceW) {\n      spaceW = this._getSpaceWidth(ss);\n    }\n\n    if (!lineH) {\n      lineH = this._getLineHeight(ss);\n    }\n\n    for (var i = 0, l = this.text.length; i < l; i++) {\n      var character = this.text.charAt(i);\n\n      if (character == \" \" && !hasSpace) {\n        x += spaceW;\n        continue;\n      } else if (character == \"\\n\" || character == \"\\r\") {\n        if (character == \"\\r\" && this.text.charAt(i + 1) == \"\\n\") {\n          i++;\n        } // crlf\n\n\n        x = 0;\n        y += lineH;\n        continue;\n      }\n\n      var index = this._getFrameIndex(character, ss);\n\n      if (index == null) {\n        continue;\n      }\n\n      if (childIndex < numKids) {\n        sprite = kids[childIndex];\n      } else {\n        kids.push(sprite = pool.length ? pool.pop() : new createjs.Sprite());\n        sprite.parent = this;\n        numKids++;\n      }\n\n      sprite.spriteSheet = ss;\n      sprite.gotoAndStop(index);\n      sprite.x = x;\n      sprite.y = y;\n      childIndex++;\n      x += sprite.getBounds().width + this.letterSpacing;\n    }\n\n    while (numKids > childIndex) {\n      // faster than removeChild.\n      pool.push(sprite = kids.pop());\n      sprite.parent = null;\n      numKids--;\n    }\n\n    if (pool.length > BitmapText.maxPoolSize) {\n      pool.length = BitmapText.maxPoolSize;\n    }\n  };\n\n  createjs.BitmapText = createjs.promote(BitmapText, \"Container\");\n})(); //##############################################################################\n// MovieClip.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor:\n\n  /**\n   * The MovieClip class associates a TweenJS Timeline with an EaselJS {{#crossLink \"Container\"}}{{/crossLink}}. It allows\n   * you to create objects which encapsulate timeline animations, state changes, and synched actions. The MovieClip\n   * class has been included in the EaselJS minified file since 0.7.0.\n   *\n   * Currently MovieClip only works properly if it is tick based (as opposed to time based) though some concessions have\n   * been made to support time-based timelines in the future.\n   *\n   * <h4>Example</h4>\n   * This example animates two shapes back and forth. The grey shape starts on the left, but we jump to a mid-point in\n   * the animation using {{#crossLink \"MovieClip/gotoAndPlay\"}}{{/crossLink}}.\n   *\n   *      var stage = new createjs.Stage(\"canvas\");\n   *      createjs.Ticker.addEventListener(\"tick\", stage);\n   *\n   *      var mc = new createjs.MovieClip({loop:-1, labels:{myLabel:20}});\n   *      stage.addChild(mc);\n   *\n   *      var child1 = new createjs.Shape(\n   *          new createjs.Graphics().beginFill(\"#999999\")\n   *              .drawCircle(30,30,30));\n   *      var child2 = new createjs.Shape(\n   *          new createjs.Graphics().beginFill(\"#5a9cfb\")\n   *              .drawCircle(30,30,30));\n   *\n   *      mc.timeline.addTween(\n   *          createjs.Tween.get(child1)\n   *              .to({x:0}).to({x:60}, 50).to({x:0}, 50));\n   *      mc.timeline.addTween(\n   *          createjs.Tween.get(child2)\n   *              .to({x:60}).to({x:0}, 50).to({x:60}, 50));\n   *\n   *      mc.gotoAndPlay(\"start\");\n   *\n   * It is recommended to use <code>tween.to()</code> to animate and set properties (use no duration to have it set\n   * immediately), and the <code>tween.wait()</code> method to create delays between animations. Note that using the\n   * <code>tween.set()</code> method to affect properties will likely not provide the desired result.\n   *\n   * @class MovieClip\n   * @main MovieClip\n   * @param {Object} [props] The configuration properties to apply to this instance (ex. `{mode:MovieClip.SYNCHED}`).\n   * Supported props for the MovieClip are listed below. These props are set on the corresponding instance properties except where\n   * specified.<UL>\n   *    <LI> `mode`</LI>\n   *    <LI> `startPosition`</LI>\n   *    <LI> `frameBounds`</LI>\n   * </UL>\n   * \n   * This object will also be passed into the Timeline instance associated with this MovieClip. See the documentation\n   * for Timeline for a list of supported props (ex. `paused`, `labels`, `loop`, `reversed`, etc.)\n   * @extends Container\n   * @constructor\n   **/\n\n  function MovieClip(props) {\n    this.Container_constructor();\n    !MovieClip.inited && MovieClip.init(); // static init\n\n    var mode, startPosition, loop, labels; // handle old params (mode, startPosition, loop, labels):\n    // TODO: deprecated param handling:\n\n    if (props instanceof String || arguments.length > 1) {\n      mode = props;\n      startPosition = arguments[1];\n      loop = arguments[2];\n      labels = arguments[3];\n\n      if (loop == null) {\n        loop = -1;\n      }\n\n      props = null;\n    } else if (props) {\n      mode = props.mode;\n      startPosition = props.startPosition;\n      loop = props.loop;\n      labels = props.labels;\n    }\n\n    if (!props) {\n      props = {\n        labels: labels\n      };\n    } // public properties:\n\n    /**\n     * Controls how this MovieClip advances its time. Must be one of 0 (INDEPENDENT), 1 (SINGLE_FRAME), or 2 (SYNCHED).\n     * See each constant for a description of the behaviour.\n     * @property mode\n     * @type String\n     * @default null\n     **/\n\n\n    this.mode = mode || MovieClip.INDEPENDENT;\n    /**\n     * Specifies what the first frame to play in this movieclip, or the only frame to display if mode is SINGLE_FRAME.\n     * @property startPosition\n     * @type Number\n     * @default 0\n     */\n\n    this.startPosition = startPosition || 0;\n    /**\n     * Specifies how many times this MovieClip should loop. A value of -1 indicates it should loop indefinitely. A value of\n     * 1 would cause it to loop once (ie. play a total of twice).\n     * @property loop\n     * @type Number\n     * @default -1\n     */\n\n    this.loop = loop === true ? -1 : loop || 0;\n    /**\n     * The current frame of the movieclip.\n     * @property currentFrame\n     * @type Number\n     * @default 0\n     * @readonly\n     */\n\n    this.currentFrame = 0;\n    /**\n     * If true, the MovieClip's position will not advance when ticked.\n     * @property paused\n     * @type Boolean\n     * @default false\n     */\n\n    this.paused = props.paused || false;\n    /**\n     * If true, actions in this MovieClip's tweens will be run when the playhead advances.\n     * @property actionsEnabled\n     * @type Boolean\n     * @default true\n     */\n\n    this.actionsEnabled = true;\n    /**\n     * If true, the MovieClip will automatically be reset to its first frame whenever the timeline adds\n     * it back onto the display list. This only applies to MovieClip instances with mode=INDEPENDENT.\n     * <br><br>\n     * For example, if you had a character animation with a \"body\" child MovieClip instance\n     * with different costumes on each frame, you could set body.autoReset = false, so that\n     * you can manually change the frame it is on, without worrying that it will be reset\n     * automatically.\n     * @property autoReset\n     * @type Boolean\n     * @default true\n     */\n\n    this.autoReset = true;\n    /**\n     * An array of bounds for each frame in the MovieClip. This is mainly intended for tool output.\n     * @property frameBounds\n     * @type Array\n     * @default null\n     */\n\n    this.frameBounds = this.frameBounds || props.frameBounds; // frameBounds are set on the prototype in Animate.\n\n    /**\n     * By default MovieClip instances advance one frame per tick. Specifying a framerate for the MovieClip\n     * will cause it to advance based on elapsed time between ticks as appropriate to maintain the target\n     * framerate.\n     *\n     * For example, if a MovieClip with a framerate of 10 is placed on a Stage being updated at 40fps, then the MovieClip will\n     * advance roughly one frame every 4 ticks. This will not be exact, because the time between each tick will\n     * vary slightly between frames.\n     *\n     * This feature is dependent on the tick event object (or an object with an appropriate \"delta\" property) being\n     * passed into {{#crossLink \"Stage/update\"}}{{/crossLink}}.\n     * @property framerate\n     * @type {Number}\n     * @default null\n     **/\n\n    this.framerate = null; // set up the needed props for Timeline:\n\n    props.useTicks = props.paused = true;\n    /**\n     * The TweenJS Timeline that is associated with this MovieClip. This is created automatically when the MovieClip\n     * instance is initialized. Animations are created by adding <a href=\"http://tweenjs.com\">TweenJS</a> Tween\n     * instances to the timeline.\n     *\n     * <h4>Example</h4>\n     *\n     *      var tween = createjs.Tween.get(target).to({x:0}).to({x:100}, 30);\n     *      var mc = new createjs.MovieClip();\n     *      mc.timeline.addTween(tween);\n     *\n     * Elements can be added and removed from the timeline by toggling an \"_off\" property\n     * using the <code>tweenInstance.to()</code> method. Note that using <code>Tween.set</code> is not recommended to\n     * create MovieClip animations. The following example will toggle the target off on frame 0, and then back on for\n     * frame 1. You can use the \"visible\" property to achieve the same effect.\n     *\n     *      var tween = createjs.Tween.get(target).to({_off:false})\n     *          .wait(1).to({_off:true})\n     *          .wait(1).to({_off:false});\n     *\n     * @property timeline\n     * @type Timeline\n     * @default null\n     */\n\n    this.timeline = new createjs.Timeline(props); // private properties:\n\n    /**\n     * @property _synchOffset\n     * @type Number\n     * @default 0\n     * @private\n     */\n\n    this._synchOffset = 0;\n    /**\n     * @property _rawPosition\n     * @type Number\n     * @default -1\n     * @private\n     */\n\n    this._rawPosition = -1; // TODO: evaluate using a ._reset Boolean prop instead of -1.\n\n    /**\n     * @property _bound_resolveState\n     * @type Function\n     * @private\n     */\n\n    this._bound_resolveState = this._resolveState.bind(this);\n    /**\n     * The time remaining from the previous tick, only applicable when .framerate is set.\n     * @property _t\n     * @type Number\n     * @private\n     */\n\n    this._t = 0;\n    /**\n     * List of display objects that are actively being managed by the MovieClip.\n     * @property _managed\n     * @type Object\n     * @private\n     */\n\n    this._managed = {};\n  }\n\n  var p = createjs.extend(MovieClip, createjs.Container); // constants:\n\n  /**\n   * The MovieClip will advance independently of its parent, even if its parent is paused.\n   * This is the default mode.\n   * @property INDEPENDENT\n   * @static\n   * @type String\n   * @default \"independent\"\n   * @readonly\n   **/\n\n  MovieClip.INDEPENDENT = \"independent\";\n  /**\n   * The MovieClip will only display a single frame (as determined by the startPosition property).\n   * @property SINGLE_FRAME\n   * @static\n   * @type String\n   * @default \"single\"\n   * @readonly\n   **/\n\n  MovieClip.SINGLE_FRAME = \"single\";\n  /**\n   * The MovieClip will be advanced only when its parent advances and will be synched to the position of\n   * the parent MovieClip.\n   * @property SYNCHED\n   * @static\n   * @type String\n   * @default \"synched\"\n   * @readonly\n   **/\n\n  MovieClip.SYNCHED = \"synched\"; // static properties:\n\n  MovieClip.inited = false; // static methods:\n\n  MovieClip.init = function () {\n    if (MovieClip.inited) {\n      return;\n    } // plugins introduce some overhead to Tween, so we only install this if an MC is instantiated.\n\n\n    MovieClipPlugin.install();\n    MovieClip.inited = true;\n  }; // getter / setters:\n\n  /**\n   * Use the {{#crossLink \"MovieClip/labels:property\"}}{{/crossLink}} property instead.\n   * @method _getLabels\n   * @protected\n   * @return {Array}\n   **/\n\n\n  p._getLabels = function () {\n    return this.timeline.getLabels();\n  }; // MovieClip.getLabels is @deprecated. Remove for 1.1+\n\n\n  p.getLabels = createjs.deprecate(p._getLabels, \"MovieClip.getLabels\");\n  /**\n   * Use the {{#crossLink \"MovieClip/currentLabel:property\"}}{{/crossLink}} property instead.\n   * @method _getCurrentLabel\n   * @protected\n   * @return {String}\n   **/\n\n  p._getCurrentLabel = function () {\n    return this.timeline.currentLabel;\n  }; // MovieClip.getCurrentLabel is @deprecated. Remove for 1.1+\n\n\n  p.getCurrentLabel = createjs.deprecate(p._getCurrentLabel, \"MovieClip.getCurrentLabel\");\n  /**\n   * Use the {{#crossLink \"MovieClip/duration:property\"}}{{/crossLink}} property instead.\n   * @method _getDuration\n   * @protected\n   * @return {Number}\n   **/\n\n  p._getDuration = function () {\n    return this.timeline.duration;\n  }; // MovieClip.getDuration is @deprecated. Remove for 1.1+\n\n\n  p.getDuration = createjs.deprecate(p._getDuration, \"MovieClip.getDuration\");\n  /**\n   * Returns an array of objects with label and position (aka frame) properties, sorted by position.\n   * @property labels\n   * @type {Array}\n   * @readonly\n   **/\n\n  /**\n   * Returns the name of the label on or immediately before the current frame.\n   * @property currentLabel\n   * @type {String}\n   * @readonly\n   **/\n\n  /**\n   * Returns the duration of this MovieClip in seconds or ticks.\n   * @property totalFrames\n   * @type {Number}\n   * @readonly\n   **/\n\n  /**\n   * Returns the duration of this MovieClip in seconds or ticks.\n   * @property duration\n   * @type {Number}\n   * @readonly\n   **/\n\n  try {\n    Object.defineProperties(p, {\n      labels: {\n        get: p._getLabels\n      },\n      currentLabel: {\n        get: p._getCurrentLabel\n      },\n      totalFrames: {\n        get: p._getDuration\n      },\n      duration: {\n        get: p._getDuration\n      } // TODO: can we just proxy .currentFrame to tl.position as well? Ditto for .loop (or just remove entirely).\n\n    });\n  } catch (e) {} // public methods:\n\n  /**\n   * Constructor alias for backwards compatibility. This method will be removed in future versions.\n   * Subclasses should be updated to use {{#crossLink \"Utility Methods/extends\"}}{{/crossLink}}.\n   * @method initialize\n   * @deprecated in favour of `createjs.promote()`\n   **/\n\n\n  p.initialize = MovieClip; // TODO: Deprecated. This is for backwards support of Adobe Flash/Animate\n\n  /**\n   * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n   * This does not account for whether it would be visible within the boundaries of the stage.\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method isVisible\n   * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n   **/\n\n  p.isVisible = function () {\n    // children are placed in draw, so we can't determine if we have content.\n    return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0);\n  };\n  /**\n   * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n   * Returns true if the draw was handled (useful for overriding functionality).\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method draw\n   * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n   * @param {Boolean} ignoreCache Indicates whether the draw operation should ignore any current cache.\n   * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n   * into itself).\n   **/\n\n\n  p.draw = function (ctx, ignoreCache) {\n    // draw to cache first:\n    if (this.DisplayObject_draw(ctx, ignoreCache)) {\n      return true;\n    }\n\n    this._updateState();\n\n    this.Container_draw(ctx, ignoreCache);\n    return true;\n  };\n  /**\n   * Sets paused to false.\n   * @method play\n   **/\n\n\n  p.play = function () {\n    this.paused = false;\n  };\n  /**\n   * Sets paused to true.\n   * @method stop\n   **/\n\n\n  p.stop = function () {\n    this.paused = true;\n  };\n  /**\n   * Advances this movie clip to the specified position or label and sets paused to false.\n   * @method gotoAndPlay\n   * @param {String|Number} positionOrLabel The animation name or frame number to go to.\n   **/\n\n\n  p.gotoAndPlay = function (positionOrLabel) {\n    this.paused = false;\n\n    this._goto(positionOrLabel);\n  };\n  /**\n   * Advances this movie clip to the specified position or label and sets paused to true.\n   * @method gotoAndStop\n   * @param {String|Number} positionOrLabel The animation or frame name to go to.\n   **/\n\n\n  p.gotoAndStop = function (positionOrLabel) {\n    this.paused = true;\n\n    this._goto(positionOrLabel);\n  };\n  /**\n   * Advances the playhead. This occurs automatically each tick by default.\n   * @param [time] {Number} The amount of time in ms to advance by. Only applicable if framerate is set.\n   * @method advance\n  */\n\n\n  p.advance = function (time) {\n    var independent = MovieClip.INDEPENDENT;\n\n    if (this.mode !== independent) {\n      return;\n    } // update happens in draw for synched clips\n    // if this MC doesn't have a framerate, hunt ancestors for one:\n\n\n    var o = this,\n        fps = o.framerate;\n\n    while ((o = o.parent) && fps === null) {\n      if (o.mode === independent) {\n        fps = o._framerate;\n      }\n    }\n\n    this._framerate = fps;\n\n    if (this.paused) {\n      return;\n    } // calculate how many frames to advance:\n\n\n    var t = fps !== null && fps !== -1 && time !== null ? time / (1000 / fps) + this._t : 1;\n    var frames = t | 0;\n    this._t = t - frames; // leftover time, save to add to next advance.\n\n    while (frames--) {\n      this._updateTimeline(this._rawPosition + 1, false);\n    }\n  };\n  /**\n   * MovieClip instances cannot be cloned.\n   * @method clone\n   **/\n\n\n  p.clone = function () {\n    // TODO: add support for this? Need to clone the Timeline & retarget tweens - pretty complex.\n    throw \"MovieClip cannot be cloned.\";\n  };\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n\n\n  p.toString = function () {\n    return \"[MovieClip (name=\" + this.name + \")]\";\n  }; // private methods:\n\n  /**\n   * Docced in superclass.\n   **/\n\n\n  p._updateState = function () {\n    if (this._rawPosition === -1 || this.mode !== MovieClip.INDEPENDENT) {\n      this._updateTimeline(-1);\n    }\n  };\n  /**\n   * @method _tick\n   * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n   * function.\n   * @protected\n   **/\n\n\n  p._tick = function (evtObj) {\n    this.advance(evtObj && evtObj.delta);\n    this.Container__tick(evtObj);\n  };\n  /**\n   * @method _goto\n   * @param {String|Number} positionOrLabel The animation name or frame number to go to.\n   * @protected\n   **/\n\n\n  p._goto = function (positionOrLabel) {\n    var pos = this.timeline.resolve(positionOrLabel);\n\n    if (pos == null) {\n      return;\n    }\n\n    this._t = 0;\n\n    this._updateTimeline(pos, true);\n  };\n  /**\n   * @method _reset\n   * @private\n   **/\n\n\n  p._reset = function () {\n    this._rawPosition = -1;\n    this._t = this.currentFrame = 0;\n    this.paused = false;\n  };\n  /**\n   * @method _updateTimeline\n   * @param {Boolean} jump Indicates whether this update is due to jumping (via gotoAndXX) to a new position.\n   * @protected\n   **/\n\n\n  p._updateTimeline = function (rawPosition, jump) {\n    var synced = this.mode !== MovieClip.INDEPENDENT,\n        tl = this.timeline;\n\n    if (synced) {\n      rawPosition = this.startPosition + (this.mode === MovieClip.SINGLE_FRAME ? 0 : this._synchOffset);\n    }\n\n    if (rawPosition < 0) {\n      rawPosition = 0;\n    }\n\n    if (this._rawPosition === rawPosition && !synced) {\n      return;\n    }\n\n    this._rawPosition = rawPosition; // update timeline position, ignoring actions if this is a graphic.\n\n    tl.loop = this.loop; // TODO: should we maintain this on MovieClip, or just have it on timeline?\n\n    tl.setPosition(rawPosition, synced || !this.actionsEnabled, jump, this._bound_resolveState);\n  };\n  /**\n   * Renders position 0 without running actions or updating _rawPosition.\n   * Primarily used by Animate CC to build out the first frame in the constructor of MC symbols.\n   * NOTE: not tested when run after the MC advances past the first frame.\n   * @method _renderFirstFrame\n   * @protected\n   **/\n\n\n  p._renderFirstFrame = function () {\n    var tl = this.timeline,\n        pos = tl.rawPosition;\n    tl.setPosition(0, true, true, this._bound_resolveState);\n    tl.rawPosition = pos;\n  };\n  /**\n   * Runs via a callback after timeline property updates and before actions.\n   * @method _resolveState\n   * @protected\n   **/\n\n\n  p._resolveState = function () {\n    var tl = this.timeline;\n    this.currentFrame = tl.position;\n\n    for (var n in this._managed) {\n      this._managed[n] = 1;\n    }\n\n    var tweens = tl.tweens;\n\n    for (var i = 0, l = tweens.length; i < l; i++) {\n      var tween = tweens[i],\n          target = tween.target;\n\n      if (target === this || tween.passive) {\n        continue;\n      } // TODO: this assumes the actions tween from Animate has `this` as the target. There's likely a better approach.\n\n\n      var offset = tween._stepPosition;\n\n      if (target instanceof createjs.DisplayObject) {\n        // motion tween.\n        this._addManagedChild(target, offset);\n      } else {\n        // state tween.\n        this._setState(target.state, offset);\n      }\n    }\n\n    var kids = this.children;\n\n    for (i = kids.length - 1; i >= 0; i--) {\n      var id = kids[i].id;\n\n      if (this._managed[id] === 1) {\n        this.removeChildAt(i);\n        delete this._managed[id];\n      }\n    }\n  };\n  /**\n   * @method _setState\n   * @param {Array} state\n   * @param {Number} offset\n   * @protected\n   **/\n\n\n  p._setState = function (state, offset) {\n    if (!state) {\n      return;\n    }\n\n    for (var i = state.length - 1; i >= 0; i--) {\n      var o = state[i];\n      var target = o.t;\n      var props = o.p;\n\n      for (var n in props) {\n        target[n] = props[n];\n      }\n\n      this._addManagedChild(target, offset);\n    }\n  };\n  /**\n   * Adds a child to the timeline, and sets it up as a managed child.\n   * @method _addManagedChild\n   * @param {MovieClip} child The child MovieClip to manage\n   * @param {Number} offset\n   * @private\n   **/\n\n\n  p._addManagedChild = function (child, offset) {\n    if (child._off) {\n      return;\n    }\n\n    this.addChildAt(child, 0);\n\n    if (child instanceof MovieClip) {\n      child._synchOffset = offset; // TODO: this does not precisely match Adobe Flash/Animate, which loses track of the clip if it is renamed or removed from the timeline, which causes it to reset.\n      // TODO: should also reset when MovieClip loops, though that will be a bit tricky to detect.\n\n      if (child.mode === MovieClip.INDEPENDENT && child.autoReset && !this._managed[child.id]) {\n        child._reset();\n      }\n    }\n\n    this._managed[child.id] = 2;\n  };\n  /**\n   * @method _getBounds\n   * @param {Matrix2D} matrix\n   * @param {Boolean} ignoreTransform\n   * @return {Rectangle}\n   * @protected\n   **/\n\n\n  p._getBounds = function (matrix, ignoreTransform) {\n    var bounds = this.DisplayObject_getBounds();\n\n    if (!bounds) {\n      if (this.frameBounds) {\n        bounds = this._rectangle.copy(this.frameBounds[this.currentFrame]);\n      }\n    }\n\n    if (bounds) {\n      return this._transformBounds(bounds, matrix, ignoreTransform);\n    }\n\n    return this.Container__getBounds(matrix, ignoreTransform);\n  };\n\n  createjs.MovieClip = createjs.promote(MovieClip, \"Container\"); // MovieClipPlugin for TweenJS:\n\n  /**\n   * This plugin works with <a href=\"http://tweenjs.com\" target=\"_blank\">TweenJS</a> to prevent the startPosition\n   * property from tweening.\n   * @private\n   * @class MovieClipPlugin\n   * @constructor\n   **/\n\n  function MovieClipPlugin() {\n    throw \"MovieClipPlugin cannot be instantiated.\";\n  }\n  /**\n   * @property priority\n   * @type {Number}\n   * @static\n   * @readonly\n   **/\n\n\n  MovieClipPlugin.priority = 100; // very high priority, should run first\n\n  /**\n   * @property ID\n   * @type {String}\n   * @static\n   * @readonly\n   **/\n\n  MovieClipPlugin.ID = \"MovieClip\";\n  /**\n   * @method install\n   * @static\n   **/\n\n  MovieClipPlugin.install = function () {\n    createjs.Tween._installPlugin(MovieClipPlugin);\n  };\n  /**\n   * @method init\n   * @param {Tween} tween\n   * @param {String} prop\n   * @param {*} value\n   * @static\n   **/\n\n\n  MovieClipPlugin.init = function (tween, prop, value) {\n    if (prop === \"startPosition\" && tween.target instanceof MovieClip) {\n      tween._addPlugin(MovieClipPlugin);\n    }\n  };\n  /**\n   * @method step\n   * @param {Tween} tween\n   * @param {TweenStep} step\n   * @param {Object} props\n   * @static\n   **/\n\n\n  MovieClipPlugin.step = function (tween, step, props) {};\n  /**\n   * @method change\n   * @param {Tween} tween\n   * @param {TweenStep} step\n   * @param {*} value\n   * @param {Number} ratio\n   * @param {Object} end\n   * @return {*}\n   * @static\n   */\n\n\n  MovieClipPlugin.change = function (tween, step, prop, value, ratio, end) {\n    if (prop === \"startPosition\") {\n      return ratio === 1 ? step.props[prop] : step.prev.props[prop];\n    }\n  };\n})(); //##############################################################################\n// SpriteSheetUtils.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor:\n\n  /**\n   * The SpriteSheetUtils class is a collection of static methods for working with {{#crossLink \"SpriteSheet\"}}{{/crossLink}}s.\n   * A sprite sheet is a series of images (usually animation frames) combined into a single image on a regular grid. For\n   * example, an animation consisting of 8 100x100 images could be combined into a 400x200 sprite sheet (4 frames across\n   * by 2 high). The SpriteSheetUtils class uses a static interface and should not be instantiated.\n   * @class SpriteSheetUtils\n   * @static\n   **/\n\n  function SpriteSheetUtils() {\n    throw \"SpriteSheetUtils cannot be instantiated\";\n  } // private static properties:\n\n  /**\n   * @property _workingCanvas\n   * @static\n   * @type HTMLCanvasElement | Object\n   * @protected\n  */\n\n  /**\n   * @property _workingContext\n   * @static\n   * @type CanvasRenderingContext2D\n   * @protected\n  */\n\n\n  var canvas = createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\");\n\n  if (canvas.getContext) {\n    SpriteSheetUtils._workingCanvas = canvas;\n    SpriteSheetUtils._workingContext = canvas.getContext(\"2d\");\n    canvas.width = canvas.height = 1;\n  } // public static methods:\n\n  /**\n   * Returns a single frame of the specified sprite sheet as a new PNG image. An example of when this may be useful is\n   * to use a spritesheet frame as the source for a bitmap fill.\n   *\n   * <strong>WARNING:</strong> In almost all cases it is better to display a single frame using a {{#crossLink \"Sprite\"}}{{/crossLink}}\n   * with a {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} call than it is to slice out a frame using this\n   * method and display it with a Bitmap instance. You can also crop an image using the {{#crossLink \"Bitmap/sourceRect\"}}{{/crossLink}}\n   * property of {{#crossLink \"Bitmap\"}}{{/crossLink}}.\n   *\n   * The extractFrame method may cause cross-domain warnings since it accesses pixels directly on the canvas.\n   * @method extractFrame\n   * @static\n   * @param {SpriteSheet} spriteSheet The SpriteSheet instance to extract a frame from.\n   * @param {Number|String} frameOrAnimation The frame number or animation name to extract. If an animation\n   * name is specified, only the first frame of the animation will be extracted.\n   * @return {HTMLImageElement} a single frame of the specified sprite sheet as a new PNG image.\n  */\n\n\n  SpriteSheetUtils.extractFrame = function (spriteSheet, frameOrAnimation) {\n    if (isNaN(frameOrAnimation)) {\n      frameOrAnimation = spriteSheet.getAnimation(frameOrAnimation).frames[0];\n    }\n\n    var data = spriteSheet.getFrame(frameOrAnimation);\n\n    if (!data) {\n      return null;\n    }\n\n    var r = data.rect;\n    var canvas = SpriteSheetUtils._workingCanvas;\n    canvas.width = r.width;\n    canvas.height = r.height;\n\n    SpriteSheetUtils._workingContext.drawImage(data.image, r.x, r.y, r.width, r.height, 0, 0, r.width, r.height);\n\n    var img = document.createElement(\"img\");\n    img.src = canvas.toDataURL(\"image/png\");\n    return img;\n  }; // SpriteSheetUtils.addFlippedFrames is @deprecated. Remove for 1.1+\n\n\n  SpriteSheetUtils.addFlippedFrames = createjs.deprecate(null, \"SpriteSheetUtils.addFlippedFrames\"); // SpriteSheetUtils.addFlippedFrames is @deprecated. Remove for 1.1+\n\n  SpriteSheetUtils.mergeAlpha = createjs.deprecate(null, \"SpriteSheetUtils.mergeAlpha\"); // private static methods:\n\n  SpriteSheetUtils._flip = function (spriteSheet, count, h, v) {\n    var imgs = spriteSheet._images;\n    var canvas = SpriteSheetUtils._workingCanvas;\n    var ctx = SpriteSheetUtils._workingContext;\n    var il = imgs.length / count;\n\n    for (var i = 0; i < il; i++) {\n      var src = imgs[i];\n      src.__tmp = i; // a bit hacky, but faster than doing indexOf below.\n\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.clearRect(0, 0, canvas.width + 1, canvas.height + 1);\n      canvas.width = src.width;\n      canvas.height = src.height;\n      ctx.setTransform(h ? -1 : 1, 0, 0, v ? -1 : 1, h ? src.width : 0, v ? src.height : 0);\n      ctx.drawImage(src, 0, 0);\n      var img = document.createElement(\"img\");\n      img.src = canvas.toDataURL(\"image/png\"); // work around a strange bug in Safari:\n\n      img.width = src.width || src.naturalWidth;\n      img.height = src.height || src.naturalHeight;\n      imgs.push(img);\n    }\n\n    var frames = spriteSheet._frames;\n    var fl = frames.length / count;\n\n    for (i = 0; i < fl; i++) {\n      src = frames[i];\n      var rect = src.rect.clone();\n      img = imgs[src.image.__tmp + il * count];\n      var frame = {\n        image: img,\n        rect: rect,\n        regX: src.regX,\n        regY: src.regY\n      };\n\n      if (h) {\n        rect.x = (img.width || img.naturalWidth) - rect.x - rect.width; // update rect\n\n        frame.regX = rect.width - src.regX; // update registration point\n      }\n\n      if (v) {\n        rect.y = (img.height || img.naturalHeight) - rect.y - rect.height; // update rect\n\n        frame.regY = rect.height - src.regY; // update registration point\n      }\n\n      frames.push(frame);\n    }\n\n    var sfx = \"_\" + (h ? \"h\" : \"\") + (v ? \"v\" : \"\");\n    var names = spriteSheet._animations;\n    var data = spriteSheet._data;\n    var al = names.length / count;\n\n    for (i = 0; i < al; i++) {\n      var name = names[i];\n      src = data[name];\n      var anim = {\n        name: name + sfx,\n        speed: src.speed,\n        next: src.next,\n        frames: []\n      };\n\n      if (src.next) {\n        anim.next += sfx;\n      }\n\n      frames = src.frames;\n\n      for (var j = 0, l = frames.length; j < l; j++) {\n        anim.frames.push(frames[j] + fl * count);\n      }\n\n      data[anim.name] = anim;\n      names.push(anim.name);\n    }\n  };\n\n  createjs.SpriteSheetUtils = SpriteSheetUtils;\n})(); //##############################################################################\n// SpriteSheetBuilder.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor:\n\n  /**\n   * The SpriteSheetBuilder allows you to generate {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instances at run time\n   * from any display object. This can allow you to maintain your assets as vector graphics (for low file size), and\n   * render them at run time as SpriteSheets for better performance.\n   *\n   * SpriteSheets can be built either synchronously, or asynchronously, so that large SpriteSheets can be generated\n   * without locking the UI.\n   *\n   * Note that the \"images\" used in the generated SpriteSheet are actually canvas elements, and that they will be\n   * sized to the nearest power of 2 up to the value of {{#crossLink \"SpriteSheetBuilder/maxWidth:property\"}}{{/crossLink}}\n   * or {{#crossLink \"SpriteSheetBuilder/maxHeight:property\"}}{{/crossLink}}.\n   * @class SpriteSheetBuilder\n   * @param {Number} [framerate=0] The {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} of\n   * {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instances that are created.\n   * @extends EventDispatcher\n   * @constructor\n   **/\n\n  function SpriteSheetBuilder(framerate) {\n    this.EventDispatcher_constructor(); // public properties:\n\n    /**\n     * The maximum width for the images (not individual frames) in the generated SpriteSheet. It is recommended to\n     * use a power of 2 for this value (ex. 1024, 2048, 4096). If the frames cannot all fit within the max\n     * dimensions, then additional images will be created as needed.\n     * @property maxWidth\n     * @type Number\n     * @default 2048\n    */\n\n    this.maxWidth = 2048;\n    /**\n     * The maximum height for the images (not individual frames) in the generated SpriteSheet. It is recommended to\n     * use a power of 2 for this value (ex. 1024, 2048, 4096). If the frames cannot all fit within the max\n     * dimensions, then additional images will be created as needed.\n     * @property maxHeight\n     * @type Number\n     * @default 2048\n     **/\n\n    this.maxHeight = 2048;\n    /**\n     * The SpriteSheet that was generated. This will be null before a build is completed successfully.\n     * @property spriteSheet\n     * @type SpriteSheet\n     **/\n\n    this.spriteSheet = null;\n    /**\n     * The scale to apply when drawing all frames to the SpriteSheet. This is multiplied against any scale specified\n     * in the addFrame call. This can be used, for example, to generate a SpriteSheet at run time that is tailored\n     * to the a specific device resolution (ex. tablet vs mobile).\n     * @property scale\n     * @type Number\n     * @default 1\n     **/\n\n    this.scale = 1;\n    /**\n    * The padding to use between frames. This is helpful to preserve antialiasing on drawn vector content.\n    * @property padding\n    * @type Number\n    * @default 1\n    **/\n\n    this.padding = 1;\n    /**\n     * A number from 0.01 to 0.99 that indicates what percentage of time the builder can use. This can be\n     * thought of as the number of seconds per second the builder will use. For example, with a timeSlice value of 0.3,\n     * the builder will run 20 times per second, using approximately 15ms per build (30% of available time, or 0.3s per second).\n     * Defaults to 0.3.\n     * @property timeSlice\n     * @type Number\n     * @default 0.3\n     **/\n\n    this.timeSlice = 0.3;\n    /**\n     * A value between 0 and 1 that indicates the progress of a build, or -1 if a build has not\n     * been initiated.\n     * @property progress\n     * @type Number\n     * @default -1\n     * @readonly\n     */\n\n    this.progress = -1;\n    /**\n     * A {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} value that will be passed to new {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instances that are\n     * created. If no framerate is specified (or it is 0), then SpriteSheets will use the {{#crossLink \"Ticker\"}}{{/crossLink}}\n     * framerate.\n     * @property framerate\n     * @type Number\n     * @default 0\n     */\n\n    this.framerate = framerate || 0; // private properties:\n\n    /**\n     * @property _frames\n     * @protected\n     * @type Array\n     **/\n\n    this._frames = [];\n    /**\n     * @property _animations\n     * @protected\n     * @type Array\n     **/\n\n    this._animations = {};\n    /**\n     * @property _data\n     * @protected\n     * @type Array\n     **/\n\n    this._data = null;\n    /**\n     * @property _nextFrameIndex\n     * @protected\n     * @type Number\n     **/\n\n    this._nextFrameIndex = 0;\n    /**\n     * @property _index\n     * @protected\n     * @type Number\n     **/\n\n    this._index = 0;\n    /**\n     * @property _timerID\n     * @protected\n     * @type Number\n     **/\n\n    this._timerID = null;\n    /**\n     * @property _scale\n     * @protected\n     * @type Number\n     **/\n\n    this._scale = 1;\n  }\n\n  var p = createjs.extend(SpriteSheetBuilder, createjs.EventDispatcher); // constants:\n\n  SpriteSheetBuilder.ERR_DIMENSIONS = \"frame dimensions exceed max spritesheet dimensions\";\n  SpriteSheetBuilder.ERR_RUNNING = \"a build is already running\"; // events:\n\n  /**\n   * Dispatched when a build completes.\n   * @event complete\n   * @param {Object} target The object that dispatched the event.\n   * @param {String} type The event type.\n   * @since 0.6.0\n   */\n\n  /**\n   * Dispatched when an asynchronous build has progress.\n   * @event progress\n   * @param {Object} target The object that dispatched the event.\n   * @param {String} type The event type.\n   * @param {Number} progress The current progress value (0-1).\n   * @since 0.6.0\n   */\n  // public methods:\n\n  /**\n   * Adds a frame to the {{#crossLink \"SpriteSheet\"}}{{/crossLink}}. Note that the frame will not be drawn until you\n   * call {{#crossLink \"SpriteSheetBuilder/build\"}}{{/crossLink}} method. The optional setup params allow you to have\n   * a function run immediately before the draw occurs. For example, this allows you to add a single source multiple\n   * times, but manipulate it or its children to change it to generate different frames.\n   *\n   * Note that the source's transformations (x, y, scale, rotate, alpha) will be ignored, except for regX/Y. To apply\n   * transforms to a source object and have them captured in the SpriteSheet, simply place it into a {{#crossLink \"Container\"}}{{/crossLink}}\n   * and pass in the Container as the source.\n   * @method addFrame\n   * @param {DisplayObject} source The source {{#crossLink \"DisplayObject\"}}{{/crossLink}}  to draw as the frame.\n   * @param {Rectangle} [sourceRect] A {{#crossLink \"Rectangle\"}}{{/crossLink}} defining the portion of the\n   * source to draw to the frame. If not specified, it will look for a `getBounds` method, bounds property, or\n   * `nominalBounds` property on the source to use. If one is not found, the frame will be skipped.\n   * @param {Number} [scale=1] Optional. The scale to draw this frame at. Default is 1.\n   * @param {Function} [setupFunction] A function to call immediately before drawing this frame. It will be called with two parameters: the source, and setupData.\n   * @param {Object} [setupData] Arbitrary setup data to pass to setupFunction as the second parameter.\n   * @return {Number} The index of the frame that was just added, or null if a sourceRect could not be determined.\n   **/\n\n  p.addFrame = function (source, sourceRect, scale, setupFunction, setupData) {\n    if (this._data) {\n      throw SpriteSheetBuilder.ERR_RUNNING;\n    }\n\n    var rect = sourceRect || source.bounds || source.nominalBounds;\n\n    if (!rect && source.getBounds) {\n      rect = source.getBounds();\n    }\n\n    if (!rect) {\n      return null;\n    }\n\n    scale = scale || 1;\n    return this._frames.push({\n      source: source,\n      sourceRect: rect,\n      scale: scale,\n      funct: setupFunction,\n      data: setupData,\n      index: this._frames.length,\n      height: rect.height * scale\n    }) - 1;\n  };\n  /**\n   * Adds an animation that will be included in the created {{#crossLink \"SpriteSheet\"}}{{/crossLink}}.\n   * @method addAnimation\n   * @param {String} name The name for the animation.\n   * @param {Array} frames An array of frame indexes that comprise the animation. Ex. [3,6,5] would describe an animation\n   * that played frame indexes 3, 6, and 5 in that order.\n   * @param {String} [next] Specifies the name of the animation to continue to after this animation ends. You can\n   * also pass false to have the animation stop when it ends. By default it will loop to the start of the same animation.\n   * @param {Number} [speed] Specifies a frame advance speed for this animation. For example, a value of 0.5 would\n   * cause the animation to advance every second tick. Note that earlier versions used `frequency` instead, which had\n   * the opposite effect.\n   **/\n\n\n  p.addAnimation = function (name, frames, next, speed) {\n    if (this._data) {\n      throw SpriteSheetBuilder.ERR_RUNNING;\n    }\n\n    this._animations[name] = {\n      frames: frames,\n      next: next,\n      speed: speed\n    };\n  };\n  /**\n   * This will take a {{#crossLink \"MovieClip\"}}{{/crossLink}} instance, and add its frames and labels to this\n   * builder. Labels will be added as an animation running from the label index to the next label. For example, if\n   * there is a label named \"foo\" at frame 0 and a label named \"bar\" at frame 10, in a MovieClip with 15 frames, it\n   * will add an animation named \"foo\" that runs from frame index 0 to 9, and an animation named \"bar\" that runs from\n   * frame index 10 to 14.\n   *\n   * Note that this will iterate through the full MovieClip with {{#crossLink \"MovieClip/actionsEnabled:property\"}}{{/crossLink}}\n   * set to `false`, ending on the last frame.\n   * @method addMovieClip\n   * @param {MovieClip} source The source MovieClip instance to add to the SpriteSheet.\n   * @param {Rectangle} [sourceRect] A {{#crossLink \"Rectangle\"}}{{/crossLink}} defining the portion of the source to\n   * draw to the frame. If not specified, it will look for a {{#crossLink \"DisplayObject/getBounds\"}}{{/crossLink}}\n   * method, `frameBounds` Array, `bounds` property, or `nominalBounds` property on the source to use. If one is not\n   * found, the MovieClip will be skipped.\n   * @param {Number} [scale=1] The scale to draw the movie clip at.\n   * @param {Function} [setupFunction] A function to call immediately before drawing each frame. It will be called\n   * with three parameters: the source, setupData, and the frame index.\n   * @param {Object} [setupData] Arbitrary setup data to pass to setupFunction as the second parameter.\n   * @param {Function} [labelFunction] This method will be called for each MovieClip label that is added with four\n   * parameters: the label name, the source MovieClip instance, the starting frame index (in the movieclip timeline)\n   * and the end index. It must return a new name for the label/animation, or `false` to exclude the label.\n   **/\n\n\n  p.addMovieClip = function (source, sourceRect, scale, setupFunction, setupData, labelFunction) {\n    if (this._data) {\n      throw SpriteSheetBuilder.ERR_RUNNING;\n    }\n\n    var rects = source.frameBounds;\n    var rect = sourceRect || source.bounds || source.nominalBounds;\n\n    if (!rect && source.getBounds) {\n      rect = source.getBounds();\n    }\n\n    if (!rect && !rects) {\n      return;\n    }\n\n    var i,\n        l,\n        baseFrameIndex = this._frames.length;\n    var duration = source.timeline.duration;\n\n    for (i = 0; i < duration; i++) {\n      var r = rects && rects[i] ? rects[i] : rect;\n      this.addFrame(source, r, scale, this._setupMovieClipFrame, {\n        i: i,\n        f: setupFunction,\n        d: setupData\n      });\n    }\n\n    var labels = source.timeline._labels;\n    var lbls = [];\n\n    for (var n in labels) {\n      lbls.push({\n        index: labels[n],\n        label: n\n      });\n    }\n\n    if (lbls.length) {\n      lbls.sort(function (a, b) {\n        return a.index - b.index;\n      });\n\n      for (i = 0, l = lbls.length; i < l; i++) {\n        var label = lbls[i].label;\n        var start = baseFrameIndex + lbls[i].index;\n        var end = baseFrameIndex + (i == l - 1 ? duration : lbls[i + 1].index);\n        var frames = [];\n\n        for (var j = start; j < end; j++) {\n          frames.push(j);\n        }\n\n        if (labelFunction) {\n          label = labelFunction(label, source, start, end);\n\n          if (!label) {\n            continue;\n          }\n        }\n\n        this.addAnimation(label, frames, true); // for now, this loops all animations.\n      }\n    }\n  };\n  /**\n   * Builds a {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instance based on the current frames.\n   * @method build\n   * @return {SpriteSheet} The created SpriteSheet instance, or null if a build is already running or an error\n   * occurred.\n   **/\n\n\n  p.build = function () {\n    if (this._data) {\n      throw SpriteSheetBuilder.ERR_RUNNING;\n    }\n\n    this._startBuild();\n\n    while (this._drawNext()) {}\n\n    this._endBuild();\n\n    return this.spriteSheet;\n  };\n  /**\n   * Asynchronously builds a {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instance based on the current frames. It will\n   * run 20 times per second, using an amount of time defined by `timeSlice`. When it is complete it will call the\n   * specified callback.\n   * @method buildAsync\n   * @param {Number} [timeSlice] Sets the timeSlice property on this instance.\n   **/\n\n\n  p.buildAsync = function (timeSlice) {\n    if (this._data) {\n      throw SpriteSheetBuilder.ERR_RUNNING;\n    }\n\n    this.timeSlice = timeSlice;\n\n    this._startBuild();\n\n    var _this = this;\n\n    this._timerID = setTimeout(function () {\n      _this._run();\n    }, 50 - Math.max(0.01, Math.min(0.99, this.timeSlice || 0.3)) * 50);\n  };\n  /**\n   * Stops the current asynchronous build.\n   * @method stopAsync\n   **/\n\n\n  p.stopAsync = function () {\n    clearTimeout(this._timerID);\n    this._data = null;\n  };\n  /**\n   * SpriteSheetBuilder instances cannot be cloned.\n   * @method clone\n   **/\n\n\n  p.clone = function () {\n    throw \"SpriteSheetBuilder cannot be cloned.\";\n  };\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n\n\n  p.toString = function () {\n    return \"[SpriteSheetBuilder]\";\n  }; // private methods:\n\n  /**\n   * @method _startBuild\n   * @protected\n   **/\n\n\n  p._startBuild = function () {\n    var pad = this.padding || 0;\n    this.progress = 0;\n    this.spriteSheet = null;\n    this._index = 0;\n    this._scale = this.scale;\n    var dataFrames = [];\n    this._data = {\n      images: [],\n      frames: dataFrames,\n      framerate: this.framerate,\n      animations: this._animations // TODO: should we \"clone\" _animations in case someone adds more animations after a build?\n\n    };\n\n    var frames = this._frames.slice();\n\n    frames.sort(function (a, b) {\n      return a.height <= b.height ? -1 : 1;\n    });\n\n    if (frames[frames.length - 1].height + pad * 2 > this.maxHeight) {\n      throw SpriteSheetBuilder.ERR_DIMENSIONS;\n    }\n\n    var y = 0,\n        x = 0;\n    var img = 0;\n\n    while (frames.length) {\n      var o = this._fillRow(frames, y, img, dataFrames, pad);\n\n      if (o.w > x) {\n        x = o.w;\n      }\n\n      y += o.h;\n\n      if (!o.h || !frames.length) {\n        var canvas = createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\");\n        canvas.width = this._getSize(x, this.maxWidth);\n        canvas.height = this._getSize(y, this.maxHeight);\n        this._data.images[img] = canvas;\n\n        if (!o.h) {\n          x = y = 0;\n          img++;\n        }\n      }\n    }\n  };\n  /**\n   * @method _setupMovieClipFrame\n   * @protected\n   * @return {Number} The width & height of the row.\n   **/\n\n\n  p._setupMovieClipFrame = function (source, data) {\n    var ae = source.actionsEnabled;\n    source.actionsEnabled = false;\n    source.gotoAndStop(data.i);\n    source.actionsEnabled = ae;\n    data.f && data.f(source, data.d, data.i);\n  };\n  /**\n   * @method _getSize\n   * @protected\n   * @return {Number} The width & height of the row.\n   **/\n\n\n  p._getSize = function (size, max) {\n    var pow = 4;\n\n    while (Math.pow(2, ++pow) < size) {}\n\n    return Math.min(max, Math.pow(2, pow));\n  };\n  /**\n   * @method _fillRow\n   * @param {Array} frames\n   * @param {Number} y\n   * @param {HTMLImageElement} img\n   * @param {Object} dataFrames\n   * @param {Number} pad\n   * @protected\n   * @return {Number} The width & height of the row.\n   **/\n\n\n  p._fillRow = function (frames, y, img, dataFrames, pad) {\n    var w = this.maxWidth;\n    var maxH = this.maxHeight;\n    y += pad;\n    var h = maxH - y;\n    var x = pad;\n    var height = 0;\n\n    for (var i = frames.length - 1; i >= 0; i--) {\n      var frame = frames[i];\n      var sc = this._scale * frame.scale;\n      var rect = frame.sourceRect;\n      var source = frame.source;\n      var rx = Math.floor(sc * rect.x - pad);\n      var ry = Math.floor(sc * rect.y - pad);\n      var rh = Math.ceil(sc * rect.height + pad * 2);\n      var rw = Math.ceil(sc * rect.width + pad * 2);\n\n      if (rw > w) {\n        throw SpriteSheetBuilder.ERR_DIMENSIONS;\n      }\n\n      if (rh > h || x + rw > w) {\n        continue;\n      }\n\n      frame.img = img;\n      frame.rect = new createjs.Rectangle(x, y, rw, rh);\n      height = height || rh;\n      frames.splice(i, 1);\n      dataFrames[frame.index] = [x, y, rw, rh, img, Math.round(-rx + sc * source.regX - pad), Math.round(-ry + sc * source.regY - pad)];\n      x += rw;\n    }\n\n    return {\n      w: x,\n      h: height\n    };\n  };\n  /**\n   * @method _endBuild\n   * @protected\n   **/\n\n\n  p._endBuild = function () {\n    this.spriteSheet = new createjs.SpriteSheet(this._data);\n    this._data = null;\n    this.progress = 1;\n    this.dispatchEvent(\"complete\");\n  };\n  /**\n   * @method _run\n   * @protected\n   **/\n\n\n  p._run = function () {\n    var ts = Math.max(0.01, Math.min(0.99, this.timeSlice || 0.3)) * 50;\n    var t = new Date().getTime() + ts;\n    var complete = false;\n\n    while (t > new Date().getTime()) {\n      if (!this._drawNext()) {\n        complete = true;\n        break;\n      }\n    }\n\n    if (complete) {\n      this._endBuild();\n    } else {\n      var _this = this;\n\n      this._timerID = setTimeout(function () {\n        _this._run();\n      }, 50 - ts);\n    }\n\n    var p = this.progress = this._index / this._frames.length;\n\n    if (this.hasEventListener(\"progress\")) {\n      var evt = new createjs.Event(\"progress\");\n      evt.progress = p;\n      this.dispatchEvent(evt);\n    }\n  };\n  /**\n   * @method _drawNext\n   * @protected\n   * @return Boolean Returns false if this is the last draw.\n   **/\n\n\n  p._drawNext = function () {\n    var frame = this._frames[this._index];\n    var sc = frame.scale * this._scale;\n    var rect = frame.rect;\n    var sourceRect = frame.sourceRect;\n    var canvas = this._data.images[frame.img];\n    var ctx = canvas.getContext(\"2d\");\n    frame.funct && frame.funct(frame.source, frame.data);\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(rect.x, rect.y, rect.width, rect.height);\n    ctx.clip();\n    ctx.translate(Math.ceil(rect.x - sourceRect.x * sc), Math.ceil(rect.y - sourceRect.y * sc));\n    ctx.scale(sc, sc);\n    frame.source.draw(ctx); // display object will draw itself.\n\n    ctx.restore();\n    return ++this._index < this._frames.length;\n  };\n\n  createjs.SpriteSheetBuilder = createjs.promote(SpriteSheetBuilder, \"EventDispatcher\");\n})(); //##############################################################################\n// DOMElement.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor:\n\n  /**\n   * <b>This class is still experimental, and more advanced use is likely to be buggy. Please report bugs.</b>\n   *\n   * A DOMElement allows you to associate a HTMLElement with the display list. It will be transformed\n   * within the DOM as though it is child of the {{#crossLink \"Container\"}}{{/crossLink}} it is added to. However, it is\n   * not rendered to canvas, and as such will retain whatever z-index it has relative to the canvas (ie. it will be\n   * drawn in front of or behind the canvas).\n   *\n   * The position of a DOMElement is relative to their parent node in the DOM. It is recommended that\n   * the DOM Object be added to a div that also contains the canvas so that they share the same position\n   * on the page.\n   *\n   * DOMElement is useful for positioning HTML elements over top of canvas content, and for elements\n   * that you want to display outside the bounds of the canvas. For example, a tooltip with rich HTML\n   * content.\n   *\n   * <h4>Mouse Interaction</h4>\n   *\n   * DOMElement instances are not full EaselJS display objects, and do not participate in EaselJS mouse\n   * events or support methods like hitTest. To get mouse events from a DOMElement, you must instead add handlers to\n   * the htmlElement (note, this does not support EventDispatcher)\n   *\n   *      var domElement = new createjs.DOMElement(htmlElement);\n   *      domElement.htmlElement.onclick = function() {\n   *          console.log(\"clicked\");\n   *      }\n   *\n   * <strong>Important:</strong> This class needs to be notified it is about to be drawn, this will happen automatically\n   * if you call stage.update, calling stage.draw or disabling tickEnabled will miss important steps and it will render\n   * stale information.\n   *\n   * @class DOMElement\n   * @extends DisplayObject\n   * @constructor\n   * @param {HTMLElement} htmlElement A reference or id for the DOM element to manage.\n   */\n\n  function DOMElement(htmlElement) {\n    this.DisplayObject_constructor();\n\n    if (typeof htmlElement == \"string\") {\n      htmlElement = document.getElementById(htmlElement);\n    }\n\n    this.mouseEnabled = false;\n    var style = htmlElement.style;\n    style.position = \"absolute\";\n    style.transformOrigin = style.WebkitTransformOrigin = style.msTransformOrigin = style.MozTransformOrigin = style.OTransformOrigin = \"0% 0%\"; // public properties:\n\n    /**\n     * The DOM object to manage.\n     * @property htmlElement\n     * @type HTMLElement\n     */\n\n    this.htmlElement = htmlElement; // private properties:\n\n    /**\n     * @property _oldMtx\n     * @type Matrix2D\n     * @protected\n     */\n\n    this._oldProps = null;\n    /**\n     * Used to track the object which this class attached listeners to, helps optimize listener attachment.\n     * @property _oldStage\n     * @type Stage\n     * @protected\n     */\n\n    this._oldStage = null;\n    /**\n     * The event listener proxy triggered drawing draw for special circumstances.\n     * @property _drawAction\n     * @type function\n     * @protected\n     */\n\n    this._drawAction = null;\n  }\n\n  var p = createjs.extend(DOMElement, createjs.DisplayObject); // TODO: deprecated\n  // p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n  // public methods:\n\n  /**\n   * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n   * This does not account for whether it would be visible within the boundaries of the stage.\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method isVisible\n   * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n   */\n\n  p.isVisible = function () {\n    return this.htmlElement != null;\n  };\n  /**\n   * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n   * Returns true if the draw was handled (useful for overriding functionality).\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method draw\n   * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n   * @param {Boolean} ignoreCache Indicates whether the draw operation should ignore any current cache.\n   * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n   * into itself).\n   * @return {Boolean}\n   */\n\n\n  p.draw = function (ctx, ignoreCache) {\n    // this relies on the _tick method because draw isn't called if the parent is not visible.\n    // the actual update happens in _handleDrawEnd\n    return true;\n  };\n  /**\n   * Not applicable to DOMElement.\n   * @method cache\n   */\n\n\n  p.cache = function () {};\n  /**\n   * Not applicable to DOMElement.\n   * @method uncache\n   */\n\n\n  p.uncache = function () {};\n  /**\n   * Not applicable to DOMElement.\n   * @method updateCache\n   */\n\n\n  p.updateCache = function () {};\n  /**\n   * Not applicable to DOMElement.\n   * @method hitTest\n   */\n\n\n  p.hitTest = function () {};\n  /**\n   * Not applicable to DOMElement.\n   * @method localToGlobal\n   */\n\n\n  p.localToGlobal = function () {};\n  /**\n   * Not applicable to DOMElement.\n   * @method globalToLocal\n   */\n\n\n  p.globalToLocal = function () {};\n  /**\n   * Not applicable to DOMElement.\n   * @method localToLocal\n   */\n\n\n  p.localToLocal = function () {};\n  /**\n   * DOMElement cannot be cloned. Throws an error.\n   * @method clone\n   */\n\n\n  p.clone = function () {\n    throw \"DOMElement cannot be cloned.\";\n  };\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   */\n\n\n  p.toString = function () {\n    return \"[DOMElement (name=\" + this.name + \")]\";\n  };\n  /**\n      * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n   * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n   * @event click\n   */\n\n  /**\n  * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n  * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n  * @event dblClick\n  */\n\n  /**\n   * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n  * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n  * @event mousedown\n  */\n\n  /**\n   * The HTMLElement can listen for the mouseover event, not the DOMElement instance.\n   * Since DOMElement instances are not full EaselJS display objects and do not participate in EaselJS mouse events.\n   * @event mouseover\n  */\n\n  /**\n   * Not applicable to DOMElement.\n  * @event tick\n  */\n  // private methods:\n\n  /**\n   * @method _tick\n   * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n   * function.\n   * @protected\n   */\n\n\n  p._tick = function (evtObj) {\n    var stage = this.stage;\n\n    if (stage && stage !== this._oldStage) {\n      this._drawAction && stage.off(\"drawend\", this._drawAction);\n      this._drawAction = stage.on(\"drawend\", this._handleDrawEnd, this);\n      this._oldStage = stage;\n    }\n\n    this.DisplayObject__tick(evtObj);\n  };\n  /**\n   * @method _handleDrawEnd\n   * @param {Event} evt\n   * @protected\n   */\n\n\n  p._handleDrawEnd = function (evt) {\n    var o = this.htmlElement;\n\n    if (!o) {\n      return;\n    }\n\n    var style = o.style;\n    var props = this.getConcatenatedDisplayProps(this._props),\n        mtx = props.matrix;\n    var visibility = props.visible ? \"visible\" : \"hidden\";\n\n    if (visibility != style.visibility) {\n      style.visibility = visibility;\n    }\n\n    if (!props.visible) {\n      return;\n    }\n\n    var oldProps = this._oldProps,\n        oldMtx = oldProps && oldProps.matrix;\n    var n = 10000; // precision\n\n    if (!oldMtx || !oldMtx.equals(mtx)) {\n      var str = \"matrix(\" + (mtx.a * n | 0) / n + \",\" + (mtx.b * n | 0) / n + \",\" + (mtx.c * n | 0) / n + \",\" + (mtx.d * n | 0) / n + \",\" + (mtx.tx + 0.5 | 0);\n      style.transform = style.WebkitTransform = style.OTransform = style.msTransform = str + \",\" + (mtx.ty + 0.5 | 0) + \")\";\n      style.MozTransform = str + \"px,\" + (mtx.ty + 0.5 | 0) + \"px)\";\n\n      if (!oldProps) {\n        oldProps = this._oldProps = new createjs.DisplayProps(true, null);\n      }\n\n      oldProps.matrix.copy(mtx);\n    }\n\n    if (oldProps.alpha != props.alpha) {\n      style.opacity = \"\" + (props.alpha * n | 0) / n;\n      oldProps.alpha = props.alpha;\n    }\n  };\n\n  createjs.DOMElement = createjs.promote(DOMElement, \"DisplayObject\");\n})(); //##############################################################################\n// Filter.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor:\n\n  /**\n   * Base class that all filters should inherit from. Filters need to be applied to objects that have been cached using\n   * the {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} method. If an object changes, please cache it again, or use\n   * {{#crossLink \"DisplayObject/updateCache\"}}{{/crossLink}}. Note that the filters must be applied before caching.\n   *\n   * <h4>Example</h4>\n   *\n   *      myInstance.filters = [\n   *          new createjs.ColorFilter(0, 0, 0, 1, 255, 0, 0),\n   *          new createjs.BlurFilter(5, 5, 10)\n   *      ];\n   *      myInstance.cache(0,0, 100, 100);\n   *\n   * Note that each filter can implement a {{#crossLink \"Filter/getBounds\"}}{{/crossLink}} method, which returns the\n   * margins that need to be applied in order to fully display the filter. For example, the {{#crossLink \"BlurFilter\"}}{{/crossLink}}\n   * will cause an object to feather outwards, resulting in a margin around the shape.\n   *\n   * <h4>EaselJS Filters</h4>\n   * EaselJS comes with a number of pre-built filters:\n   * <ul><li>{{#crossLink \"AlphaMapFilter\"}}{{/crossLink}} : Map a greyscale image to the alpha channel of a display object</li>\n   *      <li>{{#crossLink \"AlphaMaskFilter\"}}{{/crossLink}}: Map an image's alpha channel to the alpha channel of a display object</li>\n   *      <li>{{#crossLink \"BlurFilter\"}}{{/crossLink}}: Apply vertical and horizontal blur to a display object</li>\n   *      <li>{{#crossLink \"ColorFilter\"}}{{/crossLink}}: Color transform a display object</li>\n   *      <li>{{#crossLink \"ColorMatrixFilter\"}}{{/crossLink}}: Transform an image using a {{#crossLink \"ColorMatrix\"}}{{/crossLink}}</li>\n   * </ul>\n   *\n   * @class Filter\n   * @constructor\n   **/\n\n  function Filter() {\n    /**\n     * A flag stating that this filter uses a context draw mode and cannot be batched into imageData processing.\n     * @property usesContext\n     * @type {boolean}\n     * @default false\n     */\n    this.usesContext = false;\n    /**\n     * Another filter that is required to act as part of this filter and created and managed under the hood.\n     * @private\n     * @property _multiPass\n     * @type {Filter}\n     * @default null\n     */\n\n    this._multiPass = null;\n    /**\n     * Pre-processed template shader code. It will be parsed before being fed in into the shader compiler.\n     * This should be based upon StageGL.SHADER_VERTEX_BODY_REGULAR\n     * @property VTX_SHADER\n     * @virtual\n     * @type {String}\n     * @readonly\n     */\n\n    this.VTX_SHADER_BODY = null;\n    /**\n     * Pre-processed template shader code. It will be parsed before being fed in into the shader compiler.\n     * This should be based upon StageGL.SHADER_FRAGMENT_BODY_REGULAR\n     * @property FRAG_SHADER\n     * @virtual\n     * @type {String}\n     * @readonly\n     */\n\n    this.FRAG_SHADER_BODY = null;\n  }\n\n  var p = Filter.prototype; // public methods:\n\n  /**\n   * Provides padding values for this filter. That is, how much the filter will extend the visual bounds of an object it is applied to.\n   * @method getBounds\n   * @param {Rectangle} [rect] If specified, the provided Rectangle instance will be expanded by the padding amounts and returned.\n   * @return {Rectangle} If a `rect` param was provided, it is returned. If not, either a new rectangle with the padding values, or null if no padding is required for this filter.\n   **/\n\n  p.getBounds = function (rect) {\n    return rect;\n  };\n  /**\n   * Assign any unique uniforms or other setup functionality here.\n   * @method shaderParamSetup\n   * @virtual\n   * @param {WebGLContext} gl The context associated with the stage performing the render.\n   * @param {StageGL} stage The stage instance that will be rendering.\n   * @param {ShaderProgram} shaderProgram The compiled shader that is going to be used to perform the render.\n   */\n\n\n  p.shaderParamSetup = function (gl, stage, shaderProgram) {};\n  /**\n   * Applies the filter to the specified context.\n   * @method applyFilter\n   * @param {CanvasRenderingContext2D} ctx The 2D context to use as the source.\n   * @param {Number} x The x position to use for the source rect.\n   * @param {Number} y The y position to use for the source rect.\n   * @param {Number} width The width to use for the source rect.\n   * @param {Number} height The height to use for the source rect.\n   * @param {CanvasRenderingContext2D} [targetCtx] The 2D context to draw the result to. Defaults to the context passed to ctx.\n   * @param {Number} [targetX] The x position to draw the result to. Defaults to the value passed to x.\n   * @param {Number} [targetY] The y position to draw the result to. Defaults to the value passed to y.\n   * @return {Boolean} If the filter was applied successfully.\n   **/\n\n\n  p.applyFilter = function (ctx, x, y, width, height, targetCtx, targetX, targetY) {\n    // this is the default behaviour because most filters access pixel data. It is overridden when not needed.\n    targetCtx = targetCtx || ctx;\n\n    if (targetX == null) {\n      targetX = x;\n    }\n\n    if (targetY == null) {\n      targetY = y;\n    }\n\n    try {\n      var imageData = ctx.getImageData(x, y, width, height);\n    } catch (e) {\n      return false;\n    }\n\n    if (this._applyFilter(imageData)) {\n      targetCtx.putImageData(imageData, targetX, targetY);\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n\n\n  p.toString = function () {\n    return \"[Filter]\";\n  };\n  /**\n   * Returns a clone of this Filter instance.\n   * @method clone\n   * @return {Filter} A clone of the current Filter instance.\n   **/\n\n\n  p.clone = function () {\n    return new Filter();\n  }; // private methods:\n\n  /**\n   * @method _applyFilter\n   * @param {ImageData} imageData Target ImageData instance.\n   * @return {Boolean}\n   **/\n\n\n  p._applyFilter = function (imageData) {\n    return true;\n  };\n\n  createjs.Filter = Filter;\n})(); //##############################################################################\n// BitmapCache.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor:\n\n  /**\n   * The BitmapCache is an internal representation of all the cache properties and logic required in order to \"cache\"\n   * an object. This information and functionality used to be located on a {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\n   * method in {{#crossLink \"DisplayObject\"}}{{/crossLink}}, but was moved to its own class.\n   *\n   * Caching in this context is purely visual, and will render the DisplayObject out into an image to be used instead\n   * of the object. The actual cache itself is still stored on the target with the {{#crossLink \"DisplayObject/cacheCanvas:property\"}}{{/crossLink}}.\n   * Working with a singular image like a {{#crossLink \"Bitmap\"}}{{/crossLink}} there is little benefit to performing \n   * a cache as it is already a single image. Caching is best done on containers containing multiple complex parts that \n   * do not move often, so that rendering the image instead will improve overall rendering speed. A cached object will \n   * not visually update until explicitly told to do so with a call to update, much like a Stage. If a cache is being \n   * updated every frame it is likely not improving rendering performance. Cache are best used when updates will be sparse.\n   *\n   * Caching is also a co-requisite for applying filters to prevent expensive filters running constantly without need, \n   * and to physically enable some effects. The BitmapCache is also responsible for applying filters to objects and \n   * reads each {{#crossLink \"Filter\"}}{{/crossLink}} due to this relationship. Real-time Filters are not recommended \n   * performance wise when dealing with a Context2D canvas. For best performance and to still allow for some visual \n   * effects use a compositeOperation when possible.\n   * @class BitmapCache\n   * @constructor\n   **/\n\n  function BitmapCache() {\n    // public:\n\n    /**\n     * Width of the cache relative to the target object.\n     * @property width\n     * @protected\n     * @type {Number}\n     * @default undefined\n     **/\n    this.width = undefined;\n    /**\n     * Height of the cache relative to the target object.\n     * @property height\n     * @protected\n     * @type {Number}\n     * @default undefined\n     * @todo Should the width and height be protected?\n     **/\n\n    this.height = undefined;\n    /**\n     * Horizontal position of the cache relative to the target's origin.\n     * @property x\n     * @protected\n     * @type {Number}\n     * @default undefined\n     **/\n\n    this.x = undefined;\n    /**\n     * Vertical position of the cache relative to target's origin.\n     * @property y\n     * @protected\n     * @type {Number}\n     * @default undefined\n     **/\n\n    this.y = undefined;\n    /**\n     * The internal scale of the cache image, does not affects display size. This is useful to both increase and\n     * decrease render quality. Objects with increased scales are more likely to look good when scaled up or rotated.\n     * Objects with decreased scales can save on rendering performance.\n     * @property scale\n     * @protected\n     * @type {Number}\n     * @default 1\n     **/\n\n    this.scale = 1;\n    /**\n     * The x offset used for drawing into the cache itself, accounts for both transforms applied.\n     * @property offX\n     * @protected\n     * @type {Number}\n     * @default 0\n     **/\n\n    this.offX = 0;\n    /**\n     * The y offset used for drawing into the cache itself, accounts for both transforms applied.\n     * @property offY\n     * @protected\n     * @type {Number}\n     * @default 0\n     **/\n\n    this.offY = 0;\n    /**\n     * Track how many times the cache has been updated, mostly used for preventing duplicate cacheURLs.\n     * This can be useful to see if a cache has been updated.\n     * @property cacheID\n     * @type {Number}\n     * @default 0\n     **/\n\n    this.cacheID = 0; // protected:\n\n    /**\n     * The relative offset of the filter's x position, used for drawing the cache onto its container.\n     * Re-calculated every update call before drawing.\n     * @property _filterOffY\n     * @protected\n     * @type {Number}\n     * @default 0\n     **/\n\n    this._filterOffX = 0;\n    /**\n     * The relative offset of the filter's y position, used for drawing the cache onto its container.\n     * Re-calculated every update call before drawing.\n     * @property _filterOffY\n     * @protected\n     * @type {Number}\n     * @default 0\n     **/\n\n    this._filterOffY = 0;\n    /**\n     * The cacheID when a DataURL was requested.\n     * @property _cacheDataURLID\n     * @protected\n     * @type {Number}\n     * @default 0\n     **/\n\n    this._cacheDataURLID = 0;\n    /**\n     * The cache's DataURL, generated on-demand using the getter.\n     * @property _cacheDataURL\n     * @protected\n     * @type {String}\n     * @default null\n     **/\n\n    this._cacheDataURL = null;\n    /**\n     * Internal tracking of final bounding width, approximately width*scale; however, filters can complicate the actual value.\n     * @property _drawWidth\n     * @protected\n     * @type {Number}\n     * @default 0\n     **/\n\n    this._drawWidth = 0;\n    /**\n     * Internal tracking of final bounding height, approximately height*scale; however, filters can complicate the actual value.\n     * @property _drawHeight\n     * @protected\n     * @type {Number}\n     * @default 0\n     **/\n\n    this._drawHeight = 0;\n  }\n\n  var p = BitmapCache.prototype;\n  /**\n   * Returns the bounds that surround all applied filters, relies on each filter to describe how it changes bounds.\n   * @method getFilterBounds\n   * @param {DisplayObject} target The object to check the filter bounds for.\n   * @param {Rectangle} [output=null] Optional parameter, if provided then calculated bounds will be applied to that object.\n   * @return {Rectangle} bounds object representing the bounds with filters.\n   * @static\n   **/\n\n  BitmapCache.getFilterBounds = function (target, output) {\n    if (!output) {\n      output = new createjs.Rectangle();\n    }\n\n    var filters = target.filters;\n    var filterCount = filters && filters.length;\n\n    if (!!filterCount <= 0) {\n      return output;\n    }\n\n    for (var i = 0; i < filterCount; i++) {\n      var f = filters[i];\n\n      if (!f || !f.getBounds) {\n        continue;\n      }\n\n      var test = f.getBounds();\n\n      if (!test) {\n        continue;\n      }\n\n      if (i == 0) {\n        output.setValues(test.x, test.y, test.width, test.height);\n      } else {\n        output.extend(test.x, test.y, test.width, test.height);\n      }\n    }\n\n    return output;\n  }; // public methods:\n\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n\n\n  p.toString = function () {\n    return \"[BitmapCache]\";\n  };\n  /**\n   * Actually create the correct cache surface and properties associated with it. Caching and it's benefits are discussed\n   * by the {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} function and this class description. Here are the detailed\n   * specifics of how to use the options object.\n   *\n   * - If options.useGL is set to \"new\" a StageGL is created and contained on this for use when rendering the cache.\n   * - If options.useGL is set to \"stage\" if the current stage is a StageGL it will be used. If not then it will default to \"new\".\n   * - If options.useGL is a StageGL instance it will not create one but use the one provided.\n   * - If options.useGL is undefined a Context 2D cache will be performed.\n   *\n   * This means you can use any combination of StageGL and 2D with either, neither, or both the stage and cache being\n   * WebGL. Using \"new\" with a StageGL display list is highly unrecommended, but still an option. It should be avoided\n   * due to negative performance reasons and the Image loading limitation noted in the class complications above.\n   *\n   * When \"options.useGL\" is set to the parent stage of the target and WebGL, performance is increased by using\n   * \"RenderTextures\" instead of canvas elements. These are internal Textures on the graphics card stored in the GPU.\n   * Because they are no longer canvases you cannot perform operations you could with a regular canvas. The benefit\n   * is that this avoids the slowdown of copying the texture back and forth from the GPU to a Canvas element.\n   * This means \"stage\" is the recommended option when available.\n   *\n   * A StageGL cache does not infer the ability to draw objects a StageGL cannot currently draw, i.e. do not use a\n   * WebGL context cache when caching a Shape, Text, etc.\n   * <h4>WebGL cache with a 2D context</h4>\n   *\n   *     var stage = new createjs.Stage();\n   *     var bmp = new createjs.Bitmap(src);\n   *     bmp.cache(0, 0, bmp.width, bmp.height, 1, {gl: \"new\"});          // no StageGL to use, so make one\n   *\n   *     var shape = new createjs.Shape();\n   *     shape.graphics.clear().fill(\"red\").drawRect(0,0,20,20);\n   *     shape.cache(0, 0, 20, 20, 1);                             // cannot use WebGL cache\n   *\n   * <h4>WebGL cache with a WebGL context</h4>\n   *\n   *     var stageGL = new createjs.StageGL();\n   *     var bmp = new createjs.Bitmap(src);\n   *     bmp.cache(0, 0, bmp.width, bmp.height, 1, {gl: \"stage\"});       // use our StageGL to cache\n   *\n   *     var shape = new createjs.Shape();\n   *     shape.graphics.clear().fill(\"red\").drawRect(0,0,20,20);\n   *     shape.cache(0, 0, 20, 20, 1);                             // cannot use WebGL cache\n   *\n   * You may wish to create your own StageGL instance to control factors like clear color, transparency, AA, and\n   * others. If you do, pass a new instance in instead of \"true\", the library will automatically set the\n   * {{#crossLink \"StageGL/isCacheControlled\"}}{{/crossLink}} to true on your instance. This will trigger it to behave\n   * correctly, and not assume your main context is WebGL.\n   *\n   * @public\n   * @method BitmapCache.cache\n   * @param {Number} x The x coordinate origin for the cache region.\n   * @param {Number} y The y coordinate origin for the cache region.\n   * @param {Number} width The width of the cache region.\n   * @param {Number} height The height of the cache region.\n   * @param {Number} [scale=1] The scale at which the cache will be created. For example, if you cache a vector shape\n   * using myShape.cache(0,0,100,100,2) then the resulting cacheCanvas will be 200x200 px. This lets you scale and\n   * rotate cached elements with greater fidelity. Default is 1.\n   * @param {Object} [options=undefined] Specify additional parameters for the cache logic\n   * @param {undefined|\"new\"|\"stage\"|StageGL} [options.useGL=undefined] Select whether to use context 2D, or WebGL rendering, and\n   * whether to make a new stage instance or use an existing one. See above for extensive details on use.\n   * @for BitmapCache\n   */\n\n\n  p.define = function (target, x, y, width, height, scale, options) {\n    if (!target) {\n      throw \"No symbol to cache\";\n    }\n\n    this._options = options;\n    this.target = target;\n    this.width = width >= 1 ? width : 1;\n    this.height = height >= 1 ? height : 1;\n    this.x = x || 0;\n    this.y = y || 0;\n    this.scale = scale || 1;\n    this.update();\n  };\n  /**\n   * Directly called via {{#crossLink \"DisplayObject/updateCache:method\"}}{{/crossLink}}, but also internally. This\n   * has the dual responsibility of making sure the surface is ready to be drawn to, and performing the draw. For\n   * full details of each behaviour, check the protected functions {{#crossLink \"BitmapCache/_updateSurface\"}}{{/crossLink}}\n   * and {{#crossLink \"BitmapCache/_drawToCache\"}}{{/crossLink}} respectively.\n   * @method update\n   * @param {String} [compositeOperation=null] The DisplayObject this cache is linked to.\n   **/\n\n\n  p.update = function (compositeOperation) {\n    if (!this.target) {\n      throw \"define() must be called before update()\";\n    }\n\n    var filterBounds = BitmapCache.getFilterBounds(this.target);\n    var surface = this.target.cacheCanvas;\n    this._drawWidth = Math.ceil(this.width * this.scale) + filterBounds.width;\n    this._drawHeight = Math.ceil(this.height * this.scale) + filterBounds.height;\n\n    if (!surface || this._drawWidth != surface.width || this._drawHeight != surface.height) {\n      this._updateSurface();\n    }\n\n    this._filterOffX = filterBounds.x;\n    this._filterOffY = filterBounds.y;\n    this.offX = this.x * this.scale + this._filterOffX;\n    this.offY = this.y * this.scale + this._filterOffY;\n\n    this._drawToCache(compositeOperation);\n\n    this.cacheID = this.cacheID ? this.cacheID + 1 : 1;\n  };\n  /**\n   * Reset and release all the properties and memory associated with this cache.\n   * @method release\n   **/\n\n\n  p.release = function () {\n    if (this._webGLCache) {\n      // if it isn't cache controlled clean up after yourself\n      if (!this._webGLCache.isCacheControlled) {\n        if (this.__lastRT) {\n          this.__lastRT = undefined;\n        }\n\n        if (this.__rtA) {\n          this._webGLCache._killTextureObject(this.__rtA);\n        }\n\n        if (this.__rtB) {\n          this._webGLCache._killTextureObject(this.__rtB);\n        }\n\n        if (this.target && this.target.cacheCanvas) {\n          this._webGLCache._killTextureObject(this.target.cacheCanvas);\n        }\n      } // set the context to none and let the garbage collector get the rest when the canvas itself gets removed\n\n\n      this._webGLCache = false;\n    } else {\n      var stage = this.target.stage;\n\n      if (stage instanceof createjs.StageGL) {\n        stage.releaseTexture(this.target.cacheCanvas);\n      }\n    }\n\n    this.target = this.target.cacheCanvas = null;\n    this.cacheID = this._cacheDataURLID = this._cacheDataURL = undefined;\n    this.width = this.height = this.x = this.y = this.offX = this.offY = 0;\n    this.scale = 1;\n  };\n  /**\n   * Returns a data URL for the cache, or `null` if this display object is not cached.\n   * Uses {{#crossLink \"BitmapCache/cacheID:property\"}}{{/crossLink}} to ensure a new data URL is not generated if the\n   * cache has not changed.\n   * @method getCacheDataURL\n   * @return {String} The image data url for the cache.\n   **/\n\n\n  p.getCacheDataURL = function () {\n    var cacheCanvas = this.target && this.target.cacheCanvas;\n\n    if (!cacheCanvas) {\n      return null;\n    }\n\n    if (this.cacheID != this._cacheDataURLID) {\n      this._cacheDataURLID = this.cacheID;\n      this._cacheDataURL = cacheCanvas.toDataURL ? cacheCanvas.toDataURL() : null; // incase function is\n    }\n\n    return this._cacheDataURL;\n  };\n  /**\n   * Use context2D drawing commands to display the cache canvas being used.\n   * @method draw\n   * @param {CanvasRenderingContext2D} ctx The context to draw into.\n   * @return {Boolean} Whether the draw was handled successfully.\n   **/\n\n\n  p.draw = function (ctx) {\n    if (!this.target) {\n      return false;\n    }\n\n    ctx.drawImage(this.target.cacheCanvas, this.x + this._filterOffX / this.scale, this.y + this._filterOffY / this.scale, this._drawWidth / this.scale, this._drawHeight / this.scale);\n    return true;\n  }; // private methods:\n\n  /**\n   * Create or resize the invisible canvas/surface that is needed for the display object(s) to draw to,\n   * and in turn be used in their stead when drawing. The surface is resized to the size defined\n   * by the width and height, factoring in scaling and filters. Adjust them to adjust the output size.\n   * @method _updateSurface\n   * @protected\n   **/\n\n\n  p._updateSurface = function () {\n    if (!this._options || !this._options.useGL) {\n      var surface = this.target.cacheCanvas; // create it if it's missing\n\n      if (!surface) {\n        surface = this.target.cacheCanvas = createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\");\n      } // now size it\n\n\n      surface.width = this._drawWidth;\n      surface.height = this._drawHeight;\n      return;\n    } // create it if it's missing\n\n\n    if (!this._webGLCache) {\n      if (this._options.useGL === \"stage\") {\n        if (!(this.target.stage && this.target.stage.isWebGL)) {\n          var error = \"Cannot use 'stage' for cache because the object's parent stage is \";\n          error += this.target.stage ? \"non WebGL.\" : \"not set, please addChild to the correct stage.\";\n          throw error;\n        }\n\n        this.target.cacheCanvas = true; // will be replaced with RenderTexture, temporary positive value for old \"isCached\" checks\n\n        this._webGLCache = this.target.stage;\n      } else if (this._options.useGL === \"new\") {\n        this.target.cacheCanvas = document.createElement(\"canvas\"); // we can turn off autopurge because we wont be making textures here\n\n        this._webGLCache = new createjs.StageGL(this.target.cacheCanvas, {\n          antialias: true,\n          transparent: true,\n          autoPurge: -1\n        });\n        this._webGLCache.isCacheControlled = true; // use this flag to control stage sizing and final output\n      } else if (this._options.useGL instanceof createjs.StageGL) {\n        this.target.cacheCanvas = true; // will be replaced with RenderTexture, temporary positive value for old \"isCached\" checks\n\n        this._webGLCache = this._options.useGL;\n        this._webGLCache.isCacheControlled = true; // use this flag to control stage sizing and final output\n      } else {\n        throw \"Invalid option provided to useGL, expected ['stage', 'new', StageGL, undefined], got \" + this._options.useGL;\n      }\n    } // now size render surfaces\n\n\n    var surface = this.target.cacheCanvas;\n    var stageGL = this._webGLCache; // if we have a dedicated stage we've gotta size it\n\n    if (stageGL.isCacheControlled) {\n      surface.width = this._drawWidth;\n      surface.height = this._drawHeight;\n      stageGL.updateViewport(this._drawWidth, this._drawHeight);\n    }\n\n    if (this.target.filters) {\n      // with filters we can't tell how many we'll need but the most we'll ever need is two, so make them now\n      stageGL.getTargetRenderTexture(this.target, this._drawWidth, this._drawHeight);\n      stageGL.getTargetRenderTexture(this.target, this._drawWidth, this._drawHeight);\n    } else {\n      // without filters then we only need one RenderTexture, and that's only if its not a dedicated stage\n      if (!stageGL.isCacheControlled) {\n        stageGL.getTargetRenderTexture(this.target, this._drawWidth, this._drawHeight);\n      }\n    }\n  };\n  /**\n   * Perform the cache draw out for context 2D now that the setup properties have been performed.\n   * @method _drawToCache\n   * @protected\n   **/\n\n\n  p._drawToCache = function (compositeOperation) {\n    var surface = this.target.cacheCanvas;\n    var target = this.target;\n    var webGL = this._webGLCache;\n\n    if (webGL) {\n      //TODO: auto split blur into an x/y pass\n      webGL.cacheDraw(target, target.filters, this); // we may of swapped around which element the surface is, so we re-fetch it\n\n      surface = this.target.cacheCanvas;\n      surface.width = this._drawWidth;\n      surface.height = this._drawHeight;\n    } else {\n      var ctx = surface.getContext(\"2d\");\n\n      if (!compositeOperation) {\n        ctx.clearRect(0, 0, this._drawWidth + 1, this._drawHeight + 1);\n      }\n\n      ctx.save();\n      ctx.globalCompositeOperation = compositeOperation;\n      ctx.setTransform(this.scale, 0, 0, this.scale, -this._filterOffX, -this._filterOffY);\n      ctx.translate(-this.x, -this.y);\n      target.draw(ctx, true);\n      ctx.restore();\n\n      if (target.filters && target.filters.length) {\n        this._applyFilters(ctx);\n      }\n    }\n\n    surface._invalid = true;\n  };\n  /**\n   * Work through every filter and apply its individual visual transformation.\n   * @method _applyFilters\n   * @protected\n   **/\n\n\n  p._applyFilters = function (ctx) {\n    var filters = this.target.filters;\n    var w = this._drawWidth;\n    var h = this._drawHeight;\n    var data;\n    var i = 0,\n        filter = filters[i];\n\n    do {\n      // this is safe because we wouldn't be in apply filters without a filter count of at least 1\n      if (filter.usesContext) {\n        if (data) {\n          ctx.putImageData(data, 0, 0);\n          data = null;\n        }\n\n        filter.applyFilter(ctx, 0, 0, w, h);\n      } else {\n        if (!data) {\n          data = ctx.getImageData(0, 0, w, h);\n        }\n\n        filter._applyFilter(data);\n      } // work through the multipass if it's there, otherwise move on\n\n\n      filter = filter._multiPass !== null ? filter._multiPass : filters[++i];\n    } while (filter); //done\n\n\n    if (data) {\n      ctx.putImageData(data, 0, 0);\n    }\n  };\n\n  createjs.BitmapCache = BitmapCache;\n})(); //##############################################################################\n// BlurFilter.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor:\n\n  /**\n   * Applies a box blur to DisplayObjects in context 2D and a Gaussian blur in webgl. Note that this filter is fairly\n   * intensive, particularly if the quality is set higher than 1.\n   *\n   * <h4>Example</h4>\n   * This example creates a red circle, and then applies a 5 pixel blur to it. It uses the {{#crossLink \"Filter/getBounds\"}}{{/crossLink}}\n   * method to account for the spread that the blur causes.\n   *\n   *      var shape = new createjs.Shape().set({x:100,y:100});\n   *      shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n   *\n   *      var blurFilter = new createjs.BlurFilter(5, 5, 1);\n   *      shape.filters = [blurFilter];\n   *      var bounds = blurFilter.getBounds();\n   *\n   *      shape.cache(-50+bounds.x, -50+bounds.y, 100+bounds.width, 100+bounds.height);\n   *\n   * See {{#crossLink \"Filter\"}}{{/crossLink}} for an more information on applying filters.\n   * @class BlurFilter\n   * @extends Filter\n   * @constructor\n   * @param {Number} [blurX=0] The horizontal blur radius in pixels.\n   * @param {Number} [blurY=0] The vertical blur radius in pixels.\n   * @param {Number} [quality=1] The number of blur iterations.\n   **/\n\n  function BlurFilter(blurX, blurY, quality) {\n    this.Filter_constructor(); // public properties:\n\n    /**\n     * Horizontal blur radius in pixels\n     * @property blurX\n     * @default 0\n     * @type Number\n     **/\n\n    this._blurX = blurX;\n    this._blurXTable = [];\n    this._lastBlurX = null;\n    /**\n     * Vertical blur radius in pixels\n     * @property blurY\n     * @default 0\n     * @type Number\n     **/\n\n    this._blurY = blurY;\n    this._blurYTable = [];\n    this._lastBlurY = null;\n    /**\n     * Number of blur iterations. For example, a value of 1 will produce a rough blur. A value of 2 will produce a\n     * smoother blur, but take twice as long to run.\n     * @property quality\n     * @default 1\n     * @type Number\n     **/\n\n    this._quality;\n    this._lastQuality = null;\n    /**\n     * This is a template to generate the shader for {{#crossLink FRAG_SHADER_BODY}}{{/crossLink}}\n     */\n\n    this.FRAG_SHADER_TEMPLATE = \"uniform float xWeight[{{blurX}}];\" + \"uniform float yWeight[{{blurY}}];\" + \"uniform vec2 textureOffset;\" + \"void main(void) {\" + \"vec4 color = vec4(0.0);\" + \"float xAdj = ({{blurX}}.0-1.0)/2.0;\" + \"float yAdj = ({{blurY}}.0-1.0)/2.0;\" + \"vec2 sampleOffset;\" + \"for(int i=0; i<{{blurX}}; i++) {\" + \"for(int j=0; j<{{blurY}}; j++) {\" + \"sampleOffset = vRenderCoord + (textureOffset * vec2(float(i)-xAdj, float(j)-yAdj));\" + \"color += texture2D(uSampler, sampleOffset) * (xWeight[i] * yWeight[j]);\" + \"}\" + \"}\" + \"gl_FragColor = color.rgba;\" + \"}\"; // update the filter using the setters\n\n    if (isNaN(quality) || quality < 1) {\n      quality = 1;\n    }\n\n    this.setQuality(quality | 0);\n  }\n\n  var p = createjs.extend(BlurFilter, createjs.Filter); // TODO: deprecated\n  // p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n  p.getBlurX = function () {\n    return this._blurX;\n  };\n\n  p.getBlurY = function () {\n    return this._blurY;\n  };\n\n  p.setBlurX = function (value) {\n    if (isNaN(value) || value < 0) {\n      value = 0;\n    }\n\n    this._blurX = value;\n  };\n\n  p.setBlurY = function (value) {\n    if (isNaN(value) || value < 0) {\n      value = 0;\n    }\n\n    this._blurY = value;\n  };\n\n  p.getQuality = function () {\n    return this._quality;\n  };\n\n  p.setQuality = function (value) {\n    if (isNaN(value) || value < 0) {\n      value = 0;\n    }\n\n    this._quality = value | 0;\n  };\n\n  p._getShader = function () {\n    var xChange = this._lastBlurX !== this._blurX;\n    var yChange = this._lastBlurY !== this._blurY;\n    var qChange = this._lastQuality !== this._quality;\n\n    if (xChange || yChange || qChange) {\n      if (xChange || qChange) {\n        this._blurXTable = this._getTable(this._blurX * this._quality);\n      }\n\n      if (yChange || qChange) {\n        this._blurYTable = this._getTable(this._blurY * this._quality);\n      }\n\n      this._updateShader();\n\n      this._lastBlurX = this._blurX;\n      this._lastBlurY = this._blurY;\n      this._lastQuality = this._quality;\n      return undefined; // force a rebuild\n    }\n\n    return this._compiledShader;\n  };\n\n  p._setShader = function () {\n    this._compiledShader;\n  };\n\n  try {\n    Object.defineProperties(p, {\n      blurX: {\n        get: p.getBlurX,\n        set: p.setBlurX\n      },\n      blurY: {\n        get: p.getBlurY,\n        set: p.setBlurY\n      },\n      quality: {\n        get: p.getQuality,\n        set: p.setQuality\n      },\n      _builtShader: {\n        get: p._getShader,\n        set: p._setShader\n      }\n    });\n  } catch (e) {\n    console.log(e);\n  }\n  /**\n   * Internal lookup function to create gaussian distribution.\n   * @method _getTable\n   * @param {Number} spread How many steps in the curve.\n   * @return {Array<Number>} An array with Math.ceil(spread*2) entries with appropriately distributed weights.\n   */\n\n\n  p._getTable = function (spread) {\n    var EDGE = 4.2;\n\n    if (spread <= 1) {\n      return [1];\n    }\n\n    var result = [];\n    var count = Math.ceil(spread * 2);\n    count += count % 2 ? 0 : 1;\n    var adjust = count / 2 | 0;\n\n    for (var i = -adjust; i <= adjust; i++) {\n      var x = i / adjust * EDGE;\n      result.push(1 / Math.sqrt(2 * Math.PI) * Math.pow(Math.E, -(Math.pow(x, 2) / 4)));\n    }\n\n    var factor = result.reduce(function (a, b) {\n      return a + b;\n    });\n    return result.map(function (currentValue, index, array) {\n      return currentValue / factor;\n    });\n  };\n  /**\n   * Internal update function to create shader properties.\n   * @method _updateShader\n   */\n\n\n  p._updateShader = function () {\n    if (this._blurX === undefined || this._blurY === undefined) {\n      return;\n    }\n\n    var result = this.FRAG_SHADER_TEMPLATE;\n    result = result.replace(/\\{\\{blurX\\}\\}/g, this._blurXTable.length.toFixed(0));\n    result = result.replace(/\\{\\{blurY\\}\\}/g, this._blurYTable.length.toFixed(0));\n    this.FRAG_SHADER_BODY = result;\n  };\n  /** docced in super class **/\n\n\n  p.shaderParamSetup = function (gl, stage, shaderProgram) {\n    // load the normalized gaussian weight tables\n    gl.uniform1fv(gl.getUniformLocation(shaderProgram, \"xWeight\"), this._blurXTable);\n    gl.uniform1fv(gl.getUniformLocation(shaderProgram, \"yWeight\"), this._blurYTable); // what is the size of a single pixel in -1, 1 (webGL) space\n\n    gl.uniform2f(gl.getUniformLocation(shaderProgram, \"textureOffset\"), 2 / (stage._viewportWidth * this._quality), 2 / (stage._viewportHeight * this._quality));\n  }; // constants:\n\n  /**\n   * Array of multiply values for blur calculations.\n   * @property MUL_TABLE\n   * @type Array\n   * @protected\n   * @static\n   **/\n\n\n  BlurFilter.MUL_TABLE = [1, 171, 205, 293, 57, 373, 79, 137, 241, 27, 391, 357, 41, 19, 283, 265, 497, 469, 443, 421, 25, 191, 365, 349, 335, 161, 155, 149, 9, 278, 269, 261, 505, 245, 475, 231, 449, 437, 213, 415, 405, 395, 193, 377, 369, 361, 353, 345, 169, 331, 325, 319, 313, 307, 301, 37, 145, 285, 281, 69, 271, 267, 263, 259, 509, 501, 493, 243, 479, 118, 465, 459, 113, 446, 55, 435, 429, 423, 209, 413, 51, 403, 199, 393, 97, 3, 379, 375, 371, 367, 363, 359, 355, 351, 347, 43, 85, 337, 333, 165, 327, 323, 5, 317, 157, 311, 77, 305, 303, 75, 297, 294, 73, 289, 287, 71, 141, 279, 277, 275, 68, 135, 67, 133, 33, 262, 260, 129, 511, 507, 503, 499, 495, 491, 61, 121, 481, 477, 237, 235, 467, 232, 115, 457, 227, 451, 7, 445, 221, 439, 218, 433, 215, 427, 425, 211, 419, 417, 207, 411, 409, 203, 202, 401, 399, 396, 197, 49, 389, 387, 385, 383, 95, 189, 47, 187, 93, 185, 23, 183, 91, 181, 45, 179, 89, 177, 11, 175, 87, 173, 345, 343, 341, 339, 337, 21, 167, 83, 331, 329, 327, 163, 81, 323, 321, 319, 159, 79, 315, 313, 39, 155, 309, 307, 153, 305, 303, 151, 75, 299, 149, 37, 295, 147, 73, 291, 145, 289, 287, 143, 285, 71, 141, 281, 35, 279, 139, 69, 275, 137, 273, 17, 271, 135, 269, 267, 133, 265, 33, 263, 131, 261, 130, 259, 129, 257, 1];\n  /**\n   * Array of shift values for blur calculations.\n   * @property SHG_TABLE\n   * @type Array\n   * @protected\n   * @static\n   **/\n\n  BlurFilter.SHG_TABLE = [0, 9, 10, 11, 9, 12, 10, 11, 12, 9, 13, 13, 10, 9, 13, 13, 14, 14, 14, 14, 10, 13, 14, 14, 14, 13, 13, 13, 9, 14, 14, 14, 15, 14, 15, 14, 15, 15, 14, 15, 15, 15, 14, 15, 15, 15, 15, 15, 14, 15, 15, 15, 15, 15, 15, 12, 14, 15, 15, 13, 15, 15, 15, 15, 16, 16, 16, 15, 16, 14, 16, 16, 14, 16, 13, 16, 16, 16, 15, 16, 13, 16, 15, 16, 14, 9, 16, 16, 16, 16, 16, 16, 16, 16, 16, 13, 14, 16, 16, 15, 16, 16, 10, 16, 15, 16, 14, 16, 16, 14, 16, 16, 14, 16, 16, 14, 15, 16, 16, 16, 14, 15, 14, 15, 13, 16, 16, 15, 17, 17, 17, 17, 17, 17, 14, 15, 17, 17, 16, 16, 17, 16, 15, 17, 16, 17, 11, 17, 16, 17, 16, 17, 16, 17, 17, 16, 17, 17, 16, 17, 17, 16, 16, 17, 17, 17, 16, 14, 17, 17, 17, 17, 15, 16, 14, 16, 15, 16, 13, 16, 15, 16, 14, 16, 15, 16, 12, 16, 15, 16, 17, 17, 17, 17, 17, 13, 16, 15, 17, 17, 17, 16, 15, 17, 17, 17, 16, 15, 17, 17, 14, 16, 17, 17, 16, 17, 17, 16, 15, 17, 16, 14, 17, 16, 15, 17, 16, 17, 17, 16, 17, 15, 16, 17, 14, 17, 16, 15, 17, 16, 17, 13, 17, 16, 17, 17, 16, 17, 14, 17, 16, 17, 16, 17, 16, 17, 9]; // public methods:\n\n  /** docced in super class **/\n\n  p.getBounds = function (rect) {\n    var x = this.blurX | 0,\n        y = this.blurY | 0;\n\n    if (x <= 0 && y <= 0) {\n      return rect;\n    }\n\n    var q = Math.pow(this.quality, 0.2);\n    return (rect || new createjs.Rectangle()).pad(y * q + 1, x * q + 1, y * q + 1, x * q + 1);\n  };\n  /** docced in super class **/\n\n\n  p.clone = function () {\n    return new BlurFilter(this.blurX, this.blurY, this.quality);\n  };\n  /** docced in super class **/\n\n\n  p.toString = function () {\n    return \"[BlurFilter]\";\n  }; // private methods:\n\n  /** docced in super class **/\n\n\n  p._applyFilter = function (imageData) {\n    var radiusX = this._blurX >> 1;\n    if (isNaN(radiusX) || radiusX < 0) return false;\n    var radiusY = this._blurY >> 1;\n    if (isNaN(radiusY) || radiusY < 0) return false;\n    if (radiusX == 0 && radiusY == 0) return false;\n    var iterations = this.quality;\n    if (isNaN(iterations) || iterations < 1) iterations = 1;\n    iterations |= 0;\n    if (iterations > 3) iterations = 3;\n    if (iterations < 1) iterations = 1;\n    var px = imageData.data;\n    var x = 0,\n        y = 0,\n        i = 0,\n        p = 0,\n        yp = 0,\n        yi = 0,\n        yw = 0,\n        r = 0,\n        g = 0,\n        b = 0,\n        a = 0,\n        pr = 0,\n        pg = 0,\n        pb = 0,\n        pa = 0;\n    var divx = radiusX + radiusX + 1 | 0;\n    var divy = radiusY + radiusY + 1 | 0;\n    var w = imageData.width | 0;\n    var h = imageData.height | 0;\n    var w1 = w - 1 | 0;\n    var h1 = h - 1 | 0;\n    var rxp1 = radiusX + 1 | 0;\n    var ryp1 = radiusY + 1 | 0;\n    var ssx = {\n      r: 0,\n      b: 0,\n      g: 0,\n      a: 0\n    };\n    var sx = ssx;\n\n    for (i = 1; i < divx; i++) {\n      sx = sx.n = {\n        r: 0,\n        b: 0,\n        g: 0,\n        a: 0\n      };\n    }\n\n    sx.n = ssx;\n    var ssy = {\n      r: 0,\n      b: 0,\n      g: 0,\n      a: 0\n    };\n    var sy = ssy;\n\n    for (i = 1; i < divy; i++) {\n      sy = sy.n = {\n        r: 0,\n        b: 0,\n        g: 0,\n        a: 0\n      };\n    }\n\n    sy.n = ssy;\n    var si = null;\n    var mtx = BlurFilter.MUL_TABLE[radiusX] | 0;\n    var stx = BlurFilter.SHG_TABLE[radiusX] | 0;\n    var mty = BlurFilter.MUL_TABLE[radiusY] | 0;\n    var sty = BlurFilter.SHG_TABLE[radiusY] | 0;\n\n    while (iterations-- > 0) {\n      yw = yi = 0;\n      var ms = mtx;\n      var ss = stx;\n\n      for (y = h; --y > -1;) {\n        r = rxp1 * (pr = px[yi | 0]);\n        g = rxp1 * (pg = px[yi + 1 | 0]);\n        b = rxp1 * (pb = px[yi + 2 | 0]);\n        a = rxp1 * (pa = px[yi + 3 | 0]);\n        sx = ssx;\n\n        for (i = rxp1; --i > -1;) {\n          sx.r = pr;\n          sx.g = pg;\n          sx.b = pb;\n          sx.a = pa;\n          sx = sx.n;\n        }\n\n        for (i = 1; i < rxp1; i++) {\n          p = yi + ((w1 < i ? w1 : i) << 2) | 0;\n          r += sx.r = px[p];\n          g += sx.g = px[p + 1];\n          b += sx.b = px[p + 2];\n          a += sx.a = px[p + 3];\n          sx = sx.n;\n        }\n\n        si = ssx;\n\n        for (x = 0; x < w; x++) {\n          px[yi++] = r * ms >>> ss;\n          px[yi++] = g * ms >>> ss;\n          px[yi++] = b * ms >>> ss;\n          px[yi++] = a * ms >>> ss;\n          p = yw + ((p = x + radiusX + 1) < w1 ? p : w1) << 2;\n          r -= si.r - (si.r = px[p]);\n          g -= si.g - (si.g = px[p + 1]);\n          b -= si.b - (si.b = px[p + 2]);\n          a -= si.a - (si.a = px[p + 3]);\n          si = si.n;\n        }\n\n        yw += w;\n      }\n\n      ms = mty;\n      ss = sty;\n\n      for (x = 0; x < w; x++) {\n        yi = x << 2 | 0;\n        r = ryp1 * (pr = px[yi]) | 0;\n        g = ryp1 * (pg = px[yi + 1 | 0]) | 0;\n        b = ryp1 * (pb = px[yi + 2 | 0]) | 0;\n        a = ryp1 * (pa = px[yi + 3 | 0]) | 0;\n        sy = ssy;\n\n        for (i = 0; i < ryp1; i++) {\n          sy.r = pr;\n          sy.g = pg;\n          sy.b = pb;\n          sy.a = pa;\n          sy = sy.n;\n        }\n\n        yp = w;\n\n        for (i = 1; i <= radiusY; i++) {\n          yi = yp + x << 2;\n          r += sy.r = px[yi];\n          g += sy.g = px[yi + 1];\n          b += sy.b = px[yi + 2];\n          a += sy.a = px[yi + 3];\n          sy = sy.n;\n\n          if (i < h1) {\n            yp += w;\n          }\n        }\n\n        yi = x;\n        si = ssy;\n\n        if (iterations > 0) {\n          for (y = 0; y < h; y++) {\n            p = yi << 2;\n            px[p + 3] = pa = a * ms >>> ss;\n\n            if (pa > 0) {\n              px[p] = r * ms >>> ss;\n              px[p + 1] = g * ms >>> ss;\n              px[p + 2] = b * ms >>> ss;\n            } else {\n              px[p] = px[p + 1] = px[p + 2] = 0;\n            }\n\n            p = x + ((p = y + ryp1) < h1 ? p : h1) * w << 2;\n            r -= si.r - (si.r = px[p]);\n            g -= si.g - (si.g = px[p + 1]);\n            b -= si.b - (si.b = px[p + 2]);\n            a -= si.a - (si.a = px[p + 3]);\n            si = si.n;\n            yi += w;\n          }\n        } else {\n          for (y = 0; y < h; y++) {\n            p = yi << 2;\n            px[p + 3] = pa = a * ms >>> ss;\n\n            if (pa > 0) {\n              pa = 255 / pa;\n              px[p] = (r * ms >>> ss) * pa;\n              px[p + 1] = (g * ms >>> ss) * pa;\n              px[p + 2] = (b * ms >>> ss) * pa;\n            } else {\n              px[p] = px[p + 1] = px[p + 2] = 0;\n            }\n\n            p = x + ((p = y + ryp1) < h1 ? p : h1) * w << 2;\n            r -= si.r - (si.r = px[p]);\n            g -= si.g - (si.g = px[p + 1]);\n            b -= si.b - (si.b = px[p + 2]);\n            a -= si.a - (si.a = px[p + 3]);\n            si = si.n;\n            yi += w;\n          }\n        }\n      }\n    }\n\n    return true;\n  };\n\n  createjs.BlurFilter = createjs.promote(BlurFilter, \"Filter\");\n})(); //##############################################################################\n// AlphaMapFilter.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor:\n\n  /**\n   * Applies a greyscale alpha map image (or canvas) to the target, such that the alpha channel of the result will\n   * be copied from the red channel of the map, and the RGB channels will be copied from the target.\n   *\n   * Generally, it is recommended that you use {{#crossLink \"AlphaMaskFilter\"}}{{/crossLink}}, because it has much\n   * better performance.\n   *\n   * <h4>Example</h4>\n   * This example draws a red->blue box, caches it, and then uses the cache canvas as an alpha map on a 100x100 image.\n   *\n   *       var box = new createjs.Shape();\n   *       box.graphics.beginLinearGradientFill([\"#ff0000\", \"#0000ff\"], [0, 1], 0, 0, 0, 100)\n   *       box.graphics.drawRect(0, 0, 100, 100);\n   *       box.cache(0, 0, 100, 100);\n   *\n   *       var bmp = new createjs.Bitmap(\"path/to/image.jpg\");\n   *       bmp.filters = [\n   *           new createjs.AlphaMapFilter(box.cacheCanvas)\n   *       ];\n   *       bmp.cache(0, 0, 100, 100);\n   *       stage.addChild(bmp);\n   *\n   * See {{#crossLink \"Filter\"}}{{/crossLink}} for more information on applying filters.\n   * @class AlphaMapFilter\n   * @extends Filter\n   * @constructor\n   * @param {HTMLImageElement|HTMLCanvasElement} alphaMap The greyscale image (or canvas) to use as the alpha value for the\n   * result. This should be exactly the same dimensions as the target.\n   **/\n\n  function AlphaMapFilter(alphaMap) {\n    this.Filter_constructor(); // public properties:\n\n    /**\n     * The greyscale image (or canvas) to use as the alpha value for the result. This should be exactly the same\n     * dimensions as the target.\n     * @property alphaMap\n     * @type HTMLImageElement|HTMLCanvasElement\n     **/\n\n    this.alphaMap = alphaMap; // private properties:\n\n    /**\n     * @property _alphaMap\n     * @protected\n     * @type HTMLImageElement|HTMLCanvasElement\n     **/\n\n    this._alphaMap = null;\n    /**\n     * @property _mapData\n     * @protected\n     * @type Uint8ClampedArray\n     **/\n\n    this._mapData = null;\n    this._mapTexture = null;\n    this.FRAG_SHADER_BODY = \"uniform sampler2D uAlphaSampler;\" + \"void main(void) {\" + \"vec4 color = texture2D(uSampler, vRenderCoord);\" + \"vec4 alphaMap = texture2D(uAlphaSampler, vTextureCoord);\" + // some image formats can have transparent white rgba(1,1,1, 0) when put on the GPU, this means we need a slight tweak\n    // using ceil ensure that the colour will be used so long as it exists but pure transparency will be treated black\n    \"gl_FragColor = vec4(color.rgb, color.a * (alphaMap.r * ceil(alphaMap.a)));\" + \"}\";\n  }\n\n  var p = createjs.extend(AlphaMapFilter, createjs.Filter); // TODO: deprecated\n  // p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n  /** docced in super class **/\n\n  p.shaderParamSetup = function (gl, stage, shaderProgram) {\n    if (!this._mapTexture) {\n      this._mapTexture = gl.createTexture();\n    }\n\n    gl.activeTexture(gl.TEXTURE1);\n    gl.bindTexture(gl.TEXTURE_2D, this._mapTexture);\n    stage.setTextureParams(gl);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.alphaMap);\n    gl.uniform1i(gl.getUniformLocation(shaderProgram, \"uAlphaSampler\"), 1);\n  }; // public methods:\n\n  /** docced in super class **/\n\n\n  p.clone = function () {\n    var o = new AlphaMapFilter(this.alphaMap);\n    o._alphaMap = this._alphaMap;\n    o._mapData = this._mapData;\n    return o;\n  };\n  /** docced in super class **/\n\n\n  p.toString = function () {\n    return \"[AlphaMapFilter]\";\n  }; // private methods:\n\n  /** docced in super class **/\n\n\n  p._applyFilter = function (imageData) {\n    if (!this.alphaMap) {\n      return true;\n    }\n\n    if (!this._prepAlphaMap()) {\n      return false;\n    } // TODO: update to support scenarios where the target has different dimensions.\n\n\n    var data = imageData.data;\n    var map = this._mapData;\n\n    for (var i = 0, l = data.length; i < l; i += 4) {\n      data[i + 3] = map[i] || 0;\n    }\n\n    return true;\n  };\n  /**\n   * @method _prepAlphaMap\n   * @protected\n   **/\n\n\n  p._prepAlphaMap = function () {\n    if (!this.alphaMap) {\n      return false;\n    }\n\n    if (this.alphaMap == this._alphaMap && this._mapData) {\n      return true;\n    }\n\n    this._mapData = null;\n    var map = this._alphaMap = this.alphaMap;\n    var canvas = map;\n    var ctx;\n\n    if (map instanceof HTMLCanvasElement) {\n      ctx = canvas.getContext(\"2d\");\n    } else {\n      canvas = createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\");\n      canvas.width = map.width;\n      canvas.height = map.height;\n      ctx = canvas.getContext(\"2d\");\n      ctx.drawImage(map, 0, 0);\n    }\n\n    try {\n      var imgData = ctx.getImageData(0, 0, map.width, map.height);\n    } catch (e) {\n      //if (!this.suppressCrossDomainErrors) throw new Error(\"unable to access local image data: \" + e);\n      return false;\n    }\n\n    this._mapData = imgData.data;\n    return true;\n  };\n\n  createjs.AlphaMapFilter = createjs.promote(AlphaMapFilter, \"Filter\");\n})(); //##############################################################################\n// AlphaMaskFilter.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor:\n\n  /**\n   * Applies the alpha from the mask image (or canvas) to the target, such that the alpha channel of the result will\n   * be derived from the mask, and the RGB channels will be copied from the target. This can be used, for example, to\n   * apply an alpha mask to a display object. This can also be used to combine a JPG compressed RGB image with a PNG32\n   * alpha mask, which can result in a much smaller file size than a single PNG32 containing ARGB.\n   *\n   * <b>IMPORTANT NOTE: This filter currently does not support the targetCtx, or targetX/Y parameters correctly.</b>\n   *\n   * <h4>Example</h4>\n   * This example draws a gradient box, then caches it and uses the \"cacheCanvas\" as the alpha mask on a 100x100 image.\n   *\n   *      var box = new createjs.Shape();\n   *      box.graphics.beginLinearGradientFill([\"#000000\", \"rgba(0, 0, 0, 0)\"], [0, 1], 0, 0, 100, 100)\n   *      box.graphics.drawRect(0, 0, 100, 100);\n   *      box.cache(0, 0, 100, 100);\n   *\n   *      var bmp = new createjs.Bitmap(\"path/to/image.jpg\");\n   *      bmp.filters = [\n   *          new createjs.AlphaMaskFilter(box.cacheCanvas)\n   *      ];\n   *      bmp.cache(0, 0, 100, 100);\n   *\n   * See {{#crossLink \"Filter\"}}{{/crossLink}} for more information on applying filters.\n   * @class AlphaMaskFilter\n   * @extends Filter\n   * @constructor\n   * @param {HTMLImageElement|HTMLCanvasElement} mask\n   **/\n\n  function AlphaMaskFilter(mask) {\n    this.Filter_constructor(); // public properties:\n\n    /**\n     * The image (or canvas) to use as the mask.\n     * @property mask\n     * @type HTMLImageElement|HTMLCanvasElement\n     **/\n\n    this.mask = mask;\n    /** docced in super class **/\n\n    this.usesContext = true;\n    this.FRAG_SHADER_BODY = \"uniform sampler2D uAlphaSampler;\" + \"void main(void) {\" + \"vec4 color = texture2D(uSampler, vRenderCoord);\" + \"vec4 alphaMap = texture2D(uAlphaSampler, vTextureCoord);\" + \"gl_FragColor = vec4(color.rgb, color.a * alphaMap.a);\" + \"}\";\n  }\n\n  var p = createjs.extend(AlphaMaskFilter, createjs.Filter); // TODO: deprecated\n  // p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n  /** docced in super class **/\n\n  p.shaderParamSetup = function (gl, stage, shaderProgram) {\n    if (!this._mapTexture) {\n      this._mapTexture = gl.createTexture();\n    }\n\n    gl.activeTexture(gl.TEXTURE1);\n    gl.bindTexture(gl.TEXTURE_2D, this._mapTexture);\n    stage.setTextureParams(gl);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.mask);\n    gl.uniform1i(gl.getUniformLocation(shaderProgram, \"uAlphaSampler\"), 1);\n  }; // public methods:\n\n  /**\n   * Applies the filter to the specified context.\n   *\n   * <strong>IMPORTANT NOTE: This filter currently does not support the targetCtx, or targetX/Y parameters\n   * correctly.</strong>\n   * @method applyFilter\n   * @param {CanvasRenderingContext2D} ctx The 2D context to use as the source.\n   * @param {Number} x The x position to use for the source rect.\n   * @param {Number} y The y position to use for the source rect.\n   * @param {Number} width The width to use for the source rect.\n   * @param {Number} height The height to use for the source rect.\n   * @param {CanvasRenderingContext2D} [targetCtx] NOT SUPPORTED IN THIS FILTER. The 2D context to draw the result to. Defaults to the context passed to ctx.\n   * @param {Number} [targetX] NOT SUPPORTED IN THIS FILTER. The x position to draw the result to. Defaults to the value passed to x.\n   * @param {Number} [targetY] NOT SUPPORTED IN THIS FILTER. The y position to draw the result to. Defaults to the value passed to y.\n   * @return {Boolean} If the filter was applied successfully.\n   **/\n\n\n  p.applyFilter = function (ctx, x, y, width, height, targetCtx, targetX, targetY) {\n    if (!this.mask) {\n      return true;\n    }\n\n    targetCtx = targetCtx || ctx;\n\n    if (targetX == null) {\n      targetX = x;\n    }\n\n    if (targetY == null) {\n      targetY = y;\n    }\n\n    targetCtx.save();\n\n    if (ctx != targetCtx) {\n      // TODO: support targetCtx and targetX/Y\n      // clearRect, then draw the ctx in?\n      return false;\n    }\n\n    targetCtx.globalCompositeOperation = \"destination-in\";\n    targetCtx.drawImage(this.mask, targetX, targetY);\n    targetCtx.restore();\n    return true;\n  };\n  /** docced in super class **/\n\n\n  p.clone = function () {\n    return new AlphaMaskFilter(this.mask);\n  };\n  /** docced in super class **/\n\n\n  p.toString = function () {\n    return \"[AlphaMaskFilter]\";\n  };\n\n  createjs.AlphaMaskFilter = createjs.promote(AlphaMaskFilter, \"Filter\");\n})(); //##############################################################################\n// ColorFilter.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor:\n\n  /**\n   * Applies a color transform to DisplayObjects.\n   *\n   * <h4>Example</h4>\n   * This example draws a red circle, and then transforms it to Blue. This is accomplished by multiplying all the channels\n   * to 0 (except alpha, which is set to 1), and then adding 255 to the blue channel.\n   *\n   *      var shape = new createjs.Shape().set({x:100,y:100});\n   *      shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n   *\n   *      shape.filters = [\n   *          new createjs.ColorFilter(0,0,0,1, 0,0,255,0)\n   *      ];\n   *      shape.cache(-50, -50, 100, 100);\n   *\n   * See {{#crossLink \"Filter\"}}{{/crossLink}} for an more information on applying filters.\n   * @class ColorFilter\n   * @param {Number} [redMultiplier=1] The amount to multiply against the red channel. This is a range between 0 and 1.\n   * @param {Number} [greenMultiplier=1] The amount to multiply against the green channel. This is a range between 0 and 1.\n   * @param {Number} [blueMultiplier=1] The amount to multiply against the blue channel. This is a range between 0 and 1.\n   * @param {Number} [alphaMultiplier=1] The amount to multiply against the alpha channel. This is a range between 0 and 1.\n   * @param {Number} [redOffset=0] The amount to add to the red channel after it has been multiplied. This is a range\n   * between -255 and 255.\n   * @param {Number} [greenOffset=0] The amount to add to the green channel after it has been multiplied. This is a range\n    * between -255 and 255.\n   * @param {Number} [blueOffset=0] The amount to add to the blue channel after it has been multiplied. This is a range\n    * between -255 and 255.\n   * @param {Number} [alphaOffset=0] The amount to add to the alpha channel after it has been multiplied. This is a range\n    * between -255 and 255.\n   * @constructor\n   * @extends Filter\n   **/\n\n  function ColorFilter(redMultiplier, greenMultiplier, blueMultiplier, alphaMultiplier, redOffset, greenOffset, blueOffset, alphaOffset) {\n    this.Filter_constructor(); // public properties:\n\n    /**\n     * Red channel multiplier.\n     * @property redMultiplier\n     * @type Number\n     **/\n\n    this.redMultiplier = redMultiplier != null ? redMultiplier : 1;\n    /**\n     * Green channel multiplier.\n     * @property greenMultiplier\n     * @type Number\n     **/\n\n    this.greenMultiplier = greenMultiplier != null ? greenMultiplier : 1;\n    /**\n     * Blue channel multiplier.\n     * @property blueMultiplier\n     * @type Number\n     **/\n\n    this.blueMultiplier = blueMultiplier != null ? blueMultiplier : 1;\n    /**\n     * Alpha channel multiplier.\n     * @property alphaMultiplier\n     * @type Number\n     **/\n\n    this.alphaMultiplier = alphaMultiplier != null ? alphaMultiplier : 1;\n    /**\n     * Red channel offset (added to value).\n     * @property redOffset\n     * @type Number\n     **/\n\n    this.redOffset = redOffset || 0;\n    /**\n     * Green channel offset (added to value).\n     * @property greenOffset\n     * @type Number\n     **/\n\n    this.greenOffset = greenOffset || 0;\n    /**\n     * Blue channel offset (added to value).\n     * @property blueOffset\n     * @type Number\n     **/\n\n    this.blueOffset = blueOffset || 0;\n    /**\n     * Alpha channel offset (added to value).\n     * @property alphaOffset\n     * @type Number\n     **/\n\n    this.alphaOffset = alphaOffset || 0;\n    this.FRAG_SHADER_BODY = \"uniform vec4 uColorMultiplier;\" + \"uniform vec4 uColorOffset;\" + \"void main(void) {\" + \"vec4 color = texture2D(uSampler, vRenderCoord);\" + \"gl_FragColor = (color * uColorMultiplier) + uColorOffset;\" + \"}\";\n  }\n\n  var p = createjs.extend(ColorFilter, createjs.Filter); // TODO: deprecated\n  // p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n  // public methods:\n\n  /** docced in super class **/\n\n  p.shaderParamSetup = function (gl, stage, shaderProgram) {\n    gl.uniform4f(gl.getUniformLocation(shaderProgram, \"uColorMultiplier\"), this.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier);\n    gl.uniform4f(gl.getUniformLocation(shaderProgram, \"uColorOffset\"), this.redOffset / 255, this.greenOffset / 255, this.blueOffset / 255, this.alphaOffset / 255);\n  };\n  /** docced in super class **/\n\n\n  p.toString = function () {\n    return \"[ColorFilter]\";\n  };\n  /** docced in super class **/\n\n\n  p.clone = function () {\n    return new ColorFilter(this.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier, this.redOffset, this.greenOffset, this.blueOffset, this.alphaOffset);\n  }; // private methods:\n\n  /** docced in super class **/\n\n\n  p._applyFilter = function (imageData) {\n    var data = imageData.data;\n    var l = data.length;\n\n    for (var i = 0; i < l; i += 4) {\n      data[i] = data[i] * this.redMultiplier + this.redOffset;\n      data[i + 1] = data[i + 1] * this.greenMultiplier + this.greenOffset;\n      data[i + 2] = data[i + 2] * this.blueMultiplier + this.blueOffset;\n      data[i + 3] = data[i + 3] * this.alphaMultiplier + this.alphaOffset;\n    }\n\n    return true;\n  };\n\n  createjs.ColorFilter = createjs.promote(ColorFilter, \"Filter\");\n})(); //##############################################################################\n// ColorMatrix.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor:\n\n  /**\n   * Provides helper functions for assembling a matrix for use with the {{#crossLink \"ColorMatrixFilter\"}}{{/crossLink}}.\n   * Most methods return the instance to facilitate chained calls.\n   *\n   * <h4>Example</h4>\n   *\n   *      myColorMatrix.adjustHue(20).adjustBrightness(50);\n   *\n   * See {{#crossLink \"Filter\"}}{{/crossLink}} for an example of how to apply filters, or {{#crossLink \"ColorMatrixFilter\"}}{{/crossLink}}\n   * for an example of how to use ColorMatrix to change a DisplayObject's color.\n   * @class ColorMatrix\n   * @param {Number} brightness\n   * @param {Number} contrast\n   * @param {Number} saturation\n   * @param {Number} hue\n   * @constructor\n   **/\n\n  function ColorMatrix(brightness, contrast, saturation, hue) {\n    this.setColor(brightness, contrast, saturation, hue);\n  }\n\n  var p = ColorMatrix.prototype; // constants:\n\n  /**\n   * Array of delta values for contrast calculations.\n   * @property DELTA_INDEX\n   * @type Array\n   * @protected\n   * @static\n   **/\n\n  ColorMatrix.DELTA_INDEX = [0, 0.01, 0.02, 0.04, 0.05, 0.06, 0.07, 0.08, 0.1, 0.11, 0.12, 0.14, 0.15, 0.16, 0.17, 0.18, 0.20, 0.21, 0.22, 0.24, 0.25, 0.27, 0.28, 0.30, 0.32, 0.34, 0.36, 0.38, 0.40, 0.42, 0.44, 0.46, 0.48, 0.5, 0.53, 0.56, 0.59, 0.62, 0.65, 0.68, 0.71, 0.74, 0.77, 0.80, 0.83, 0.86, 0.89, 0.92, 0.95, 0.98, 1.0, 1.06, 1.12, 1.18, 1.24, 1.30, 1.36, 1.42, 1.48, 1.54, 1.60, 1.66, 1.72, 1.78, 1.84, 1.90, 1.96, 2.0, 2.12, 2.25, 2.37, 2.50, 2.62, 2.75, 2.87, 3.0, 3.2, 3.4, 3.6, 3.8, 4.0, 4.3, 4.7, 4.9, 5.0, 5.5, 6.0, 6.5, 6.8, 7.0, 7.3, 7.5, 7.8, 8.0, 8.4, 8.7, 9.0, 9.4, 9.6, 9.8, 10.0];\n  /**\n   * Identity matrix values.\n   * @property IDENTITY_MATRIX\n   * @type Array\n   * @protected\n   * @static\n   **/\n\n  ColorMatrix.IDENTITY_MATRIX = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1];\n  /**\n   * The constant length of a color matrix.\n   * @property LENGTH\n   * @type Number\n   * @protected\n   * @static\n   **/\n\n  ColorMatrix.LENGTH = ColorMatrix.IDENTITY_MATRIX.length; // public methods:\n\n  /**\n   * Resets the instance with the specified values.\n   * @method setColor\n   * @param {Number} brightness\n   * @param {Number} contrast\n   * @param {Number} saturation\n   * @param {Number} hue\n   * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n\n  p.setColor = function (brightness, contrast, saturation, hue) {\n    return this.reset().adjustColor(brightness, contrast, saturation, hue);\n  };\n  /**\n   * Resets the matrix to identity values.\n   * @method reset\n   * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n\n\n  p.reset = function () {\n    return this.copy(ColorMatrix.IDENTITY_MATRIX);\n  };\n  /**\n   * Shortcut method to adjust brightness, contrast, saturation and hue.\n   * Equivalent to calling adjustHue(hue), adjustContrast(contrast),\n   * adjustBrightness(brightness), adjustSaturation(saturation), in that order.\n   * @method adjustColor\n   * @param {Number} brightness\n   * @param {Number} contrast\n   * @param {Number} saturation\n   * @param {Number} hue\n   * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n\n\n  p.adjustColor = function (brightness, contrast, saturation, hue) {\n    this.adjustHue(hue);\n    this.adjustContrast(contrast);\n    this.adjustBrightness(brightness);\n    return this.adjustSaturation(saturation);\n  };\n  /**\n   * Adjusts the brightness of pixel color by adding the specified value to the red, green and blue channels.\n   * Positive values will make the image brighter, negative values will make it darker.\n   * @method adjustBrightness\n   * @param {Number} value A value between -255 & 255 that will be added to the RGB channels.\n   * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n\n\n  p.adjustBrightness = function (value) {\n    if (value == 0 || isNaN(value)) {\n      return this;\n    }\n\n    value = this._cleanValue(value, 255);\n\n    this._multiplyMatrix([1, 0, 0, 0, value, 0, 1, 0, 0, value, 0, 0, 1, 0, value, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\n\n    return this;\n  };\n  /**\n   * Adjusts the contrast of pixel color.\n   * Positive values will increase contrast, negative values will decrease contrast.\n   * @method adjustContrast\n   * @param {Number} value A value between -100 & 100.\n   * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n\n\n  p.adjustContrast = function (value) {\n    if (value == 0 || isNaN(value)) {\n      return this;\n    }\n\n    value = this._cleanValue(value, 100);\n    var x;\n\n    if (value < 0) {\n      x = 127 + value / 100 * 127;\n    } else {\n      x = value % 1;\n\n      if (x == 0) {\n        x = ColorMatrix.DELTA_INDEX[value];\n      } else {\n        x = ColorMatrix.DELTA_INDEX[value << 0] * (1 - x) + ColorMatrix.DELTA_INDEX[(value << 0) + 1] * x; // use linear interpolation for more granularity.\n      }\n\n      x = x * 127 + 127;\n    }\n\n    this._multiplyMatrix([x / 127, 0, 0, 0, 0.5 * (127 - x), 0, x / 127, 0, 0, 0.5 * (127 - x), 0, 0, x / 127, 0, 0.5 * (127 - x), 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\n\n    return this;\n  };\n  /**\n   * Adjusts the color saturation of the pixel.\n   * Positive values will increase saturation, negative values will decrease saturation (trend towards greyscale).\n   * @method adjustSaturation\n   * @param {Number} value A value between -100 & 100.\n   * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n\n\n  p.adjustSaturation = function (value) {\n    if (value == 0 || isNaN(value)) {\n      return this;\n    }\n\n    value = this._cleanValue(value, 100);\n    var x = 1 + (value > 0 ? 3 * value / 100 : value / 100);\n    var lumR = 0.3086;\n    var lumG = 0.6094;\n    var lumB = 0.0820;\n\n    this._multiplyMatrix([lumR * (1 - x) + x, lumG * (1 - x), lumB * (1 - x), 0, 0, lumR * (1 - x), lumG * (1 - x) + x, lumB * (1 - x), 0, 0, lumR * (1 - x), lumG * (1 - x), lumB * (1 - x) + x, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\n\n    return this;\n  };\n  /**\n   * Adjusts the hue of the pixel color.\n   * @method adjustHue\n   * @param {Number} value A value between -180 & 180.\n   * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n\n\n  p.adjustHue = function (value) {\n    if (value == 0 || isNaN(value)) {\n      return this;\n    }\n\n    value = this._cleanValue(value, 180) / 180 * Math.PI;\n    var cosVal = Math.cos(value);\n    var sinVal = Math.sin(value);\n    var lumR = 0.213;\n    var lumG = 0.715;\n    var lumB = 0.072;\n\n    this._multiplyMatrix([lumR + cosVal * (1 - lumR) + sinVal * -lumR, lumG + cosVal * -lumG + sinVal * -lumG, lumB + cosVal * -lumB + sinVal * (1 - lumB), 0, 0, lumR + cosVal * -lumR + sinVal * 0.143, lumG + cosVal * (1 - lumG) + sinVal * 0.140, lumB + cosVal * -lumB + sinVal * -0.283, 0, 0, lumR + cosVal * -lumR + sinVal * -(1 - lumR), lumG + cosVal * -lumG + sinVal * lumG, lumB + cosVal * (1 - lumB) + sinVal * lumB, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\n\n    return this;\n  };\n  /**\n   * Concatenates (multiplies) the specified matrix with this one.\n   * @method concat\n   * @param {Array} matrix An array or ColorMatrix instance.\n   * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n\n\n  p.concat = function (matrix) {\n    matrix = this._fixMatrix(matrix);\n\n    if (matrix.length != ColorMatrix.LENGTH) {\n      return this;\n    }\n\n    this._multiplyMatrix(matrix);\n\n    return this;\n  };\n  /**\n   * Returns a clone of this ColorMatrix.\n   * @method clone\n   * @return {ColorMatrix} A clone of this ColorMatrix.\n   **/\n\n\n  p.clone = function () {\n    return new ColorMatrix().copy(this);\n  };\n  /**\n   * Return a length 25 (5x5) array instance containing this matrix's values.\n   * @method toArray\n   * @return {Array} An array holding this matrix's values.\n   **/\n\n\n  p.toArray = function () {\n    var arr = [];\n\n    for (var i = 0, l = ColorMatrix.LENGTH; i < l; i++) {\n      arr[i] = this[i];\n    }\n\n    return arr;\n  };\n  /**\n   * Copy the specified matrix's values to this matrix.\n   * @method copy\n   * @param {Array} matrix An array or ColorMatrix instance.\n   * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n\n\n  p.copy = function (matrix) {\n    var l = ColorMatrix.LENGTH;\n\n    for (var i = 0; i < l; i++) {\n      this[i] = matrix[i];\n    }\n\n    return this;\n  };\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n\n\n  p.toString = function () {\n    return \"[ColorMatrix]\";\n  }; // private methods:\n\n  /**\n   * @method _multiplyMatrix\n   * @param {Array} matrix\n   * @protected\n   **/\n\n\n  p._multiplyMatrix = function (matrix) {\n    var i,\n        j,\n        k,\n        col = [];\n\n    for (i = 0; i < 5; i++) {\n      for (j = 0; j < 5; j++) {\n        col[j] = this[j + i * 5];\n      }\n\n      for (j = 0; j < 5; j++) {\n        var val = 0;\n\n        for (k = 0; k < 5; k++) {\n          val += matrix[j + k * 5] * col[k];\n        }\n\n        this[j + i * 5] = val;\n      }\n    }\n  };\n  /**\n   * Make sure values are within the specified range, hue has a limit of 180, brightness is 255, others are 100.\n   * @method _cleanValue\n   * @param {Number} value The raw number\n   * @param {Number} limit The maximum that the number can be. The minimum is the limit * -1.\n   * @protected\n   **/\n\n\n  p._cleanValue = function (value, limit) {\n    return Math.min(limit, Math.max(-limit, value));\n  };\n  /**\n   * Makes sure matrixes are 5x5 (25 long).\n   * @method _fixMatrix\n   * @param {Array} matrix\n   * @protected\n   **/\n\n\n  p._fixMatrix = function (matrix) {\n    if (matrix instanceof ColorMatrix) {\n      matrix = matrix.toArray();\n    }\n\n    if (matrix.length < ColorMatrix.LENGTH) {\n      matrix = matrix.slice(0, matrix.length).concat(ColorMatrix.IDENTITY_MATRIX.slice(matrix.length, ColorMatrix.LENGTH));\n    } else if (matrix.length > ColorMatrix.LENGTH) {\n      matrix = matrix.slice(0, ColorMatrix.LENGTH);\n    }\n\n    return matrix;\n  };\n\n  createjs.ColorMatrix = ColorMatrix;\n})(); //##############################################################################\n// ColorMatrixFilter.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor:\n\n  /**\n   * Allows you to carry out complex color operations such as modifying saturation, brightness, or inverting. See the\n   * {{#crossLink \"ColorMatrix\"}}{{/crossLink}} for more information on changing colors. For an easier color transform,\n   * consider the {{#crossLink \"ColorFilter\"}}{{/crossLink}}.\n   *\n   * <h4>Example</h4>\n   * This example creates a red circle, inverts its hue, and then saturates it to brighten it up.\n   *\n   *      var shape = new createjs.Shape().set({x:100,y:100});\n   *      shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n   *\n   *      var matrix = new createjs.ColorMatrix().adjustHue(180).adjustSaturation(100);\n   *      shape.filters = [\n   *          new createjs.ColorMatrixFilter(matrix)\n   *      ];\n   *\n   *      shape.cache(-50, -50, 100, 100);\n   *\n   * See {{#crossLink \"Filter\"}}{{/crossLink}} for an more information on applying filters.\n   * @class ColorMatrixFilter\n   * @constructor\n   * @extends Filter\n   * @param {Array | ColorMatrix} matrix A 4x5 matrix describing the color operation to perform. See also the {{#crossLink \"ColorMatrix\"}}{{/crossLink}}\n   * class.\n   **/\n\n  function ColorMatrixFilter(matrix) {\n    this.Filter_constructor(); // public properties:\n\n    /**\n     * A 4x5 matrix describing the color operation to perform. See also the {{#crossLink \"ColorMatrix\"}}{{/crossLink}}\n     * @property matrix\n     * @type Array | ColorMatrix\n     **/\n\n    this.matrix = matrix;\n    this.FRAG_SHADER_BODY = \"uniform mat4 uColorMatrix;\" + \"uniform vec4 uColorMatrixOffset;\" + \"void main(void) {\" + \"vec4 color = texture2D(uSampler, vRenderCoord);\" + \"mat4 m = uColorMatrix;\" + \"vec4 newColor = vec4(0,0,0,0);\" + \"newColor.r = color.r*m[0][0] + color.g*m[0][1] + color.b*m[0][2] + color.a*m[0][3];\" + \"newColor.g = color.r*m[1][0] + color.g*m[1][1] + color.b*m[1][2] + color.a*m[1][3];\" + \"newColor.b = color.r*m[2][0] + color.g*m[2][1] + color.b*m[2][2] + color.a*m[2][3];\" + \"newColor.a = color.r*m[3][0] + color.g*m[3][1] + color.b*m[3][2] + color.a*m[3][3];\" + \"gl_FragColor = newColor + uColorMatrixOffset;\" + \"}\";\n  }\n\n  var p = createjs.extend(ColorMatrixFilter, createjs.Filter); // TODO: deprecated\n  // p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n  /** docced in super class **/\n\n  p.shaderParamSetup = function (gl, stage, shaderProgram) {\n    var mat = this.matrix;\n    var colorMatrix = new Float32Array([mat[0], mat[1], mat[2], mat[3], mat[5], mat[6], mat[7], mat[8], mat[10], mat[11], mat[12], mat[13], mat[15], mat[16], mat[17], mat[18]]);\n    gl.uniformMatrix4fv(gl.getUniformLocation(shaderProgram, \"uColorMatrix\"), false, colorMatrix);\n    gl.uniform4f(gl.getUniformLocation(shaderProgram, \"uColorMatrixOffset\"), mat[4] / 255, mat[9] / 255, mat[14] / 255, mat[19] / 255);\n  }; // public methods:\n\n  /** docced in super class **/\n\n\n  p.toString = function () {\n    return \"[ColorMatrixFilter]\";\n  };\n  /** docced in super class **/\n\n\n  p.clone = function () {\n    return new ColorMatrixFilter(this.matrix);\n  }; // private methods:\n\n  /** docced in super class **/\n\n\n  p._applyFilter = function (imageData) {\n    var data = imageData.data;\n    var l = data.length;\n    var r, g, b, a;\n    var mtx = this.matrix;\n    var m0 = mtx[0],\n        m1 = mtx[1],\n        m2 = mtx[2],\n        m3 = mtx[3],\n        m4 = mtx[4];\n    var m5 = mtx[5],\n        m6 = mtx[6],\n        m7 = mtx[7],\n        m8 = mtx[8],\n        m9 = mtx[9];\n    var m10 = mtx[10],\n        m11 = mtx[11],\n        m12 = mtx[12],\n        m13 = mtx[13],\n        m14 = mtx[14];\n    var m15 = mtx[15],\n        m16 = mtx[16],\n        m17 = mtx[17],\n        m18 = mtx[18],\n        m19 = mtx[19];\n\n    for (var i = 0; i < l; i += 4) {\n      r = data[i];\n      g = data[i + 1];\n      b = data[i + 2];\n      a = data[i + 3];\n      data[i] = r * m0 + g * m1 + b * m2 + a * m3 + m4; // red\n\n      data[i + 1] = r * m5 + g * m6 + b * m7 + a * m8 + m9; // green\n\n      data[i + 2] = r * m10 + g * m11 + b * m12 + a * m13 + m14; // blue\n\n      data[i + 3] = r * m15 + g * m16 + b * m17 + a * m18 + m19; // alpha\n    }\n\n    return true;\n  };\n\n  createjs.ColorMatrixFilter = createjs.promote(ColorMatrixFilter, \"Filter\");\n})(); //##############################################################################\n// Touch.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor:\n\n  /**\n  * Global utility for working with multi-touch enabled devices in EaselJS. Currently supports W3C Touch API (iOS and\n  * modern Android browser) and the Pointer API (IE), including ms-prefixed events in IE10, and unprefixed in IE11.\n  *\n  * Ensure that you {{#crossLink \"Touch/disable\"}}{{/crossLink}} touch when cleaning up your application. You do not have\n  * to check if touch is supported to enable it, as it will fail gracefully if it is not supported.\n  *\n  * <h4>Example</h4>\n  *\n  *      var stage = new createjs.Stage(\"canvasId\");\n  *      createjs.Touch.enable(stage);\n  *\n  * <strong>Note:</strong> It is important to disable Touch on a stage that you are no longer using:\n  *\n  *      createjs.Touch.disable(stage);\n  *\n  * @class Touch\n  * @static\n  **/\n\n  function Touch() {\n    throw \"Touch cannot be instantiated\";\n  } // public static methods:\n\n  /**\n   * Returns `true` if touch is supported in the current browser.\n   * @method isSupported\n   * @return {Boolean} Indicates whether touch is supported in the current browser.\n   * @static\n   **/\n\n\n  Touch.isSupported = function () {\n    return !!('ontouchstart' in window || // iOS & Android\n    window.navigator['msPointerEnabled'] && window.navigator['msMaxTouchPoints'] > 0 // IE10\n    || window.navigator['pointerEnabled'] && window.navigator['maxTouchPoints'] > 0); // IE11+\n  };\n  /**\n   * Enables touch interaction for the specified EaselJS {{#crossLink \"Stage\"}}{{/crossLink}}. Currently supports iOS\n   * (and compatible browsers, such as modern Android browsers), and IE10/11. Supports both single touch and\n   * multi-touch modes. Extends the EaselJS {{#crossLink \"MouseEvent\"}}{{/crossLink}} model, but without support for\n   * double click or over/out events. See the MouseEvent {{#crossLink \"MouseEvent/pointerId:property\"}}{{/crossLink}}\n   * for more information.\n   * @method enable\n   * @param {Stage} stage The {{#crossLink \"Stage\"}}{{/crossLink}} to enable touch on.\n   * @param {Boolean} [singleTouch=false] If `true`, only a single touch will be active at a time.\n   * @param {Boolean} [allowDefault=false] If `true`, then default gesture actions (ex. scrolling, zooming) will be\n   * allowed when the user is interacting with the target canvas.\n   * @return {Boolean} Returns `true` if touch was successfully enabled on the target stage.\n   * @static\n   **/\n\n\n  Touch.enable = function (stage, singleTouch, allowDefault) {\n    if (!stage || !stage.canvas || !Touch.isSupported()) {\n      return false;\n    }\n\n    if (stage.__touch) {\n      return true;\n    } // inject required properties on stage:\n\n\n    stage.__touch = {\n      pointers: {},\n      multitouch: !singleTouch,\n      preventDefault: !allowDefault,\n      count: 0\n    }; // note that in the future we may need to disable the standard mouse event model before adding\n    // these to prevent duplicate calls. It doesn't seem to be an issue with iOS devices though.\n\n    if ('ontouchstart' in window) {\n      Touch._IOS_enable(stage);\n    } else if (window.navigator['msPointerEnabled'] || window.navigator[\"pointerEnabled\"]) {\n      Touch._IE_enable(stage);\n    }\n\n    return true;\n  };\n  /**\n   * Removes all listeners that were set up when calling `Touch.enable()` on a stage.\n   * @method disable\n   * @param {Stage} stage The {{#crossLink \"Stage\"}}{{/crossLink}} to disable touch on.\n   * @static\n   **/\n\n\n  Touch.disable = function (stage) {\n    if (!stage) {\n      return;\n    }\n\n    if ('ontouchstart' in window) {\n      Touch._IOS_disable(stage);\n    } else if (window.navigator['msPointerEnabled'] || window.navigator[\"pointerEnabled\"]) {\n      Touch._IE_disable(stage);\n    }\n\n    delete stage.__touch;\n  }; // Private static methods:\n\n  /**\n   * @method _IOS_enable\n   * @protected\n   * @param {Stage} stage\n   * @static\n   **/\n\n\n  Touch._IOS_enable = function (stage) {\n    var canvas = stage.canvas;\n\n    var f = stage.__touch.f = function (e) {\n      Touch._IOS_handleEvent(stage, e);\n    };\n\n    canvas.addEventListener(\"touchstart\", f, false);\n    canvas.addEventListener(\"touchmove\", f, false);\n    canvas.addEventListener(\"touchend\", f, false);\n    canvas.addEventListener(\"touchcancel\", f, false);\n  };\n  /**\n   * @method _IOS_disable\n   * @protected\n   * @param {Stage} stage\n   * @static\n   **/\n\n\n  Touch._IOS_disable = function (stage) {\n    var canvas = stage.canvas;\n\n    if (!canvas) {\n      return;\n    }\n\n    var f = stage.__touch.f;\n    canvas.removeEventListener(\"touchstart\", f, false);\n    canvas.removeEventListener(\"touchmove\", f, false);\n    canvas.removeEventListener(\"touchend\", f, false);\n    canvas.removeEventListener(\"touchcancel\", f, false);\n  };\n  /**\n   * @method _IOS_handleEvent\n   * @param {Stage} stage\n   * @param {Object} e The event to handle\n   * @protected\n   * @static\n   **/\n\n\n  Touch._IOS_handleEvent = function (stage, e) {\n    if (!stage) {\n      return;\n    }\n\n    if (stage.__touch.preventDefault) {\n      e.preventDefault && e.preventDefault();\n    }\n\n    var touches = e.changedTouches;\n    var type = e.type;\n\n    for (var i = 0, l = touches.length; i < l; i++) {\n      var touch = touches[i];\n      var id = touch.identifier;\n\n      if (touch.target != stage.canvas) {\n        continue;\n      }\n\n      if (type == \"touchstart\") {\n        this._handleStart(stage, id, e, touch.pageX, touch.pageY);\n      } else if (type == \"touchmove\") {\n        this._handleMove(stage, id, e, touch.pageX, touch.pageY);\n      } else if (type == \"touchend\" || type == \"touchcancel\") {\n        this._handleEnd(stage, id, e);\n      }\n    }\n  };\n  /**\n   * @method _IE_enable\n   * @protected\n   * @param {Stage} stage\n   * @static\n   **/\n\n\n  Touch._IE_enable = function (stage) {\n    var canvas = stage.canvas;\n\n    var f = stage.__touch.f = function (e) {\n      Touch._IE_handleEvent(stage, e);\n    };\n\n    if (window.navigator[\"pointerEnabled\"] === undefined) {\n      canvas.addEventListener(\"MSPointerDown\", f, false);\n      window.addEventListener(\"MSPointerMove\", f, false);\n      window.addEventListener(\"MSPointerUp\", f, false);\n      window.addEventListener(\"MSPointerCancel\", f, false);\n\n      if (stage.__touch.preventDefault) {\n        canvas.style.msTouchAction = \"none\";\n      }\n    } else {\n      canvas.addEventListener(\"pointerdown\", f, false);\n      window.addEventListener(\"pointermove\", f, false);\n      window.addEventListener(\"pointerup\", f, false);\n      window.addEventListener(\"pointercancel\", f, false);\n\n      if (stage.__touch.preventDefault) {\n        canvas.style.touchAction = \"none\";\n      }\n    }\n\n    stage.__touch.activeIDs = {};\n  };\n  /**\n   * @method _IE_disable\n   * @protected\n   * @param {Stage} stage\n   * @static\n   **/\n\n\n  Touch._IE_disable = function (stage) {\n    var f = stage.__touch.f;\n\n    if (window.navigator[\"pointerEnabled\"] === undefined) {\n      window.removeEventListener(\"MSPointerMove\", f, false);\n      window.removeEventListener(\"MSPointerUp\", f, false);\n      window.removeEventListener(\"MSPointerCancel\", f, false);\n\n      if (stage.canvas) {\n        stage.canvas.removeEventListener(\"MSPointerDown\", f, false);\n      }\n    } else {\n      window.removeEventListener(\"pointermove\", f, false);\n      window.removeEventListener(\"pointerup\", f, false);\n      window.removeEventListener(\"pointercancel\", f, false);\n\n      if (stage.canvas) {\n        stage.canvas.removeEventListener(\"pointerdown\", f, false);\n      }\n    }\n  };\n  /**\n   * @method _IE_handleEvent\n   * @param {Stage} stage\n   * @param {Object} e The event to handle.\n   * @protected\n   * @static\n   **/\n\n\n  Touch._IE_handleEvent = function (stage, e) {\n    if (!stage) {\n      return;\n    }\n\n    if (stage.__touch.preventDefault) {\n      e.preventDefault && e.preventDefault();\n    }\n\n    var type = e.type;\n    var id = e.pointerId;\n    var ids = stage.__touch.activeIDs;\n\n    if (type == \"MSPointerDown\" || type == \"pointerdown\") {\n      if (e.srcElement != stage.canvas) {\n        return;\n      }\n\n      ids[id] = true;\n\n      this._handleStart(stage, id, e, e.pageX, e.pageY);\n    } else if (ids[id]) {\n      // it's an id we're watching\n      if (type == \"MSPointerMove\" || type == \"pointermove\") {\n        this._handleMove(stage, id, e, e.pageX, e.pageY);\n      } else if (type == \"MSPointerUp\" || type == \"MSPointerCancel\" || type == \"pointerup\" || type == \"pointercancel\") {\n        delete ids[id];\n\n        this._handleEnd(stage, id, e);\n      }\n    }\n  };\n  /**\n   * @method _handleStart\n   * @param {Stage} stage\n   * @param {String|Number} id\n   * @param {Object} e\n   * @param {Number} x\n   * @param {Number} y\n   * @protected\n   **/\n\n\n  Touch._handleStart = function (stage, id, e, x, y) {\n    var props = stage.__touch;\n\n    if (!props.multitouch && props.count) {\n      return;\n    }\n\n    var ids = props.pointers;\n\n    if (ids[id]) {\n      return;\n    }\n\n    ids[id] = true;\n    props.count++;\n\n    stage._handlePointerDown(id, e, x, y);\n  };\n  /**\n   * @method _handleMove\n   * @param {Stage} stage\n   * @param {String|Number} id\n   * @param {Object} e\n   * @param {Number} x\n   * @param {Number} y\n   * @protected\n   **/\n\n\n  Touch._handleMove = function (stage, id, e, x, y) {\n    if (!stage.__touch.pointers[id]) {\n      return;\n    }\n\n    stage._handlePointerMove(id, e, x, y);\n  };\n  /**\n   * @method _handleEnd\n   * @param {Stage} stage\n   * @param {String|Number} id\n   * @param {Object} e\n   * @protected\n   **/\n\n\n  Touch._handleEnd = function (stage, id, e) {\n    // TODO: cancel should be handled differently for proper UI (ex. an up would trigger a click, a cancel would more closely resemble an out).\n    var props = stage.__touch;\n    var ids = props.pointers;\n\n    if (!ids[id]) {\n      return;\n    }\n\n    props.count--;\n\n    stage._handlePointerUp(id, e, true);\n\n    delete ids[id];\n  };\n\n  createjs.Touch = Touch;\n})(); //##############################################################################\n// version.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n  /**\n   * Static class holding library specific information such as the version and buildDate of\n   * the library.\n   * @class EaselJS\n   **/\n\n  var s = createjs.EaselJS = createjs.EaselJS || {};\n  /**\n   * The version string for this release.\n   * @property version\n   * @type String\n   * @static\n   **/\n\n  s.version =\n  /*=version*/\n  \"1.0.0\"; // injected by build process\n\n  /**\n   * The build date for this release in UTC format.\n   * @property buildDate\n   * @type String\n   * @static\n   **/\n\n  s.buildDate =\n  /*=date*/\n  \"Thu, 14 Sep 2017 19:47:53 GMT\"; // injected by build process\n})();","map":{"version":3,"sources":["/home/luong/kobuki_web/node_modules/latest-createjs/lib/easeljs/easeljs.js"],"names":["window","createjs","extend","subclass","superclass","o","constructor","prototype","promote","prefix","subP","supP","Object","getPrototypeOf","__proto__","n","hasOwnProperty","indexOf","array","searchElement","i","l","length","UID","_nextID","get","deprecate","fallbackMethod","name","msg","console","warn","log","apply","arguments","Event","type","bubbles","cancelable","target","currentTarget","eventPhase","timeStamp","Date","getTime","defaultPrevented","propagationStopped","immediatePropagationStopped","removed","p","preventDefault","stopPropagation","stopImmediatePropagation","remove","clone","set","props","toString","EventDispatcher","_listeners","_captureListeners","initialize","addEventListener","on","removeEventListener","off","removeAllEventListeners","hasEventListener","dispatchEvent","_dispatchEvent","willTrigger","listener","useCapture","listeners","arr","push","scope","once","data","handleEvent","evt","call","splice","eventObj","e","parent","top","list","captureListeners","slice","Ticker","RAF_SYNCHED","RAF","TIMEOUT","timingMode","maxDelta","paused","_addEventListener","_inited","init","_startTime","_pausedTime","_ticks","_pausedTicks","_interval","_lastTime","_times","_tickTimes","_timerId","_raf","_setInterval","interval","_setupTick","setInterval","_getInterval","getInterval","_setFPS","value","setFPS","_getFPS","getFPS","defineProperties","framerate","_getTime","reset","f","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","clearTimeout","getMeasuredTickTime","ticks","ttl","times","Math","min","getMeasuredFPS","runTime","getEventTime","getTicks","pauseable","_handleSynch","_tick","_handleRAF","_handleTimeout","mode","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","time","elapsedTime","event","delta","unshift","pop","w","now","performance","mozNow","msNow","oNow","webkitNow","VideoBuffer","video","readyState","_video","_canvas","_videoReady","bind","getImage","canvas","createCanvas","document","createElement","width","videoWidth","height","videoHeight","currentTime","ctx","getContext","clearRect","drawImage","MouseEvent","stageX","stageY","nativeEvent","pointerID","primary","rawX","rawY","relatedTarget","Event_constructor","_get_localX","globalToLocal","x","_get_localY","y","_get_isTouch","localX","localY","isTouch","Matrix2D","a","b","c","d","tx","ty","setValues","DEG_TO_RAD","PI","identity","append","a1","b1","c1","d1","prepend","tx1","appendMatrix","matrix","prependMatrix","appendTransform","scaleX","scaleY","rotation","skewX","skewY","regX","regY","r","cos","sin","prependTransform","rotate","angle","skew","scale","translate","invert","isIdentity","equals","transformPoint","pt","decompose","sqrt","atan2","abs","copy","DisplayProps","visible","alpha","shadow","compositeOperation","Point","point","Rectangle","pad","left","bottom","right","rectangle","contains","union","rect","intersection","x1","y1","x2","y2","intersects","isEmpty","ButtonHelper","outLabel","overLabel","downLabel","play","hitArea","hitLabel","_isPressed","_isOver","_enabled","mouseChildren","enabled","actionsEnabled","gotoAndStop","_setEnabled","cursor","_reset","__reset","setEnabled","_getEnabled","getEnabled","label","t","gotoAndPlay","Shadow","color","offsetX","offsetY","blur","SpriteSheet","EventDispatcher_constructor","complete","_animations","_frames","_images","_data","_loadCount","_frameHeight","_frameWidth","_numFrames","_regX","_regY","_spacing","_margin","_parseData","_getAnimations","getAnimations","animations","getNumFrames","animation","frames","getAnimation","getFrame","frameIndex","frame","getFrameBounds","images","img","src","naturalWidth","onload","_handleImageLoad","onerror","_handleImageError","Array","isArray","image","spacing","margin","count","_calculateFrames","anim","obj","speed","next","undefined","errorEvent","maxFrames","frameCount","frameWidth","frameHeight","imgLoop","imgs","imgW","imgH","naturalHeight","Graphics","command","_stroke","_strokeStyle","_oldStrokeStyle","_strokeDash","_oldStrokeDash","_strokeIgnoreScale","_fill","_instructions","_commitIndex","_activeInstructions","_dirty","_storeIndex","clear","G","getRGB","g","getHSL","hue","saturation","lightness","BASE_64","STROKE_CAPS_MAP","STROKE_JOINTS_MAP","_ctx","_getInstructions","_updateInstructions","getInstructions","instructions","draw","instr","exec","drawAsPath","instrs","path","moveTo","MoveTo","lineTo","LineTo","arcTo","radius","ArcTo","arc","startAngle","endAngle","anticlockwise","Arc","quadraticCurveTo","cpx","cpy","QuadraticCurveTo","bezierCurveTo","cp1x","cp1y","cp2x","cp2y","BezierCurveTo","h","Rect","closePath","ClosePath","beginFill","_setFill","Fill","beginLinearGradientFill","colors","ratios","x0","y0","linearGradient","beginRadialGradientFill","r0","r1","radialGradient","beginBitmapFill","repetition","bitmap","endFill","setStrokeStyle","thickness","caps","joints","miterLimit","ignoreScale","StrokeStyle","setStrokeDash","segments","offset","StrokeDash","beginStroke","_setStroke","Stroke","beginLinearGradientStroke","beginRadialGradientStroke","beginBitmapStroke","endStroke","curveTo","drawRect","drawRoundRect","drawRoundRectComplex","radiusTL","radiusTR","radiusBR","radiusBL","RoundRect","drawCircle","Circle","drawEllipse","Ellipse","drawPolyStar","sides","pointSize","PolyStar","clean","decodePath","str","paramCount","params","base64","charAt","fi","pl","charCount","num","sign","store","unstore","mt","lt","at","bt","qt","cp","lf","rf","bf","ef","ss","sd","s","ls","rs","bs","es","dr","rr","rc","dc","de","dp","commit","active","commitIndex","beginCmd","ll","fill","stroke","BeginPath","beginPath","style","fillStyle","mtx","save","transform","restore","createLinearGradient","addColorStop","createRadialGradient","createPattern","strokeStyle","setTransform","lineWidth","lineCap","isNaN","lineJoin","setLineDash","EMPTY_SEGMENTS","lineDashOffset","max","mTL","mTR","mBR","mBL","rTL","rTR","rBR","rBL","k","ox","oy","xe","ye","xm","ym","ps","DisplayObject","cacheCanvas","bitmapCache","id","mouseEnabled","tickEnabled","transformMatrix","snapToPixel","filters","mask","_props","_rectangle","_bounds","_webGLRenderStyle","_StageGL_NONE","_MOUSE_EVENTS","suppressCrossDomainErrors","_snapToPixelEnabled","_StageGL_SPRITE","_StageGL_BITMAP","_hitTestCanvas","_hitTestContext","_getStage","_Stage","getStage","stage","cacheID","isVisible","ignoreCache","cache","updateContext","graphics","getMatrix","clip","globalAlpha","globalCompositeOperation","_applyShadow","options","BitmapCache","define","updateCache","update","uncache","release","getCacheDataURL","getDataURL","localToGlobal","getConcatenatedMatrix","localToLocal","getConcatenatedDisplayProps","hitTest","hit","_testHit","getBounds","_cacheScale","_cacheOffsetX","_cacheOffsetY","getTransformedBounds","_getBounds","setBounds","_cloneProps","_updateState","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","evtObj","getImageData","ignoreTransform","_transformBounds","bounds","x_a","x_b","y_c","y_d","minX","maxX","minY","maxY","_hasMouseEventListener","evts","Container","DisplayObject_constructor","children","tickChildren","_getNumChildren","getNumChildren","numChildren","hasContent","DisplayObject_draw","child","addChild","par","silent","_removeChildAt","addChildAt","index","indx","removeChild","good","removeChildAt","sort","removeAllChildren","kids","getChildAt","getChildByName","sortChildren","sortFunction","getChildIndex","swapChildrenAt","index1","index2","o1","o2","swapChildren","child1","child2","setChildIndex","getObjectUnderPoint","getObjectsUnderPoint","_getObjectsUnderPoint","recursive","_cloneChildren","DisplayObject__tick","mouse","activeListener","currentDepth","_testMask","result","DisplayObject_getBounds","Stage","Container_constructor","autoClear","getElementById","mouseX","mouseY","snapToPixelEnabled","mouseInBounds","tickOnUpdate","mouseMoveOutside","preventSelection","_pointerData","_pointerCount","_primaryPointerID","_mouseOverIntervalID","_nextStage","_prevStage","enableDOMEvents","_get_nextStage","_set_nextStage","nextStage","tick","toDataURL","backgroundColor","mimeType","fillRect","dataURL","putImageData","enableMouseOver","frequency","clearInterval","_testMouseOver","enable","_eventListeners","_this","_handleMouseUp","_handleMouseMove","_handleDoubleClick","_handleMouseDown","_getElementRect","getBoundingClientRect","err","offsetTop","offsetLeft","offsetWidth","offsetHeight","offX","pageXOffset","scrollLeft","clientLeft","body","offY","pageYOffset","scrollTop","clientTop","styles","getComputedStyle","currentStyle","padL","parseInt","paddingLeft","borderLeftWidth","padT","paddingTop","borderTopWidth","padR","paddingRight","borderRightWidth","padB","paddingBottom","borderBottomWidth","_getPointerData","_handlePointerMove","pageX","pageY","owner","inBounds","_updatePointerPosition","_dispatchMouseEvent","posEvtObj","_handlePointerUp","oTarget","down","_handlePointerDown","eventTarget","_mouseOverX","_mouseOverY","isEventTarget","common","oldList","_mouseOverTarget","oldTarget","pointerId","StageGL","Stage_constructor","premultiply","transparent","antialias","preserveBuffer","autoPurge","vocalDebug","_preserveBuffer","_antialias","_transparent","_premultiply","_autoPurge","_viewportWidth","_viewportHeight","_projectionMatrix","_webGLContext","_clearColor","_maxCardsPerBatch","DEFAULT_MAX_BATCH_SIZE","_activeShader","_vertices","_vertexPositionBuffer","_uvs","_uvPositionBuffer","_indices","_textureIndexBuffer","_alphas","_alphaBuffer","_textureDictionary","_textureIDs","_batchTextures","_baseTextures","_batchTextureCount","_lastTextureInsert","_batchID","_drawID","_slotBlacklist","_isDrawing","_lastTrackedCanvas","isCacheControlled","_cacheContainer","_initializeWebGL","buildUVRects","spritesheet","onlyTarget","start","end","uvRect","isWebGLActive","WebGLRenderingContext","VERTEX_PROPERTY_COUNT","INDICIES_PER_CARD","WEBGL_MAX_INDEX_NUM","pow","UV_RECT","COVER_VERT","Float32Array","COVER_UV","COVER_UV_FLIP","REGULAR_VARYING_HEADER","REGULAR_VERTEX_HEADER","REGULAR_FRAGMENT_HEADER","REGULAR_VERTEX_BODY","REGULAR_FRAGMENT_BODY","REGULAR_FRAG_COLOR_NORMAL","REGULAR_FRAG_COLOR_PREMULTIPLY","PARTICLE_VERTEX_BODY","PARTICLE_FRAGMENT_BODY","COVER_VARYING_HEADER","COVER_VERTEX_HEADER","COVER_FRAGMENT_HEADER","COVER_VERTEX_BODY","COVER_FRAGMENT_BODY","_get_isWebGL","_set_autoPurge","_get_autoPurge","Number","isWebGL","depth","stencil","premultipliedAlpha","preserveDrawingBuffer","gl","_fetchWebGLContext","updateSimultaneousTextureCount","getParameter","MAX_TEXTURE_IMAGE_UNITS","_maxTextureSlots","MAX_COMBINED_TEXTURE_IMAGE_UNITS","_createBuffers","_initTextures","disable","DEPTH_TEST","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","clearColor","updateViewport","_batchDraw","purgeTextures","cc","adjust","COLOR_BUFFER_BIT","Stage_clear","context","Stage_draw","cacheDraw","manager","_cacheDraw","protectTextureSlot","lock","getTargetRenderTexture","toggle","__lastRT","__rtA","getRenderBufferTexture","_width","_height","resizeTexture","setTextureParams","__rtB","releaseTexture","item","foundImage","_storeID","_killTextureObject","spriteSheet","dict","success","_fetchShaderProgram","viewport","_projectionMatrixFlip","getFilterShader","filter","targetShader","_builtShader","shaderParamSetup","useProgram","VTX_SHADER_BODY","FRAG_SHADER_BODY","_name","getBaseTexture","ceil","texture","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","renderTexture","frameBuffer","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","_renderTexture","_frameBuffer","isPOT","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","setClearColor","output","split","error","viewportWidth","viewportHeight","shaderName","customVTX","customFRAG","targetFrag","targetVtx","vertexShader","_createShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","_type","getProgramParameter","LINK_STATUS","getProgramInfoLog","vertexPositionAttribute","getAttribLocation","enableVertexAttribArray","uvPositionAttribute","samplerUniform","getUniformLocation","uniform1i","uprightUniform","uniform1f","textureIndexAttribute","alphaAttribute","samplers","samplerData","uniform1iv","pMatrixUniform","replace","insert","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","groupCount","groupSize","vertexPositionBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","vertices","bufferData","DYNAMIC_DRAW","itemSize","numItems","uvPositionBuffer","uvs","textureIndexBuffer","indices","alphaBuffer","alphas","tex","_loadTextureImage","_isCanvas","storeID","_imageData","_insertTextureInBatch","_updateTextureImageData","isNPOT","activeTexture","TEXTURE0","_activeIndex","errString","_invalid","_w","_h","MAX_TEXTURE_SIZE","found","look","batchReason","_drawBuffers","batchCardCount","deleteFramebuffer","deleteTexture","_backupBatchTextures","_backupTextures","sceneGraph","_appendToBatchGroup","shaderBackup","blackListBackup","lastTextureSlot","wBackup","hBackup","container","_drawFilters","_drawWidth","_drawHeight","filterCount","flipY","_drawCover","_multiPass","concatMtx","concatAlpha","_glMtx","cMtx","subL","subT","subR","subB","iMtx","texIndex","useCache","currentFrame","texI","sourceRect","_uvRect","_filterOffX","_filterOffY","offV1","offV2","vertexAttribPointer","FLOAT","bufferSubData","uniformMatrix4fv","FALSE","drawArrays","TRIANGLES","Bitmap","imageOrUri","node","cloneNode","Sprite","frameOrAnimation","currentAnimation","currentAnimationFrame","_animation","_currentFrame","_skipAdvance","_normalizeFrame","stop","_goto","advance","fps","DisplayObject__cloneProps","frameDelta","animFrame","_dispatchAnimationEnd","changed","Shape","Text","text","font","textAlign","textBaseline","maxWidth","outline","lineHeight","_workingContext","H_OFFSETS","center","V_OFFSETS","hanging","middle","alphabetic","ideographic","col","_drawText","_prepContext","getMeasuredWidth","_getMeasuredWidth","getMeasuredLineHeight","getMeasuredHeight","getMetrics","lines","vOffset","substr","paint","maxW","hardLines","String","measureText","words","j","jl","wordW","_drawTextLine","strokeText","fillText","BitmapText","letterSpacing","spaceWidth","_oldProps","_oldStage","_drawAction","maxPoolSize","_spritePool","Container_draw","_updateText","Container_getBounds","Container__cloneProps","_getFrameIndex","character","toUpperCase","toLowerCase","_getFrame","_getLineHeight","_getSpaceWidth","change","spaceW","lineH","pool","childIndex","numKids","sprite","hasSpace","MovieClip","inited","startPosition","loop","labels","INDEPENDENT","autoReset","frameBounds","useTicks","timeline","Timeline","_synchOffset","_rawPosition","_bound_resolveState","_resolveState","_t","_managed","SINGLE_FRAME","SYNCHED","MovieClipPlugin","install","_getLabels","getLabels","_getCurrentLabel","currentLabel","getCurrentLabel","_getDuration","duration","getDuration","totalFrames","positionOrLabel","independent","_framerate","_updateTimeline","Container__tick","pos","resolve","rawPosition","jump","synced","tl","setPosition","_renderFirstFrame","position","tweens","tween","passive","_stepPosition","_addManagedChild","_setState","state","_off","Container__getBounds","priority","ID","Tween","_installPlugin","prop","_addPlugin","step","ratio","prev","SpriteSheetUtils","_workingCanvas","extractFrame","addFlippedFrames","mergeAlpha","_flip","v","il","__tmp","fl","sfx","names","al","SpriteSheetBuilder","maxHeight","padding","timeSlice","progress","_nextFrameIndex","_index","_timerID","_scale","ERR_DIMENSIONS","ERR_RUNNING","addFrame","source","setupFunction","setupData","nominalBounds","funct","addAnimation","addMovieClip","labelFunction","rects","baseFrameIndex","_setupMovieClipFrame","_labels","lbls","build","_startBuild","_drawNext","_endBuild","buildAsync","_run","stopAsync","dataFrames","_fillRow","_getSize","ae","size","maxH","sc","rx","floor","ry","rh","rw","round","ts","DOMElement","htmlElement","transformOrigin","WebkitTransformOrigin","msTransformOrigin","MozTransformOrigin","OTransformOrigin","_handleDrawEnd","visibility","oldProps","oldMtx","WebkitTransform","OTransform","msTransform","MozTransform","opacity","Filter","usesContext","applyFilter","targetCtx","targetX","targetY","imageData","_applyFilter","_cacheDataURLID","_cacheDataURL","getFilterBounds","test","_options","filterBounds","surface","_updateSurface","_drawToCache","_webGLCache","useGL","stageGL","webGL","_applyFilters","BlurFilter","blurX","blurY","quality","Filter_constructor","_blurX","_blurXTable","_lastBlurX","_blurY","_blurYTable","_lastBlurY","_quality","_lastQuality","FRAG_SHADER_TEMPLATE","setQuality","getBlurX","getBlurY","setBlurX","setBlurY","getQuality","_getShader","xChange","yChange","qChange","_getTable","_updateShader","_compiledShader","_setShader","spread","EDGE","E","factor","reduce","map","currentValue","toFixed","uniform1fv","uniform2f","MUL_TABLE","SHG_TABLE","q","radiusX","radiusY","iterations","px","yp","yi","yw","pr","pg","pb","pa","divx","divy","w1","h1","rxp1","ryp1","ssx","sx","ssy","sy","si","stx","mty","sty","ms","AlphaMapFilter","alphaMap","_alphaMap","_mapData","_mapTexture","TEXTURE1","_prepAlphaMap","HTMLCanvasElement","imgData","AlphaMaskFilter","ColorFilter","redMultiplier","greenMultiplier","blueMultiplier","alphaMultiplier","redOffset","greenOffset","blueOffset","alphaOffset","uniform4f","ColorMatrix","brightness","contrast","setColor","DELTA_INDEX","IDENTITY_MATRIX","LENGTH","adjustColor","adjustHue","adjustContrast","adjustBrightness","adjustSaturation","_cleanValue","_multiplyMatrix","lumR","lumG","lumB","cosVal","sinVal","concat","_fixMatrix","toArray","val","limit","ColorMatrixFilter","mat","colorMatrix","m0","m1","m2","m3","m4","m5","m6","m7","m8","m9","m10","m11","m12","m13","m14","m15","m16","m17","m18","m19","Touch","isSupported","navigator","singleTouch","allowDefault","__touch","pointers","multitouch","_IOS_enable","_IE_enable","_IOS_disable","_IE_disable","_IOS_handleEvent","touches","changedTouches","touch","identifier","_handleStart","_handleMove","_handleEnd","_IE_handleEvent","msTouchAction","touchAction","activeIDs","ids","srcElement","EaselJS","version","buildDate"],"mappings":"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","sourcesContent":["/*!\n* EaselJS\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2010 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n\n//##############################################################################\n// extend.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n/**\n * @class Utility Methods\n */\n\n/**\n * Sets up the prototype chain and constructor property for a new class.\n *\n * This should be called right after creating the class constructor.\n *\n * \tfunction MySubClass() {}\n * \tcreatejs.extend(MySubClass, MySuperClass);\n * \tMySubClass.prototype.doSomething = function() { }\n *\n * \tvar foo = new MySubClass();\n * \tconsole.log(foo instanceof MySuperClass); // true\n * \tconsole.log(foo.prototype.constructor === MySubClass); // true\n *\n * @method extend\n * @param {Function} subclass The subclass.\n * @param {Function} superclass The superclass to extend.\n * @return {Function} Returns the subclass's new prototype.\n */\ncreatejs.extend = function(subclass, superclass) {\n\t\"use strict\";\n\n\tfunction o() { this.constructor = subclass; }\n\to.prototype = superclass.prototype;\n\treturn (subclass.prototype = new o());\n};\n\n//##############################################################################\n// promote.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n/**\n * @class Utility Methods\n */\n\n/**\n * Promotes any methods on the super class that were overridden, by creating an alias in the format `prefix_methodName`.\n * It is recommended to use the super class's name as the prefix.\n * An alias to the super class's constructor is always added in the format `prefix_constructor`.\n * This allows the subclass to call super class methods without using `function.call`, providing better performance.\n *\n * For example, if `MySubClass` extends `MySuperClass`, and both define a `draw` method, then calling `promote(MySubClass, \"MySuperClass\")`\n * would add a `MySuperClass_constructor` method to MySubClass and promote the `draw` method on `MySuperClass` to the\n * prototype of `MySubClass` as `MySuperClass_draw`.\n *\n * This should be called after the class's prototype is fully defined.\n *\n * \tfunction ClassA(name) {\n * \t\tthis.name = name;\n * \t}\n * \tClassA.prototype.greet = function() {\n * \t\treturn \"Hello \"+this.name;\n * \t}\n *\n * \tfunction ClassB(name, punctuation) {\n * \t\tthis.ClassA_constructor(name);\n * \t\tthis.punctuation = punctuation;\n * \t}\n * \tcreatejs.extend(ClassB, ClassA);\n * \tClassB.prototype.greet = function() {\n * \t\treturn this.ClassA_greet()+this.punctuation;\n * \t}\n * \tcreatejs.promote(ClassB, \"ClassA\");\n *\n * \tvar foo = new ClassB(\"World\", \"!?!\");\n * \tconsole.log(foo.greet()); // Hello World!?!\n *\n * @method promote\n * @param {Function} subclass The class to promote super class methods on.\n * @param {String} prefix The prefix to add to the promoted method names. Usually the name of the superclass.\n * @return {Function} Returns the subclass.\n */\ncreatejs.promote = function(subclass, prefix) {\n\t\"use strict\";\n\n\tvar subP = subclass.prototype, supP = (Object.getPrototypeOf&&Object.getPrototypeOf(subP))||subP.__proto__;\n\tif (supP) {\n\t\tsubP[(prefix+=\"_\") + \"constructor\"] = supP.constructor; // constructor is not always innumerable\n\t\tfor (var n in supP) {\n\t\t\tif (subP.hasOwnProperty(n) && (typeof supP[n] == \"function\")) { subP[prefix + n] = supP[n]; }\n\t\t}\n\t}\n\treturn subclass;\n};\n\n//##############################################################################\n// indexOf.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n/**\n * @class Utility Methods\n */\n\n/**\n * Finds the first occurrence of a specified value searchElement in the passed in array, and returns the index of\n * that value.  Returns -1 if value is not found.\n *\n *      var i = createjs.indexOf(myArray, myElementToFind);\n *\n * @method indexOf\n * @param {Array} array Array to search for searchElement\n * @param searchElement Element to find in array.\n * @return {Number} The first index of searchElement in array.\n */\ncreatejs.indexOf = function (array, searchElement){\n\t\"use strict\";\n\n\tfor (var i = 0,l=array.length; i < l; i++) {\n\t\tif (searchElement === array[i]) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\n\n//##############################################################################\n// UID.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Global utility for generating sequential unique ID numbers. The UID class uses a static interface (ex. <code>UID.get()</code>)\n\t * and should not be instantiated.\n\t * @class UID\n\t * @static\n\t **/\n\tfunction UID() {\n\t\tthrow \"UID cannot be instantiated\";\n\t}\n\n\n// private static properties:\n\t/**\n\t * @property _nextID\n\t * @type Number\n\t * @protected\n\t **/\n\tUID._nextID = 0;\n\n\n// public static methods:\n\t/**\n\t * Returns the next unique id.\n\t * @method get\n\t * @return {Number} The next unique id\n\t * @static\n\t **/\n\tUID.get = function() {\n\t\treturn UID._nextID++;\n\t};\n\n\n\tcreatejs.UID = UID;\n}());\n\n//##############################################################################\n// deprecate.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n/**\n * @class Utility Methods\n */\n\n/**\n * Wraps deprecated methods so they still be used, but throw warnings to developers.\n *\n *\tobj.deprecatedMethod = createjs.deprecate(\"Old Method Name\", obj._fallbackMethod);\n *\n * The recommended approach for deprecated properties is:\n *\n *\ttry {\n *\t\tObj\tect.defineProperties(object, {\n *\t\t\treadyOnlyProp: { get: createjs.deprecate(\"readOnlyProp\", function() { return this.alternateProp; }) },\n *\t\t\treadWriteProp: {\n *\t\t\t\tget: createjs.deprecate(\"readOnlyProp\", function() { return this.alternateProp; }),\n *\t\t\t\tset: createjs.deprecate(\"readOnlyProp\", function(val) { this.alternateProp = val; })\n *\t\t});\n *\t} catch (e) {}\n *\n * @method deprecate\n * @param {Function} [fallbackMethod=null] A method to call when the deprecated method is used. See the example for how\n * @param {String} [name=null] The name of the method or property to display in the console warning.\n * to deprecate properties.\n * @return {Function} If a fallbackMethod is supplied, returns a closure that will call the fallback method after\n * logging the warning in the console.\n */\ncreatejs.deprecate = function(fallbackMethod, name) {\n\t\"use strict\";\n\treturn function() {\n\t\tvar msg = \"Deprecated property or method '\"+name+\"'. See docs for info.\";\n\t\tconsole && (console.warn ? console.warn(msg) : console.log(msg));\n\t\treturn fallbackMethod && fallbackMethod.apply(this, arguments);\n\t}\n};\n\n//##############################################################################\n// Event.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n// constructor:\n\t/**\n\t * Contains properties and methods shared by all events for use with\n\t * {{#crossLink \"EventDispatcher\"}}{{/crossLink}}.\n\t * \n\t * Note that Event objects are often reused, so you should never\n\t * rely on an event object's state outside of the call stack it was received in.\n\t * @class Event\n\t * @param {String} type The event type.\n\t * @param {Boolean} bubbles Indicates whether the event will bubble through the display list.\n\t * @param {Boolean} cancelable Indicates whether the default behaviour of this event can be cancelled.\n\t * @constructor\n\t **/\n\tfunction Event(type, bubbles, cancelable) {\n\t\t\n\t\n\t// public properties:\n\t\t/**\n\t\t * The type of event.\n\t\t * @property type\n\t\t * @type String\n\t\t **/\n\t\tthis.type = type;\n\t\n\t\t/**\n\t\t * The object that generated an event.\n\t\t * @property target\n\t\t * @type Object\n\t\t * @default null\n\t\t * @readonly\n\t\t*/\n\t\tthis.target = null;\n\t\n\t\t/**\n\t\t * The current target that a bubbling event is being dispatched from. For non-bubbling events, this will\n\t\t * always be the same as target. For example, if childObj.parent = parentObj, and a bubbling event\n\t\t * is generated from childObj, then a listener on parentObj would receive the event with\n\t\t * target=childObj (the original target) and currentTarget=parentObj (where the listener was added).\n\t\t * @property currentTarget\n\t\t * @type Object\n\t\t * @default null\n\t\t * @readonly\n\t\t*/\n\t\tthis.currentTarget = null;\n\t\n\t\t/**\n\t\t * For bubbling events, this indicates the current event phase:<OL>\n\t\t * \t<LI> capture phase: starting from the top parent to the target</LI>\n\t\t * \t<LI> at target phase: currently being dispatched from the target</LI>\n\t\t * \t<LI> bubbling phase: from the target to the top parent</LI>\n\t\t * </OL>\n\t\t * @property eventPhase\n\t\t * @type Number\n\t\t * @default 0\n\t\t * @readonly\n\t\t*/\n\t\tthis.eventPhase = 0;\n\t\n\t\t/**\n\t\t * Indicates whether the event will bubble through the display list.\n\t\t * @property bubbles\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n\t\tthis.bubbles = !!bubbles;\n\t\n\t\t/**\n\t\t * Indicates whether the default behaviour of this event can be cancelled via\n\t\t * {{#crossLink \"Event/preventDefault\"}}{{/crossLink}}. This is set via the Event constructor.\n\t\t * @property cancelable\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n\t\tthis.cancelable = !!cancelable;\n\t\n\t\t/**\n\t\t * The epoch time at which this event was created.\n\t\t * @property timeStamp\n\t\t * @type Number\n\t\t * @default 0\n\t\t * @readonly\n\t\t*/\n\t\tthis.timeStamp = (new Date()).getTime();\n\t\n\t\t/**\n\t\t * Indicates if {{#crossLink \"Event/preventDefault\"}}{{/crossLink}} has been called\n\t\t * on this event.\n\t\t * @property defaultPrevented\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n\t\tthis.defaultPrevented = false;\n\t\n\t\t/**\n\t\t * Indicates if {{#crossLink \"Event/stopPropagation\"}}{{/crossLink}} or\n\t\t * {{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called on this event.\n\t\t * @property propagationStopped\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n\t\tthis.propagationStopped = false;\n\t\n\t\t/**\n\t\t * Indicates if {{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called\n\t\t * on this event.\n\t\t * @property immediatePropagationStopped\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n\t\tthis.immediatePropagationStopped = false;\n\t\t\n\t\t/**\n\t\t * Indicates if {{#crossLink \"Event/remove\"}}{{/crossLink}} has been called on this event.\n\t\t * @property removed\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n\t\tthis.removed = false;\n\t}\n\tvar p = Event.prototype;\n\n// public methods:\n\t/**\n\t * Sets {{#crossLink \"Event/defaultPrevented\"}}{{/crossLink}} to true if the event is cancelable.\n\t * Mirrors the DOM level 2 event standard. In general, cancelable events that have `preventDefault()` called will\n\t * cancel the default behaviour associated with the event.\n\t * @method preventDefault\n\t **/\n\tp.preventDefault = function() {\n\t\tthis.defaultPrevented = this.cancelable&&true;\n\t};\n\n\t/**\n\t * Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} to true.\n\t * Mirrors the DOM event standard.\n\t * @method stopPropagation\n\t **/\n\tp.stopPropagation = function() {\n\t\tthis.propagationStopped = true;\n\t};\n\n\t/**\n\t * Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} and\n\t * {{#crossLink \"Event/immediatePropagationStopped\"}}{{/crossLink}} to true.\n\t * Mirrors the DOM event standard.\n\t * @method stopImmediatePropagation\n\t **/\n\tp.stopImmediatePropagation = function() {\n\t\tthis.immediatePropagationStopped = this.propagationStopped = true;\n\t};\n\t\n\t/**\n\t * Causes the active listener to be removed via removeEventListener();\n\t * \n\t * \t\tmyBtn.addEventListener(\"click\", function(evt) {\n\t * \t\t\t// do stuff...\n\t * \t\t\tevt.remove(); // removes this listener.\n\t * \t\t});\n\t * \n\t * @method remove\n\t **/\n\tp.remove = function() {\n\t\tthis.removed = true;\n\t};\n\t\n\t/**\n\t * Returns a clone of the Event instance.\n\t * @method clone\n\t * @return {Event} a clone of the Event instance.\n\t **/\n\tp.clone = function() {\n\t\treturn new Event(this.type, this.bubbles, this.cancelable);\n\t};\n\t\n\t/**\n\t * Provides a chainable shortcut method for setting a number of properties on the instance.\n\t *\n\t * @method set\n\t * @param {Object} props A generic object containing properties to copy to the instance.\n\t * @return {Event} Returns the instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t*/\n\tp.set = function(props) {\n\t\tfor (var n in props) { this[n] = props[n]; }\n\t\treturn this;\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[Event (type=\"+this.type+\")]\";\n\t};\n\n\tcreatejs.Event = Event;\n}());\n\n//##############################################################################\n// EventDispatcher.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * EventDispatcher provides methods for managing queues of event listeners and dispatching events.\n\t *\n\t * You can either extend EventDispatcher or mix its methods into an existing prototype or instance by using the\n\t * EventDispatcher {{#crossLink \"EventDispatcher/initialize\"}}{{/crossLink}} method.\n\t * \n\t * Together with the CreateJS Event class, EventDispatcher provides an extended event model that is based on the\n\t * DOM Level 2 event model, including addEventListener, removeEventListener, and dispatchEvent. It supports\n\t * bubbling / capture, preventDefault, stopPropagation, stopImmediatePropagation, and handleEvent.\n\t * \n\t * EventDispatcher also exposes a {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}} method, which makes it easier\n\t * to create scoped listeners, listeners that only run once, and listeners with associated arbitrary data. The \n\t * {{#crossLink \"EventDispatcher/off\"}}{{/crossLink}} method is merely an alias to\n\t * {{#crossLink \"EventDispatcher/removeEventListener\"}}{{/crossLink}}.\n\t * \n\t * Another addition to the DOM Level 2 model is the {{#crossLink \"EventDispatcher/removeAllEventListeners\"}}{{/crossLink}}\n\t * method, which can be used to listeners for all events, or listeners for a specific event. The Event object also \n\t * includes a {{#crossLink \"Event/remove\"}}{{/crossLink}} method which removes the active listener.\n\t *\n\t * <h4>Example</h4>\n\t * Add EventDispatcher capabilities to the \"MyClass\" class.\n\t *\n\t *      EventDispatcher.initialize(MyClass.prototype);\n\t *\n\t * Add an event (see {{#crossLink \"EventDispatcher/addEventListener\"}}{{/crossLink}}).\n\t *\n\t *      instance.addEventListener(\"eventName\", handlerMethod);\n\t *      function handlerMethod(event) {\n\t *          console.log(event.target + \" Was Clicked\");\n\t *      }\n\t *\n\t * <b>Maintaining proper scope</b><br />\n\t * Scope (ie. \"this\") can be be a challenge with events. Using the {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}}\n\t * method to subscribe to events simplifies this.\n\t *\n\t *      instance.addEventListener(\"click\", function(event) {\n\t *          console.log(instance == this); // false, scope is ambiguous.\n\t *      });\n\t *      \n\t *      instance.on(\"click\", function(event) {\n\t *          console.log(instance == this); // true, \"on\" uses dispatcher scope by default.\n\t *      });\n\t * \n\t * If you want to use addEventListener instead, you may want to use function.bind() or a similar proxy to manage\n\t * scope.\n\t *\n\t * <b>Browser support</b>\n\t * The event model in CreateJS can be used separately from the suite in any project, however the inheritance model\n\t * requires modern browsers (IE9+).\n\t *      \n\t *\n\t * @class EventDispatcher\n\t * @constructor\n\t **/\n\tfunction EventDispatcher() {\n\t\n\t\n\t// private properties:\n\t\t/**\n\t\t * @protected\n\t\t * @property _listeners\n\t\t * @type Object\n\t\t **/\n\t\tthis._listeners = null;\n\t\t\n\t\t/**\n\t\t * @protected\n\t\t * @property _captureListeners\n\t\t * @type Object\n\t\t **/\n\t\tthis._captureListeners = null;\n\t}\n\tvar p = EventDispatcher.prototype;\n\n// static public methods:\n\t/**\n\t * Static initializer to mix EventDispatcher methods into a target object or prototype.\n\t * \n\t * \t\tEventDispatcher.initialize(MyClass.prototype); // add to the prototype of the class\n\t * \t\tEventDispatcher.initialize(myObject); // add to a specific instance\n\t * \n\t * @method initialize\n\t * @static\n\t * @param {Object} target The target object to inject EventDispatcher methods into. This can be an instance or a\n\t * prototype.\n\t **/\n\tEventDispatcher.initialize = function(target) {\n\t\ttarget.addEventListener = p.addEventListener;\n\t\ttarget.on = p.on;\n\t\ttarget.removeEventListener = target.off =  p.removeEventListener;\n\t\ttarget.removeAllEventListeners = p.removeAllEventListeners;\n\t\ttarget.hasEventListener = p.hasEventListener;\n\t\ttarget.dispatchEvent = p.dispatchEvent;\n\t\ttarget._dispatchEvent = p._dispatchEvent;\n\t\ttarget.willTrigger = p.willTrigger;\n\t};\n\t\n\n// public methods:\n\t/**\n\t * Adds the specified event listener. Note that adding multiple listeners to the same function will result in\n\t * multiple callbacks getting fired.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      displayObject.addEventListener(\"click\", handleClick);\n\t *      function handleClick(event) {\n\t *         // Click happened.\n\t *      }\n\t *\n\t * @method addEventListener\n\t * @param {String} type The string type of the event.\n\t * @param {Function | Object} listener An object with a handleEvent method, or a function that will be called when\n\t * the event is dispatched.\n\t * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t * @return {Function | Object} Returns the listener for chaining or assignment.\n\t **/\n\tp.addEventListener = function(type, listener, useCapture) {\n\t\tvar listeners;\n\t\tif (useCapture) {\n\t\t\tlisteners = this._captureListeners = this._captureListeners||{};\n\t\t} else {\n\t\t\tlisteners = this._listeners = this._listeners||{};\n\t\t}\n\t\tvar arr = listeners[type];\n\t\tif (arr) { this.removeEventListener(type, listener, useCapture); }\n\t\tarr = listeners[type]; // remove may have deleted the array\n\t\tif (!arr) { listeners[type] = [listener];  }\n\t\telse { arr.push(listener); }\n\t\treturn listener;\n\t};\n\t\n\t/**\n\t * A shortcut method for using addEventListener that makes it easier to specify an execution scope, have a listener\n\t * only run once, associate arbitrary data with the listener, and remove the listener.\n\t * \n\t * This method works by creating an anonymous wrapper function and subscribing it with addEventListener.\n\t * The wrapper function is returned for use with `removeEventListener` (or `off`).\n\t * \n\t * <b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener, or use\n\t * {{#crossLink \"Event/remove\"}}{{/crossLink}}. Likewise, each time you call `on` a NEW wrapper function is subscribed, so multiple calls\n\t * to `on` with the same params will create multiple listeners.\n\t * \n\t * <h4>Example</h4>\n\t * \n\t * \t\tvar listener = myBtn.on(\"click\", handleClick, null, false, {count:3});\n\t * \t\tfunction handleClick(evt, data) {\n\t * \t\t\tdata.count -= 1;\n\t * \t\t\tconsole.log(this == myBtn); // true - scope defaults to the dispatcher\n\t * \t\t\tif (data.count == 0) {\n\t * \t\t\t\talert(\"clicked 3 times!\");\n\t * \t\t\t\tmyBtn.off(\"click\", listener);\n\t * \t\t\t\t// alternately: evt.remove();\n\t * \t\t\t}\n\t * \t\t}\n\t * \n\t * @method on\n\t * @param {String} type The string type of the event.\n\t * @param {Function | Object} listener An object with a handleEvent method, or a function that will be called when\n\t * the event is dispatched.\n\t * @param {Object} [scope] The scope to execute the listener in. Defaults to the dispatcher/currentTarget for function listeners, and to the listener itself for object listeners (ie. using handleEvent).\n\t * @param {Boolean} [once=false] If true, the listener will remove itself after the first time it is triggered.\n\t * @param {*} [data] Arbitrary data that will be included as the second parameter when the listener is called.\n\t * @param {Boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t * @return {Function} Returns the anonymous function that was created and assigned as the listener. This is needed to remove the listener later using .removeEventListener.\n\t **/\n\tp.on = function(type, listener, scope, once, data, useCapture) {\n\t\tif (listener.handleEvent) {\n\t\t\tscope = scope||listener;\n\t\t\tlistener = listener.handleEvent;\n\t\t}\n\t\tscope = scope||this;\n\t\treturn this.addEventListener(type, function(evt) {\n\t\t\t\tlistener.call(scope, evt, data);\n\t\t\t\tonce&&evt.remove();\n\t\t\t}, useCapture);\n\t};\n\n\t/**\n\t * Removes the specified event listener.\n\t *\n\t * <b>Important Note:</b> that you must pass the exact function reference used when the event was added. If a proxy\n\t * function, or function closure is used as the callback, the proxy/closure reference must be used - a new proxy or\n\t * closure will not work.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      displayObject.removeEventListener(\"click\", handleClick);\n\t *\n\t * @method removeEventListener\n\t * @param {String} type The string type of the event.\n\t * @param {Function | Object} listener The listener function or object.\n\t * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t **/\n\tp.removeEventListener = function(type, listener, useCapture) {\n\t\tvar listeners = useCapture ? this._captureListeners : this._listeners;\n\t\tif (!listeners) { return; }\n\t\tvar arr = listeners[type];\n\t\tif (!arr) { return; }\n\t\tfor (var i=0,l=arr.length; i<l; i++) {\n\t\t\tif (arr[i] == listener) {\n\t\t\t\tif (l==1) { delete(listeners[type]); } // allows for faster checks.\n\t\t\t\telse { arr.splice(i,1); }\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t * A shortcut to the removeEventListener method, with the same parameters and return value. This is a companion to the\n\t * .on method.\n\t * \n\t * <b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener. See \n\t * {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}} for an example.\n\t *\n\t * @method off\n\t * @param {String} type The string type of the event.\n\t * @param {Function | Object} listener The listener function or object.\n\t * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t **/\n\tp.off = p.removeEventListener;\n\n\t/**\n\t * Removes all listeners for the specified type, or all listeners of all types.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      // Remove all listeners\n\t *      displayObject.removeAllEventListeners();\n\t *\n\t *      // Remove all click listeners\n\t *      displayObject.removeAllEventListeners(\"click\");\n\t *\n\t * @method removeAllEventListeners\n\t * @param {String} [type] The string type of the event. If omitted, all listeners for all types will be removed.\n\t **/\n\tp.removeAllEventListeners = function(type) {\n\t\tif (!type) { this._listeners = this._captureListeners = null; }\n\t\telse {\n\t\t\tif (this._listeners) { delete(this._listeners[type]); }\n\t\t\tif (this._captureListeners) { delete(this._captureListeners[type]); }\n\t\t}\n\t};\n\n\t/**\n\t * Dispatches the specified event to all listeners.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      // Use a string event\n\t *      this.dispatchEvent(\"complete\");\n\t *\n\t *      // Use an Event instance\n\t *      var event = new createjs.Event(\"progress\");\n\t *      this.dispatchEvent(event);\n\t *\n\t * @method dispatchEvent\n\t * @param {Object | String | Event} eventObj An object with a \"type\" property, or a string type.\n\t * While a generic object will work, it is recommended to use a CreateJS Event instance. If a string is used,\n\t * dispatchEvent will construct an Event instance if necessary with the specified type. This latter approach can\n\t * be used to avoid event object instantiation for non-bubbling events that may not have any listeners.\n\t * @param {Boolean} [bubbles] Specifies the `bubbles` value when a string was passed to eventObj.\n\t * @param {Boolean} [cancelable] Specifies the `cancelable` value when a string was passed to eventObj.\n\t * @return {Boolean} Returns false if `preventDefault()` was called on a cancelable event, true otherwise.\n\t **/\n\tp.dispatchEvent = function(eventObj, bubbles, cancelable) {\n\t\tif (typeof eventObj == \"string\") {\n\t\t\t// skip everything if there's no listeners and it doesn't bubble:\n\t\t\tvar listeners = this._listeners;\n\t\t\tif (!bubbles && (!listeners || !listeners[eventObj])) { return true; }\n\t\t\teventObj = new createjs.Event(eventObj, bubbles, cancelable);\n\t\t} else if (eventObj.target && eventObj.clone) {\n\t\t\t// redispatching an active event object, so clone it:\n\t\t\teventObj = eventObj.clone();\n\t\t}\n\t\t\n\t\t// TODO: it would be nice to eliminate this. Maybe in favour of evtObj instanceof Event? Or !!evtObj.createEvent\n\t\ttry { eventObj.target = this; } catch (e) {} // try/catch allows redispatching of native events\n\n\t\tif (!eventObj.bubbles || !this.parent) {\n\t\t\tthis._dispatchEvent(eventObj, 2);\n\t\t} else {\n\t\t\tvar top=this, list=[top];\n\t\t\twhile (top.parent) { list.push(top = top.parent); }\n\t\t\tvar i, l=list.length;\n\n\t\t\t// capture & atTarget\n\t\t\tfor (i=l-1; i>=0 && !eventObj.propagationStopped; i--) {\n\t\t\t\tlist[i]._dispatchEvent(eventObj, 1+(i==0));\n\t\t\t}\n\t\t\t// bubbling\n\t\t\tfor (i=1; i<l && !eventObj.propagationStopped; i++) {\n\t\t\t\tlist[i]._dispatchEvent(eventObj, 3);\n\t\t\t}\n\t\t}\n\t\treturn !eventObj.defaultPrevented;\n\t};\n\n\t/**\n\t * Indicates whether there is at least one listener for the specified event type.\n\t * @method hasEventListener\n\t * @param {String} type The string type of the event.\n\t * @return {Boolean} Returns true if there is at least one listener for the specified event.\n\t **/\n\tp.hasEventListener = function(type) {\n\t\tvar listeners = this._listeners, captureListeners = this._captureListeners;\n\t\treturn !!((listeners && listeners[type]) || (captureListeners && captureListeners[type]));\n\t};\n\t\n\t/**\n\t * Indicates whether there is at least one listener for the specified event type on this object or any of its\n\t * ancestors (parent, parent's parent, etc). A return value of true indicates that if a bubbling event of the\n\t * specified type is dispatched from this object, it will trigger at least one listener.\n\t * \n\t * This is similar to {{#crossLink \"EventDispatcher/hasEventListener\"}}{{/crossLink}}, but it searches the entire\n\t * event flow for a listener, not just this object.\n\t * @method willTrigger\n\t * @param {String} type The string type of the event.\n\t * @return {Boolean} Returns `true` if there is at least one listener for the specified event.\n\t **/\n\tp.willTrigger = function(type) {\n\t\tvar o = this;\n\t\twhile (o) {\n\t\t\tif (o.hasEventListener(type)) { return true; }\n\t\t\to = o.parent;\n\t\t}\n\t\treturn false;\n\t};\n\n\t/**\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[EventDispatcher]\";\n\t};\n\n\n// private methods:\n\t/**\n\t * @method _dispatchEvent\n\t * @param {Object | Event} eventObj\n\t * @param {Object} eventPhase\n\t * @protected\n\t **/\n\tp._dispatchEvent = function(eventObj, eventPhase) {\n\t\tvar l, arr, listeners = (eventPhase <= 2) ? this._captureListeners : this._listeners;\n\t\tif (eventObj && listeners && (arr = listeners[eventObj.type]) && (l=arr.length)) {\n\t\t\ttry { eventObj.currentTarget = this; } catch (e) {}\n\t\t\ttry { eventObj.eventPhase = eventPhase|0; } catch (e) {}\n\t\t\teventObj.removed = false;\n\t\t\t\n\t\t\tarr = arr.slice(); // to avoid issues with items being removed or added during the dispatch\n\t\t\tfor (var i=0; i<l && !eventObj.immediatePropagationStopped; i++) {\n\t\t\t\tvar o = arr[i];\n\t\t\t\tif (o.handleEvent) { o.handleEvent(eventObj); }\n\t\t\t\telse { o(eventObj); }\n\t\t\t\tif (eventObj.removed) {\n\t\t\t\t\tthis.off(eventObj.type, o, eventPhase==1);\n\t\t\t\t\teventObj.removed = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (eventPhase === 2) { this._dispatchEvent(eventObj, 2.1); }\n\t};\n\n\n\tcreatejs.EventDispatcher = EventDispatcher;\n}());\n\n//##############################################################################\n// Ticker.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * The Ticker provides a centralized tick or heartbeat broadcast at a set interval. Listeners can subscribe to the tick\n\t * event to be notified when a set time interval has elapsed.\n\t *\n\t * Note that the interval that the tick event is called is a target interval, and may be broadcast at a slower interval\n\t * when under high CPU load. The Ticker class uses a static interface (ex. `Ticker.framerate = 30;`) and\n\t * can not be instantiated.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      createjs.Ticker.addEventListener(\"tick\", handleTick);\n\t *      function handleTick(event) {\n\t *          // Actions carried out each tick (aka frame)\n\t *          if (!event.paused) {\n\t *              // Actions carried out when the Ticker is not paused.\n\t *          }\n\t *      }\n\t *\n\t * @class Ticker\n\t * @uses EventDispatcher\n\t * @static\n\t **/\n\tfunction Ticker() {\n\t\tthrow \"Ticker cannot be instantiated.\";\n\t}\n\n\n// constants:\n\t/**\n\t * In this mode, Ticker uses the requestAnimationFrame API, but attempts to synch the ticks to target framerate. It\n\t * uses a simple heuristic that compares the time of the RAF return to the target time for the current frame and\n\t * dispatches the tick when the time is within a certain threshold.\n\t *\n\t * This mode has a higher variance for time between frames than {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}},\n\t * but does not require that content be time based as with {{#crossLink \"Ticker/RAF:property\"}}{{/crossLink}} while\n\t * gaining the benefits of that API (screen synch, background throttling).\n\t *\n\t * Variance is usually lowest for framerates that are a divisor of the RAF frequency. This is usually 60, so\n\t * framerates of 10, 12, 15, 20, and 30 work well.\n\t *\n\t * Falls back to {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}} if the requestAnimationFrame API is not\n\t * supported.\n\t * @property RAF_SYNCHED\n\t * @static\n\t * @type {String}\n\t * @default \"synched\"\n\t * @readonly\n\t **/\n\tTicker.RAF_SYNCHED = \"synched\";\n\n\t/**\n\t * In this mode, Ticker passes through the requestAnimationFrame heartbeat, ignoring the target framerate completely.\n\t * Because requestAnimationFrame frequency is not deterministic, any content using this mode should be time based.\n\t * You can leverage {{#crossLink \"Ticker/getTime\"}}{{/crossLink}} and the {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\n\t * event object's \"delta\" properties to make this easier.\n\t *\n\t * Falls back on {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}} if the requestAnimationFrame API is not\n\t * supported.\n\t * @property RAF\n\t * @static\n\t * @type {String}\n\t * @default \"raf\"\n\t * @readonly\n\t **/\n\tTicker.RAF = \"raf\";\n\n\t/**\n\t * In this mode, Ticker uses the setTimeout API. This provides predictable, adaptive frame timing, but does not\n\t * provide the benefits of requestAnimationFrame (screen synch, background throttling).\n\t * @property TIMEOUT\n\t * @static\n\t * @type {String}\n\t * @default \"timeout\"\n\t * @readonly\n\t **/\n\tTicker.TIMEOUT = \"timeout\";\n\n\n// static events:\n\t/**\n\t * Dispatched each tick. The event will be dispatched to each listener even when the Ticker has been paused using\n\t * {{#crossLink \"Ticker/paused:property\"}}{{/crossLink}}.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      createjs.Ticker.addEventListener(\"tick\", handleTick);\n\t *      function handleTick(event) {\n\t *          console.log(\"Paused:\", event.paused, event.delta);\n\t *      }\n\t *\n\t * @event tick\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @param {Boolean} paused Indicates whether the ticker is currently paused.\n\t * @param {Number} delta The time elapsed in ms since the last tick.\n\t * @param {Number} time The total time in ms since Ticker was initialized.\n\t * @param {Number} runTime The total time in ms that Ticker was not paused since it was initialized. For example,\n\t * \tyou could determine the amount of time that the Ticker has been paused since initialization with `time-runTime`.\n\t * @since 0.6.0\n\t */\n\n\n// public static properties:\n\t/**\n\t * Specifies the timing api (setTimeout or requestAnimationFrame) and mode to use. See\n\t * {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}}, {{#crossLink \"Ticker/RAF:property\"}}{{/crossLink}}, and\n\t * {{#crossLink \"Ticker/RAF_SYNCHED:property\"}}{{/crossLink}} for mode details.\n\t * @property timingMode\n\t * @static\n\t * @type {String}\n\t * @default Ticker.TIMEOUT\n\t **/\n\tTicker.timingMode = null;\n\n\t/**\n\t * Specifies a maximum value for the delta property in the tick event object. This is useful when building time\n\t * based animations and systems to prevent issues caused by large time gaps caused by background tabs, system sleep,\n\t * alert dialogs, or other blocking routines. Double the expected frame duration is often an effective value\n\t * (ex. maxDelta=50 when running at 40fps).\n\t * \n\t * This does not impact any other values (ex. time, runTime, etc), so you may experience issues if you enable maxDelta\n\t * when using both delta and other values.\n\t * \n\t * If 0, there is no maximum.\n\t * @property maxDelta\n\t * @static\n\t * @type {number}\n\t * @default 0\n\t */\n\tTicker.maxDelta = 0;\n\t\n\t/**\n\t * When the ticker is paused, all listeners will still receive a tick event, but the <code>paused</code> property\n\t * of the event will be `true`. Also, while paused the `runTime` will not increase. See {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}},\n\t * {{#crossLink \"Ticker/getTime\"}}{{/crossLink}}, and {{#crossLink \"Ticker/getEventTime\"}}{{/crossLink}} for more\n\t * info.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      createjs.Ticker.addEventListener(\"tick\", handleTick);\n\t *      createjs.Ticker.paused = true;\n\t *      function handleTick(event) {\n\t *          console.log(event.paused,\n\t *          \tcreatejs.Ticker.getTime(false),\n\t *          \tcreatejs.Ticker.getTime(true));\n\t *      }\n\t *\n\t * @property paused\n\t * @static\n\t * @type {Boolean}\n\t * @default false\n\t **/\n\tTicker.paused = false;\n\n\n// mix-ins:\n\t// EventDispatcher methods:\n\tTicker.removeEventListener = null;\n\tTicker.removeAllEventListeners = null;\n\tTicker.dispatchEvent = null;\n\tTicker.hasEventListener = null;\n\tTicker._listeners = null;\n\tcreatejs.EventDispatcher.initialize(Ticker); // inject EventDispatcher methods.\n\tTicker._addEventListener = Ticker.addEventListener;\n\tTicker.addEventListener = function() {\n\t\t!Ticker._inited&&Ticker.init();\n\t\treturn Ticker._addEventListener.apply(Ticker, arguments);\n\t};\n\n\n// private static properties:\n\t/**\n\t * @property _inited\n\t * @static\n\t * @type {Boolean}\n\t * @private\n\t **/\n\tTicker._inited = false;\n\n\t/**\n\t * @property _startTime\n\t * @static\n\t * @type {Number}\n\t * @private\n\t **/\n\tTicker._startTime = 0;\n\n\t/**\n\t * @property _pausedTime\n\t * @static\n\t * @type {Number}\n\t * @private\n\t **/\n\tTicker._pausedTime=0;\n\n\t/**\n\t * The number of ticks that have passed\n\t * @property _ticks\n\t * @static\n\t * @type {Number}\n\t * @private\n\t **/\n\tTicker._ticks = 0;\n\n\t/**\n\t * The number of ticks that have passed while Ticker has been paused\n\t * @property _pausedTicks\n\t * @static\n\t * @type {Number}\n\t * @private\n\t **/\n\tTicker._pausedTicks = 0;\n\n\t/**\n\t * @property _interval\n\t * @static\n\t * @type {Number}\n\t * @private\n\t **/\n\tTicker._interval = 50;\n\n\t/**\n\t * @property _lastTime\n\t * @static\n\t * @type {Number}\n\t * @private\n\t **/\n\tTicker._lastTime = 0;\n\n\t/**\n\t * @property _times\n\t * @static\n\t * @type {Array}\n\t * @private\n\t **/\n\tTicker._times = null;\n\n\t/**\n\t * @property _tickTimes\n\t * @static\n\t * @type {Array}\n\t * @private\n\t **/\n\tTicker._tickTimes = null;\n\n\t/**\n\t * Stores the timeout or requestAnimationFrame id.\n\t * @property _timerId\n\t * @static\n\t * @type {Number}\n\t * @private\n\t **/\n\tTicker._timerId = null;\n\t\n\t/**\n\t * True if currently using requestAnimationFrame, false if using setTimeout. This may be different than timingMode\n\t * if that property changed and a tick hasn't fired.\n\t * @property _raf\n\t * @static\n\t * @type {Boolean}\n\t * @private\n\t **/\n\tTicker._raf = true;\n\t\n\n// static getter / setters:\n\t/**\n\t * Use the {{#crossLink \"Ticker/interval:property\"}}{{/crossLink}} property instead.\n\t * @method _setInterval\n\t * @private\n\t * @static\n\t * @param {Number} interval\n\t **/\n\tTicker._setInterval = function(interval) {\n\t\tTicker._interval = interval;\n\t\tif (!Ticker._inited) { return; }\n\t\tTicker._setupTick();\n\t};\n\t// Ticker.setInterval is @deprecated. Remove for 1.1+\n\tTicker.setInterval = createjs.deprecate(Ticker._setInterval, \"Ticker.setInterval\");\n\n\t/**\n\t * Use the {{#crossLink \"Ticker/interval:property\"}}{{/crossLink}} property instead.\n\t * @method _getInterval\n\t * @private\n\t * @static\n\t * @return {Number}\n\t **/\n\tTicker._getInterval = function() {\n\t\treturn Ticker._interval;\n\t};\n\t// Ticker.getInterval is @deprecated. Remove for 1.1+\n\tTicker.getInterval = createjs.deprecate(Ticker._getInterval, \"Ticker.getInterval\");\n\n\t/**\n\t * Use the {{#crossLink \"Ticker/framerate:property\"}}{{/crossLink}} property instead.\n\t * @method _setFPS\n\t * @private\n\t * @static\n\t * @param {Number} value\n\t **/\n\tTicker._setFPS = function(value) {\n\t\tTicker._setInterval(1000/value);\n\t};\n\t// Ticker.setFPS is @deprecated. Remove for 1.1+\n\tTicker.setFPS = createjs.deprecate(Ticker._setFPS, \"Ticker.setFPS\");\n\n\t/**\n\t * Use the {{#crossLink \"Ticker/framerate:property\"}}{{/crossLink}} property instead.\n\t * @method _getFPS\n\t * @static\n\t * @private\n\t * @return {Number}\n\t **/\n\tTicker._getFPS = function() {\n\t\treturn 1000/Ticker._interval;\n\t};\n\t// Ticker.getFPS is @deprecated. Remove for 1.1+\n\tTicker.getFPS = createjs.deprecate(Ticker._getFPS, \"Ticker.getFPS\");\n\n\t/**\n\t * Indicates the target time (in milliseconds) between ticks. Default is 50 (20 FPS).\n\t * Note that actual time between ticks may be more than specified depending on CPU load.\n\t * This property is ignored if the ticker is using the `RAF` timing mode.\n\t * @property interval\n\t * @static\n\t * @type {Number}\n\t **/\n\t \n\t/**\n\t * Indicates the target frame rate in frames per second (FPS). Effectively just a shortcut to `interval`, where\n\t * `framerate == 1000/interval`.\n\t * @property framerate\n\t * @static\n\t * @type {Number}\n\t **/\n\ttry {\n\t\tObject.defineProperties(Ticker, {\n\t\t\tinterval: { get: Ticker._getInterval, set: Ticker._setInterval },\n\t\t\tframerate: { get: Ticker._getFPS, set: Ticker._setFPS }\n\t\t});\n\t} catch (e) { console.log(e); }\n\n\n// public static methods:\n\t/**\n\t * Starts the tick. This is called automatically when the first listener is added.\n\t * @method init\n\t * @static\n\t **/\n\tTicker.init = function() {\n\t\tif (Ticker._inited) { return; }\n\t\tTicker._inited = true;\n\t\tTicker._times = [];\n\t\tTicker._tickTimes = [];\n\t\tTicker._startTime = Ticker._getTime();\n\t\tTicker._times.push(Ticker._lastTime = 0);\n\t\tTicker.interval = Ticker._interval;\n\t};\n\t\n\t/**\n\t * Stops the Ticker and removes all listeners. Use init() to restart the Ticker.\n\t * @method reset\n\t * @static\n\t **/\n\tTicker.reset = function() {\n\t\tif (Ticker._raf) {\n\t\t\tvar f = window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || window.oCancelAnimationFrame || window.msCancelAnimationFrame;\n\t\t\tf&&f(Ticker._timerId);\n\t\t} else {\n\t\t\tclearTimeout(Ticker._timerId);\n\t\t}\n\t\tTicker.removeAllEventListeners(\"tick\");\n\t\tTicker._timerId = Ticker._times = Ticker._tickTimes = null;\n\t\tTicker._startTime = Ticker._lastTime = Ticker._ticks = Ticker._pausedTime = 0;\n\t\tTicker._inited = false;\n\t};\n\n\t/**\n\t * Returns the average time spent within a tick. This can vary significantly from the value provided by getMeasuredFPS\n\t * because it only measures the time spent within the tick execution stack. \n\t * \n\t * Example 1: With a target FPS of 20, getMeasuredFPS() returns 20fps, which indicates an average of 50ms between \n\t * the end of one tick and the end of the next. However, getMeasuredTickTime() returns 15ms. This indicates that \n\t * there may be up to 35ms of \"idle\" time between the end of one tick and the start of the next.\n\t *\n\t * Example 2: With a target FPS of 30, {{#crossLink \"Ticker/framerate:property\"}}{{/crossLink}} returns 10fps, which\n\t * indicates an average of 100ms between the end of one tick and the end of the next. However, {{#crossLink \"Ticker/getMeasuredTickTime\"}}{{/crossLink}}\n\t * returns 20ms. This would indicate that something other than the tick is using ~80ms (another script, DOM\n\t * rendering, etc).\n\t * @method getMeasuredTickTime\n\t * @static\n\t * @param {Number} [ticks] The number of previous ticks over which to measure the average time spent in a tick.\n\t * Defaults to the number of ticks per second. To get only the last tick's time, pass in 1.\n\t * @return {Number} The average time spent in a tick in milliseconds.\n\t **/\n\tTicker.getMeasuredTickTime = function(ticks) {\n\t\tvar ttl=0, times=Ticker._tickTimes;\n\t\tif (!times || times.length < 1) { return -1; }\n\n\t\t// by default, calculate average for the past ~1 second:\n\t\tticks = Math.min(times.length, ticks||(Ticker._getFPS()|0));\n\t\tfor (var i=0; i<ticks; i++) { ttl += times[i]; }\n\t\treturn ttl/ticks;\n\t};\n\n\t/**\n\t * Returns the actual frames / ticks per second.\n\t * @method getMeasuredFPS\n\t * @static\n\t * @param {Number} [ticks] The number of previous ticks over which to measure the actual frames / ticks per second.\n\t * Defaults to the number of ticks per second.\n\t * @return {Number} The actual frames / ticks per second. Depending on performance, this may differ\n\t * from the target frames per second.\n\t **/\n\tTicker.getMeasuredFPS = function(ticks) {\n\t\tvar times = Ticker._times;\n\t\tif (!times || times.length < 2) { return -1; }\n\n\t\t// by default, calculate fps for the past ~1 second:\n\t\tticks = Math.min(times.length-1, ticks||(Ticker._getFPS()|0));\n\t\treturn 1000/((times[0]-times[ticks])/ticks);\n\t};\n\n\t/**\n\t * Returns the number of milliseconds that have elapsed since Ticker was initialized via {{#crossLink \"Ticker/init\"}}.\n\t * Returns -1 if Ticker has not been initialized. For example, you could use\n\t * this in a time synchronized animation to determine the exact amount of time that has elapsed.\n\t * @method getTime\n\t * @static\n\t * @param {Boolean} [runTime=false] If true only time elapsed while Ticker was not paused will be returned.\n\t * If false, the value returned will be total time elapsed since the first tick event listener was added.\n\t * @return {Number} Number of milliseconds that have elapsed since Ticker was initialized or -1.\n\t **/\n\tTicker.getTime = function(runTime) {\n\t\treturn Ticker._startTime ? Ticker._getTime() - (runTime ? Ticker._pausedTime : 0) : -1;\n\t};\n\n\t/**\n\t * Similar to the {{#crossLink \"Ticker/getTime\"}}{{/crossLink}} method, but returns the time on the most recent {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\n\t * event object.\n\t * @method getEventTime\n\t * @static\n\t * @param runTime {Boolean} [runTime=false] If true, the runTime property will be returned instead of time.\n\t * @returns {number} The time or runTime property from the most recent tick event or -1.\n\t */\n\tTicker.getEventTime = function(runTime) {\n\t\treturn Ticker._startTime ? (Ticker._lastTime || Ticker._startTime) - (runTime ? Ticker._pausedTime : 0) : -1;\n\t};\n\t\n\t/**\n\t * Returns the number of ticks that have been broadcast by Ticker.\n\t * @method getTicks\n\t * @static\n\t * @param {Boolean} pauseable Indicates whether to include ticks that would have been broadcast\n\t * while Ticker was paused. If true only tick events broadcast while Ticker is not paused will be returned.\n\t * If false, tick events that would have been broadcast while Ticker was paused will be included in the return\n\t * value. The default value is false.\n\t * @return {Number} of ticks that have been broadcast.\n\t **/\n\tTicker.getTicks = function(pauseable) {\n\t\treturn  Ticker._ticks - (pauseable ? Ticker._pausedTicks : 0);\n\t};\n\n\n// private static methods:\n\t/**\n\t * @method _handleSynch\n\t * @static\n\t * @private\n\t **/\n\tTicker._handleSynch = function() {\n\t\tTicker._timerId = null;\n\t\tTicker._setupTick();\n\n\t\t// run if enough time has elapsed, with a little bit of flexibility to be early:\n\t\tif (Ticker._getTime() - Ticker._lastTime >= (Ticker._interval-1)*0.97) {\n\t\t\tTicker._tick();\n\t\t}\n\t};\n\n\t/**\n\t * @method _handleRAF\n\t * @static\n\t * @private\n\t **/\n\tTicker._handleRAF = function() {\n\t\tTicker._timerId = null;\n\t\tTicker._setupTick();\n\t\tTicker._tick();\n\t};\n\n\t/**\n\t * @method _handleTimeout\n\t * @static\n\t * @private\n\t **/\n\tTicker._handleTimeout = function() {\n\t\tTicker._timerId = null;\n\t\tTicker._setupTick();\n\t\tTicker._tick();\n\t};\n\n\t/**\n\t * @method _setupTick\n\t * @static\n\t * @private\n\t **/\n\tTicker._setupTick = function() {\n\t\tif (Ticker._timerId != null) { return; } // avoid duplicates\n\n\t\tvar mode = Ticker.timingMode;\n\t\tif (mode == Ticker.RAF_SYNCHED || mode == Ticker.RAF) {\n\t\t\tvar f = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame;\n\t\t\tif (f) {\n\t\t\t\tTicker._timerId = f(mode == Ticker.RAF ? Ticker._handleRAF : Ticker._handleSynch);\n\t\t\t\tTicker._raf = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tTicker._raf = false;\n\t\tTicker._timerId = setTimeout(Ticker._handleTimeout, Ticker._interval);\n\t};\n\n\t/**\n\t * @method _tick\n\t * @static\n\t * @private\n\t **/\n\tTicker._tick = function() {\n\t\tvar paused = Ticker.paused;\n\t\tvar time = Ticker._getTime();\n\t\tvar elapsedTime = time-Ticker._lastTime;\n\t\tTicker._lastTime = time;\n\t\tTicker._ticks++;\n\t\t\n\t\tif (paused) {\n\t\t\tTicker._pausedTicks++;\n\t\t\tTicker._pausedTime += elapsedTime;\n\t\t}\n\t\t\n\t\tif (Ticker.hasEventListener(\"tick\")) {\n\t\t\tvar event = new createjs.Event(\"tick\");\n\t\t\tvar maxDelta = Ticker.maxDelta;\n\t\t\tevent.delta = (maxDelta && elapsedTime > maxDelta) ? maxDelta : elapsedTime;\n\t\t\tevent.paused = paused;\n\t\t\tevent.time = time;\n\t\t\tevent.runTime = time-Ticker._pausedTime;\n\t\t\tTicker.dispatchEvent(event);\n\t\t}\n\t\t\n\t\tTicker._tickTimes.unshift(Ticker._getTime()-time);\n\t\twhile (Ticker._tickTimes.length > 100) { Ticker._tickTimes.pop(); }\n\n\t\tTicker._times.unshift(time);\n\t\twhile (Ticker._times.length > 100) { Ticker._times.pop(); }\n\t};\n\n\t/**\n\t * @method _getTime\n\t * @static\n\t * @private\n\t **/\n\tvar w=window, now=w.performance.now || w.performance.mozNow || w.performance.msNow || w.performance.oNow || w.performance.webkitNow;\n\tTicker._getTime = function() {\n\t\treturn ((now&&now.call(w.performance))||(new Date().getTime())) - Ticker._startTime;\n\t};\n\n\n\tcreatejs.Ticker = Ticker;\n}());\n\n//##############################################################################\n// VideoBuffer.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * When an HTML video seeks, including when looping, there is an indeterminate period before a new frame is available.\n\t * This can result in the video blinking or flashing when it is drawn to a canvas. The VideoBuffer class resolves\n\t * this issue by drawing each frame to an off-screen canvas and preserving the prior frame during a seek.\n\t * \n\t * \tvar myBuffer = new createjs.VideoBuffer(myVideo);\n\t * \tvar myBitmap = new Bitmap(myBuffer);\n\t * \n\t * @class VideoBuffer\n\t * @param {HTMLVideoElement} video The HTML video element to buffer.\n\t * @constructor\n\t **/\n\tfunction VideoBuffer(video) {\n\t\t\n\t// private properties:\n\t\t/**\n\t\t * Used by Bitmap to determine when the video buffer is ready to be drawn. Not intended for general use.\n\t\t * @property readyState\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n\t\tthis.readyState = video.readyState;\n\t\t\n\t\t/**\n\t\t * @property _video\n\t\t * @protected\n\t\t * @type {HTMLVideoElement}\n\t\t * @default 0\n\t\t **/\n\t\tthis._video = video;\n\t\t\n\t\t/**\n\t\t * @property _canvas\n\t\t * @protected\n\t\t * @type {HTMLCanvasElement}\n\t\t * @default 0\n\t\t **/\n\t\tthis._canvas = null;\n\t\t\n\t\t/**\n\t\t * @property _lastTime\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default -1\n\t\t **/\n\t\tthis._lastTime = -1;\n\t\t\n\t\tif (this.readyState < 2) { video.addEventListener(\"canplaythrough\", this._videoReady.bind(this)); } //once:true isn't supported everywhere, but its a non-critical optimization here.\n\t}\n\tvar p = VideoBuffer.prototype;\n\t\n\t\n// public methods:\n\t/**\n\t * Gets an HTML canvas element showing the current video frame, or the previous frame if in a seek / loop.\n\t * Primarily for use by {{#crossLink \"Bitmap\"}}{{/crossLink}}.\n\t * @method getImage\n\t **/\n\tp.getImage = function() {\n\t\tif (this.readyState < 2) { return; }\n\t\tvar canvas=this._canvas, video = this._video;\n\t\tif (!canvas) {\n\t\t\tcanvas = this._canvas = createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\");\n\t\t\tcanvas.width = video.videoWidth;\n\t\t\tcanvas.height = video.videoHeight;\n\t\t}\n\t\tif (video.readyState >= 2 && video.currentTime !== this._lastTime) {\n\t\t\tvar ctx = canvas.getContext(\"2d\");\n\t\t\tctx.clearRect(0,0,canvas.width,canvas.height);\n\t\t\tctx.drawImage(video,0,0,canvas.width,canvas.height);\n\t\t\tthis._lastTime = video.currentTime;\n\t\t}\n\t\treturn canvas;\n\t};\n\t\n// private methods:\n\t/**\n\t * @method _videoReady\n\t * @protected\n\t **/\n\tp._videoReady = function() {\n\t\tthis.readyState = 2;\n\t};\n\n\n\tcreatejs.VideoBuffer = VideoBuffer;\n}());\n\n//##############################################################################\n// MouseEvent.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Passed as the parameter to all mouse/pointer/touch related events. For a listing of mouse events and their properties,\n\t * see the {{#crossLink \"DisplayObject\"}}{{/crossLink}} and {{#crossLink \"Stage\"}}{{/crossLink}} event listings.\n\t * @class MouseEvent\n\t * @param {String} type The event type.\n\t * @param {Boolean} bubbles Indicates whether the event will bubble through the display list.\n\t * @param {Boolean} cancelable Indicates whether the default behaviour of this event can be cancelled.\n\t * @param {Number} stageX The normalized x position relative to the stage.\n\t * @param {Number} stageY The normalized y position relative to the stage.\n\t * @param {MouseEvent} nativeEvent The native DOM event related to this mouse event.\n\t * @param {Number} pointerID The unique id for the pointer.\n\t * @param {Boolean} primary Indicates whether this is the primary pointer in a multitouch environment.\n\t * @param {Number} rawX The raw x position relative to the stage.\n\t * @param {Number} rawY The raw y position relative to the stage.\n\t * @param {DisplayObject} relatedTarget The secondary target for the event.\n\t * @extends Event\n\t * @constructor\n\t **/\n\tfunction MouseEvent(type, bubbles, cancelable, stageX, stageY, nativeEvent, pointerID, primary, rawX, rawY, relatedTarget) {\n\t\tthis.Event_constructor(type, bubbles, cancelable);\n\t\t\n\t\t\n\t// public properties:\n\t\t/**\n\t\t * The normalized x position on the stage. This will always be within the range 0 to stage width.\n\t\t * @property stageX\n\t\t * @type Number\n\t\t*/\n\t\tthis.stageX = stageX;\n\t\n\t\t/**\n\t\t * The normalized y position on the stage. This will always be within the range 0 to stage height.\n\t\t * @property stageY\n\t\t * @type Number\n\t\t **/\n\t\tthis.stageY = stageY;\n\t\n\t\t/**\n\t\t * The raw x position relative to the stage. Normally this will be the same as the stageX value, unless\n\t\t * stage.mouseMoveOutside is true and the pointer is outside of the stage bounds.\n\t\t * @property rawX\n\t\t * @type Number\n\t\t*/\n\t\tthis.rawX = (rawX==null)?stageX:rawX;\n\t\n\t\t/**\n\t\t * The raw y position relative to the stage. Normally this will be the same as the stageY value, unless\n\t\t * stage.mouseMoveOutside is true and the pointer is outside of the stage bounds.\n\t\t * @property rawY\n\t\t * @type Number\n\t\t*/\n\t\tthis.rawY = (rawY==null)?stageY:rawY;\n\t\n\t\t/**\n\t\t * The native MouseEvent generated by the browser. The properties and API for this\n\t\t * event may differ between browsers. This property will be null if the\n\t\t * EaselJS property was not directly generated from a native MouseEvent.\n\t\t * @property nativeEvent\n\t\t * @type HtmlMouseEvent\n\t\t * @default null\n\t\t **/\n\t\tthis.nativeEvent = nativeEvent;\n\t\n\t\t/**\n\t\t * The unique id for the pointer (touch point or cursor). This will be either -1 for the mouse, or the system\n\t\t * supplied id value.\n\t\t * @property pointerID\n\t\t * @type {Number}\n\t\t */\n\t\tthis.pointerID = pointerID;\n\t\n\t\t/**\n\t\t * Indicates whether this is the primary pointer in a multitouch environment. This will always be true for the mouse.\n\t\t * For touch pointers, the first pointer in the current stack will be considered the primary pointer.\n\t\t * @property primary\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.primary = !!primary;\n\t\t\n\t\t/**\n\t\t * The secondary target for the event, if applicable. This is used for mouseout/rollout\n\t\t * events to indicate the object that the mouse entered from, mouseover/rollover for the object the mouse exited,\n\t\t * and stagemousedown/stagemouseup events for the object that was the under the cursor, if any.\n\t\t * \n\t\t * Only valid interaction targets will be returned (ie. objects with mouse listeners or a cursor set).\n\t\t * @property relatedTarget\n\t\t * @type {DisplayObject}\n\t\t */\n\t\tthis.relatedTarget = relatedTarget;\n\t}\n\tvar p = createjs.extend(MouseEvent, createjs.Event);\n\n\t// TODO: deprecated\n\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\t\n\t\n// getter / setters:\n\t/**\n\t * Returns the x position of the mouse in the local coordinate system of the current target (ie. the dispatcher).\n\t * @property localX\n\t * @type {Number}\n\t * @readonly\n\t */\n\tp._get_localX = function() {\n\t\treturn this.currentTarget.globalToLocal(this.rawX, this.rawY).x;\n\t};\n\t\n\t/**\n\t * Returns the y position of the mouse in the local coordinate system of the current target (ie. the dispatcher).\n\t * @property localY\n\t * @type {Number}\n\t * @readonly\n\t */\n\tp._get_localY = function() {\n\t\treturn this.currentTarget.globalToLocal(this.rawX, this.rawY).y;\n\t};\n\t\n\t/**\n\t * Indicates whether the event was generated by a touch input (versus a mouse input).\n\t * @property isTouch\n\t * @type {Boolean}\n\t * @readonly\n\t */\n\tp._get_isTouch = function() {\n\t\treturn this.pointerID !== -1;\n\t};\n\t\n\t\n\ttry {\n\t\tObject.defineProperties(p, {\n\t\t\tlocalX: { get: p._get_localX },\n\t\t\tlocalY: { get: p._get_localY },\n\t\t\tisTouch: { get: p._get_isTouch }\n\t\t});\n\t} catch (e) {} // TODO: use Log\n\n\n// public methods:\n\t/**\n\t * Returns a clone of the MouseEvent instance.\n\t * @method clone\n\t * @return {MouseEvent} a clone of the MouseEvent instance.\n\t **/\n\tp.clone = function() {\n\t\treturn new MouseEvent(this.type, this.bubbles, this.cancelable, this.stageX, this.stageY, this.nativeEvent, this.pointerID, this.primary, this.rawX, this.rawY);\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[MouseEvent (type=\"+this.type+\" stageX=\"+this.stageX+\" stageY=\"+this.stageY+\")]\";\n\t};\n\n\n\tcreatejs.MouseEvent = createjs.promote(MouseEvent, \"Event\");\n}());\n\n//##############################################################################\n// Matrix2D.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Represents an affine transformation matrix, and provides tools for constructing and concatenating matrices.\n\t *\n\t * This matrix can be visualized as:\n\t *\n\t * \t[ a  c  tx\n\t * \t  b  d  ty\n\t * \t  0  0  1  ]\n\t *\n\t * Note the locations of b and c.\n\t *\n\t * @class Matrix2D\n\t * @param {Number} [a=1] Specifies the a property for the new matrix.\n\t * @param {Number} [b=0] Specifies the b property for the new matrix.\n\t * @param {Number} [c=0] Specifies the c property for the new matrix.\n\t * @param {Number} [d=1] Specifies the d property for the new matrix.\n\t * @param {Number} [tx=0] Specifies the tx property for the new matrix.\n\t * @param {Number} [ty=0] Specifies the ty property for the new matrix.\n\t * @constructor\n\t **/\n\tfunction Matrix2D(a, b, c, d, tx, ty) {\n\t\tthis.setValues(a,b,c,d,tx,ty);\n\t\t\n\t// public properties:\n\t\t// assigned in the setValues method.\n\t\t/**\n\t\t * Position (0, 0) in a 3x3 affine transformation matrix.\n\t\t * @property a\n\t\t * @type Number\n\t\t **/\n\t\n\t\t/**\n\t\t * Position (0, 1) in a 3x3 affine transformation matrix.\n\t\t * @property b\n\t\t * @type Number\n\t\t **/\n\t\n\t\t/**\n\t\t * Position (1, 0) in a 3x3 affine transformation matrix.\n\t\t * @property c\n\t\t * @type Number\n\t\t **/\n\t\n\t\t/**\n\t\t * Position (1, 1) in a 3x3 affine transformation matrix.\n\t\t * @property d\n\t\t * @type Number\n\t\t **/\n\t\n\t\t/**\n\t\t * Position (2, 0) in a 3x3 affine transformation matrix.\n\t\t * @property tx\n\t\t * @type Number\n\t\t **/\n\t\n\t\t/**\n\t\t * Position (2, 1) in a 3x3 affine transformation matrix.\n\t\t * @property ty\n\t\t * @type Number\n\t\t **/\n\t}\n\tvar p = Matrix2D.prototype;\n\n// constants:\n\t/**\n\t * Multiplier for converting degrees to radians. Used internally by Matrix2D.\n\t * @property DEG_TO_RAD\n\t * @static\n\t * @final\n\t * @type Number\n\t * @readonly\n\t **/\n\tMatrix2D.DEG_TO_RAD = Math.PI/180;\n\n\n// static public properties:\n\t/**\n\t * An identity matrix, representing a null transformation.\n\t * @property identity\n\t * @static\n\t * @type Matrix2D\n\t * @readonly\n\t **/\n\tMatrix2D.identity = null; // set at bottom of class definition.\n\t\n\n// public methods:\n\t/**\n\t * Sets the specified values on this instance. \n\t * @method setValues\n\t * @param {Number} [a=1] Specifies the a property for the new matrix.\n\t * @param {Number} [b=0] Specifies the b property for the new matrix.\n\t * @param {Number} [c=0] Specifies the c property for the new matrix.\n\t * @param {Number} [d=1] Specifies the d property for the new matrix.\n\t * @param {Number} [tx=0] Specifies the tx property for the new matrix.\n\t * @param {Number} [ty=0] Specifies the ty property for the new matrix.\n\t * @return {Matrix2D} This instance. Useful for chaining method calls.\n\t*/\n\tp.setValues = function(a, b, c, d, tx, ty) {\n\t\t// don't forget to update docs in the constructor if these change:\n\t\tthis.a = (a == null) ? 1 : a;\n\t\tthis.b = b || 0;\n\t\tthis.c = c || 0;\n\t\tthis.d = (d == null) ? 1 : d;\n\t\tthis.tx = tx || 0;\n\t\tthis.ty = ty || 0;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Appends the specified matrix properties to this matrix. All parameters are required.\n\t * This is the equivalent of multiplying `(this matrix) * (specified matrix)`.\n\t * @method append\n\t * @param {Number} a\n\t * @param {Number} b\n\t * @param {Number} c\n\t * @param {Number} d\n\t * @param {Number} tx\n\t * @param {Number} ty\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n\tp.append = function(a, b, c, d, tx, ty) {\n\t\tvar a1 = this.a;\n\t\tvar b1 = this.b;\n\t\tvar c1 = this.c;\n\t\tvar d1 = this.d;\n\t\tif (a != 1 || b != 0 || c != 0 || d != 1) {\n\t\t\tthis.a  = a1*a+c1*b;\n\t\t\tthis.b  = b1*a+d1*b;\n\t\t\tthis.c  = a1*c+c1*d;\n\t\t\tthis.d  = b1*c+d1*d;\n\t\t}\n\t\tthis.tx = a1*tx+c1*ty+this.tx;\n\t\tthis.ty = b1*tx+d1*ty+this.ty;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Prepends the specified matrix properties to this matrix.\n\t * This is the equivalent of multiplying `(specified matrix) * (this matrix)`.\n\t * All parameters are required.\n\t * @method prepend\n\t * @param {Number} a\n\t * @param {Number} b\n\t * @param {Number} c\n\t * @param {Number} d\n\t * @param {Number} tx\n\t * @param {Number} ty\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n\tp.prepend = function(a, b, c, d, tx, ty) {\n\t\tvar a1 = this.a;\n\t\tvar c1 = this.c;\n\t\tvar tx1 = this.tx;\n\n\t\tthis.a  = a*a1+c*this.b;\n\t\tthis.b  = b*a1+d*this.b;\n\t\tthis.c  = a*c1+c*this.d;\n\t\tthis.d  = b*c1+d*this.d;\n\t\tthis.tx = a*tx1+c*this.ty+tx;\n\t\tthis.ty = b*tx1+d*this.ty+ty;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Appends the specified matrix to this matrix.\n\t * This is the equivalent of multiplying `(this matrix) * (specified matrix)`.\n\t * @method appendMatrix\n\t * @param {Matrix2D} matrix\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n\tp.appendMatrix = function(matrix) {\n\t\treturn this.append(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\t};\n\n\t/**\n\t * Prepends the specified matrix to this matrix.\n\t * This is the equivalent of multiplying `(specified matrix) * (this matrix)`.\n\t * For example, you could calculate the combined transformation for a child object using:\n\t * \n\t * \tvar o = myDisplayObject;\n\t * \tvar mtx = o.getMatrix();\n\t * \twhile (o = o.parent) {\n\t * \t\t// prepend each parent's transformation in turn:\n\t * \t\to.prependMatrix(o.getMatrix());\n\t * \t}\n\t * @method prependMatrix\n\t * @param {Matrix2D} matrix\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n\tp.prependMatrix = function(matrix) {\n\t\treturn this.prepend(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\t};\n\n\t/**\n\t * Generates matrix properties from the specified display object transform properties, and appends them to this matrix.\n\t * For example, you can use this to generate a matrix representing the transformations of a display object:\n\t * \n\t * \tvar mtx = new createjs.Matrix2D();\n\t * \tmtx.appendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation);\n\t * @method appendTransform\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} scaleX\n\t * @param {Number} scaleY\n\t * @param {Number} rotation\n\t * @param {Number} skewX\n\t * @param {Number} skewY\n\t * @param {Number} regX Optional.\n\t * @param {Number} regY Optional.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n\tp.appendTransform = function(x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {\n\t\tif (rotation%360) {\n\t\t\tvar r = rotation*Matrix2D.DEG_TO_RAD;\n\t\t\tvar cos = Math.cos(r);\n\t\t\tvar sin = Math.sin(r);\n\t\t} else {\n\t\t\tcos = 1;\n\t\t\tsin = 0;\n\t\t}\n\n\t\tif (skewX || skewY) {\n\t\t\t// TODO: can this be combined into a single append operation?\n\t\t\tskewX *= Matrix2D.DEG_TO_RAD;\n\t\t\tskewY *= Matrix2D.DEG_TO_RAD;\n\t\t\tthis.append(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), x, y);\n\t\t\tthis.append(cos*scaleX, sin*scaleX, -sin*scaleY, cos*scaleY, 0, 0);\n\t\t} else {\n\t\t\tthis.append(cos*scaleX, sin*scaleX, -sin*scaleY, cos*scaleY, x, y);\n\t\t}\n\t\t\n\t\tif (regX || regY) {\n\t\t\t// append the registration offset:\n\t\t\tthis.tx -= regX*this.a+regY*this.c; \n\t\t\tthis.ty -= regX*this.b+regY*this.d;\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * Generates matrix properties from the specified display object transform properties, and prepends them to this matrix.\n\t * For example, you could calculate the combined transformation for a child object using:\n\t * \n\t * \tvar o = myDisplayObject;\n\t * \tvar mtx = new createjs.Matrix2D();\n\t * \tdo  {\n\t * \t\t// prepend each parent's transformation in turn:\n\t * \t\tmtx.prependTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation, o.skewX, o.skewY, o.regX, o.regY);\n\t * \t} while (o = o.parent);\n\t * \t\n\t * \tNote that the above example would not account for {{#crossLink \"DisplayObject/transformMatrix:property\"}}{{/crossLink}}\n\t * \tvalues. See {{#crossLink \"Matrix2D/prependMatrix\"}}{{/crossLink}} for an example that does.\n\t * @method prependTransform\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} scaleX\n\t * @param {Number} scaleY\n\t * @param {Number} rotation\n\t * @param {Number} skewX\n\t * @param {Number} skewY\n\t * @param {Number} regX Optional.\n\t * @param {Number} regY Optional.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n\tp.prependTransform = function(x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {\n\t\tif (rotation%360) {\n\t\t\tvar r = rotation*Matrix2D.DEG_TO_RAD;\n\t\t\tvar cos = Math.cos(r);\n\t\t\tvar sin = Math.sin(r);\n\t\t} else {\n\t\t\tcos = 1;\n\t\t\tsin = 0;\n\t\t}\n\n\t\tif (regX || regY) {\n\t\t\t// prepend the registration offset:\n\t\t\tthis.tx -= regX; this.ty -= regY;\n\t\t}\n\t\tif (skewX || skewY) {\n\t\t\t// TODO: can this be combined into a single prepend operation?\n\t\t\tskewX *= Matrix2D.DEG_TO_RAD;\n\t\t\tskewY *= Matrix2D.DEG_TO_RAD;\n\t\t\tthis.prepend(cos*scaleX, sin*scaleX, -sin*scaleY, cos*scaleY, 0, 0);\n\t\t\tthis.prepend(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), x, y);\n\t\t} else {\n\t\t\tthis.prepend(cos*scaleX, sin*scaleX, -sin*scaleY, cos*scaleY, x, y);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * Applies a clockwise rotation transformation to the matrix.\n\t * @method rotate\n\t * @param {Number} angle The angle to rotate by, in degrees. To use a value in radians, multiply it by `180/Math.PI`.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n\tp.rotate = function(angle) {\n\t\tangle = angle*Matrix2D.DEG_TO_RAD;\n\t\tvar cos = Math.cos(angle);\n\t\tvar sin = Math.sin(angle);\n\n\t\tvar a1 = this.a;\n\t\tvar b1 = this.b;\n\n\t\tthis.a = a1*cos+this.c*sin;\n\t\tthis.b = b1*cos+this.d*sin;\n\t\tthis.c = -a1*sin+this.c*cos;\n\t\tthis.d = -b1*sin+this.d*cos;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Applies a skew transformation to the matrix.\n\t * @method skew\n\t * @param {Number} skewX The amount to skew horizontally in degrees. To use a value in radians, multiply it by `180/Math.PI`.\n\t * @param {Number} skewY The amount to skew vertically in degrees.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t*/\n\tp.skew = function(skewX, skewY) {\n\t\tskewX = skewX*Matrix2D.DEG_TO_RAD;\n\t\tskewY = skewY*Matrix2D.DEG_TO_RAD;\n\t\tthis.append(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), 0, 0);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Applies a scale transformation to the matrix.\n\t * @method scale\n\t * @param {Number} x The amount to scale horizontally. E.G. a value of 2 will double the size in the X direction, and 0.5 will halve it.\n\t * @param {Number} y The amount to scale vertically.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n\tp.scale = function(x, y) {\n\t\tthis.a *= x;\n\t\tthis.b *= x;\n\t\tthis.c *= y;\n\t\tthis.d *= y;\n\t\t//this.tx *= x;\n\t\t//this.ty *= y;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Translates the matrix on the x and y axes.\n\t * @method translate\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n\tp.translate = function(x, y) {\n\t\tthis.tx += this.a*x + this.c*y;\n\t\tthis.ty += this.b*x + this.d*y;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Sets the properties of the matrix to those of an identity matrix (one that applies a null transformation).\n\t * @method identity\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n\tp.identity = function() {\n\t\tthis.a = this.d = 1;\n\t\tthis.b = this.c = this.tx = this.ty = 0;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Inverts the matrix, causing it to perform the opposite transformation.\n\t * @method invert\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n\tp.invert = function() {\n\t\tvar a1 = this.a;\n\t\tvar b1 = this.b;\n\t\tvar c1 = this.c;\n\t\tvar d1 = this.d;\n\t\tvar tx1 = this.tx;\n\t\tvar n = a1*d1-b1*c1;\n\n\t\tthis.a = d1/n;\n\t\tthis.b = -b1/n;\n\t\tthis.c = -c1/n;\n\t\tthis.d = a1/n;\n\t\tthis.tx = (c1*this.ty-d1*tx1)/n;\n\t\tthis.ty = -(a1*this.ty-b1*tx1)/n;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Returns true if the matrix is an identity matrix.\n\t * @method isIdentity\n\t * @return {Boolean}\n\t **/\n\tp.isIdentity = function() {\n\t\treturn this.tx === 0 && this.ty === 0 && this.a === 1 && this.b === 0 && this.c === 0 && this.d === 1;\n\t};\n\t\n\t/**\n\t * Returns true if this matrix is equal to the specified matrix (all property values are equal).\n\t * @method equals\n\t * @param {Matrix2D} matrix The matrix to compare.\n\t * @return {Boolean}\n\t **/\n\tp.equals = function(matrix) {\n\t\treturn this.tx === matrix.tx && this.ty === matrix.ty && this.a === matrix.a && this.b === matrix.b && this.c === matrix.c && this.d === matrix.d;\n\t};\n\n\t/**\n\t * Transforms a point according to this matrix.\n\t * @method transformPoint\n\t * @param {Number} x The x component of the point to transform.\n\t * @param {Number} y The y component of the point to transform.\n\t * @param {Point | Object} [pt] An object to copy the result into. If omitted a generic object with x/y properties will be returned.\n\t * @return {Point} This matrix. Useful for chaining method calls.\n\t **/\n\tp.transformPoint = function(x, y, pt) {\n\t\tpt = pt||{};\n\t\tpt.x = x*this.a+y*this.c+this.tx;\n\t\tpt.y = x*this.b+y*this.d+this.ty;\n\t\treturn pt;\n\t};\n\n\t/**\n\t * Decomposes the matrix into transform properties (x, y, scaleX, scaleY, and rotation). Note that these values\n\t * may not match the transform properties you used to generate the matrix, though they will produce the same visual\n\t * results.\n\t * @method decompose\n\t * @param {Object} target The object to apply the transform properties to. If null, then a new object will be returned.\n\t * @return {Object} The target, or a new generic object with the transform properties applied.\n\t*/\n\tp.decompose = function(target) {\n\t\t// TODO: it would be nice to be able to solve for whether the matrix can be decomposed into only scale/rotation even when scale is negative\n\t\tif (target == null) { target = {}; }\n\t\ttarget.x = this.tx;\n\t\ttarget.y = this.ty;\n\t\ttarget.scaleX = Math.sqrt(this.a * this.a + this.b * this.b);\n\t\ttarget.scaleY = Math.sqrt(this.c * this.c + this.d * this.d);\n\n\t\tvar skewX = Math.atan2(-this.c, this.d);\n\t\tvar skewY = Math.atan2(this.b, this.a);\n\n\t\tvar delta = Math.abs(1-skewX/skewY);\n\t\tif (delta < 0.00001) { // effectively identical, can use rotation:\n\t\t\ttarget.rotation = skewY/Matrix2D.DEG_TO_RAD;\n\t\t\tif (this.a < 0 && this.d >= 0) {\n\t\t\t\ttarget.rotation += (target.rotation <= 0) ? 180 : -180;\n\t\t\t}\n\t\t\ttarget.skewX = target.skewY = 0;\n\t\t} else {\n\t\t\ttarget.skewX = skewX/Matrix2D.DEG_TO_RAD;\n\t\t\ttarget.skewY = skewY/Matrix2D.DEG_TO_RAD;\n\t\t}\n\t\treturn target;\n\t};\n\t\n\t/**\n\t * Copies all properties from the specified matrix to this matrix.\n\t * @method copy\n\t * @param {Matrix2D} matrix The matrix to copy properties from.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t*/\n\tp.copy = function(matrix) {\n\t\treturn this.setValues(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\t};\n\n\t/**\n\t * Returns a clone of the Matrix2D instance.\n\t * @method clone\n\t * @return {Matrix2D} a clone of the Matrix2D instance.\n\t **/\n\tp.clone = function() {\n\t\treturn new Matrix2D(this.a, this.b, this.c, this.d, this.tx, this.ty);\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[Matrix2D (a=\"+this.a+\" b=\"+this.b+\" c=\"+this.c+\" d=\"+this.d+\" tx=\"+this.tx+\" ty=\"+this.ty+\")]\";\n\t};\n\n\t// this has to be populated after the class is defined:\n\tMatrix2D.identity = new Matrix2D();\n\n\n\tcreatejs.Matrix2D = Matrix2D;\n}());\n\n//##############################################################################\n// DisplayProps.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\t/**\n\t * Used for calculating and encapsulating display related properties.\n\t * @class DisplayProps\n\t * @param {Number} [visible=true] Visible value.\n\t * @param {Number} [alpha=1] Alpha value.\n\t * @param {Number} [shadow=null] A Shadow instance or null.\n\t * @param {Number} [compositeOperation=null] A compositeOperation value or null.\n\t * @param {Number} [matrix] A transformation matrix. Defaults to a new identity matrix.\n\t * @constructor\n\t **/\n\tfunction DisplayProps(visible, alpha, shadow, compositeOperation, matrix) {\n\t\tthis.setValues(visible, alpha, shadow, compositeOperation, matrix);\n\t\t\n\t// public properties:\n\t\t// assigned in the setValues method.\n\t\t/**\n\t\t * Property representing the alpha that will be applied to a display object.\n\t\t * @property alpha\n\t\t * @type Number\n\t\t **/\n\t\n\t\t/**\n\t\t * Property representing the shadow that will be applied to a display object.\n\t\t * @property shadow\n\t\t * @type Shadow\n\t\t **/\n\t\n\t\t/**\n\t\t * Property representing the compositeOperation that will be applied to a display object.\n\t\t * You can find a list of valid composite operations at:\n\t\t * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Compositing\">https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Compositing</a>\n\t\t * @property compositeOperation\n\t\t * @type String\n\t\t **/\n\t\t\n\t\t/**\n\t\t * Property representing the value for visible that will be applied to a display object.\n\t\t * @property visible\n\t\t * @type Boolean\n\t\t **/\n\t\t\n\t\t/**\n\t\t * The transformation matrix that will be applied to a display object.\n\t\t * @property matrix\n\t\t * @type Matrix2D\n\t\t **/\n\t}\n\tvar p = DisplayProps.prototype;\n\n// initialization:\n\t/**\n\t * Reinitializes the instance with the specified values.\n\t * @method setValues\n\t * @param {Number} [visible=true] Visible value.\n\t * @param {Number} [alpha=1] Alpha value.\n\t * @param {Number} [shadow=null] A Shadow instance or null.\n\t * @param {Number} [compositeOperation=null] A compositeOperation value or null.\n\t * @param {Number} [matrix] A transformation matrix. Defaults to an identity matrix.\n\t * @return {DisplayProps} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tp.setValues = function (visible, alpha, shadow, compositeOperation, matrix) {\n\t\tthis.visible = visible == null ? true : !!visible;\n\t\tthis.alpha = alpha == null ? 1 : alpha;\n\t\tthis.shadow = shadow;\n\t\tthis.compositeOperation = compositeOperation;\n\t\tthis.matrix = matrix || (this.matrix&&this.matrix.identity()) || new createjs.Matrix2D();\n\t\treturn this;\n\t};\n\n// public methods:\n\t/**\n\t * Appends the specified display properties. This is generally used to apply a child's properties its parent's.\n\t * @method append\n\t * @param {Boolean} visible desired visible value\n\t * @param {Number} alpha desired alpha value\n\t * @param {Shadow} shadow desired shadow value\n\t * @param {String} compositeOperation desired composite operation value\n\t * @param {Matrix2D} [matrix] a Matrix2D instance\n\t * @return {DisplayProps} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tp.append = function(visible, alpha, shadow, compositeOperation, matrix) {\n\t\tthis.alpha *= alpha;\n\t\tthis.shadow = shadow || this.shadow;\n\t\tthis.compositeOperation = compositeOperation || this.compositeOperation;\n\t\tthis.visible = this.visible && visible;\n\t\tmatrix&&this.matrix.appendMatrix(matrix);\n\t\treturn this;\n\t};\n\t\n\t/**\n\t * Prepends the specified display properties. This is generally used to apply a parent's properties to a child's.\n\t * For example, to get the combined display properties that would be applied to a child, you could use:\n\t * \n\t * \tvar o = myDisplayObject;\n\t * \tvar props = new createjs.DisplayProps();\n\t * \tdo {\n\t * \t\t// prepend each parent's props in turn:\n\t * \t\tprops.prepend(o.visible, o.alpha, o.shadow, o.compositeOperation, o.getMatrix());\n\t * \t} while (o = o.parent);\n\t * \t\n\t * @method prepend\n\t * @param {Boolean} visible desired visible value\n\t * @param {Number} alpha desired alpha value\n\t * @param {Shadow} shadow desired shadow value\n\t * @param {String} compositeOperation desired composite operation value\n\t * @param {Matrix2D} [matrix] a Matrix2D instance\n\t * @return {DisplayProps} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tp.prepend = function(visible, alpha, shadow, compositeOperation, matrix) {\n\t\tthis.alpha *= alpha;\n\t\tthis.shadow = this.shadow || shadow;\n\t\tthis.compositeOperation = this.compositeOperation || compositeOperation;\n\t\tthis.visible = this.visible && visible;\n\t\tmatrix&&this.matrix.prependMatrix(matrix);\n\t\treturn this;\n\t};\n\t\n\t/**\n\t * Resets this instance and its matrix to default values.\n\t * @method identity\n\t * @return {DisplayProps} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tp.identity = function() {\n\t\tthis.visible = true;\n\t\tthis.alpha = 1;\n\t\tthis.shadow = this.compositeOperation = null;\n\t\tthis.matrix.identity();\n\t\treturn this;\n\t};\n\t\n\t/**\n\t * Returns a clone of the DisplayProps instance. Clones the associated matrix.\n\t * @method clone\n\t * @return {DisplayProps} a clone of the DisplayProps instance.\n\t **/\n\tp.clone = function() {\n\t\treturn new DisplayProps(this.alpha, this.shadow, this.compositeOperation, this.visible, this.matrix.clone());\n\t};\n\n// private methods:\n\n\tcreatejs.DisplayProps = DisplayProps;\n})();\n\n//##############################################################################\n// Point.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Represents a point on a 2 dimensional x / y coordinate system.\n\t *\n\t * <h4>Example</h4>\n\t * \n\t *      var point = new createjs.Point(0, 100);\n\t * \n\t * @class Point\n\t * @param {Number} [x=0] X position.\n\t * @param {Number} [y=0] Y position.\n\t * @constructor\n\t **/\n\tfunction Point(x, y) {\n\t \tthis.setValues(x, y);\n\t \t\n\t \t\n\t// public properties:\n\t\t// assigned in the setValues method.\n\t\t/**\n\t\t * X position.\n\t\t * @property x\n\t\t * @type Number\n\t\t **/\n\t\n\t\t/**\n\t\t * Y position.\n\t\t * @property y\n\t\t * @type Number\n\t\t **/\n\t}\n\tvar p = Point.prototype;\n\t\n// public methods:\n\t/** \n\t * Sets the specified values on this instance.\n\t * @method setValues\n\t * @param {Number} [x=0] X position.\n\t * @param {Number} [y=0] Y position.\n\t * @return {Point} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tp.setValues = function(x, y) {\n\t\tthis.x = x||0;\n\t\tthis.y = y||0;\n\t\treturn this;\n\t};\n\t\n\t/**\n\t * Copies all properties from the specified point to this point.\n\t * @method copy\n\t * @param {Point} point The point to copy properties from.\n\t * @return {Point} This point. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tp.copy = function(point) {\n\t\tthis.x = point.x;\n\t\tthis.y = point.y;\n\t\treturn this;\n\t};\n\t\n\t/**\n\t * Returns a clone of the Point instance.\n\t * @method clone\n\t * @return {Point} a clone of the Point instance.\n\t **/\n\tp.clone = function() {\n\t\treturn new Point(this.x, this.y);\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[Point (x=\"+this.x+\" y=\"+this.y+\")]\";\n\t};\n\t\n\t\n\tcreatejs.Point = Point;\n}());\n\n//##############################################################################\n// Rectangle.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Represents a rectangle as defined by the points (x, y) and (x+width, y+height).\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var rect = new createjs.Rectangle(0, 0, 100, 100);\n\t *\n\t * @class Rectangle\n\t * @param {Number} [x=0] X position.\n\t * @param {Number} [y=0] Y position.\n\t * @param {Number} [width=0] The width of the Rectangle.\n\t * @param {Number} [height=0] The height of the Rectangle.\n\t * @constructor\n\t **/\n\tfunction Rectangle(x, y, width, height) {\n\t\tthis.setValues(x, y, width, height);\n\t\t\n\t\t\n\t// public properties:\n\t\t// assigned in the setValues method.\n\t\t/**\n\t\t * X position.\n\t\t * @property x\n\t\t * @type Number\n\t\t **/\n\t\n\t\t/**\n\t\t * Y position.\n\t\t * @property y\n\t\t * @type Number\n\t\t **/\n\t\n\t\t/**\n\t\t * Width.\n\t\t * @property width\n\t\t * @type Number\n\t\t **/\n\t\n\t\t/**\n\t\t * Height.\n\t\t * @property height\n\t\t * @type Number\n\t\t **/\n\t}\n\tvar p = Rectangle.prototype;\n\n// public methods:\n\t/** \n\t * Sets the specified values on this instance.\n\t * @method setValues\n\t * @param {Number} [x=0] X position.\n\t * @param {Number} [y=0] Y position.\n\t * @param {Number} [width=0] The width of the Rectangle.\n\t * @param {Number} [height=0] The height of the Rectangle.\n\t * @return {Rectangle} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tp.setValues = function(x, y, width, height) {\n\t\t// don't forget to update docs in the constructor if these change:\n\t\tthis.x = x||0;\n\t\tthis.y = y||0;\n\t\tthis.width = width||0;\n\t\tthis.height = height||0;\n\t\treturn this;\n\t};\n\t\n\t/** \n\t * Extends the rectangle's bounds to include the described point or rectangle.\n\t * @method extend\n\t * @param {Number} x X position of the point or rectangle.\n\t * @param {Number} y Y position of the point or rectangle.\n\t * @param {Number} [width=0] The width of the rectangle.\n\t * @param {Number} [height=0] The height of the rectangle.\n\t * @return {Rectangle} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tp.extend = function(x, y, width, height) {\n\t\twidth = width||0;\n\t\theight = height||0;\n\t\tif (x+width > this.x+this.width) { this.width = x+width-this.x; }\n\t\tif (y+height > this.y+this.height) { this.height = y+height-this.y; }\n\t\tif (x < this.x) { this.width += this.x-x; this.x = x; }\n\t\tif (y < this.y) { this.height += this.y-y; this.y = y; }\n\t\treturn this;\n\t};\n\t\n\t/** \n\t * Adds the specified padding to the rectangle's bounds.\n\t * @method pad\n\t * @param {Number} top\n\t * @param {Number} left\n\t * @param {Number} bottom\n\t * @param {Number} right\n\t * @return {Rectangle} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tp.pad = function(top, left, bottom, right) {\n\t\tthis.x -= left;\n\t\tthis.y -= top;\n\t\tthis.width += left+right;\n\t\tthis.height += top+bottom;\n\t\treturn this;\n\t};\n\t\n\t/**\n\t * Copies all properties from the specified rectangle to this rectangle.\n\t * @method copy\n\t * @param {Rectangle} rectangle The rectangle to copy properties from.\n\t * @return {Rectangle} This rectangle. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tp.copy = function(rectangle) {\n\t\treturn this.setValues(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n\t};\n\t\n\t/** \n\t * Returns true if this rectangle fully encloses the described point or rectangle.\n\t * @method contains\n\t * @param {Number} x X position of the point or rectangle.\n\t * @param {Number} y Y position of the point or rectangle.\n\t * @param {Number} [width=0] The width of the rectangle.\n\t * @param {Number} [height=0] The height of the rectangle.\n\t * @return {Boolean} True if the described point or rectangle is contained within this rectangle.\n\t*/\n\tp.contains = function(x, y, width, height) {\n\t\twidth = width||0;\n\t\theight = height||0;\n\t\treturn (x >= this.x && x+width <= this.x+this.width && y >= this.y && y+height <= this.y+this.height);\n\t};\n\t\n\t/** \n\t * Returns a new rectangle which contains this rectangle and the specified rectangle.\n\t * @method union\n\t * @param {Rectangle} rect The rectangle to calculate a union with.\n\t * @return {Rectangle} A new rectangle describing the union.\n\t*/\n\tp.union = function(rect) {\n\t\treturn this.clone().extend(rect.x, rect.y, rect.width, rect.height);\n\t};\n\t\n\t/** \n\t * Returns a new rectangle which describes the intersection (overlap) of this rectangle and the specified rectangle,\n\t * or null if they do not intersect.\n\t * @method intersection\n\t * @param {Rectangle} rect The rectangle to calculate an intersection with.\n\t * @return {Rectangle} A new rectangle describing the intersection or null.\n\t*/\n\tp.intersection = function(rect) {\n\t\tvar x1 = rect.x, y1 = rect.y, x2 = x1+rect.width, y2 = y1+rect.height;\n\t\tif (this.x > x1) { x1 = this.x; }\n\t\tif (this.y > y1) { y1 = this.y; }\n\t\tif (this.x + this.width < x2) { x2 = this.x + this.width; }\n\t\tif (this.y + this.height < y2) { y2 = this.y + this.height; }\n\t\treturn (x2 <= x1 || y2 <= y1) ? null : new Rectangle(x1, y1, x2-x1, y2-y1);\n\t};\n\t\n\t/** \n\t * Returns true if the specified rectangle intersects (has any overlap) with this rectangle.\n\t * @method intersects\n\t * @param {Rectangle} rect The rectangle to compare.\n\t * @return {Boolean} True if the rectangles intersect.\n\t*/\n\tp.intersects = function(rect) {\n\t\treturn (rect.x <= this.x+this.width && this.x <= rect.x+rect.width && rect.y <= this.y+this.height && this.y <= rect.y + rect.height);\n\t};\n\t\n\t/** \n\t * Returns true if the width or height are equal or less than 0.\n\t * @method isEmpty\n\t * @return {Boolean} True if the rectangle is empty.\n\t*/\n\tp.isEmpty = function() {\n\t\treturn this.width <= 0 || this.height <= 0;\n\t};\n\t\n\t/**\n\t * Returns a clone of the Rectangle instance.\n\t * @method clone\n\t * @return {Rectangle} a clone of the Rectangle instance.\n\t **/\n\tp.clone = function() {\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[Rectangle (x=\"+this.x+\" y=\"+this.y+\" width=\"+this.width+\" height=\"+this.height+\")]\";\n\t};\n\t\n\t\n\tcreatejs.Rectangle = Rectangle;\n}());\n\n//##############################################################################\n// ButtonHelper.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * The ButtonHelper is a helper class to create interactive buttons from {{#crossLink \"MovieClip\"}}{{/crossLink}} or\n\t * {{#crossLink \"Sprite\"}}{{/crossLink}} instances. This class will intercept mouse events from an object, and\n\t * automatically call {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} or {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}},\n\t * to the respective animation labels, add a pointer cursor, and allows the user to define a hit state frame.\n\t *\n\t * The ButtonHelper instance does not need to be added to the stage, but a reference should be maintained to prevent\n\t * garbage collection.\n\t * \n\t * Note that over states will not work unless you call {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var helper = new createjs.ButtonHelper(myInstance, \"out\", \"over\", \"down\", false, myInstance, \"hit\");\n\t *      myInstance.addEventListener(\"click\", handleClick);\n\t *      function handleClick(event) {\n\t *          // Click Happened.\n\t *      }\n\t *\n\t * @class ButtonHelper\n\t * @param {Sprite|MovieClip} target The instance to manage.\n\t * @param {String} [outLabel=\"out\"] The label or animation to go to when the user rolls out of the button.\n\t * @param {String} [overLabel=\"over\"] The label or animation to go to when the user rolls over the button.\n\t * @param {String} [downLabel=\"down\"] The label or animation to go to when the user presses the button.\n\t * @param {Boolean} [play=false] If the helper should call \"gotoAndPlay\" or \"gotoAndStop\" on the button when changing\n\t * states.\n\t * @param {DisplayObject} [hitArea] An optional item to use as the hit state for the button. If this is not defined,\n\t * then the button's visible states will be used instead. Note that the same instance as the \"target\" argument can be\n\t * used for the hitState.\n\t * @param {String} [hitLabel] The label or animation on the hitArea instance that defines the hitArea bounds. If this is\n\t * null, then the default state of the hitArea will be used. *\n\t * @constructor\n\t */\n\tfunction ButtonHelper(target, outLabel, overLabel, downLabel, play, hitArea, hitLabel) {\n\t\tif (!target.addEventListener) { return; }\n\t\n\t\n\t// public properties:\n\t\t/**\n\t\t * The target for this button helper.\n\t\t * @property target\n\t\t * @type MovieClip | Sprite\n\t\t * @readonly\n\t\t **/\n\t\tthis.target = target;\n\t\n\t\t/**\n\t\t * The label name or frame number to display when the user mouses out of the target. Defaults to \"over\".\n\t\t * @property overLabel\n\t\t * @type String | Number\n\t\t **/\n\t\tthis.overLabel = overLabel == null ? \"over\" : overLabel;\n\t\n\t\t/**\n\t\t * The label name or frame number to display when the user mouses over the target. Defaults to \"out\".\n\t\t * @property outLabel\n\t\t * @type String | Number\n\t\t **/\n\t\tthis.outLabel = outLabel == null ? \"out\" : outLabel;\n\t\n\t\t/**\n\t\t * The label name or frame number to display when the user presses on the target. Defaults to \"down\".\n\t\t * @property downLabel\n\t\t * @type String | Number\n\t\t **/\n\t\tthis.downLabel = downLabel == null ? \"down\" : downLabel;\n\t\n\t\t/**\n\t\t * If true, then ButtonHelper will call gotoAndPlay, if false, it will use gotoAndStop. Default is false.\n\t\t * @property play\n\t\t * @default false\n\t\t * @type Boolean\n\t\t **/\n\t\tthis.play = play;\n\t\t\n\t\t\n\t//  private properties\n\t\t/**\n\t\t * @property _isPressed\n\t\t * @type Boolean\n\t\t * @protected\n\t\t **/\n\t\tthis._isPressed = false;\n\t\n\t\t/**\n\t\t * @property _isOver\n\t\t * @type Boolean\n\t\t * @protected\n\t\t **/\n\t\tthis._isOver = false;\n\t\n\t\t/**\n\t\t * @property _enabled\n\t\t * @type Boolean\n\t\t * @protected\n\t\t **/\n\t\tthis._enabled = false;\n\t\t\n\t// setup:\n\t\ttarget.mouseChildren = false; // prevents issues when children are removed from the display list when state changes.\n\t\tthis.enabled = true;\n\t\tthis.handleEvent({});\n\t\tif (hitArea) {\n\t\t\tif (hitLabel) {\n\t\t\t\thitArea.actionsEnabled = false;\n\t\t\t\thitArea.gotoAndStop&&hitArea.gotoAndStop(hitLabel);\n\t\t\t}\n\t\t\ttarget.hitArea = hitArea;\n\t\t}\n\t}\n\tvar p = ButtonHelper.prototype;\n\t\n// getter / setters:\n\t/**\n\t * Use the {{#crossLink \"ButtonHelper/enabled:property\"}}{{/crossLink}} property instead.\n\t * @method setEnabled\n\t * @param {Boolean} value The enabled property to set the instance to.\n\t * @[rptected\n\t * @protected\n\t **/\n\tp._setEnabled = function(value) {\n\t\tif (value == this._enabled) { return; }\n\t\tvar o = this.target;\n\t\tthis._enabled = value;\n\t\tif (value) {\n\t\t\to.cursor = \"pointer\";\n\t\t\to.addEventListener(\"rollover\", this);\n\t\t\to.addEventListener(\"rollout\", this);\n\t\t\to.addEventListener(\"mousedown\", this);\n\t\t\to.addEventListener(\"pressup\", this);\n\t\t\tif (o._reset) { o.__reset = o._reset; o._reset = this._reset;}\n\t\t} else {\n\t\t\to.cursor = null;\n\t\t\to.removeEventListener(\"rollover\", this);\n\t\t\to.removeEventListener(\"rollout\", this);\n\t\t\to.removeEventListener(\"mousedown\", this);\n\t\t\to.removeEventListener(\"pressup\", this);\n\t\t\tif (o.__reset) { o._reset = o.__reset; delete(o.__reset); }\n\t\t}\n\t};\n\t// ButtonHelper.setEnabled is @deprecated. Remove for 1.1+\n\tp.setEnabled = createjs.deprecate(p._setEnabled, \"ButtonHelper.setEnabled\");\n\n\t/**\n\t * Use the {{#crossLink \"ButtonHelper/enabled:property\"}}{{/crossLink}} property instead.\n\t * @method getEnabled\n\t * @protected\n\t * @return {Boolean}\n\t **/\n\tp._getEnabled = function() {\n\t\treturn this._enabled;\n\t};\n\t// ButtonHelper.getEnabled is @deprecated. Remove for 1.1+\n\tp.getEnabled = createjs.deprecate(p._getEnabled, \"ButtonHelper.getEnabled\");\n\n\t/**\n\t * Enables or disables the button functionality on the target.\n\t * @property enabled\n\t * @type {Boolean}\n\t **/\n\ttry {\n\t\tObject.defineProperties(p, {\n\t\t\tenabled: { get: p._getEnabled, set: p._setEnabled }\n\t\t});\n\t} catch (e) {} // TODO: use Log\n\n\n// public methods:\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[ButtonHelper]\";\n\t};\n\n\n// private methods:\n\t/**\n\t * @method handleEvent\n\t * @param {Object} evt The mouse event to handle.\n\t * @protected\n\t **/\n\tp.handleEvent = function(evt) {\n\t\tvar label, t = this.target, type = evt.type;\n\t\tif (type == \"mousedown\") {\n\t\t\tthis._isPressed = true;\n\t\t\tlabel = this.downLabel;\n\t\t} else if (type == \"pressup\") {\n\t\t\tthis._isPressed = false;\n\t\t\tlabel = this._isOver ? this.overLabel : this.outLabel;\n\t\t} else if (type == \"rollover\") {\n\t\t\tthis._isOver = true;\n\t\t\tlabel = this._isPressed ? this.downLabel : this.overLabel;\n\t\t} else { // rollout and default\n\t\t\tthis._isOver = false;\n\t\t\tlabel = this._isPressed ? this.overLabel : this.outLabel;\n\t\t}\n\t\tif (this.play) {\n\t\t\tt.gotoAndPlay&&t.gotoAndPlay(label);\n\t\t} else {\n\t\t\tt.gotoAndStop&&t.gotoAndStop(label);\n\t\t}\n\t};\n\t\n\t/**\n\t * Injected into target. Preserves the paused state through a reset.\n\t * @method _reset\n\t * @protected\n\t **/\n\tp._reset = function() {\n\t\t// TODO: explore better ways to handle this issue. This is hacky & disrupts object signatures.\n\t\tvar p = this.paused;\n\t\tthis.__reset();\n\t\tthis.paused = p;\n\t};\n\n\n\tcreatejs.ButtonHelper = ButtonHelper;\n}());\n\n//##############################################################################\n// Shadow.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * This class encapsulates the properties required to define a shadow to apply to a {{#crossLink \"DisplayObject\"}}{{/crossLink}}\n\t * via its <code>shadow</code> property.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      myImage.shadow = new createjs.Shadow(\"#000000\", 5, 5, 10);\n\t *\n\t * @class Shadow\n\t * @constructor\n\t * @param {String} color The color of the shadow. This can be any valid CSS color value.\n\t * @param {Number} offsetX The x offset of the shadow in pixels.\n\t * @param {Number} offsetY The y offset of the shadow in pixels.\n\t * @param {Number} blur The size of the blurring effect.\n\t **/\n\tfunction Shadow(color, offsetX, offsetY, blur) {\n\t\t\n\t\t\n\t// public properties:\n\t\t/** \n\t\t * The color of the shadow. This can be any valid CSS color value.\n\t\t * @property color\n\t\t * @type String\n\t\t * @default null\n\t\t */\n\t\tthis.color = color||\"black\";\n\t\n\t\t/** The x offset of the shadow.\n\t\t * @property offsetX\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n\t\tthis.offsetX = offsetX||0;\n\t\n\t\t/** The y offset of the shadow.\n\t\t * @property offsetY\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n\t\tthis.offsetY = offsetY||0;\n\t\n\t\t/** The blur of the shadow.\n\t\t * @property blur\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n\t\tthis.blur = blur||0;\n\t}\n\tvar p = Shadow.prototype;\n\n// static public properties:\n\t/**\n\t * An identity shadow object (all properties are set to 0).\n\t * @property identity\n\t * @type Shadow\n\t * @static\n\t * @final\n\t * @readonly\n\t **/\n\tShadow.identity = new Shadow(\"transparent\", 0, 0, 0);\n\n\n// public methods:\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[Shadow]\";\n\t};\n\n\t/**\n\t * Returns a clone of this Shadow instance.\n\t * @method clone\n\t * @return {Shadow} A clone of the current Shadow instance.\n\t **/\n\tp.clone = function() {\n\t\treturn new Shadow(this.color, this.offsetX, this.offsetY, this.blur);\n\t};\n\t\n\n\tcreatejs.Shadow = Shadow;\n}());\n\n//##############################################################################\n// SpriteSheet.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Encapsulates the properties and methods associated with a sprite sheet. A sprite sheet is a series of images (usually\n\t * animation frames) combined into a larger image (or images). For example, an animation consisting of eight 100x100\n\t * images could be combined into a single 400x200 sprite sheet (4 frames across by 2 high).\n\t *\n\t * The data passed to the SpriteSheet constructor defines:\n\t * <ol>\n\t * \t<li> The source image or images to use.</li>\n\t * \t<li> The positions of individual image frames.</li>\n\t * \t<li> Sequences of frames that form named animations. Optional.</li>\n\t * \t<li> The target playback framerate. Optional.</li>\n\t * </ol>\n\t * <h3>SpriteSheet Format</h3>\n\t * SpriteSheets are an object with two required properties (`images` and `frames`), and two optional properties\n\t * (`framerate` and `animations`). This makes them easy to define in javascript code, or in JSON.\n\t *\n\t * <h4>images</h4>\n\t * An array of source images. Images can be either an HTMlimage\n\t * instance, or a uri to an image. The former is recommended to control preloading.\n\t *\n\t * \timages: [image1, \"path/to/image2.png\"],\n\t *\n\t * <h4>frames</h4>\n\t * Defines the individual frames. There are two supported formats for frame data:\n\t * When all of the frames are the same size (in a grid), use an object with `width`, `height`, `regX`, `regY`,\n\t * and `count` properties.\n\t *\n\t * <ul>\n\t *  <li>`width` & `height` are required and specify the dimensions of the frames</li>\n\t *  <li>`regX` & `regY` indicate the registration point or \"origin\" of the frames</li>\n\t *  <li>`spacing` indicate the spacing between frames</li>\n\t *  <li>`margin` specify the margin around the image(s)</li>\n\t *  <li>`count` allows you to specify the total number of frames in the spritesheet; if omitted, this will\n\t *  be calculated based on the dimensions of the source images and the frames. Frames will be assigned\n\t *  indexes based on their position in the source images (left to right, top to bottom).</li>\n\t * </ul>\n\t *\n\t *  \tframes: {width:64, height:64, count:20, regX: 32, regY:64, spacing:0, margin:0}\n\t *\n\t * If the frames are of different sizes, use an array of frame definitions. Each definition is itself an array\n\t * with 4 required and 3 optional entries, in the order:\n\t *\n\t * <ul>\n\t *  <li>The first four, `x`, `y`, `width`, and `height` are required and define the frame rectangle.</li>\n\t *  <li>The fifth, `imageIndex`, specifies the index of the source image (defaults to 0)</li>\n\t *  <li>The last two, `regX` and `regY` specify the registration point of the frame</li>\n\t * </ul>\n\t *\n\t * \tframes: [\n\t * \t\t// x, y, width, height, imageIndex*, regX*, regY*\n\t * \t\t[64, 0, 96, 64],\n\t * \t\t[0, 0, 64, 64, 1, 32, 32]\n\t * \t\t// etc.\n\t * \t]\n\t *\n\t * <h4>animations</h4>\n\t * Optional. An object defining sequences of frames to play as named animations. Each property corresponds to an\n\t * animation of the same name. Each animation must specify the frames to play, and may\n\t * also include a relative playback `speed` (ex. 2 would playback at double speed, 0.5 at half), and\n\t * the name of the `next` animation to sequence to after it completes.\n\t *\n\t * There are three formats supported for defining the frames in an animation, which can be mixed and matched as appropriate:\n\t * <ol>\n\t * \t<li>for a single frame animation, you can simply specify the frame index\n\t *\n\t * \t\tanimations: {\n\t * \t\t\tsit: 7\n\t * \t\t}\n\t *\n\t * </li>\n\t * <li>\n\t *      for an animation of consecutive frames, you can use an array with two required, and two optional entries\n\t * \t\tin the order: `start`, `end`, `next`, and `speed`. This will play the frames from start to end inclusive.\n\t *\n\t * \t\tanimations: {\n\t * \t\t\t// start, end, next*, speed*\n\t * \t\t\trun: [0, 8],\n\t * \t\t\tjump: [9, 12, \"run\", 2]\n\t * \t\t}\n\t *\n\t *  </li>\n\t *  <li>\n\t *     for non-consecutive frames, you can use an object with a `frames` property defining an array of frame\n\t *     indexes to play in order. The object can also specify `next` and `speed` properties.\n\t *\n\t * \t\tanimations: {\n\t * \t\t\twalk: {\n\t * \t\t\t\tframes: [1,2,3,3,2,1]\n\t * \t\t\t},\n\t * \t\t\tshoot: {\n\t * \t\t\t\tframes: [1,4,5,6],\n\t * \t\t\t\tnext: \"walk\",\n\t * \t\t\t\tspeed: 0.5\n\t * \t\t\t}\n\t * \t\t}\n\t *\n\t *  </li>\n\t * </ol>\n\t * <strong>Note:</strong> the `speed` property was added in EaselJS 0.7.0. Earlier versions had a `frequency`\n\t * property instead, which was the inverse of `speed`. For example, a value of \"4\" would be 1/4 normal speed in\n\t * earlier versions, but is 4x normal speed in EaselJS 0.7.0+.\n\t *\n\t * <h4>framerate</h4>\n\t * Optional. Indicates the default framerate to play this spritesheet at in frames per second. See\n\t * {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} for more information.\n\t *\n\t * \t\tframerate: 20\n\t *\n\t * Note that the Sprite framerate will only work if the stage update method is provided with the {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\n\t * event generated by the {{#crossLink \"Ticker\"}}{{/crossLink}}.\n\t *\n\t * \t\tcreatejs.Ticker.on(\"tick\", handleTick);\n\t * \t\tfunction handleTick(event) {\n\t *\t\t\tstage.update(event);\n\t *\t\t}\n\t *\n\t * <h3>Example</h3>\n\t * To define a simple sprite sheet, with a single image \"sprites.jpg\" arranged in a regular 50x50 grid with three\n\t * animations: \"stand\" showing the first frame, \"run\" looping frame 1-5 inclusive, and \"jump\" playing frame 6-8 and\n\t * sequencing back to run.\n\t *\n\t * \t\tvar data = {\n\t * \t\t\timages: [\"sprites.jpg\"],\n\t * \t\t\tframes: {width:50, height:50},\n\t * \t\t\tanimations: {\n\t * \t\t\t\tstand:0,\n\t * \t\t\t\trun:[1,5],\n\t * \t\t\t\tjump:[6,8,\"run\"]\n\t * \t\t\t}\n\t * \t\t};\n\t * \t\tvar spriteSheet = new createjs.SpriteSheet(data);\n\t * \t\tvar animation = new createjs.Sprite(spriteSheet, \"run\");\n\t *\n\t * <h3>Generating SpriteSheet Images</h3>\n\t * Spritesheets can be created manually by combining images in PhotoShop, and specifying the frame size or\n\t * coordinates manually, however there are a number of tools that facilitate this.\n\t * <ul>\n\t *     <li>Exporting SpriteSheets or HTML5 content from Adobe Flash/Animate supports the EaselJS SpriteSheet format.</li>\n\t *     <li>The popular <a href=\"https://www.codeandweb.com/texturepacker/easeljs\" target=\"_blank\">Texture Packer</a> has\n\t *     EaselJS support.\n\t *     <li>SWF animations in Adobe Flash/Animate can be exported to SpriteSheets using <a href=\"http://createjs.com/zoe\" target=\"_blank\">Zo&euml;</a></li>\n\t * </ul>\n\t *\n\t * <h3>Cross Origin Issues</h3>\n\t * <strong>Warning:</strong> Images loaded cross-origin will throw cross-origin security errors when interacted with\n\t * using:\n\t * <ul>\n\t *     <li>a mouse</li>\n\t *     <li>methods such as {{#crossLink \"Container/getObjectUnderPoint\"}}{{/crossLink}}</li>\n\t *     <li>Filters (see {{#crossLink \"Filter\"}}{{/crossLink}})</li>\n\t *     <li>caching (see {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}})</li>\n\t * </ul>\n\t * You can get around this by setting `crossOrigin` property on your images before passing them to EaselJS, or\n\t * setting the `crossOrigin` property on PreloadJS' LoadQueue or LoadItems.\n\t *\n\t * \t\tvar image = new Image();\n\t * \t\timg.crossOrigin=\"Anonymous\";\n\t * \t\timg.src = \"http://server-with-CORS-support.com/path/to/image.jpg\";\n\t *\n\t * If you pass string paths to SpriteSheets, they will not work cross-origin. The server that stores the image must\n\t * support cross-origin requests, or this will not work. For more information, check out\n\t * <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS\" target=\"_blank\">CORS overview on MDN</a>.\n\t *\n\t * @class SpriteSheet\n\t * @constructor\n\t * @param {Object} data An object describing the SpriteSheet data.\n\t * @extends EventDispatcher\n\t **/\n\tfunction SpriteSheet(data) {\n\t\tthis.EventDispatcher_constructor();\n\n\n\t\t// public properties:\n\t\t/**\n\t\t * Indicates whether all images are finished loading.\n\t\t * @property complete\n\t\t * @type Boolean\n\t\t * @readonly\n\t\t **/\n\t\tthis.complete = true;\n\n\t\t/**\n\t\t * Specifies the framerate to use by default for Sprite instances using the SpriteSheet. See the Sprite class\n\t\t * {{#crossLink \"Sprite/framerate:property\"}}{{/crossLink}} for more information.\n\t\t * @property framerate\n\t\t * @type Number\n\t\t **/\n\t\tthis.framerate = 0;\n\n\n\t\t// private properties:\n\t\t/**\n\t\t * @property _animations\n\t\t * @protected\n\t\t * @type Array\n\t\t **/\n\t\tthis._animations = null;\n\n\t\t/**\n\t\t * @property _frames\n\t\t * @protected\n\t\t * @type Array\n\t\t **/\n\t\tthis._frames = null;\n\n\t\t/**\n\t\t * @property _images\n\t\t * @protected\n\t\t * @type Array\n\t\t **/\n\t\tthis._images = null;\n\n\t\t/**\n\t\t * @property _data\n\t\t * @protected\n\t\t * @type Object\n\t\t **/\n\t\tthis._data = null;\n\n\t\t/**\n\t\t * @property _loadCount\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n\t\tthis._loadCount = 0;\n\n\t\t// only used for simple frame defs:\n\t\t/**\n\t\t * @property _frameHeight\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n\t\tthis._frameHeight = 0;\n\n\t\t/**\n\t\t * @property _frameWidth\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n\t\tthis._frameWidth = 0;\n\n\t\t/**\n\t\t * @property _numFrames\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n\t\tthis._numFrames = 0;\n\n\t\t/**\n\t\t * @property _regX\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n\t\tthis._regX = 0;\n\n\t\t/**\n\t\t * @property _regY\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n\t\tthis._regY = 0;\n\n\t\t/**\n\t\t * @property _spacing\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n\t\tthis._spacing = 0;\n\n\t\t/**\n\t\t * @property _margin\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n\t\tthis._margin = 0;\n\n\t\t// setup:\n\t\tthis._parseData(data);\n\t}\n\tvar p = createjs.extend(SpriteSheet, createjs.EventDispatcher);\n\n\t// TODO: deprecated\n\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n\n// events:\n\t/**\n\t * Dispatched when all images are loaded.  Note that this only fires if the images\n\t * were not fully loaded when the sprite sheet was initialized. You should check the complete property\n\t * to prior to adding a listener. Ex.\n\t *\n\t * \tvar sheet = new createjs.SpriteSheet(data);\n\t * \tif (!sheet.complete) {\n\t * \t\t// not preloaded, listen for the complete event:\n\t * \t\tsheet.addEventListener(\"complete\", handler);\n\t * \t}\n\t *\n\t * @event complete\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when getFrame is called with a valid frame index. This is primarily intended for use by {{#crossLink \"SpriteSheetBuilder\"}}{{/crossLink}}\n\t * when doing on-demand rendering.\n\t * @event getframe\n\t * @param {Number} index The frame index.\n\t * @param {Object} frame The frame object that getFrame will return.\n\t */\n\n\t/**\n\t * Dispatched when an image encounters an error. A SpriteSheet will dispatch an error event for each image that\n\t * encounters an error, and will still dispatch a {{#crossLink \"SpriteSheet/complete:event\"}}{{/crossLink}}\n\t * event once all images are finished processing, even if an error is encountered.\n\t * @event error\n\t * @param {String} src The source of the image that failed to load.\n\t * @since 0.8.2\n\t */\n\n\n// getter / setters:\n\t/**\n\t * Use the {{#crossLink \"SpriteSheet/animations:property\"}}{{/crossLink}} property instead.\n\t * @method _getAnimations\n\t * @protected\n\t * @return {Array}\n\t **/\n\tp._getAnimations = function() {\n\t\treturn this._animations.slice();\n\t};\n\t// SpriteSheet.getAnimations is @deprecated. Remove for 1.1+\n\tp.getAnimations = createjs.deprecate(p._getAnimations, \"SpriteSheet.getAnimations\");\n\n\t/**\n\t * Returns an array of all available animation names available on this sprite sheet as strings.\n\t * @property animations\n\t * @type {Array}\n\t * @readonly\n\t **/\n\ttry {\n\t\tObject.defineProperties(p, {\n\t\t\tanimations: { get: p._getAnimations }\n\t\t});\n\t} catch (e) {}\n\n\n// public methods:\n\t/**\n\t * Returns the total number of frames in the specified animation, or in the whole sprite\n\t * sheet if the animation param is omitted. Returns 0 if the spritesheet relies on calculated frame counts, and\n\t * the images have not been fully loaded.\n\t * @method getNumFrames\n\t * @param {String} animation The name of the animation to get a frame count for.\n\t * @return {Number} The number of frames in the animation, or in the entire sprite sheet if the animation param is omitted.\n\t */\n\tp.getNumFrames = function(animation) {\n\t\tif (animation == null) {\n\t\t\treturn this._frames ? this._frames.length : this._numFrames || 0;\n\t\t} else {\n\t\t\tvar data = this._data[animation];\n\t\t\tif (data == null) { return 0; }\n\t\t\telse { return data.frames.length; }\n\t\t}\n\t};\n\n\t/**\n\t * Returns an object defining the specified animation. The returned object contains:<UL>\n\t * \t<li>frames: an array of the frame ids in the animation</li>\n\t * \t<li>speed: the playback speed for this animation</li>\n\t * \t<li>name: the name of the animation</li>\n\t * \t<li>next: the default animation to play next. If the animation loops, the name and next property will be the\n\t * \tsame.</li>\n\t * </UL>\n\t * @method getAnimation\n\t * @param {String} name The name of the animation to get.\n\t * @return {Object} a generic object with frames, speed, name, and next properties.\n\t **/\n\tp.getAnimation = function(name) {\n\t\treturn this._data[name];\n\t};\n\n\t/**\n\t * Returns an object specifying the image and source rect of the specified frame. The returned object has:<UL>\n\t * \t<li>an image property holding a reference to the image object in which the frame is found</li>\n\t * \t<li>a rect property containing a Rectangle instance which defines the boundaries for the frame within that\n\t * \timage.</li>\n\t * \t<li> A regX and regY property corresponding to the regX/Y values for the frame.\n\t * </UL>\n\t * @method getFrame\n\t * @param {Number} frameIndex The index of the frame.\n\t * @return {Object} a generic object with image and rect properties. Returns null if the frame does not exist.\n\t **/\n\tp.getFrame = function(frameIndex) {\n\t\tvar frame;\n\t\tif (this._frames && (frame=this._frames[frameIndex])) { return frame; }\n\t\treturn null;\n\t};\n\n\t/**\n\t * Returns a {{#crossLink \"Rectangle\"}}{{/crossLink}} instance defining the bounds of the specified frame relative\n\t * to the origin. For example, a 90 x 70 frame with a regX of 50 and a regY of 40 would return:\n\t *\n\t * \t[x=-50, y=-40, width=90, height=70]\n\t *\n\t * @method getFrameBounds\n\t * @param {Number} frameIndex The index of the frame.\n\t * @param {Rectangle} [rectangle] A Rectangle instance to copy the values into. By default a new instance is created.\n\t * @return {Rectangle} A Rectangle instance. Returns null if the frame does not exist, or the image is not fully loaded.\n\t **/\n\tp.getFrameBounds = function(frameIndex, rectangle) {\n\t\tvar frame = this.getFrame(frameIndex);\n\t\treturn frame ? (rectangle||new createjs.Rectangle()).setValues(-frame.regX, -frame.regY, frame.rect.width, frame.rect.height) : null;\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[SpriteSheet]\";\n\t};\n\n\t/**\n\t * SpriteSheet cannot be cloned. A SpriteSheet can be shared by multiple Sprite instances without cloning it.\n\t * @method clone\n\t **/\n\tp.clone = function() {\n\t\tthrow(\"SpriteSheet cannot be cloned.\")\n\t};\n\n// private methods:\n\t/**\n\t * @method _parseData\n\t * @param {Object} data An object describing the SpriteSheet data.\n\t * @protected\n\t **/\n\tp._parseData = function(data) {\n\t\tvar i,l,o,a;\n\t\tif (data == null) { return; }\n\n\t\tthis.framerate = data.framerate||0;\n\n\t\t// parse images:\n\t\tif (data.images && (l=data.images.length) > 0) {\n\t\t\ta = this._images = [];\n\t\t\tfor (i=0; i<l; i++) {\n\t\t\t\tvar img = data.images[i];\n\t\t\t\tif (typeof img == \"string\") {\n\t\t\t\t\tvar src = img;\n\t\t\t\t\timg = document.createElement(\"img\");\n\t\t\t\t\timg.src = src;\n\t\t\t\t}\n\t\t\t\ta.push(img);\n\t\t\t\tif (!img.getContext && !img.naturalWidth) {\n\t\t\t\t\tthis._loadCount++;\n\t\t\t\t\tthis.complete = false;\n\t\t\t\t\t(function(o, src) { img.onload = function() { o._handleImageLoad(src); } })(this, src);\n\t\t\t\t\t(function(o, src) { img.onerror = function() { o._handleImageError(src); } })(this, src);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// parse frames:\n\t\tif (data.frames == null) { // nothing\n\t\t} else if (Array.isArray(data.frames)) {\n\t\t\tthis._frames = [];\n\t\t\ta = data.frames;\n\t\t\tfor (i=0,l=a.length;i<l;i++) {\n\t\t\t\tvar arr = a[i];\n\t\t\t\tthis._frames.push({image:this._images[arr[4]?arr[4]:0], rect:new createjs.Rectangle(arr[0],arr[1],arr[2],arr[3]), regX:arr[5]||0, regY:arr[6]||0 });\n\t\t\t}\n\t\t} else {\n\t\t\to = data.frames;\n\t\t\tthis._frameWidth = o.width;\n\t\t\tthis._frameHeight = o.height;\n\t\t\tthis._regX = o.regX||0;\n\t\t\tthis._regY = o.regY||0;\n\t\t\tthis._spacing = o.spacing||0;\n\t\t\tthis._margin = o.margin||0;\n\t\t\tthis._numFrames = o.count;\n\t\t\tif (this._loadCount == 0) { this._calculateFrames(); }\n\t\t}\n\n\t\t// parse animations:\n\t\tthis._animations = [];\n\t\tif ((o=data.animations) != null) {\n\t\t\tthis._data = {};\n\t\t\tvar name;\n\t\t\tfor (name in o) {\n\t\t\t\tvar anim = {name:name};\n\t\t\t\tvar obj = o[name];\n\t\t\t\tif (typeof obj == \"number\") { // single frame\n\t\t\t\t\ta = anim.frames = [obj];\n\t\t\t\t} else if (Array.isArray(obj)) { // simple\n\t\t\t\t\tif (obj.length == 1) { anim.frames = [obj[0]]; }\n\t\t\t\t\telse {\n\t\t\t\t\t\tanim.speed = obj[3];\n\t\t\t\t\t\tanim.next = obj[2];\n\t\t\t\t\t\ta = anim.frames = [];\n\t\t\t\t\t\tfor (i=obj[0];i<=obj[1];i++) {\n\t\t\t\t\t\t\ta.push(i);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else { // complex\n\t\t\t\t\tanim.speed = obj.speed;\n\t\t\t\t\tanim.next = obj.next;\n\t\t\t\t\tvar frames = obj.frames;\n\t\t\t\t\ta = anim.frames = (typeof frames == \"number\") ? [frames] : frames.slice(0);\n\t\t\t\t}\n\t\t\t\tif (anim.next === true || anim.next === undefined) { anim.next = name; } // loop\n\t\t\t\tif (anim.next === false || (a.length < 2 && anim.next == name)) { anim.next = null; } // stop\n\t\t\t\tif (!anim.speed) { anim.speed = 1; }\n\t\t\t\tthis._animations.push(name);\n\t\t\t\tthis._data[name] = anim;\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * @method _handleImageLoad\n\t * @protected\n\t **/\n\tp._handleImageLoad = function(src) {\n\t\tif (--this._loadCount == 0) {\n\t\t\tthis._calculateFrames();\n\t\t\tthis.complete = true;\n\t\t\tthis.dispatchEvent(\"complete\");\n\t\t}\n\t};\n\n\t/**\n\t * @method _handleImageError\n\t * @protected\n\t */\n\tp._handleImageError = function (src) {\n\t\tvar errorEvent = new createjs.Event(\"error\");\n\t\terrorEvent.src = src;\n\t\tthis.dispatchEvent(errorEvent);\n\n\t\t// Complete is still dispatched.\n\t\tif (--this._loadCount == 0) {\n\t\t\tthis.dispatchEvent(\"complete\");\n\t\t}\n\t};\n\n\t/**\n\t * @method _calculateFrames\n\t * @protected\n\t **/\n\tp._calculateFrames = function() {\n\t\tif (this._frames || this._frameWidth == 0) { return; }\n\n\t\tthis._frames = [];\n\n\t\tvar maxFrames = this._numFrames || 100000; // if we go over this, something is wrong.\n\t\tvar frameCount = 0, frameWidth = this._frameWidth, frameHeight = this._frameHeight;\n\t\tvar spacing = this._spacing, margin = this._margin;\n\t\t\n\t\timgLoop:\n\t\tfor (var i=0, imgs=this._images; i<imgs.length; i++) {\n\t\t\tvar img = imgs[i], imgW = (img.width||img.naturalWidth), imgH = (img.height||img.naturalHeight);\n\n\t\t\tvar y = margin;\n\t\t\twhile (y <= imgH-margin-frameHeight) {\n\t\t\t\tvar x = margin;\n\t\t\t\twhile (x <= imgW-margin-frameWidth) {\n\t\t\t\t\tif (frameCount >= maxFrames) { break imgLoop; }\n\t\t\t\t\tframeCount++;\n\t\t\t\t\tthis._frames.push({\n\t\t\t\t\t\t\timage: img,\n\t\t\t\t\t\t\trect: new createjs.Rectangle(x, y, frameWidth, frameHeight),\n\t\t\t\t\t\t\tregX: this._regX,\n\t\t\t\t\t\t\tregY: this._regY\n\t\t\t\t\t\t});\n\t\t\t\t\tx += frameWidth+spacing;\n\t\t\t\t}\n\t\t\t\ty += frameHeight+spacing;\n\t\t\t}\n\t\t}\n\t\tthis._numFrames = frameCount;\n\t};\n\n\n\tcreatejs.SpriteSheet = createjs.promote(SpriteSheet, \"EventDispatcher\");\n}());\n\n//##############################################################################\n// Graphics.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * The Graphics class exposes an easy to use API for generating vector drawing instructions and drawing them to a\n\t * specified context. Note that you can use Graphics without any dependency on the EaselJS framework by calling {{#crossLink \"Graphics/draw\"}}{{/crossLink}}\n\t * directly, or it can be used with the {{#crossLink \"Shape\"}}{{/crossLink}} object to draw vector graphics within the\n\t * context of an EaselJS display list.\n\t *\n\t * There are two approaches to working with Graphics object: calling methods on a Graphics instance (the \"Graphics API\"), or\n\t * instantiating Graphics command objects and adding them to the graphics queue via {{#crossLink \"Graphics/append\"}}{{/crossLink}}.\n\t * The former abstracts the latter, simplifying beginning and ending paths, fills, and strokes.\n\t *\n\t *      var g = new createjs.Graphics();\n\t *      g.setStrokeStyle(1);\n\t *      g.beginStroke(\"#000000\");\n\t *      g.beginFill(\"red\");\n\t *      g.drawCircle(0,0,30);\n\t *\n\t * All drawing methods in Graphics return the Graphics instance, so they can be chained together. For example,\n\t * the following line of code would generate the instructions to draw a rectangle with a red stroke and blue fill:\n\t *\n\t *      myGraphics.beginStroke(\"red\").beginFill(\"blue\").drawRect(20, 20, 100, 50);\n\t *\n\t * Each graphics API call generates a command object (see below). The last command to be created can be accessed via\n\t * {{#crossLink \"Graphics/command:property\"}}{{/crossLink}}:\n\t *\n\t *      var fillCommand = myGraphics.beginFill(\"red\").command;\n\t *      // ... later, update the fill style/color:\n\t *      fillCommand.style = \"blue\";\n\t *      // or change it to a bitmap fill:\n\t *      fillCommand.bitmap(myImage);\n\t *\n\t * For more direct control of rendering, you can instantiate and append command objects to the graphics queue directly. In this case, you\n\t * need to manage path creation manually, and ensure that fill/stroke is applied to a defined path:\n\t *\n\t *      // start a new path. Graphics.beginCmd is a reusable BeginPath instance:\n\t *      myGraphics.append(createjs.Graphics.beginCmd);\n\t *      // we need to define the path before applying the fill:\n\t *      var circle = new createjs.Graphics.Circle(0,0,30);\n\t *      myGraphics.append(circle);\n\t *      // fill the path we just defined:\n\t *      var fill = new createjs.Graphics.Fill(\"red\");\n\t *      myGraphics.append(fill);\n\t *\n\t * These approaches can be used together, for example to insert a custom command:\n\t *\n\t *      myGraphics.beginFill(\"red\");\n\t *      var customCommand = new CustomSpiralCommand(etc);\n\t *      myGraphics.append(customCommand);\n\t *      myGraphics.beginFill(\"blue\");\n\t *      myGraphics.drawCircle(0, 0, 30);\n\t *\n\t * See {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more info on creating custom commands.\n\t *\n\t * <h4>Tiny API</h4>\n\t * The Graphics class also includes a \"tiny API\", which is one or two-letter methods that are shortcuts for all of the\n\t * Graphics methods. These methods are great for creating compact instructions, and is used by the Toolkit for CreateJS\n\t * to generate readable code. All tiny methods are marked as protected, so you can view them by enabling protected\n\t * descriptions in the docs.\n\t *\n\t * <table>\n\t *     <tr><td><b>Tiny</b></td><td><b>Method</b></td><td><b>Tiny</b></td><td><b>Method</b></td></tr>\n\t *     <tr><td>mt</td><td>{{#crossLink \"Graphics/moveTo\"}}{{/crossLink}} </td>\n\t *     <td>lt</td> <td>{{#crossLink \"Graphics/lineTo\"}}{{/crossLink}}</td></tr>\n\t *     <tr><td>a/at</td><td>{{#crossLink \"Graphics/arc\"}}{{/crossLink}} / {{#crossLink \"Graphics/arcTo\"}}{{/crossLink}} </td>\n\t *     <td>bt</td><td>{{#crossLink \"Graphics/bezierCurveTo\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>qt</td><td>{{#crossLink \"Graphics/quadraticCurveTo\"}}{{/crossLink}} (also curveTo)</td>\n\t *     <td>r</td><td>{{#crossLink \"Graphics/rect\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>cp</td><td>{{#crossLink \"Graphics/closePath\"}}{{/crossLink}} </td>\n\t *     <td>c</td><td>{{#crossLink \"Graphics/clear\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>f</td><td>{{#crossLink \"Graphics/beginFill\"}}{{/crossLink}} </td>\n\t *     <td>lf</td><td>{{#crossLink \"Graphics/beginLinearGradientFill\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>rf</td><td>{{#crossLink \"Graphics/beginRadialGradientFill\"}}{{/crossLink}} </td>\n\t *     <td>bf</td><td>{{#crossLink \"Graphics/beginBitmapFill\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>ef</td><td>{{#crossLink \"Graphics/endFill\"}}{{/crossLink}} </td>\n\t *     <td>ss / sd</td><td>{{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} / {{#crossLink \"Graphics/setStrokeDash\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>s</td><td>{{#crossLink \"Graphics/beginStroke\"}}{{/crossLink}} </td>\n\t *     <td>ls</td><td>{{#crossLink \"Graphics/beginLinearGradientStroke\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>rs</td><td>{{#crossLink \"Graphics/beginRadialGradientStroke\"}}{{/crossLink}} </td>\n\t *     <td>bs</td><td>{{#crossLink \"Graphics/beginBitmapStroke\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>es</td><td>{{#crossLink \"Graphics/endStroke\"}}{{/crossLink}} </td>\n\t *     <td>dr</td><td>{{#crossLink \"Graphics/drawRect\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>rr</td><td>{{#crossLink \"Graphics/drawRoundRect\"}}{{/crossLink}} </td>\n\t *     <td>rc</td><td>{{#crossLink \"Graphics/drawRoundRectComplex\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>dc</td><td>{{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}} </td>\n\t *     <td>de</td><td>{{#crossLink \"Graphics/drawEllipse\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>dp</td><td>{{#crossLink \"Graphics/drawPolyStar\"}}{{/crossLink}} </td>\n\t *     <td>p</td><td>{{#crossLink \"Graphics/decodePath\"}}{{/crossLink}} </td></tr>\n\t * </table>\n\t *\n\t * Here is the above example, using the tiny API instead.\n\t *\n\t *      myGraphics.s(\"red\").f(\"blue\").r(20, 20, 100, 50);\n\t *\n\t * @class Graphics\n\t * @constructor\n\t **/\n\tfunction Graphics() {\n\n\n\t// public properties\n\t\t/**\n\t\t * Holds a reference to the last command that was created or appended. For example, you could retain a reference\n\t\t * to a Fill command in order to dynamically update the color later by using:\n\t\t *\n\t\t * \t\tvar myFill = myGraphics.beginFill(\"red\").command;\n\t\t * \t\t// update color later:\n\t\t * \t\tmyFill.style = \"yellow\";\n\t\t *\n\t\t * @property command\n\t\t * @type Object\n\t\t **/\n\t\tthis.command = null;\n\n\n\t// private properties\n\t\t/**\n\t\t * @property _stroke\n\t\t * @protected\n\t\t * @type {Stroke}\n\t\t **/\n\t\tthis._stroke = null;\n\n\t\t/**\n\t\t * @property _strokeStyle\n\t\t * @protected\n\t\t * @type {StrokeStyle}\n\t\t **/\n\t\tthis._strokeStyle = null;\n\t\t\n\t\t/**\n\t\t * @property _oldStrokeStyle\n\t\t * @protected\n\t\t * @type {StrokeStyle}\n\t\t **/\n\t\tthis._oldStrokeStyle = null;\n\t\t\n\t\t/**\n\t\t * @property _strokeDash\n\t\t * @protected\n\t\t * @type {StrokeDash}\n\t\t **/\n\t\tthis._strokeDash = null;\n\t\t\n\t\t/**\n\t\t * @property _oldStrokeDash\n\t\t * @protected\n\t\t * @type {StrokeDash}\n\t\t **/\n\t\tthis._oldStrokeDash = null;\n\n\t\t/**\n\t\t * @property _strokeIgnoreScale\n\t\t * @protected\n\t\t * @type Boolean\n\t\t **/\n\t\tthis._strokeIgnoreScale = false;\n\n\t\t/**\n\t\t * @property _fill\n\t\t * @protected\n\t\t * @type {Fill}\n\t\t **/\n\t\tthis._fill = null;\n\n\t\t/**\n\t\t * @property _instructions\n\t\t * @protected\n\t\t * @type {Array}\n\t\t **/\n\t\tthis._instructions = [];\n\n\t\t/**\n\t\t * Indicates the last instruction index that was committed.\n\t\t * @property _commitIndex\n\t\t * @protected\n\t\t * @type {Number}\n\t\t **/\n\t\tthis._commitIndex = 0;\n\n\t\t/**\n\t\t * Uncommitted instructions.\n\t\t * @property _activeInstructions\n\t\t * @protected\n\t\t * @type {Array}\n\t\t **/\n\t\tthis._activeInstructions = [];\n\n\t\t/**\n\t\t * This indicates that there have been changes to the activeInstruction list since the last updateInstructions call.\n\t\t * @property _dirty\n\t\t * @protected\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t **/\n\t\tthis._dirty = false;\n\n\t\t/**\n\t\t * Index to draw from if a store operation has happened.\n\t\t * @property _storeIndex\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n\t\tthis._storeIndex = 0;\n\n\t// setup:\n\t\tthis.clear();\n\t}\n\tvar p = Graphics.prototype;\n\tvar G = Graphics; // shortcut\n\n// static public methods:\n\t/**\n\t * Returns a CSS compatible color string based on the specified RGB numeric color values in the format\n\t * \"rgba(255,255,255,1.0)\", or if alpha is null then in the format \"rgb(255,255,255)\". For example,\n\t *\n\t *      createjs.Graphics.getRGB(50, 100, 150, 0.5);\n\t *      // Returns \"rgba(50,100,150,0.5)\"\n\t *\n\t * It also supports passing a single hex color value as the first param, and an optional alpha value as the second\n\t * param. For example,\n\t *\n\t *      createjs.Graphics.getRGB(0xFF00FF, 0.2);\n\t *      // Returns \"rgba(255,0,255,0.2)\"\n\t *\n\t * @method getRGB\n\t * @static\n\t * @param {Number} r The red component for the color, between 0 and 0xFF (255).\n\t * @param {Number} g The green component for the color, between 0 and 0xFF (255).\n\t * @param {Number} b The blue component for the color, between 0 and 0xFF (255).\n\t * @param {Number} [alpha] The alpha component for the color where 0 is fully transparent and 1 is fully opaque.\n\t * @return {String} A CSS compatible color string based on the specified RGB numeric color values in the format\n\t * \"rgba(255,255,255,1.0)\", or if alpha is null then in the format \"rgb(255,255,255)\".\n\t **/\n\tGraphics.getRGB = function(r, g, b, alpha) {\n\t\tif (r != null && b == null) {\n\t\t\talpha = g;\n\t\t\tb = r&0xFF;\n\t\t\tg = r>>8&0xFF;\n\t\t\tr = r>>16&0xFF;\n\t\t}\n\t\tif (alpha == null) {\n\t\t\treturn \"rgb(\"+r+\",\"+g+\",\"+b+\")\";\n\t\t} else {\n\t\t\treturn \"rgba(\"+r+\",\"+g+\",\"+b+\",\"+alpha+\")\";\n\t\t}\n\t};\n\n\t/**\n\t * Returns a CSS compatible color string based on the specified HSL numeric color values in the format \"hsla(360,100,100,1.0)\",\n\t * or if alpha is null then in the format \"hsl(360,100,100)\".\n\t *\n\t *      createjs.Graphics.getHSL(150, 100, 70);\n\t *      // Returns \"hsl(150,100,70)\"\n\t *\n\t * @method getHSL\n\t * @static\n\t * @param {Number} hue The hue component for the color, between 0 and 360.\n\t * @param {Number} saturation The saturation component for the color, between 0 and 100.\n\t * @param {Number} lightness The lightness component for the color, between 0 and 100.\n\t * @param {Number} [alpha] The alpha component for the color where 0 is fully transparent and 1 is fully opaque.\n\t * @return {String} A CSS compatible color string based on the specified HSL numeric color values in the format\n\t * \"hsla(360,100,100,1.0)\", or if alpha is null then in the format \"hsl(360,100,100)\".\n\t **/\n\tGraphics.getHSL = function(hue, saturation, lightness, alpha) {\n\t\tif (alpha == null) {\n\t\t\treturn \"hsl(\"+(hue%360)+\",\"+saturation+\"%,\"+lightness+\"%)\";\n\t\t} else {\n\t\t\treturn \"hsla(\"+(hue%360)+\",\"+saturation+\"%,\"+lightness+\"%,\"+alpha+\")\";\n\t\t}\n\t};\n\n\n// static properties:\n\t/**\n\t * A reusable instance of {{#crossLink \"Graphics/BeginPath\"}}{{/crossLink}} to avoid\n\t * unnecessary instantiation.\n\t * @property beginCmd\n\t * @type {Graphics.BeginPath}\n\t * @static\n\t **/\n\t // defined at the bottom of this file.\n\n\t/**\n\t * Map of Base64 characters to values. Used by {{#crossLink \"Graphics/decodePath\"}}{{/crossLink}}.\n\t * @property BASE_64\n\t * @static\n\t * @final\n\t * @readonly\n\t * @type {Object}\n\t **/\n\tGraphics.BASE_64 = {\"A\":0,\"B\":1,\"C\":2,\"D\":3,\"E\":4,\"F\":5,\"G\":6,\"H\":7,\"I\":8,\"J\":9,\"K\":10,\"L\":11,\"M\":12,\"N\":13,\"O\":14,\"P\":15,\"Q\":16,\"R\":17,\"S\":18,\"T\":19,\"U\":20,\"V\":21,\"W\":22,\"X\":23,\"Y\":24,\"Z\":25,\"a\":26,\"b\":27,\"c\":28,\"d\":29,\"e\":30,\"f\":31,\"g\":32,\"h\":33,\"i\":34,\"j\":35,\"k\":36,\"l\":37,\"m\":38,\"n\":39,\"o\":40,\"p\":41,\"q\":42,\"r\":43,\"s\":44,\"t\":45,\"u\":46,\"v\":47,\"w\":48,\"x\":49,\"y\":50,\"z\":51,\"0\":52,\"1\":53,\"2\":54,\"3\":55,\"4\":56,\"5\":57,\"6\":58,\"7\":59,\"8\":60,\"9\":61,\"+\":62,\"/\":63};\n\n\t/**\n\t * Maps numeric values for the caps parameter of {{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} to\n\t * corresponding string values. This is primarily for use with the tiny API. The mappings are as follows: 0 to\n\t * \"butt\", 1 to \"round\", and 2 to \"square\".\n\t * For example, to set the line caps to \"square\":\n\t *\n\t *      myGraphics.ss(16, 2);\n\t *\n\t * @property STROKE_CAPS_MAP\n\t * @static\n\t * @final\n\t * @readonly\n\t * @type {Array}\n\t **/\n\tGraphics.STROKE_CAPS_MAP = [\"butt\", \"round\", \"square\"];\n\n\t/**\n\t * Maps numeric values for the joints parameter of {{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} to\n\t * corresponding string values. This is primarily for use with the tiny API. The mappings are as follows: 0 to\n\t * \"miter\", 1 to \"round\", and 2 to \"bevel\".\n\t * For example, to set the line joints to \"bevel\":\n\t *\n\t *      myGraphics.ss(16, 0, 2);\n\t *\n\t * @property STROKE_JOINTS_MAP\n\t * @static\n\t * @final\n\t * @readonly\n\t * @type {Array}\n\t **/\n\tGraphics.STROKE_JOINTS_MAP = [\"miter\", \"round\", \"bevel\"];\n\n\t/**\n\t * @property _ctx\n\t * @static\n\t * @protected\n\t * @type {CanvasRenderingContext2D}\n\t **/\n\tvar canvas = (createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\"));\n\tif (canvas.getContext) {\n\t\tGraphics._ctx = canvas.getContext(\"2d\");\n\t\tcanvas.width = canvas.height = 1;\n\t}\n\n\n// getter / setters:\n\t/**\n\t * Use the {{#crossLink \"Graphics/instructions:property\"}}{{/crossLink}} property instead.\n\t * @method _getInstructions\n\t * @protected\n\t * @return {Array} The instructions array, useful for chaining\n\t **/\n\tp._getInstructions = function() {\n\t\tthis._updateInstructions();\n\t\treturn this._instructions;\n\t};\n\t// Graphics.getInstructions is @deprecated. Remove for 1.1+\n\tp.getInstructions = createjs.deprecate(p._getInstructions, \"Graphics.getInstructions\");\n\n\t/**\n\t * Returns the graphics instructions array. Each entry is a graphics command object (ex. Graphics.Fill, Graphics.Rect)\n\t * Modifying the returned array directly is not recommended, and is likely to result in unexpected behaviour.\n\t *\n\t * This property is mainly intended for introspection of the instructions (ex. for graphics export).\n\t * @property instructions\n\t * @type {Array}\n\t * @readonly\n\t **/\n\ttry {\n\t\tObject.defineProperties(p, {\n\t\t\tinstructions: { get: p._getInstructions }\n\t\t});\n\t} catch (e) {}\n\n\n// public methods:\n\t/**\n\t * Returns true if this Graphics instance has no drawing commands.\n\t * @method isEmpty\n\t * @return {Boolean} Returns true if this Graphics instance has no drawing commands.\n\t **/\n\tp.isEmpty = function() {\n\t\treturn !(this._instructions.length || this._activeInstructions.length);\n\t};\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Object} data Optional data that is passed to graphics command exec methods. When called from a Shape instance, the shape passes itself as the data parameter. This can be used by custom graphic commands to insert contextual data.\n\t **/\n\tp.draw = function(ctx, data) {\n\t\tthis._updateInstructions();\n\t\tvar instr = this._instructions;\n\t\tfor (var i=this._storeIndex, l=instr.length; i<l; i++) {\n\t\t\tinstr[i].exec(ctx, data);\n\t\t}\n\t};\n\n\t/**\n\t * Draws only the path described for this Graphics instance, skipping any non-path instructions, including fill and\n\t * stroke descriptions. Used for <code>DisplayObject.mask</code> to draw the clipping path, for example.\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method drawAsPath\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t **/\n\tp.drawAsPath = function(ctx) {\n\t\tthis._updateInstructions();\n\t\tvar instr, instrs = this._instructions;\n\t\tfor (var i=this._storeIndex, l=instrs.length; i<l; i++) {\n\t\t\t// the first command is always a beginPath command.\n\t\t\tif ((instr = instrs[i]).path !== false) { instr.exec(ctx); }\n\t\t}\n\t};\n\n\n// public methods that map directly to context 2D calls:\n\t/**\n\t * Moves the drawing point to the specified position. A tiny API method \"mt\" also exists.\n\t * @method moveTo\n\t * @param {Number} x The x coordinate the drawing point should move to.\n\t * @param {Number} y The y coordinate the drawing point should move to.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls).\n\t * @chainable\n\t **/\n\tp.moveTo = function(x, y) {\n\t\treturn this.append(new G.MoveTo(x,y), true);\n\t};\n\n\t/**\n\t * Draws a line from the current drawing point to the specified position, which become the new current drawing\n\t * point. Note that you *must* call {{#crossLink \"Graphics/moveTo\"}}{{/crossLink}} before the first `lineTo()`.\n\t * A tiny API method \"lt\" also exists.\n\t *\n\t * For detailed information, read the\n\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#complex-shapes-(paths)\">\n\t * whatwg spec</a>.\n\t * @method lineTo\n\t * @param {Number} x The x coordinate the drawing point should draw to.\n\t * @param {Number} y The y coordinate the drawing point should draw to.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.lineTo = function(x, y) {\n\t\treturn this.append(new G.LineTo(x,y));\n\t};\n\n\t/**\n\t * Draws an arc with the specified control points and radius.  For detailed information, read the\n\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-arcto\">\n\t * whatwg spec</a>. A tiny API method \"at\" also exists.\n\t * @method arcTo\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @param {Number} x2\n\t * @param {Number} y2\n\t * @param {Number} radius\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.arcTo = function(x1, y1, x2, y2, radius) {\n\t\treturn this.append(new G.ArcTo(x1, y1, x2, y2, radius));\n\t};\n\n\t/**\n\t * Draws an arc defined by the radius, startAngle and endAngle arguments, centered at the position (x, y). For\n\t * example, to draw a full circle with a radius of 20 centered at (100, 100):\n\t *\n\t *      arc(100, 100, 20, 0, Math.PI*2);\n\t *\n\t * For detailed information, read the\n\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-arc\">whatwg spec</a>.\n\t * A tiny API method \"a\" also exists.\n\t * @method arc\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} radius\n\t * @param {Number} startAngle Measured in radians.\n\t * @param {Number} endAngle Measured in radians.\n\t * @param {Boolean} anticlockwise\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.arc = function(x, y, radius, startAngle, endAngle, anticlockwise) {\n\t\treturn this.append(new G.Arc(x, y, radius, startAngle, endAngle, anticlockwise));\n\t};\n\n\t/**\n\t * Draws a quadratic curve from the current drawing point to (x, y) using the control point (cpx, cpy). For detailed\n\t * information, read the <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-quadraticcurveto\">\n\t * whatwg spec</a>. A tiny API method \"qt\" also exists.\n\t * @method quadraticCurveTo\n\t * @param {Number} cpx\n\t * @param {Number} cpy\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.quadraticCurveTo = function(cpx, cpy, x, y) {\n\t\treturn this.append(new G.QuadraticCurveTo(cpx, cpy, x, y));\n\t};\n\n\t/**\n\t * Draws a bezier curve from the current drawing point to (x, y) using the control points (cp1x, cp1y) and (cp2x,\n\t * cp2y). For detailed information, read the\n\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-beziercurveto\">\n\t * whatwg spec</a>. A tiny API method \"bt\" also exists.\n\t * @method bezierCurveTo\n\t * @param {Number} cp1x\n\t * @param {Number} cp1y\n\t * @param {Number} cp2x\n\t * @param {Number} cp2y\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.bezierCurveTo = function(cp1x, cp1y, cp2x, cp2y, x, y) {\n\t\treturn this.append(new G.BezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y));\n\t};\n\n\t/**\n\t * Draws a rectangle at (x, y) with the specified width and height using the current fill and/or stroke.\n\t * For detailed information, read the\n\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-rect\">\n\t * whatwg spec</a>. A tiny API method \"r\" also exists.\n\t * @method rect\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w Width of the rectangle\n\t * @param {Number} h Height of the rectangle\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.rect = function(x, y, w, h) {\n\t\treturn this.append(new G.Rect(x, y, w, h));\n\t};\n\n\t/**\n\t * Closes the current path, effectively drawing a line from the current drawing point to the first drawing point specified\n\t * since the fill or stroke was last set. A tiny API method \"cp\" also exists.\n\t * @method closePath\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.closePath = function() {\n\t\treturn this._activeInstructions.length ? this.append(new G.ClosePath()) : this;\n\t};\n\n\n// public methods that roughly map to Adobe Flash/Animate graphics APIs:\n\t/**\n\t * Clears all drawing instructions, effectively resetting this Graphics instance. Any line and fill styles will need\n\t * to be redefined to draw shapes following a clear call. A tiny API method \"c\" also exists.\n\t * @method clear\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.clear = function() {\n\t\tthis._instructions.length = this._activeInstructions.length = this._commitIndex = 0;\n\t\tthis._strokeStyle = this._oldStrokeStyle = this._stroke = this._fill = this._strokeDash = this._oldStrokeDash = null;\n\t\tthis._dirty = this._strokeIgnoreScale = false;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Begins a fill with the specified color. This ends the current sub-path. A tiny API method \"f\" also exists.\n\t * @method beginFill\n\t * @param {String} color A CSS compatible color value (ex. \"red\", \"#FF0000\", or \"rgba(255,0,0,0.5)\"). Setting to\n\t * null will result in no fill.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.beginFill = function(color) {\n\t\treturn this._setFill(color ? new G.Fill(color) : null);\n\t};\n\n\t/**\n\t * Begins a linear gradient fill defined by the line (x0, y0) to (x1, y1). This ends the current sub-path. For\n\t * example, the following code defines a black to white vertical gradient ranging from 20px to 120px, and draws a\n\t * square to display it:\n\t *\n\t *      myGraphics.beginLinearGradientFill([\"#000\",\"#FFF\"], [0, 1], 0, 20, 0, 120).drawRect(20, 20, 120, 120);\n\t *\n\t * A tiny API method \"lf\" also exists.\n\t * @method beginLinearGradientFill\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define a gradient\n\t * drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1, 0.9] would draw\n\t * the first color to 10% then interpolating to the second color at 90%.\n\t * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.beginLinearGradientFill = function(colors, ratios, x0, y0, x1, y1) {\n\t\treturn this._setFill(new G.Fill().linearGradient(colors, ratios, x0, y0, x1, y1));\n\t};\n\n\t/**\n\t * Begins a radial gradient fill. This ends the current sub-path. For example, the following code defines a red to\n\t * blue radial gradient centered at (100, 100), with a radius of 50, and draws a circle to display it:\n\t *\n\t *      myGraphics.beginRadialGradientFill([\"#F00\",\"#00F\"], [0, 1], 100, 100, 0, 100, 100, 50).drawCircle(100, 100, 50);\n\t *\n\t * A tiny API method \"rf\" also exists.\n\t * @method beginRadialGradientFill\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t * a gradient drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n\t * @param {Number} x0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} y0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} r0 Radius of the inner circle that defines the gradient.\n\t * @param {Number} x1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} y1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} r1 Radius of the outer circle that defines the gradient.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.beginRadialGradientFill = function(colors, ratios, x0, y0, r0, x1, y1, r1) {\n\t\treturn this._setFill(new G.Fill().radialGradient(colors, ratios, x0, y0, r0, x1, y1, r1));\n\t};\n\n\t/**\n\t * Begins a pattern fill using the specified image. This ends the current sub-path. A tiny API method \"bf\" also\n\t * exists.\n\t * @method beginBitmapFill\n\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n\t * as the pattern. Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n\t * @param {String} repetition Optional. Indicates whether to repeat the image in the fill area. One of \"repeat\",\n\t * \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\". Note that Firefox does not support \"repeat-x\" or\n\t * \"repeat-y\" (latest tests were in FF 20.0), and will default to \"repeat\".\n\t * @param {Matrix2D} matrix Optional. Specifies a transformation matrix for the bitmap fill. This transformation\n\t * will be applied relative to the parent transform.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.beginBitmapFill = function(image, repetition, matrix) {\n\t\treturn this._setFill(new G.Fill(null,matrix).bitmap(image, repetition));\n\t};\n\n\t/**\n\t * Ends the current sub-path, and begins a new one with no fill. Functionally identical to <code>beginFill(null)</code>.\n\t * A tiny API method \"ef\" also exists.\n\t * @method endFill\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.endFill = function() {\n\t\treturn this.beginFill();\n\t};\n\n\t/**\n\t * Sets the stroke style. Like all drawing methods, this can be chained, so you can define\n\t * the stroke style and color in a single line of code like so:\n\t *\n\t * \tmyGraphics.setStrokeStyle(8,\"round\").beginStroke(\"#F00\");\n\t *\n\t * A tiny API method \"ss\" also exists.\n\t * @method setStrokeStyle\n\t * @param {Number} thickness The width of the stroke.\n\t * @param {String | Number} [caps=0] Indicates the type of caps to use at the end of lines. One of butt,\n\t * round, or square. Defaults to \"butt\". Also accepts the values 0 (butt), 1 (round), and 2 (square) for use with\n\t * the tiny API.\n\t * @param {String | Number} [joints=0] Specifies the type of joints that should be used where two lines meet.\n\t * One of bevel, round, or miter. Defaults to \"miter\". Also accepts the values 0 (miter), 1 (round), and 2 (bevel)\n\t * for use with the tiny API.\n\t * @param {Number} [miterLimit=10] If joints is set to \"miter\", then you can specify a miter limit ratio which\n\t * controls at what point a mitered joint will be clipped.\n\t * @param {Boolean} [ignoreScale=false] If true, the stroke will be drawn at the specified thickness regardless\n\t * of active transformations.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.setStrokeStyle = function(thickness, caps, joints, miterLimit, ignoreScale) {\n\t\tthis._updateInstructions(true);\n\t\tthis._strokeStyle = this.command = new G.StrokeStyle(thickness, caps, joints, miterLimit, ignoreScale);\n\n\t\t// ignoreScale lives on Stroke, not StrokeStyle, so we do a little trickery:\n\t\tif (this._stroke) { this._stroke.ignoreScale = ignoreScale; }\n\t\tthis._strokeIgnoreScale = ignoreScale;\n\t\treturn this;\n\t};\n\t\n\t/**\n\t * Sets or clears the stroke dash pattern.\n\t *\n\t * \tmyGraphics.setStrokeDash([20, 10], 0);\n\t *\n\t * A tiny API method `sd` also exists.\n\t * @method setStrokeDash\n\t * @param {Array} [segments] An array specifying the dash pattern, alternating between line and gap.\n\t * For example, `[20,10]` would create a pattern of 20 pixel lines with 10 pixel gaps between them.\n\t * Passing null or an empty array will clear the existing stroke dash.\n\t * @param {Number} [offset=0] The offset of the dash pattern. For example, you could increment this value to create a \"marching ants\" effect.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.setStrokeDash = function(segments, offset) {\n\t\tthis._updateInstructions(true);\n\t\tthis._strokeDash = this.command = new G.StrokeDash(segments, offset);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Begins a stroke with the specified color. This ends the current sub-path. A tiny API method \"s\" also exists.\n\t * @method beginStroke\n\t * @param {String} color A CSS compatible color value (ex. \"#FF0000\", \"red\", or \"rgba(255,0,0,0.5)\"). Setting to\n\t * null will result in no stroke.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.beginStroke = function(color) {\n\t\treturn this._setStroke(color ? new G.Stroke(color) : null);\n\t};\n\n\t/**\n\t * Begins a linear gradient stroke defined by the line (x0, y0) to (x1, y1). This ends the current sub-path. For\n\t * example, the following code defines a black to white vertical gradient ranging from 20px to 120px, and draws a\n\t * square to display it:\n\t *\n\t *      myGraphics.setStrokeStyle(10).\n\t *          beginLinearGradientStroke([\"#000\",\"#FFF\"], [0, 1], 0, 20, 0, 120).drawRect(20, 20, 120, 120);\n\t *\n\t * A tiny API method \"ls\" also exists.\n\t * @method beginLinearGradientStroke\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t * a gradient drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n\t * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.beginLinearGradientStroke = function(colors, ratios, x0, y0, x1, y1) {\n\t\treturn this._setStroke(new G.Stroke().linearGradient(colors, ratios, x0, y0, x1, y1));\n\t};\n\n\t/**\n\t * Begins a radial gradient stroke. This ends the current sub-path. For example, the following code defines a red to\n\t * blue radial gradient centered at (100, 100), with a radius of 50, and draws a rectangle to display it:\n\t *\n\t *      myGraphics.setStrokeStyle(10)\n\t *          .beginRadialGradientStroke([\"#F00\",\"#00F\"], [0, 1], 100, 100, 0, 100, 100, 50)\n\t *          .drawRect(50, 90, 150, 110);\n\t *\n\t * A tiny API method \"rs\" also exists.\n\t * @method beginRadialGradientStroke\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t * a gradient drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%, then draw the second color\n\t * to 100%.\n\t * @param {Number} x0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} y0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} r0 Radius of the inner circle that defines the gradient.\n\t * @param {Number} x1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} y1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} r1 Radius of the outer circle that defines the gradient.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.beginRadialGradientStroke = function(colors, ratios, x0, y0, r0, x1, y1, r1) {\n\t\treturn this._setStroke(new G.Stroke().radialGradient(colors, ratios, x0, y0, r0, x1, y1, r1));\n\t};\n\n\t/**\n\t * Begins a pattern fill using the specified image. This ends the current sub-path. Note that unlike bitmap fills,\n\t * strokes do not currently support a matrix parameter due to limitations in the canvas API. A tiny API method \"bs\"\n\t * also exists.\n\t * @method beginBitmapStroke\n\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n\t * as the pattern. Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n\t * @param {String} [repetition=repeat] Optional. Indicates whether to repeat the image in the fill area. One of\n\t * \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\".\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.beginBitmapStroke = function(image, repetition) {\n\t\t// NOTE: matrix is not supported for stroke because transforms on strokes also affect the drawn stroke width.\n\t\treturn this._setStroke(new G.Stroke().bitmap(image, repetition));\n\t};\n\n\t/**\n\t * Ends the current sub-path, and begins a new one with no stroke. Functionally identical to <code>beginStroke(null)</code>.\n\t * A tiny API method \"es\" also exists.\n\t * @method endStroke\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.endStroke = function() {\n\t\treturn this.beginStroke();\n\t};\n\n\t/**\n\t * Maps the familiar ActionScript <code>curveTo()</code> method to the functionally similar {{#crossLink \"Graphics/quadraticCurveTo\"}}{{/crossLink}}\n\t * method.\n\t * @method curveTo\n\t * @param {Number} cpx\n\t * @param {Number} cpy\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.curveTo = p.quadraticCurveTo;\n\n\t/**\n\t *\n\t * Maps the familiar ActionScript <code>drawRect()</code> method to the functionally similar {{#crossLink \"Graphics/rect\"}}{{/crossLink}}\n\t * method.\n\t * @method drawRect\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w Width of the rectangle\n\t * @param {Number} h Height of the rectangle\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.drawRect = p.rect;\n\n\t/**\n\t * Draws a rounded rectangle with all corners with the specified radius.\n\t * @method drawRoundRect\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w\n\t * @param {Number} h\n\t * @param {Number} radius Corner radius.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.drawRoundRect = function(x, y, w, h, radius) {\n\t\treturn this.drawRoundRectComplex(x, y, w, h, radius, radius, radius, radius);\n\t};\n\n\t/**\n\t * Draws a rounded rectangle with different corner radii. Supports positive and negative corner radii. A tiny API\n\t * method \"rc\" also exists.\n\t * @method drawRoundRectComplex\n\t * @param {Number} x The horizontal coordinate to draw the round rect.\n\t * @param {Number} y The vertical coordinate to draw the round rect.\n\t * @param {Number} w The width of the round rect.\n\t * @param {Number} h The height of the round rect.\n\t * @param {Number} radiusTL Top left corner radius.\n\t * @param {Number} radiusTR Top right corner radius.\n\t * @param {Number} radiusBR Bottom right corner radius.\n\t * @param {Number} radiusBL Bottom left corner radius.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.drawRoundRectComplex = function(x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL) {\n\t\treturn this.append(new G.RoundRect(x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL));\n\t};\n\n\t/**\n\t * Draws a circle with the specified radius at (x, y).\n\t *\n\t *      var g = new createjs.Graphics();\n\t *\t    g.setStrokeStyle(1);\n\t *\t    g.beginStroke(createjs.Graphics.getRGB(0,0,0));\n\t *\t    g.beginFill(createjs.Graphics.getRGB(255,0,0));\n\t *\t    g.drawCircle(0,0,3);\n\t *\n\t *\t    var s = new createjs.Shape(g);\n\t *\t\ts.x = 100;\n\t *\t\ts.y = 100;\n\t *\n\t *\t    stage.addChild(s);\n\t *\t    stage.update();\n\t *\n\t * A tiny API method \"dc\" also exists.\n\t * @method drawCircle\n\t * @param {Number} x x coordinate center point of circle.\n\t * @param {Number} y y coordinate center point of circle.\n\t * @param {Number} radius Radius of circle.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.drawCircle = function(x, y, radius) {\n\t\treturn this.append(new G.Circle(x, y, radius));\n\t};\n\n\t/**\n\t * Draws an ellipse (oval) with a specified width (w) and height (h). Similar to {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}},\n\t * except the width and height can be different. A tiny API method \"de\" also exists.\n\t * @method drawEllipse\n\t * @param {Number} x The left coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\n\t * which draws from center.\n\t * @param {Number} y The top coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\n\t * which draws from the center.\n\t * @param {Number} w The height (horizontal diameter) of the ellipse. The horizontal radius will be half of this\n\t * number.\n\t * @param {Number} h The width (vertical diameter) of the ellipse. The vertical radius will be half of this number.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.drawEllipse = function(x, y, w, h) {\n\t\treturn this.append(new G.Ellipse(x, y, w, h));\n\t};\n\n\t/**\n\t * Draws a star if pointSize is greater than 0, or a regular polygon if pointSize is 0 with the specified number of\n\t * points. For example, the following code will draw a familiar 5 pointed star shape centered at 100, 100 and with a\n\t * radius of 50:\n\t *\n\t *      myGraphics.beginFill(\"#FF0\").drawPolyStar(100, 100, 50, 5, 0.6, -90);\n\t *      // Note: -90 makes the first point vertical\n\t *\n\t * A tiny API method \"dp\" also exists.\n\t *\n\t * @method drawPolyStar\n\t * @param {Number} x Position of the center of the shape.\n\t * @param {Number} y Position of the center of the shape.\n\t * @param {Number} radius The outer radius of the shape.\n\t * @param {Number} sides The number of points on the star or sides on the polygon.\n\t * @param {Number} pointSize The depth or \"pointy-ness\" of the star points. A pointSize of 0 will draw a regular\n\t * polygon (no points), a pointSize of 1 will draw nothing because the points are infinitely pointy.\n\t * @param {Number} angle The angle of the first point / corner. For example a value of 0 will draw the first point\n\t * directly to the right of the center.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.drawPolyStar = function(x, y, radius, sides, pointSize, angle) {\n\t\treturn this.append(new G.PolyStar(x, y, radius, sides, pointSize, angle));\n\t};\n\n\t/**\n\t * Appends a graphics command object to the graphics queue. Command objects expose an \"exec\" method\n\t * that accepts two parameters: the Context2D to operate on, and an arbitrary data object passed into\n\t * {{#crossLink \"Graphics/draw\"}}{{/crossLink}}. The latter will usually be the Shape instance that called draw.\n\t *\n\t * This method is used internally by Graphics methods, such as drawCircle, but can also be used directly to insert\n\t * built-in or custom graphics commands. For example:\n\t *\n\t * \t\t// attach data to our shape, so we can access it during the draw:\n\t * \t\tmyShape.color = \"red\";\n\t *\n\t * \t\t// append a Circle command object:\n\t * \t\tmyShape.graphics.append(new createjs.Graphics.Circle(50, 50, 30));\n\t *\n\t * \t\t// append a custom command object with an exec method that sets the fill style\n\t * \t\t// based on the shape's data, and then fills the circle.\n\t * \t\tmyShape.graphics.append({exec:function(ctx, shape) {\n\t * \t\t\tctx.fillStyle = shape.color;\n\t * \t\t\tctx.fill();\n\t * \t\t}});\n\t *\n\t * @method append\n\t * @param {Object} command A graphics command object exposing an \"exec\" method.\n\t * @param {boolean} clean The clean param is primarily for internal use. A value of true indicates that a command does not generate a path that should be stroked or filled.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.append = function(command, clean) {\n\t\tthis._activeInstructions.push(command);\n\t\tthis.command = command;\n\t\tif (!clean) { this._dirty = true; }\n\t\treturn this;\n\t};\n\n\t/**\n\t * Decodes a compact encoded path string into a series of draw instructions.\n\t * This format is not intended to be human readable, and is meant for use by authoring tools.\n\t * The format uses a base64 character set, with each character representing 6 bits, to define a series of draw\n\t * commands.\n\t *\n\t * Each command is comprised of a single \"header\" character followed by a variable number of alternating x and y\n\t * position values. Reading the header bits from left to right (most to least significant): bits 1 to 3 specify the\n\t * type of operation (0-moveTo, 1-lineTo, 2-quadraticCurveTo, 3-bezierCurveTo, 4-closePath, 5-7 unused). Bit 4\n\t * indicates whether position values use 12 bits (2 characters) or 18 bits (3 characters), with a one indicating the\n\t * latter. Bits 5 and 6 are currently unused.\n\t *\n\t * Following the header is a series of 0 (closePath), 2 (moveTo, lineTo), 4 (quadraticCurveTo), or 6 (bezierCurveTo)\n\t * parameters. These parameters are alternating x/y positions represented by 2 or 3 characters (as indicated by the\n\t * 4th bit in the command char). These characters consist of a 1 bit sign (1 is negative, 0 is positive), followed\n\t * by an 11 (2 char) or 17 (3 char) bit integer value. All position values are in tenths of a pixel. Except in the\n\t * case of move operations which are absolute, this value is a delta from the previous x or y position (as\n\t * appropriate).\n\t *\n\t * For example, the string \"A3cAAMAu4AAA\" represents a line starting at -150,0 and ending at 150,0.\n\t * <br />A - bits 000000. First 3 bits (000) indicate a moveTo operation. 4th bit (0) indicates 2 chars per\n\t * parameter.\n\t * <br />n0 - 110111011100. Absolute x position of -150.0px. First bit indicates a negative value, remaining bits\n\t * indicate 1500 tenths of a pixel.\n\t * <br />AA - 000000000000. Absolute y position of 0.\n\t * <br />I - 001100. First 3 bits (001) indicate a lineTo operation. 4th bit (1) indicates 3 chars per parameter.\n\t * <br />Au4 - 000000101110111000. An x delta of 300.0px, which is added to the previous x value of -150.0px to\n\t * provide an absolute position of +150.0px.\n\t * <br />AAA - 000000000000000000. A y delta value of 0.\n\t *\n\t * A tiny API method \"p\" also exists.\n\t * @method decodePath\n\t * @param {String} str The path string to decode.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.decodePath = function(str) {\n\t\tvar instructions = [this.moveTo, this.lineTo, this.quadraticCurveTo, this.bezierCurveTo, this.closePath];\n\t\tvar paramCount = [2, 2, 4, 6, 0];\n\t\tvar i=0, l=str.length;\n\t\tvar params = [];\n\t\tvar x=0, y=0;\n\t\tvar base64 = Graphics.BASE_64;\n\n\t\twhile (i<l) {\n\t\t\tvar c = str.charAt(i);\n\t\t\tvar n = base64[c];\n\t\t\tvar fi = n>>3; // highest order bits 1-3 code for operation.\n\t\t\tvar f = instructions[fi];\n\t\t\t// check that we have a valid instruction & that the unused bits are empty:\n\t\t\tif (!f || (n&3)) { throw(\"bad path data (@\"+i+\"): \"+c); }\n\t\t\tvar pl = paramCount[fi];\n\t\t\tif (!fi) { x=y=0; } // move operations reset the position.\n\t\t\tparams.length = 0;\n\t\t\ti++;\n\t\t\tvar charCount = (n>>2&1)+2;  // 4th header bit indicates number size for this operation.\n\t\t\tfor (var p=0; p<pl; p++) {\n\t\t\t\tvar num = base64[str.charAt(i)];\n\t\t\t\tvar sign = (num>>5) ? -1 : 1;\n\t\t\t\tnum = ((num&31)<<6)|(base64[str.charAt(i+1)]);\n\t\t\t\tif (charCount == 3) { num = (num<<6)|(base64[str.charAt(i+2)]); }\n\t\t\t\tnum = sign*num/10;\n\t\t\t\tif (p%2) { x = (num += x); }\n\t\t\t\telse { y = (num += y); }\n\t\t\t\tparams[p] = num;\n\t\t\t\ti += charCount;\n\t\t\t}\n\t\t\tf.apply(this,params);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * Stores all graphics commands so they won't be executed in future draws. Calling store() a second time adds to\n\t * the existing store. This also affects `drawAsPath()`.\n\t *\n\t * This is useful in cases where you are creating vector graphics in an iterative manner (ex. generative art), so\n\t * that only new graphics need to be drawn (which can provide huge performance benefits), but you wish to retain all\n\t * of the vector instructions for later use (ex. scaling, modifying, or exporting).\n\t *\n\t * Note that calling store() will force the active path (if any) to be ended in a manner similar to changing\n\t * the fill or stroke.\n\t *\n\t * For example, consider a application where the user draws lines with the mouse. As each line segment (or collection of\n\t * segments) are added to a Shape, it can be rasterized using {{#crossLink \"DisplayObject/updateCache\"}}{{/crossLink}},\n\t * and then stored, so that it can be redrawn at a different scale when the application is resized, or exported to SVG.\n\t *\n\t * \t// set up cache:\n\t * \tmyShape.cache(0,0,500,500,scale);\n\t *\n\t * \t// when the user drags, draw a new line:\n\t * \tmyShape.graphics.moveTo(oldX,oldY).lineTo(newX,newY);\n\t * \t// then draw it into the existing cache:\n\t * \tmyShape.updateCache(\"source-over\");\n\t * \t// store the new line, so it isn't redrawn next time:\n\t * \tmyShape.store();\n\t *\n\t * \t// then, when the window resizes, we can re-render at a different scale:\n\t * \t// first, unstore all our lines:\n\t * \tmyShape.unstore();\n\t * \t// then cache using the new scale:\n\t * \tmyShape.cache(0,0,500,500,newScale);\n\t * \t// finally, store the existing commands again:\n\t * \tmyShape.store();\n\t *\n\t * @method store\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.store = function() {\n\t\tthis._updateInstructions(true);\n\t\tthis._storeIndex = this._instructions.length;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Unstores any graphics commands that were previously stored using {{#crossLink \"Graphics/store\"}}{{/crossLink}}\n\t * so that they will be executed in subsequent draw calls.\n\t *\n\t * @method unstore\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.unstore = function() {\n\t\tthis._storeIndex = 0;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Returns a clone of this Graphics instance. Note that the individual command objects are not cloned.\n\t * @method clone\n\t * @return {Graphics} A clone of the current Graphics instance.\n\t **/\n\tp.clone = function() {\n\t\tvar o = new Graphics();\n\t\to.command = this.command;\n\t\to._stroke = this._stroke;\n\t\to._strokeStyle = this._strokeStyle;\n\t\to._strokeDash = this._strokeDash;\n\t\to._strokeIgnoreScale = this._strokeIgnoreScale;\n\t\to._fill = this._fill;\n\t\to._instructions = this._instructions.slice();\n\t\to._commitIndex = this._commitIndex;\n\t\to._activeInstructions = this._activeInstructions.slice();\n\t\to._dirty = this._dirty;\n\t\to._storeIndex = this._storeIndex;\n\t\treturn o;\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[Graphics]\";\n\t};\n\n\n// tiny API:\n\t/**\n\t * Shortcut to moveTo.\n\t * @method mt\n\t * @param {Number} x The x coordinate the drawing point should move to.\n\t * @param {Number} y The y coordinate the drawing point should move to.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls).\n\t * @chainable\n\t * @protected\n\t **/\n\tp.mt = p.moveTo;\n\n\t/**\n\t * Shortcut to lineTo.\n\t * @method lt\n\t * @param {Number} x The x coordinate the drawing point should draw to.\n\t * @param {Number} y The y coordinate the drawing point should draw to.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.lt = p.lineTo;\n\n\t/**\n\t * Shortcut to arcTo.\n\t * @method at\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @param {Number} x2\n\t * @param {Number} y2\n\t * @param {Number} radius\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.at = p.arcTo;\n\n\t/**\n\t * Shortcut to bezierCurveTo.\n\t * @method bt\n\t * @param {Number} cp1x\n\t * @param {Number} cp1y\n\t * @param {Number} cp2x\n\t * @param {Number} cp2y\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.bt = p.bezierCurveTo;\n\n\t/**\n\t * Shortcut to quadraticCurveTo / curveTo.\n\t * @method qt\n\t * @param {Number} cpx\n\t * @param {Number} cpy\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @protected\n\t * @chainable\n\t **/\n\tp.qt = p.quadraticCurveTo;\n\n\t/**\n\t * Shortcut to arc.\n\t * @method a\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} radius\n\t * @param {Number} startAngle Measured in radians.\n\t * @param {Number} endAngle Measured in radians.\n\t * @param {Boolean} anticlockwise\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @protected\n\t * @chainable\n\t **/\n\tp.a = p.arc;\n\n\t/**\n\t * Shortcut to rect.\n\t * @method r\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w Width of the rectangle\n\t * @param {Number} h Height of the rectangle\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.r = p.rect;\n\n\t/**\n\t * Shortcut to closePath.\n\t * @method cp\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.cp = p.closePath;\n\n\t/**\n\t * Shortcut to clear.\n\t * @method c\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.c = p.clear;\n\n\t/**\n\t * Shortcut to beginFill.\n\t * @method f\n\t * @param {String} color A CSS compatible color value (ex. \"red\", \"#FF0000\", or \"rgba(255,0,0,0.5)\"). Setting to\n\t * null will result in no fill.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.f = p.beginFill;\n\n\t/**\n\t * Shortcut to beginLinearGradientFill.\n\t * @method lf\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define a gradient\n\t * drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1, 0.9] would draw\n\t * the first color to 10% then interpolating to the second color at 90%.\n\t * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.lf = p.beginLinearGradientFill;\n\n\t/**\n\t * Shortcut to beginRadialGradientFill.\n\t * @method rf\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t * a gradient drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n\t * @param {Number} x0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} y0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} r0 Radius of the inner circle that defines the gradient.\n\t * @param {Number} x1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} y1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} r1 Radius of the outer circle that defines the gradient.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.rf = p.beginRadialGradientFill;\n\n\t/**\n\t * Shortcut to beginBitmapFill.\n\t * @method bf\n\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n\t * as the pattern.\n\t * @param {String} repetition Optional. Indicates whether to repeat the image in the fill area. One of \"repeat\",\n\t * \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\". Note that Firefox does not support \"repeat-x\" or\n\t * \"repeat-y\" (latest tests were in FF 20.0), and will default to \"repeat\".\n\t * @param {Matrix2D} matrix Optional. Specifies a transformation matrix for the bitmap fill. This transformation\n\t * will be applied relative to the parent transform.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.bf = p.beginBitmapFill;\n\n\t/**\n\t * Shortcut to endFill.\n\t * @method ef\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.ef = p.endFill;\n\n\t/**\n\t * Shortcut to setStrokeStyle.\n\t * @method ss\n\t * @param {Number} thickness The width of the stroke.\n\t * @param {String | Number} [caps=0] Indicates the type of caps to use at the end of lines. One of butt,\n\t * round, or square. Defaults to \"butt\". Also accepts the values 0 (butt), 1 (round), and 2 (square) for use with\n\t * the tiny API.\n\t * @param {String | Number} [joints=0] Specifies the type of joints that should be used where two lines meet.\n\t * One of bevel, round, or miter. Defaults to \"miter\". Also accepts the values 0 (miter), 1 (round), and 2 (bevel)\n\t * for use with the tiny API.\n\t * @param {Number} [miterLimit=10] If joints is set to \"miter\", then you can specify a miter limit ratio which\n\t * controls at what point a mitered joint will be clipped.\n\t * @param {Boolean} [ignoreScale=false] If true, the stroke will be drawn at the specified thickness regardless\n\t * of active transformations.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.ss = p.setStrokeStyle;\n\t\n\t/**\n\t * Shortcut to setStrokeDash.\n\t * @method sd\n\t * @param {Array} [segments] An array specifying the dash pattern, alternating between line and gap.\n\t * For example, [20,10] would create a pattern of 20 pixel lines with 10 pixel gaps between them.\n\t * Passing null or an empty array will clear any existing dash.\n\t * @param {Number} [offset=0] The offset of the dash pattern. For example, you could increment this value to create a \"marching ants\" effect.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.sd = p.setStrokeDash;\n\n\t/**\n\t * Shortcut to beginStroke.\n\t * @method s\n\t * @param {String} color A CSS compatible color value (ex. \"#FF0000\", \"red\", or \"rgba(255,0,0,0.5)\"). Setting to\n\t * null will result in no stroke.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.s = p.beginStroke;\n\n\t/**\n\t * Shortcut to beginLinearGradientStroke.\n\t * @method ls\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t * a gradient drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n\t * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.ls = p.beginLinearGradientStroke;\n\n\t/**\n\t * Shortcut to beginRadialGradientStroke.\n\t * @method rs\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t * a gradient drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%, then draw the second color\n\t * to 100%.\n\t * @param {Number} x0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} y0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} r0 Radius of the inner circle that defines the gradient.\n\t * @param {Number} x1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} y1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} r1 Radius of the outer circle that defines the gradient.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.rs = p.beginRadialGradientStroke;\n\n\t/**\n\t * Shortcut to beginBitmapStroke.\n\t * @method bs\n\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n\t * as the pattern.\n\t * @param {String} [repetition=repeat] Optional. Indicates whether to repeat the image in the fill area. One of\n\t * \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\".\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.bs = p.beginBitmapStroke;\n\n\t/**\n\t * Shortcut to endStroke.\n\t * @method es\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.es = p.endStroke;\n\n\t/**\n\t * Shortcut to drawRect.\n\t * @method dr\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w Width of the rectangle\n\t * @param {Number} h Height of the rectangle\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.dr = p.drawRect;\n\n\t/**\n\t * Shortcut to drawRoundRect.\n\t * @method rr\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w\n\t * @param {Number} h\n\t * @param {Number} radius Corner radius.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.rr = p.drawRoundRect;\n\n\t/**\n\t * Shortcut to drawRoundRectComplex.\n\t * @method rc\n\t * @param {Number} x The horizontal coordinate to draw the round rect.\n\t * @param {Number} y The vertical coordinate to draw the round rect.\n\t * @param {Number} w The width of the round rect.\n\t * @param {Number} h The height of the round rect.\n\t * @param {Number} radiusTL Top left corner radius.\n\t * @param {Number} radiusTR Top right corner radius.\n\t * @param {Number} radiusBR Bottom right corner radius.\n\t * @param {Number} radiusBL Bottom left corner radius.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.rc = p.drawRoundRectComplex;\n\n\t/**\n\t * Shortcut to drawCircle.\n\t * @method dc\n\t * @param {Number} x x coordinate center point of circle.\n\t * @param {Number} y y coordinate center point of circle.\n\t * @param {Number} radius Radius of circle.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.dc = p.drawCircle;\n\n\t/**\n\t * Shortcut to drawEllipse.\n\t * @method de\n\t * @param {Number} x The left coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\n\t * which draws from center.\n\t * @param {Number} y The top coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\n\t * which draws from the center.\n\t * @param {Number} w The height (horizontal diameter) of the ellipse. The horizontal radius will be half of this\n\t * number.\n\t * @param {Number} h The width (vertical diameter) of the ellipse. The vertical radius will be half of this number.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.de = p.drawEllipse;\n\n\t/**\n\t * Shortcut to drawPolyStar.\n\t * @method dp\n\t * @param {Number} x Position of the center of the shape.\n\t * @param {Number} y Position of the center of the shape.\n\t * @param {Number} radius The outer radius of the shape.\n\t * @param {Number} sides The number of points on the star or sides on the polygon.\n\t * @param {Number} pointSize The depth or \"pointy-ness\" of the star points. A pointSize of 0 will draw a regular\n\t * polygon (no points), a pointSize of 1 will draw nothing because the points are infinitely pointy.\n\t * @param {Number} angle The angle of the first point / corner. For example a value of 0 will draw the first point\n\t * directly to the right of the center.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.dp = p.drawPolyStar;\n\n\t/**\n\t * Shortcut to decodePath.\n\t * @method p\n\t * @param {String} str The path string to decode.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.p = p.decodePath;\n\n\n// private methods:\n\t/**\n\t * @method _updateInstructions\n\t * @param commit\n\t * @protected\n\t **/\n\tp._updateInstructions = function(commit) {\n\t\tvar instr = this._instructions, active = this._activeInstructions, commitIndex = this._commitIndex;\n\n\t\tif (this._dirty && active.length) {\n\t\t\tinstr.length = commitIndex; // remove old, uncommitted commands\n\t\t\tinstr.push(Graphics.beginCmd);\n\n\t\t\tvar l = active.length, ll = instr.length;\n\t\t\tinstr.length = ll+l;\n\t\t\tfor (var i=0; i<l; i++) { instr[i+ll] = active[i]; }\n\n\t\t\tif (this._fill) { instr.push(this._fill); }\n\t\t\tif (this._stroke) {\n\t\t\t\t// doesn't need to be re-applied if it hasn't changed.\n\t\t\t\tif (this._strokeDash !== this._oldStrokeDash) {\n\t\t\t\t\tinstr.push(this._strokeDash);\n\t\t\t\t}\n\t\t\t\tif (this._strokeStyle !== this._oldStrokeStyle) {\n\t\t\t\t\tinstr.push(this._strokeStyle);\n\t\t\t\t}\n\t\t\t\tif (commit) {\n\t\t\t\t\tthis._oldStrokeStyle = this._strokeStyle;\n\t\t\t\t\tthis._oldStrokeDash = this._strokeDash;\n\t\t\t\t}\n\t\t\t\tinstr.push(this._stroke);\n\t\t\t}\n\n\t\t\tthis._dirty = false;\n\t\t}\n\n\t\tif (commit) {\n\t\t\tactive.length = 0;\n\t\t\tthis._commitIndex = instr.length;\n\t\t}\n\t};\n\n\t/**\n\t * @method _setFill\n\t * @param fill\n\t * @protected\n\t **/\n\tp._setFill = function(fill) {\n\t\tthis._updateInstructions(true);\n\t\tthis.command = this._fill = fill;\n\t\treturn this;\n\t};\n\n\t/**\n\t * @method _setStroke\n\t * @param stroke\n\t * @protected\n\t **/\n\tp._setStroke = function(stroke) {\n\t\tthis._updateInstructions(true);\n\t\tif (this.command = this._stroke = stroke) {\n\t\t\tstroke.ignoreScale = this._strokeIgnoreScale;\n\t\t}\n\t\treturn this;\n\t};\n\n// Command Objects:\n\t/**\n\t * @namespace Graphics\n\t */\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/lineTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information. See {{#crossLink \"Graphics\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class LineTo\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t **/\n\t/**\n\t * @property x\n\t * @type Number\n\t */\n\t/**\n\t * @property y\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\t(G.LineTo = function(x, y) {\n\t\tthis.x = x; this.y = y;\n\t}).prototype.exec = function(ctx) { ctx.lineTo(this.x,this.y); };\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/moveTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class MoveTo\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t **/\n\t/**\n\t * @property x\n\t * @type Number\n\t */\n\t/**\n\t * @property y\n\t * @type Number\n\t */\n\t/**\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx\n\t */\n\t(G.MoveTo = function(x, y) {\n\t\tthis.x = x; this.y = y;\n\t}).prototype.exec = function(ctx) { ctx.moveTo(this.x, this.y); };\n\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/arcTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class ArcTo\n\t * @constructor\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @param {Number} x2\n\t * @param {Number} y2\n\t * @param {Number} radius\n\t **/\n\t/**\n\t * @property x1\n\t * @type Number\n\t */\n\t/**\n\t * @property y1\n\t * @type Number\n\t */\n\t/**\n\t * @property x2\n\t * @type Number\n\t */\n\t/**\n\t * @property y2\n\t * @type Number\n\t */\n\t/**\n\t * @property radius\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\t(G.ArcTo = function(x1, y1, x2, y2, radius) {\n\t\tthis.x1 = x1; this.y1 = y1;\n\t\tthis.x2 = x2; this.y2 = y2;\n\t\tthis.radius = radius;\n\t}).prototype.exec = function(ctx) { ctx.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius); };\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/arc\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class Arc\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} radius\n\t * @param {Number} startAngle\n\t * @param {Number} endAngle\n\t * @param {Number} anticlockwise\n\t **/\n\t/**\n\t * @property x\n\t * @type Number\n\t */\n\t/**\n\t * @property y\n\t * @type Number\n\t */\n\t/**\n\t * @property radius\n\t * @type Number\n\t */\n\t/**\n\t * @property startAngle\n\t * @type Number\n\t */\n\t/**\n\t * @property endAngle\n\t * @type Number\n\t */\n\t/**\n\t * @property anticlockwise\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\t(G.Arc = function(x, y, radius, startAngle, endAngle, anticlockwise) {\n\t\tthis.x = x; this.y = y;\n\t\tthis.radius = radius;\n\t\tthis.startAngle = startAngle; this.endAngle = endAngle;\n\t\tthis.anticlockwise = !!anticlockwise;\n\t}).prototype.exec = function(ctx) { ctx.arc(this.x, this.y, this.radius, this.startAngle, this.endAngle, this.anticlockwise); };\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/quadraticCurveTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class QuadraticCurveTo\n\t * @constructor\n\t * @param {Number} cpx\n\t * @param {Number} cpy\n\t * @param {Number} x\n\t * @param {Number} y\n\t **/\n\t/**\n\t * @property cpx\n\t * @type Number\n\t */\n\t/**\n\t * @property cpy\n\t * @type Number\n\t */\n\t/**\n\t * @property x\n\t * @type Number\n\t */\n\t/**\n\t * @property y\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\t(G.QuadraticCurveTo = function(cpx, cpy, x, y) {\n\t\tthis.cpx = cpx; this.cpy = cpy;\n\t\tthis.x = x; this.y = y;\n\t}).prototype.exec = function(ctx) { ctx.quadraticCurveTo(this.cpx, this.cpy, this.x, this.y); };\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/bezierCurveTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class BezierCurveTo\n\t * @constructor\n\t * @param {Number} cp1x\n\t * @param {Number} cp1y\n\t * @param {Number} cp2x\n\t * @param {Number} cp2y\n\t * @param {Number} x\n\t * @param {Number} y\n\t **/\n\t/**\n\t * @property cp1x\n\t * @type Number\n\t */\n\t/**\n\t * @property cp1y\n\t * @type Number\n\t */\n\t/**\n\t * @property cp2x\n\t * @type Number\n\t */\n\t/**\n\t * @property cp2y\n\t * @type Number\n\t */\n\t/**\n\t * @property x\n\t * @type Number\n\t */\n\t/**\n\t * @property y\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\t(G.BezierCurveTo = function(cp1x, cp1y, cp2x, cp2y, x, y) {\n\t\tthis.cp1x = cp1x; this.cp1y = cp1y;\n\t\tthis.cp2x = cp2x; this.cp2y = cp2y;\n\t\tthis.x = x; this.y = y;\n\t}).prototype.exec = function(ctx) { ctx.bezierCurveTo(this.cp1x, this.cp1y, this.cp2x, this.cp2y, this.x, this.y); };\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/rect\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class Rect\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w\n\t * @param {Number} h\n\t **/\n\t/**\n\t * @property x\n\t * @type Number\n\t */\n\t/**\n\t * @property y\n\t * @type Number\n\t */\n\t/**\n\t * @property w\n\t * @type Number\n\t */\n\t/**\n\t * @property h\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\t(G.Rect = function(x, y, w, h) {\n\t\tthis.x = x; this.y = y;\n\t\tthis.w = w; this.h = h;\n\t}).prototype.exec = function(ctx) { ctx.rect(this.x, this.y, this.w, this.h); };\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/closePath\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class ClosePath\n\t * @constructor\n\t **/\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\t(G.ClosePath = function() {\n\t}).prototype.exec = function(ctx) { ctx.closePath(); };\n\n\t/**\n\t * Graphics command object to begin a new path. See {{#crossLink \"Graphics\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class BeginPath\n\t * @constructor\n\t **/\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\t(G.BeginPath = function() {\n\t}).prototype.exec = function(ctx) { ctx.beginPath(); };\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/beginFill\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class Fill\n\t * @constructor\n\t * @param {Object} style A valid Context2D fillStyle.\n\t * @param {Matrix2D} matrix\n\t **/\n\t/**\n\t * A valid Context2D fillStyle.\n\t * @property style\n\t * @type Object\n\t */\n\t/**\n\t * @property matrix\n\t * @type Matrix2D\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\tp = (G.Fill = function(style, matrix) {\n\t\tthis.style = style;\n\t\tthis.matrix = matrix;\n\t}).prototype;\n\tp.exec = function(ctx) {\n\t\tif (!this.style) { return; }\n\t\tctx.fillStyle = this.style;\n\t\tvar mtx = this.matrix;\n\t\tif (mtx) { ctx.save(); ctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty); }\n\t\tctx.fill();\n\t\tif (mtx) { ctx.restore(); }\n\t};\n\t/**\n\t * Creates a linear gradient style and assigns it to {{#crossLink \"Fill/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginLinearGradientFill\"}}{{/crossLink}} for more information.\n\t * @method linearGradient\n\t * @param {Array} colors\n\t *\n\t * @param {Array} ratios\n\t * @param {Number} x0\n\t * @param {Number} y0\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @return {Fill} Returns this Fill object for chaining or assignment.\n\t */\n\tp.linearGradient = function(colors, ratios, x0, y0, x1, y1) {\n\t\tvar o = this.style =  Graphics._ctx.createLinearGradient(x0, y0, x1, y1);\n\t\tfor (var i=0, l=colors.length; i<l; i++) { o.addColorStop(ratios[i], colors[i]); }\n\t\to.props = {colors:colors, ratios:ratios, x0:x0, y0:y0, x1:x1, y1:y1, type:\"linear\"};\n\t\treturn this;\n\t};\n\t/**\n\t * Creates a radial gradient style and assigns it to {{#crossLink \"Fill/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginRadialGradientFill\"}}{{/crossLink}} for more information.\n\t * @method radialGradient\n\t * @param {Array} colors\n\t * @param {Array} ratios\n\t * @param {Number} x0\n\t * @param {Number} y0\n\t * @param {Number} r0\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @param {Number} r1\n\t * @return {Fill} Returns this Fill object for chaining or assignment.\n\t */\n\tp.radialGradient = function(colors, ratios, x0, y0, r0, x1, y1, r1) {\n\t\tvar o = this.style =  Graphics._ctx.createRadialGradient(x0, y0, r0, x1, y1, r1);\n\t\tfor (var i=0, l=colors.length; i<l; i++) { o.addColorStop(ratios[i], colors[i]); }\n\t\to.props = {colors:colors, ratios:ratios, x0:x0, y0:y0, r0:r0, x1:x1, y1:y1, r1:r1, type:\"radial\"};\n\t\treturn this;\n\t};\n\t/**\n\t * Creates a bitmap fill style and assigns it to the {{#crossLink \"Fill/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginBitmapFill\"}}{{/crossLink}} for more information.\n\t * @method bitmap\n\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image  Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n\t * @param {String} [repetition] One of: repeat, repeat-x, repeat-y, or no-repeat.\n\t * @return {Fill} Returns this Fill object for chaining or assignment.\n\t */\n\tp.bitmap = function(image, repetition) {\n\t\tif (image.naturalWidth || image.getContext || image.readyState >= 2) {\n\t\t\tvar o = this.style = Graphics._ctx.createPattern(image, repetition || \"\");\n\t\t\to.props = {image: image, repetition: repetition, type: \"bitmap\"};\n\t\t}\n\t\treturn this;\n\t};\n\tp.path = false;\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/beginStroke\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class Stroke\n\t * @constructor\n\t * @param {Object} style A valid Context2D fillStyle.\n\t * @param {Boolean} ignoreScale\n\t **/\n\t/**\n\t * A valid Context2D strokeStyle.\n\t * @property style\n\t * @type Object\n\t */\n\t/**\n\t * @property ignoreScale\n\t * @type Boolean\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\tp = (G.Stroke = function(style, ignoreScale) {\n\t\tthis.style = style;\n\t\tthis.ignoreScale = ignoreScale;\n\t}).prototype;\n\tp.exec = function(ctx) {\n\t\tif (!this.style) { return; }\n\t\tctx.strokeStyle = this.style;\n\t\tif (this.ignoreScale) { ctx.save(); ctx.setTransform(1,0,0,1,0,0); }\n\t\tctx.stroke();\n\t\tif (this.ignoreScale) { ctx.restore(); }\n\t};\n\t/**\n\t * Creates a linear gradient style and assigns it to {{#crossLink \"Stroke/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginLinearGradientStroke\"}}{{/crossLink}} for more information.\n\t * @method linearGradient\n\t * @param {Array} colors\n\t * @param {Array} ratios\n\t * @param {Number} x0\n\t * @param {Number} y0\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @return {Fill} Returns this Stroke object for chaining or assignment.\n\t */\n\tp.linearGradient = G.Fill.prototype.linearGradient;\n\t/**\n\t * Creates a radial gradient style and assigns it to {{#crossLink \"Stroke/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginRadialGradientStroke\"}}{{/crossLink}} for more information.\n\t * @method radialGradient\n\t * @param {Array} colors\n\t * @param {Array} ratios\n\t * @param {Number} x0\n\t * @param {Number} y0\n\t * @param {Number} r0\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @param {Number} r1\n\t * @return {Fill} Returns this Stroke object for chaining or assignment.\n\t */\n\tp.radialGradient = G.Fill.prototype.radialGradient;\n\t/**\n\t * Creates a bitmap fill style and assigns it to {{#crossLink \"Stroke/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginBitmapStroke\"}}{{/crossLink}} for more information.\n\t * @method bitmap\n\t * @param {HTMLImageElement} image\n\t * @param {String} [repetition] One of: repeat, repeat-x, repeat-y, or no-repeat.\n\t * @return {Fill} Returns this Stroke object for chaining or assignment.\n\t */\n\tp.bitmap = G.Fill.prototype.bitmap;\n\tp.path = false;\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class StrokeStyle\n\t * @constructor\n\t * @param {Number} width\n\t * @param {String} [caps=butt]\n\t * @param {String} [joints=miter]\n\t * @param {Number} [miterLimit=10]\n\t * @param {Boolean} [ignoreScale=false]\n\t **/\n\t/**\n\t * @property width\n\t * @type Number\n\t */\n\t/**\n\t * One of: butt, round, square\n\t * @property caps\n\t * @type String\n\t */\n\t/**\n\t * One of: round, bevel, miter\n\t * @property joints\n\t * @type String\n\t */\n\t/**\n\t * @property miterLimit\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\tp = (G.StrokeStyle = function(width, caps, joints, miterLimit, ignoreScale) {\n\t\tthis.width = width;\n\t\tthis.caps = caps;\n\t\tthis.joints = joints;\n\t\tthis.miterLimit = miterLimit;\n\t\tthis.ignoreScale = ignoreScale;\n\t}).prototype;\n\tp.exec = function(ctx) {\n\t\tctx.lineWidth = (this.width == null ? \"1\" : this.width);\n\t\tctx.lineCap = (this.caps == null ? \"butt\" : (isNaN(this.caps) ? this.caps : Graphics.STROKE_CAPS_MAP[this.caps]));\n\t\tctx.lineJoin = (this.joints == null ? \"miter\" : (isNaN(this.joints) ? this.joints : Graphics.STROKE_JOINTS_MAP[this.joints]));\n\t\tctx.miterLimit = (this.miterLimit == null ? \"10\" : this.miterLimit);\n\t\tctx.ignoreScale = (this.ignoreScale == null ? false : this.ignoreScale);\n\t};\n\tp.path = false;\n\t\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/setStrokeDash\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class StrokeDash\n\t * @constructor\n\t * @param {Array} [segments]\n\t * @param {Number} [offset=0]\n\t **/\n\t/**\n\t * @property segments\n\t * @type Array\n\t */\n\t/**\n\t * @property offset\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\t(G.StrokeDash = function(segments, offset) {\n\t\tthis.segments = segments;\n\t\tthis.offset = offset||0;\n\t}).prototype.exec = function(ctx) {\n\t\tif (ctx.setLineDash) { // feature detection.\n\t\t\tctx.setLineDash(this.segments|| G.StrokeDash.EMPTY_SEGMENTS); // instead of [] to reduce churn.\n\t\t\tctx.lineDashOffset = this.offset||0;\n\t\t}\n\t};\n\t/**\n\t * The default value for segments (ie. no dash).\n\t * @property EMPTY_SEGMENTS\n\t * @static\n\t * @final\n\t * @readonly\n\t * @protected\n\t * @type {Array}\n\t **/\n\tG.StrokeDash.EMPTY_SEGMENTS = [];\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/drawRoundRectComplex\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class RoundRect\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w\n\t * @param {Number} h\n\t * @param {Number} radiusTL\n\t * @param {Number} radiusTR\n\t * @param {Number} radiusBR\n\t * @param {Number} radiusBL\n\t **/\n\t/**\n\t * @property x\n\t * @type Number\n\t */\n\t/**\n\t * @property y\n\t * @type Number\n\t */\n\t/**\n\t * @property w\n\t * @type Number\n\t */\n\t/**\n\t * @property h\n\t * @type Number\n\t */\n\t/**\n\t * @property radiusTL\n\t * @type Number\n\t */\n\t/**\n\t * @property radiusTR\n\t * @type Number\n\t */\n\t/**\n\t * @property radiusBR\n\t * @type Number\n\t */\n\t/**\n\t * @property radiusBL\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\t(G.RoundRect = function(x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL) {\n\t\tthis.x = x; this.y = y;\n\t\tthis.w = w; this.h = h;\n\t\tthis.radiusTL = radiusTL; this.radiusTR = radiusTR;\n\t\tthis.radiusBR = radiusBR; this.radiusBL = radiusBL;\n\t}).prototype.exec = function(ctx) {\n\t\tvar max = (w<h?w:h)/2;\n\t\tvar mTL=0, mTR=0, mBR=0, mBL=0;\n\t\tvar x = this.x, y = this.y, w = this.w, h = this.h;\n\t\tvar rTL = this.radiusTL, rTR = this.radiusTR, rBR = this.radiusBR, rBL = this.radiusBL;\n\n\t\tif (rTL < 0) { rTL *= (mTL=-1); }\n\t\tif (rTL > max) { rTL = max; }\n\t\tif (rTR < 0) { rTR *= (mTR=-1); }\n\t\tif (rTR > max) { rTR = max; }\n\t\tif (rBR < 0) { rBR *= (mBR=-1); }\n\t\tif (rBR > max) { rBR = max; }\n\t\tif (rBL < 0) { rBL *= (mBL=-1); }\n\t\tif (rBL > max) { rBL = max; }\n\n\t\tctx.moveTo(x+w-rTR, y);\n\t\tctx.arcTo(x+w+rTR*mTR, y-rTR*mTR, x+w, y+rTR, rTR);\n\t\tctx.lineTo(x+w, y+h-rBR);\n\t\tctx.arcTo(x+w+rBR*mBR, y+h+rBR*mBR, x+w-rBR, y+h, rBR);\n\t\tctx.lineTo(x+rBL, y+h);\n\t\tctx.arcTo(x-rBL*mBL, y+h+rBL*mBL, x, y+h-rBL, rBL);\n\t\tctx.lineTo(x, y+rTL);\n\t\tctx.arcTo(x-rTL*mTL, y-rTL*mTL, x+rTL, y, rTL);\n\t\tctx.closePath();\n\t};\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class Circle\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} radius\n\t **/\n\t/**\n\t * @property x\n\t * @type Number\n\t */\n\t/**\n\t * @property y\n\t * @type Number\n\t */\n\t/**\n\t * @property radius\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\t(G.Circle = function(x, y, radius) {\n\t\tthis.x = x; this.y = y;\n\t\tthis.radius = radius;\n\t}).prototype.exec = function(ctx) { ctx.arc(this.x, this.y, this.radius, 0, Math.PI*2); };\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/drawEllipse\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class Ellipse\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w\n\t * @param {Number} h\n\t **/\n\t/**\n\t * @property x\n\t * @type Number\n\t */\n\t/**\n\t * @property y\n\t * @type Number\n\t */\n\t/**\n\t * @property w\n\t * @type Number\n\t */\n\t/**\n\t * @property h\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\t(G.Ellipse = function(x, y, w, h) {\n\t\tthis.x = x; this.y = y;\n\t\tthis.w = w; this.h = h;\n\t}).prototype.exec = function(ctx) {\n\t\tvar x = this.x, y = this.y;\n\t\tvar w = this.w, h = this.h;\n\n\t\tvar k = 0.5522848;\n\t\tvar ox = (w / 2) * k;\n\t\tvar oy = (h / 2) * k;\n\t\tvar xe = x + w;\n\t\tvar ye = y + h;\n\t\tvar xm = x + w / 2;\n\t\tvar ym = y + h / 2;\n\n\t\tctx.moveTo(x, ym);\n\t\tctx.bezierCurveTo(x, ym-oy, xm-ox, y, xm, y);\n\t\tctx.bezierCurveTo(xm+ox, y, xe, ym-oy, xe, ym);\n\t\tctx.bezierCurveTo(xe, ym+oy, xm+ox, ye, xm, ye);\n\t\tctx.bezierCurveTo(xm-ox, ye, x, ym+oy, x, ym);\n\t};\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/drawPolyStar\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class PolyStar\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} radius\n\t * @param {Number} sides\n\t * @param {Number} pointSize\n\t * @param {Number} angle\n\t **/\n\t/**\n\t * @property x\n\t * @type Number\n\t */\n\t/**\n\t * @property y\n\t * @type Number\n\t */\n\t/**\n\t * @property radius\n\t * @type Number\n\t */\n\t/**\n\t * @property sides\n\t * @type Number\n\t */\n\t/**\n\t * @property pointSize\n\t * @type Number\n\t */\n\t/**\n\t * @property angle\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\t(G.PolyStar = function(x, y, radius, sides, pointSize, angle) {\n\t\tthis.x = x; this.y = y;\n\t\tthis.radius = radius;\n\t\tthis.sides = sides;\n\t\tthis.pointSize = pointSize;\n\t\tthis.angle = angle;\n\t}).prototype.exec = function(ctx) {\n\t\tvar x = this.x, y = this.y;\n\t\tvar radius = this.radius;\n\t\tvar angle = (this.angle||0)/180*Math.PI;\n\t\tvar sides = this.sides;\n\t\tvar ps = 1-(this.pointSize||0);\n\t\tvar a = Math.PI/sides;\n\n\t\tctx.moveTo(x+Math.cos(angle)*radius, y+Math.sin(angle)*radius);\n\t\tfor (var i=0; i<sides; i++) {\n\t\t\tangle += a;\n\t\t\tif (ps != 1) {\n\t\t\t\tctx.lineTo(x+Math.cos(angle)*radius*ps, y+Math.sin(angle)*radius*ps);\n\t\t\t}\n\t\t\tangle += a;\n\t\t\tctx.lineTo(x+Math.cos(angle)*radius, y+Math.sin(angle)*radius);\n\t\t}\n\t\tctx.closePath();\n\t};\n\n\t// docced above.\n\tGraphics.beginCmd = new G.BeginPath(); // so we don't have to instantiate multiple instances.\n\n\n\tcreatejs.Graphics = Graphics;\n}());\n\n//##############################################################################\n// DisplayObject.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * DisplayObject is an abstract class that should not be constructed directly. Instead construct subclasses such as\n\t * {{#crossLink \"Container\"}}{{/crossLink}}, {{#crossLink \"Bitmap\"}}{{/crossLink}}, and {{#crossLink \"Shape\"}}{{/crossLink}}.\n\t * DisplayObject is the base class for all display classes in the EaselJS library. It defines the core properties and\n\t * methods that are shared between all display objects, such as transformation properties (x, y, scaleX, scaleY, etc),\n\t * caching, and mouse handlers.\n\t * @class DisplayObject\n\t * @extends EventDispatcher\n\t * @constructor\n\t **/\n\tfunction DisplayObject() {\n\t\tthis.EventDispatcher_constructor();\n\n\n\t// public properties:\n\t\t/**\n\t\t * The alpha (transparency) for this display object. 0 is fully transparent, 1 is fully opaque.\n\t\t * @property alpha\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t **/\n\t\tthis.alpha = 1;\n\n\t\t/**\n\t\t * If a cache is active, this returns the canvas that holds the image of this display object. See {{#crossLink \"DisplayObject/cache:method\"}}{{/crossLink}}\n\t\t * for more information. Use this to display the result of a cache. This will be a HTMLCanvasElement unless special cache rules have been deliberately enabled for this cache.\n\t\t * @property cacheCanvas\n\t\t * @type {HTMLCanvasElement | Object}\n\t\t * @default null\n\t\t * @readonly\n\t\t **/\n\t\tthis.cacheCanvas = null;\n\n\t\t/**\n\t\t * If a cache has been made, this returns the class that is managing the cacheCanvas and its properties. See {{#crossLink \"BitmapCache\"}}{{/crossLink}}\n\t\t * for more information. Use this to control, inspect, and change the cache. In special circumstances this may be a modified or subclassed BitmapCache.\n\t\t * @property bitmapCache\n\t\t * @type {BitmapCache}\n\t\t * @default null\n\t\t * @readonly\n\t\t **/\n\t\tthis.bitmapCache = null;\n\n\t\t/**\n\t\t * Unique ID for this display object. Makes display objects easier for some uses.\n\t\t * @property id\n\t\t * @type {Number}\n\t\t * @default -1\n\t\t **/\n\t\tthis.id = createjs.UID.get();\n\n\t\t/**\n\t\t * Indicates whether to include this object when running mouse interactions. Setting this to `false` for children\n\t\t * of a {{#crossLink \"Container\"}}{{/crossLink}} will cause events on the Container to not fire when that child is\n\t\t * clicked. Setting this property to `false` does not prevent the {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}}\n\t\t * method from returning the child.\n\t\t *\n\t\t * <strong>Note:</strong> In EaselJS 0.7.0, the mouseEnabled property will not work properly with nested Containers. Please\n\t\t * check out the latest NEXT version in <a href=\"https://github.com/CreateJS/EaselJS/tree/master/lib\">GitHub</a> for an updated version with this issue resolved. The fix will be\n\t\t * provided in the next release of EaselJS.\n\t\t * @property mouseEnabled\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t **/\n\t\tthis.mouseEnabled = true;\n\n\t\t/**\n\t\t * If false, the tick will not run on this display object (or its children). This can provide some performance benefits.\n\t\t * In addition to preventing the \"tick\" event from being dispatched, it will also prevent tick related updates\n\t\t * on some display objects (ex. Sprite & MovieClip frame advancing, and DOMElement display properties).\n\t\t * @property tickEnabled\n\t\t * @type Boolean\n\t\t * @default true\n\t\t **/\n\t\tthis.tickEnabled = true;\n\n\t\t/**\n\t\t * An optional name for this display object. Included in {{#crossLink \"DisplayObject/toString\"}}{{/crossLink}} . Useful for\n\t\t * debugging.\n\t\t * @property name\n\t\t * @type {String}\n\t\t * @default null\n\t\t **/\n\t\tthis.name = null;\n\n\t\t/**\n\t\t * A reference to the {{#crossLink \"Container\"}}{{/crossLink}} or {{#crossLink \"Stage\"}}{{/crossLink}} object that\n\t\t * contains this display object, or null if it has not been added\n\t\t * to one.\n\t\t * @property parent\n\t\t * @final\n\t\t * @type {Container}\n\t\t * @default null\n\t\t * @readonly\n\t\t **/\n\t\tthis.parent = null;\n\n\t\t/**\n\t\t * The left offset for this display object's registration point. For example, to make a 100x100px Bitmap rotate\n\t\t * around its center, you would set regX and {{#crossLink \"DisplayObject/regY:property\"}}{{/crossLink}} to 50.\n\t\t * Cached object's registration points should be set based on pre-cache conditions, not cached size.\n\t\t * @property regX\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n\t\tthis.regX = 0;\n\n\t\t/**\n\t\t * The y offset for this display object's registration point. For example, to make a 100x100px Bitmap rotate around\n\t\t * its center, you would set {{#crossLink \"DisplayObject/regX:property\"}}{{/crossLink}} and regY to 50.\n\t\t * Cached object's registration points should be set based on pre-cache conditions, not cached size.\n\t\t * @property regY\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n\t\tthis.regY = 0;\n\n\t\t/**\n\t\t * The rotation in degrees for this display object.\n\t\t * @property rotation\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n\t\tthis.rotation = 0;\n\n\t\t/**\n\t\t * The factor to stretch this display object horizontally. For example, setting scaleX to 2 will stretch the display\n\t\t * object to twice its nominal width. To horizontally flip an object, set the scale to a negative number.\n\t\t * @property scaleX\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t **/\n\t\tthis.scaleX = 1;\n\n\t\t/**\n\t\t * The factor to stretch this display object vertically. For example, setting scaleY to 0.5 will stretch the display\n\t\t * object to half its nominal height. To vertically flip an object, set the scale to a negative number.\n\t\t * @property scaleY\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t **/\n\t\tthis.scaleY = 1;\n\n\t\t/**\n\t\t * The factor to skew this display object horizontally.\n\t\t * @property skewX\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n\t\tthis.skewX = 0;\n\n\t\t/**\n\t\t * The factor to skew this display object vertically.\n\t\t * @property skewY\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n\t\tthis.skewY = 0;\n\n\t\t/**\n\t\t * A shadow object that defines the shadow to render on this display object. Set to `null` to remove a shadow. If\n\t\t * null, this property is inherited from the parent container.\n\t\t * @property shadow\n\t\t * @type {Shadow}\n\t\t * @default null\n\t\t **/\n\t\tthis.shadow = null;\n\n\t\t/**\n\t\t * Indicates whether this display object should be rendered to the canvas and included when running the Stage\n\t\t * {{#crossLink \"Stage/getObjectsUnderPoint\"}}{{/crossLink}} method.\n\t\t * @property visible\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t **/\n\t\tthis.visible = true;\n\n\t\t/**\n\t\t * The x (horizontal) position of the display object, relative to its parent.\n\t\t * @property x\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n\t\tthis.x = 0;\n\n\t\t/** The y (vertical) position of the display object, relative to its parent.\n\t\t * @property y\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n\t\tthis.y = 0;\n\n\t\t/**\n\t\t * If set, defines the transformation for this display object, overriding all other transformation properties\n\t\t * (x, y, rotation, scale, skew).\n\t\t * @property transformMatrix\n\t\t * @type {Matrix2D}\n\t\t * @default null\n\t\t **/\n\t\tthis.transformMatrix = null;\n\n\t\t/**\n\t\t * The composite operation indicates how the pixels of this display object will be composited with the elements\n\t\t * behind it. If `null`, this property is inherited from the parent container. For more information, read the\n\t\t * <a href=\"https://html.spec.whatwg.org/multipage/scripting.html#dom-context-2d-globalcompositeoperation\">\n\t\t * whatwg spec on compositing</a>. For a list of supported compositeOperation value, visit\n\t\t * <a href=\"https://drafts.fxtf.org/compositing/\">the W3C draft on Compositing and Blending</a>.\n\t\t * @property compositeOperation\n\t\t * @type {String}\n\t\t * @default null\n\t\t **/\n\t\tthis.compositeOperation = null;\n\n\t\t/**\n\t\t * Indicates whether the display object should be drawn to a whole pixel when\n\t\t * {{#crossLink \"Stage/snapToPixelEnabled\"}}{{/crossLink}} is true. To enable/disable snapping on whole\n\t\t * categories of display objects, set this value on the prototype (Ex. Text.prototype.snapToPixel = true).\n\t\t * @property snapToPixel\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t **/\n\t\tthis.snapToPixel = true;\n\n\t\t/**\n\t\t * An array of Filter objects to apply to this display object. Filters are only applied / updated when {{#crossLink \"cache\"}}{{/crossLink}}\n\t\t * or {{#crossLink \"updateCache\"}}{{/crossLink}} is called on the display object, and only apply to the area that is\n\t\t * cached.\n\t\t * @property filters\n\t\t * @type {Array}\n\t\t * @default null\n\t\t **/\n\t\tthis.filters = null;\n\n\t\t/**\n\t\t * A Shape instance that defines a vector mask (clipping path) for this display object.  The shape's transformation\n\t\t * will be applied relative to the display object's parent coordinates (as if it were a child of the parent).\n\t\t * @property mask\n\t\t * @type {Shape}\n\t\t * @default null\n\t\t */\n\t\tthis.mask = null;\n\n\t\t/**\n\t\t * A display object that will be tested when checking mouse interactions or testing {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}}.\n\t\t * The hit area will have its transformation applied relative to this display object's coordinate space (as though\n\t\t * the hit test object were a child of this display object and relative to its regX/Y). The hitArea will be tested\n\t\t * using only its own `alpha` value regardless of the alpha value on the target display object, or the target's\n\t\t * ancestors (parents).\n\t\t * \n\t\t * If set on a {{#crossLink \"Container\"}}{{/crossLink}}, children of the Container will not receive mouse events.\n\t\t * This is similar to setting {{#crossLink \"mouseChildren\"}}{{/crossLink}} to false.\n\t\t *\n\t\t * Note that hitArea is NOT currently used by the `hitTest()` method, nor is it supported for {{#crossLink \"Stage\"}}{{/crossLink}}.\n\t\t * @property hitArea\n\t\t * @type {DisplayObject}\n\t\t * @default null\n\t\t */\n\t\tthis.hitArea = null;\n\n\t\t/**\n\t\t * A CSS cursor (ex. \"pointer\", \"help\", \"text\", etc) that will be displayed when the user hovers over this display\n\t\t * object. You must enable mouseover events using the {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}} method to\n\t\t * use this property. Setting a non-null cursor on a Container will override the cursor set on its descendants.\n\t\t * @property cursor\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.cursor = null;\n\n\n\t// private properties:\n\t\t/**\n\t\t * Moved to {{#crossLink \"BitmapCache\"}}{{/crossLink}}\n\t\t * @property _cacheScale\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t * @deprecated\n\t\t **/\n\n\t\t/**\n\t\t * Moved to {{#crossLink \"BitmapCache\"}}{{/crossLink}}\n\t\t * @property _cacheDataURLID\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @deprecated\n\t\t */\n\n\t\t/**\n\t\t * Moved to {{#crossLink \"BitmapCache\"}}{{/crossLink}}\n\t\t * @property _cacheDataURL\n\t\t * @protected\n\t\t * @type {String}\n\t\t * @default null\n\t\t * @deprecated\n\t\t */\n\n\t\t/**\n\t\t * @property _props\n\t\t * @protected\n\t\t * @type {DisplayObject}\n\t\t * @default null\n\t\t **/\n\t\tthis._props = new createjs.DisplayProps();\n\n\t\t/**\n\t\t * @property _rectangle\n\t\t * @protected\n\t\t * @type {Rectangle}\n\t\t * @default null\n\t\t **/\n\t\tthis._rectangle = new createjs.Rectangle();\n\n\t\t/**\n\t\t * @property _bounds\n\t\t * @protected\n\t\t * @type {Rectangle}\n\t\t * @default null\n\t\t **/\n\t\tthis._bounds = null;\n\n\t\t/**\n\t\t * Where StageGL should look for required display properties, matters only for leaf display objects. Containers\n\t\t * or cached objects won't use this property, it's for native display of terminal elements.\n\t\t * @property _webGLRenderStyle\n\t\t * @protected\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis._webGLRenderStyle = DisplayObject._StageGL_NONE;\n\t}\n\tvar p = createjs.extend(DisplayObject, createjs.EventDispatcher);\n\n// static properties:\n\t/**\n\t * Listing of mouse event names. Used in _hasMouseEventListener.\n\t * @property _MOUSE_EVENTS\n\t * @protected\n\t * @static\n\t * @type {Array}\n\t **/\n\tDisplayObject._MOUSE_EVENTS = [\"click\",\"dblclick\",\"mousedown\",\"mouseout\",\"mouseover\",\"pressmove\",\"pressup\",\"rollout\",\"rollover\"];\n\n\t/**\n\t * Suppresses errors generated when using features like hitTest, mouse events, and {{#crossLink \"getObjectsUnderPoint\"}}{{/crossLink}}\n\t * with cross domain content.\n\t * @property suppressCrossDomainErrors\n\t * @static\n\t * @type {Boolean}\n\t * @default false\n\t **/\n\tDisplayObject.suppressCrossDomainErrors = false;\n\n\t/**\n\t * @property _snapToPixelEnabled\n\t * @protected\n\t * @static\n\t * @type {Boolean}\n\t * @default false\n\t **/\n\tDisplayObject._snapToPixelEnabled = false; // stage.snapToPixelEnabled is temporarily copied here during a draw to provide global access.\n\n\t/**\n\t * Enum like property for determining StageGL render lookup, i.e. where to expect properties.\n\t * @property _StageGL_NONE\n\t * @protected\n\t * @static\n\t * @type {number}\n\t */\n\tDisplayObject._StageGL_NONE = 0;\n\n\t/**\n\t * Enum like property for determining StageGL render lookup, i.e. where to expect properties.\n\t * @property _StageGL_SPRITE\n\t * @protected\n\t * @static\n\t * @type {number}\n\t */\n\tDisplayObject._StageGL_SPRITE = 1;\n\n\t/**\n\t * Enum like property for determining StageGL render lookup, i.e. where to expect properties.\n\t * @property _StageGL_BITMAP\n\t * @protected\n\t * @static\n\t * @type {number}\n\t */\n\tDisplayObject._StageGL_BITMAP = 2;\n\n\t/**\n\t * @property _hitTestCanvas\n\t * @type {HTMLCanvasElement | Object}\n\t * @static\n\t * @protected\n\t **/\n\t/**\n\t * @property _hitTestContext\n\t * @type {CanvasRenderingContext2D}\n\t * @static\n\t * @protected\n\t **/\n\tvar canvas = createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\"); // prevent errors on load in browsers without canvas.\n\tif (canvas.getContext) {\n\t\tDisplayObject._hitTestCanvas = canvas;\n\t\tDisplayObject._hitTestContext = canvas.getContext(\"2d\");\n\t\tcanvas.width = canvas.height = 1;\n\t}\n\n// events:\n\t/**\n\t * Dispatched when the user presses their left mouse button over the display object. See the \n\t * {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event mousedown\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when the user presses their left mouse button and then releases it while over the display object.\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event click\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when the user double clicks their left mouse button over this display object.\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event dblclick\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when the user's mouse enters this display object. This event must be enabled using \n\t * {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}. See also {{#crossLink \"DisplayObject/rollover:event\"}}{{/crossLink}}.\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event mouseover\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when the user's mouse leaves this display object. This event must be enabled using \n\t * {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}. See also {{#crossLink \"DisplayObject/rollout:event\"}}{{/crossLink}}.\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event mouseout\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * This event is similar to {{#crossLink \"DisplayObject/mouseover:event\"}}{{/crossLink}}, with the following\n\t * differences: it does not bubble, and it considers {{#crossLink \"Container\"}}{{/crossLink}} instances as an\n\t * aggregate of their content.\n\t * \n\t * For example, myContainer contains two overlapping children: shapeA and shapeB. The user moves their mouse over\n\t * shapeA and then directly on to shapeB. With a listener for {{#crossLink \"mouseover:event\"}}{{/crossLink}} on\n\t * myContainer, two events would be received, each targeting a child element:<OL>\n\t * <LI>when the mouse enters shapeA (target=shapeA)</LI>\n\t * <LI>when the mouse enters shapeB (target=shapeB)</LI>\n\t * </OL>\n\t * However, with a listener for \"rollover\" instead, only a single event is received when the mouse first enters\n\t * the aggregate myContainer content (target=myContainer).\n\t * \n\t * This event must be enabled using {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}.\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event rollover\n\t * @since 0.7.0\n\t */\n\n\t/**\n\t * This event is similar to {{#crossLink \"DisplayObject/mouseout:event\"}}{{/crossLink}}, with the following\n\t * differences: it does not bubble, and it considers {{#crossLink \"Container\"}}{{/crossLink}} instances as an\n\t * aggregate of their content.\n\t * \n\t * For example, myContainer contains two overlapping children: shapeA and shapeB. The user moves their mouse over\n\t * shapeA, then directly on to shapeB, then off both. With a listener for {{#crossLink \"mouseout:event\"}}{{/crossLink}}\n\t * on myContainer, two events would be received, each targeting a child element:<OL>\n\t * <LI>when the mouse leaves shapeA (target=shapeA)</LI>\n\t * <LI>when the mouse leaves shapeB (target=shapeB)</LI>\n\t * </OL>\n\t * However, with a listener for \"rollout\" instead, only a single event is received when the mouse leaves\n\t * the aggregate myContainer content (target=myContainer).\n\t * \n\t * This event must be enabled using {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}.\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event rollout\n\t * @since 0.7.0\n\t */\n\n\t/**\n\t * After a {{#crossLink \"DisplayObject/mousedown:event\"}}{{/crossLink}} occurs on a display object, a pressmove\n\t * event will be generated on that object whenever the mouse moves until the mouse press is released. This can be\n\t * useful for dragging and similar operations.\n\t *\n\t * **Please note** that if the initial mouse target from a `mousedown` event is removed from the stage after being pressed\n\t * (e.g. during a `pressmove` event), a `pressmove` event is still generated. However since it is no longer in the\n\t * display list, the event can not bubble. This means that previous ancestors (parent containers) will not receive\n\t * the event, and therefore can not re-dispatch it. If you intend to listen for `{{#crossLink \"DisplayObject/pressup:event\"}}{{/crossLink}}`\n\t * or `pressmove` on a dynamic object (such as a {{#crossLink \"MovieClip\"}}{{/crossLink}} or {{#crossLink \"Container\"}}{{/crossLink}}),\n\t * then ensure you set {{#crossLink \"Container/mouseChildren:property\"}}{{/crossLink}} to `false`.\n\t * @event pressmove\n\t * @since 0.7.0\n\t */\n\n\t/**\n\t * After a {{#crossLink \"DisplayObject/mousedown:event\"}}{{/crossLink}} occurs on a display object, a pressup event\n\t * will be generated on that object when that mouse press is released. This can be useful for dragging and similar\n\t * operations.\n\t *\n\t * **Please note** that if the initial mouse target from a `mousedown` event is removed from the stage after being pressed\n\t * (e.g. during a `pressmove` event), a `pressup` event is still generated. However since it is no longer in the\n\t * display list, the event can not bubble. This means that previous ancestors (parent containers) will not receive\n\t * the event, and therefore can not re-dispatch it. If you intend to listen for `{{#crossLink \"DisplayObject/pressmove:event\"}}{{/crossLink}}`\n\t * or `pressup` on a dynamic object (such as a {{#crossLink \"MovieClip\"}}{{/crossLink}} or {{#crossLink \"Container\"}}{{/crossLink}}),\n\t * then ensure you set {{#crossLink \"Container/mouseChildren:property\"}}{{/crossLink}} to `false`.\n\t * @event pressup\n\t * @since 0.7.0\n\t */\n\n\t/**\n\t * Dispatched when the display object is added to a parent container.\n\t * @event added\n\t */\n\n\t/**\n\t * Dispatched when the display object is removed from its parent container.\n\t * @event removed\n\t */\n\n\t/**\n\t * Dispatched on each display object on a stage whenever the stage updates. This occurs immediately before the\n\t * rendering (draw) pass. When {{#crossLink \"Stage/update\"}}{{/crossLink}} is called, first all display objects on\n\t * the stage dispatch the tick event, then all of the display objects are drawn to stage. Children will have their\n\t * {{#crossLink \"tick:event\"}}{{/crossLink}} event dispatched in order of their depth prior to the event being\n\t * dispatched on their parent.\n\t * @event tick\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @param {Array} params An array containing any arguments that were passed to the Stage.update() method. For\n\t *      example if you called stage.update(\"hello\"), then the params would be [\"hello\"].\n\t * @since 0.6.0\n\t */\n\n\n// getter / setters:\n\t/**\n\t * Use the {{#crossLink \"DisplayObject/stage:property\"}}{{/crossLink}} property instead.\n\t * @method _getStage\n\t * @protected\n\t * @return {Stage}\n\t **/\n\tp._getStage = function() {\n\t\t// uses dynamic access to avoid circular dependencies;\n\t\tvar o = this, _Stage = createjs[\"Stage\"];\n\t\twhile (o.parent) { o = o.parent; }\n\t\tif (o instanceof _Stage) { return o; }\n\t\treturn null;\n\t};\n\t// DisplayObject.getStage is @deprecated. Remove for 1.1+\n\tp.getStage = createjs.deprecate(p._getStage, \"DisplayObject.getStage\");\n\n\t/**\n\t * Returns the Stage instance that this display object will be rendered on, or null if it has not been added to one.\n\t * @property stage\n\t * @type {Stage}\n\t * @readonly\n\t **/\n\n\t/**\n\t * Returns an ID number that uniquely identifies the current cache for this display object. This can be used to\n\t * determine if the cache has changed since a previous check.\n\t * Moved to {{#crossLink \"BitmapCache\"}}{{/crossLink}}\n\t * @property cacheID\n\t * @deprecated\n\t * @type {Number}\n\t * @default 0\n\t */\n\n\t/**\n\t * Set both the {{#crossLink \"DisplayObject/scaleX:property\"}}{{/crossLink}} and the {{#crossLink \"DisplayObject/scaleY\"}}{{/crossLink}}\n\t * property to the same value. Note that when you get the value, if the `scaleX` and `scaleY` are different values,\n\t * it will return only the `scaleX`.\n\t * @property scaleX\n\t * @type {Number}\n\t * @default 1\n\t */\n\ttry {\n\t\tObject.defineProperties(p, {\n\t\t\tstage: { get: p._getStage },\n\t\t\tcacheID: {\n\t\t\t\tget: function(){ return this.bitmapCache && this.bitmapCache.cacheID },\n\t\t\t\tset: function(a){ this.bitmapCache && (this.bitmapCache.cacheID = a) }\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tget: function() { return this.scaleX; },\n\t\t\t\tset: function(scale) { this.scaleX = this.scaleY = scale; },\n\t\t\t}\n\t\t});\n\t} catch (e) {}\n\n\n// public methods:\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t **/\n\tp.isVisible = function() {\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0);\n\t};\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns <code>true</code> if the draw was handled (useful for overriding functionality).\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache. For example,\n\t * used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\n\t * @return {Boolean}\n\t **/\n\tp.draw = function(ctx, ignoreCache) {\n\t\tvar cache = this.bitmapCache;\n\t\tif(cache && !ignoreCache) {\n\t\t\treturn cache.draw(ctx);\n\t\t}\n\t\treturn false;\n\t};\n\n\t/**\n\t * Applies this display object's transformation, alpha, globalCompositeOperation, clipping path (mask), and shadow\n\t * to the specified context. This is typically called prior to {{#crossLink \"DisplayObject/draw\"}}{{/crossLink}}.\n\t * @method updateContext\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D to update.\n\t **/\n\tp.updateContext = function(ctx) {\n\t\tvar o=this, mask=o.mask, mtx= o._props.matrix;\n\t\t\n\t\tif (mask && mask.graphics && !mask.graphics.isEmpty()) {\n\t\t\tmask.getMatrix(mtx);\n\t\t\tctx.transform(mtx.a,  mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\n\t\t\t\n\t\t\tmask.graphics.drawAsPath(ctx);\n\t\t\tctx.clip();\n\t\t\t\n\t\t\tmtx.invert();\n\t\t\tctx.transform(mtx.a,  mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\n\t\t}\n\t\t\n\t\tthis.getMatrix(mtx);\n\t\tvar tx = mtx.tx, ty = mtx.ty;\n\t\tif (DisplayObject._snapToPixelEnabled && o.snapToPixel) {\n\t\t\ttx = tx + (tx < 0 ? -0.5 : 0.5) | 0;\n\t\t\tty = ty + (ty < 0 ? -0.5 : 0.5) | 0;\n\t\t}\n\t\tctx.transform(mtx.a,  mtx.b, mtx.c, mtx.d, tx, ty);\n\t\tctx.globalAlpha *= o.alpha;\n\t\tif (o.compositeOperation) { ctx.globalCompositeOperation = o.compositeOperation; }\n\t\tif (o.shadow) { this._applyShadow(ctx, o.shadow); }\n\t};\n\n\t/**\n\t * Draws the display object into a new element, which is then used for subsequent draws. Intended for complex content\n\t * that does not change frequently (ex. a Container with many children that do not move, or a complex vector Shape),\n\t * this can provide for much faster rendering because the content does not need to be re-rendered each tick. The\n\t * cached display object can be moved, rotated, faded, etc freely, however if its content changes, you must manually\n\t * update the cache by calling <code>updateCache()</code> again. You must specify the cached area via the x, y, w,\n\t * and h parameters. This defines the rectangle that will be rendered and cached using this display object's coordinates.\n\t *\n\t * <h4>Example</h4>\n\t * For example if you defined a Shape that drew a circle at 0, 0 with a radius of 25:\n\t *\n\t *      var shape = new createjs.Shape();\n\t *      shape.graphics.beginFill(\"#ff0000\").drawCircle(0, 0, 25);\n\t *      shape.cache(-25, -25, 50, 50);\n\t *\n\t * Note that filters need to be defined <em>before</em> the cache is applied or you will have to call updateCache after\n\t * application. Check out the {{#crossLink \"Filter\"}}{{/crossLink}} class for more information. Some filters\n\t * (ex. BlurFilter) may not work as expected in conjunction with the scale param.\n\t * \n\t * Usually, the resulting cacheCanvas will have the dimensions width * scale, height * scale, however some filters (ex. BlurFilter)\n\t * will add padding to the canvas dimensions.\n\t *\n\t * In previous versions caching was handled on DisplayObject but has since been moved to {{#crossLink \"BitmapCache\"}}{{/crossLink}}.\n\t * This allows for easier interaction and alternate cache methods like WebGL with {{#crossLink \"StageGL\"}}{{/crossLink}}.\n\t * For more information on the options object, see the BitmapCache {{#crossLink \"BitmapCache/define\"}}{{/crossLink}}.\n\t *\n\t * @method cache\n\t * @param {Number} x The x coordinate origin for the cache region.\n\t * @param {Number} y The y coordinate origin for the cache region.\n\t * @param {Number} width The width of the cache region.\n\t * @param {Number} height The height of the cache region.\n\t * @param {Number} [scale=1] The scale at which the cache will be created. For example, if you cache a vector shape using\n\t * \tmyShape.cache(0,0,100,100,2) then the resulting cacheCanvas will be 200x200 px. This lets you scale and rotate\n\t * \tcached elements with greater fidelity. Default is 1.\n\t * @param {Object} [options=undefined] Specify additional parameters for the cache logic\n\t **/\n\tp.cache = function(x, y, width, height, scale, options) {\n\t\tif(!this.bitmapCache){\n\t\t\tthis.bitmapCache = new createjs.BitmapCache();\n\t\t}\n\t\tthis.bitmapCache.define(this, x, y, width, height, scale, options);\n\t};\n\n\t/**\n\t * Redraws the display object to its cache. Calling updateCache without an active cache will throw an error.\n\t * If compositeOperation is null the current cache will be cleared prior to drawing. Otherwise the display object\n\t * will be drawn over the existing cache using the specified compositeOperation.\n\t *\n\t * <h4>Example</h4>\n\t * Clear the current graphics of a cached shape, draw some new instructions, and then update the cache. The new line\n\t * will be drawn on top of the old one.\n\t *\n\t *      // Not shown: Creating the shape, and caching it.\n\t *      shapeInstance.clear();\n\t *      shapeInstance.setStrokeStyle(3).beginStroke(\"#ff0000\").moveTo(100, 100).lineTo(200,200);\n\t *      shapeInstance.updateCache();\n\t *\n\t * In previous versions caching was handled on DisplayObject but has since been moved to {{#crossLink \"BitmapCache\"}}{{/crossLink}}.\n\t * This allows for easier interaction and alternate cache methods like WebGL and {{#crossLink \"StageGL\"}}{{/crossLink}}.\n\t *\n\t * @method updateCache\n\t * @param {String} compositeOperation The compositeOperation to use, or null to clear the cache and redraw it.\n\t * <a href=\"https://html.spec.whatwg.org/multipage/scripting.html#dom-context-2d-globalcompositeoperation\">\n\t * whatwg spec on compositing</a>.\n\t **/\n\tp.updateCache = function(compositeOperation) {\n\t\tif(!this.bitmapCache) {\n\t\t\tthrow \"cache() must be called before updateCache()\";\n\t\t}\n\t\tthis.bitmapCache.update(compositeOperation);\n\t};\n\n\t/**\n\t * Clears the current cache. See {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} for more information.\n\t * @method uncache\n\t **/\n\tp.uncache = function() {\n\t\tif(this.bitmapCache) {\n\t\t\tthis.bitmapCache.release();\n\t\t\tthis.bitmapCache = undefined;\n\t\t}\n\t};\n\n\t/**\n\t * Returns a data URL for the cache, or null if this display object is not cached.\n\t * Only generated if the cache has changed, otherwise returns last result.\n\t * @method getCacheDataURL\n\t * @return {String} The image data url for the cache.\n\t **/\n\tp.getCacheDataURL = function() {\n\t\treturn this.bitmapCache?this.bitmapCache.getDataURL():null;\n\t};\n\n\t/**\n\t * Transforms the specified x and y position from the coordinate space of the display object\n\t * to the global (stage) coordinate space. For example, this could be used to position an HTML label\n\t * over a specific point on a nested display object. Returns a Point instance with x and y properties\n\t * correlating to the transformed coordinates on the stage.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      displayObject.x = 300;\n\t *      displayObject.y = 200;\n\t *      stage.addChild(displayObject);\n\t *      var point = displayObject.localToGlobal(100, 100);\n\t *      // Results in x=400, y=300\n\t *\n\t * @method localToGlobal\n\t * @param {Number} x The x position in the source display object to transform.\n\t * @param {Number} y The y position in the source display object to transform.\n\t * @param {Point | Object} [pt] An object to copy the result into. If omitted a new Point object with x/y properties will be returned. \n\t * @return {Point} A Point instance with x and y properties correlating to the transformed coordinates\n\t * on the stage.\n\t **/\n\tp.localToGlobal = function(x, y, pt) {\n\t\treturn this.getConcatenatedMatrix(this._props.matrix).transformPoint(x,y, pt||new createjs.Point());\n\t};\n\n\t/**\n\t * Transforms the specified x and y position from the global (stage) coordinate space to the\n\t * coordinate space of the display object. For example, this could be used to determine\n\t * the current mouse position within the display object. Returns a Point instance with x and y properties\n\t * correlating to the transformed position in the display object's coordinate space.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      displayObject.x = 300;\n\t *      displayObject.y = 200;\n\t *      stage.addChild(displayObject);\n\t *      var point = displayObject.globalToLocal(100, 100);\n\t *      // Results in x=-200, y=-100\n\t *\n\t * @method globalToLocal\n\t * @param {Number} x The x position on the stage to transform.\n\t * @param {Number} y The y position on the stage to transform.\n\t * @param {Point | Object} [pt] An object to copy the result into. If omitted a new Point object with x/y properties will be returned. \n\t * @return {Point} A Point instance with x and y properties correlating to the transformed position in the\n\t * display object's coordinate space.\n\t **/\n\tp.globalToLocal = function(x, y, pt) {\n\t\treturn this.getConcatenatedMatrix(this._props.matrix).invert().transformPoint(x,y, pt||new createjs.Point());\n\t};\n\n\t/**\n\t * Transforms the specified x and y position from the coordinate space of this display object to the coordinate\n\t * space of the target display object. Returns a Point instance with x and y properties correlating to the\n\t * transformed position in the target's coordinate space. Effectively the same as using the following code with\n\t * {{#crossLink \"DisplayObject/localToGlobal\"}}{{/crossLink}} and {{#crossLink \"DisplayObject/globalToLocal\"}}{{/crossLink}}.\n\t *\n\t *      var pt = this.localToGlobal(x, y);\n\t *      pt = target.globalToLocal(pt.x, pt.y);\n\t *\n\t * @method localToLocal\n\t * @param {Number} x The x position in the source display object to transform.\n\t * @param {Number} y The y position on the source display object to transform.\n\t * @param {DisplayObject} target The target display object to which the coordinates will be transformed.\n\t * @param {Point | Object} [pt] An object to copy the result into. If omitted a new Point object with x/y properties will be returned. \n\t * @return {Point} Returns a Point instance with x and y properties correlating to the transformed position\n\t * in the target's coordinate space.\n\t **/\n\tp.localToLocal = function(x, y, target, pt) {\n\t\tpt = this.localToGlobal(x, y, pt);\n\t\treturn target.globalToLocal(pt.x, pt.y, pt);\n\t};\n\n\t/**\n\t * Shortcut method to quickly set the transform properties on the display object. All parameters are optional.\n\t * Omitted parameters will have the default value set.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      displayObject.setTransform(100, 100, 2, 2);\n\t *\n\t * @method setTransform\n\t * @param {Number} [x=0] The horizontal translation (x position) in pixels\n\t * @param {Number} [y=0] The vertical translation (y position) in pixels\n\t * @param {Number} [scaleX=1] The horizontal scale, as a percentage of 1\n\t * @param {Number} [scaleY=1] the vertical scale, as a percentage of 1\n\t * @param {Number} [rotation=0] The rotation, in degrees\n\t * @param {Number} [skewX=0] The horizontal skew factor\n\t * @param {Number} [skewY=0] The vertical skew factor\n\t * @param {Number} [regX=0] The horizontal registration point in pixels\n\t * @param {Number} [regY=0] The vertical registration point in pixels\n\t * @return {DisplayObject} Returns this instance. Useful for chaining commands.\n\t * @chainable\n\t*/\n\tp.setTransform = function(x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\t\tthis.scaleX = scaleX == null ? 1 : scaleX;\n\t\tthis.scaleY = scaleY == null ? 1 : scaleY;\n\t\tthis.rotation = rotation || 0;\n\t\tthis.skewX = skewX || 0;\n\t\tthis.skewY = skewY || 0;\n\t\tthis.regX = regX || 0;\n\t\tthis.regY = regY || 0;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Returns a matrix based on this object's current transform.\n\t * @method getMatrix\n\t * @param {Matrix2D} matrix Optional. A Matrix2D object to populate with the calculated values. If null, a new\n\t * Matrix object is returned.\n\t * @return {Matrix2D} A matrix representing this display object's transform.\n\t **/\n\tp.getMatrix = function(matrix) {\n\t\tvar o = this, mtx = matrix&&matrix.identity() || new createjs.Matrix2D();\n\t\treturn o.transformMatrix ?  mtx.copy(o.transformMatrix) : mtx.appendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation, o.skewX, o.skewY, o.regX, o.regY);\n\t};\n\n\t/**\n\t * Generates a Matrix2D object representing the combined transform of the display object and all of its\n\t * parent Containers up to the highest level ancestor (usually the {{#crossLink \"Stage\"}}{{/crossLink}}). This can\n\t * be used to transform positions between coordinate spaces, such as with {{#crossLink \"DisplayObject/localToGlobal\"}}{{/crossLink}}\n\t * and {{#crossLink \"DisplayObject/globalToLocal\"}}{{/crossLink}}.\n\t * @method getConcatenatedMatrix\n\t * @param {Matrix2D} [matrix] A {{#crossLink \"Matrix2D\"}}{{/crossLink}} object to populate with the calculated values.\n\t * If null, a new Matrix2D object is returned.\n\t * @return {Matrix2D} The combined matrix.\n\t **/\n\tp.getConcatenatedMatrix = function(matrix) {\n\t\tvar o = this, mtx = this.getMatrix(matrix);\n\t\twhile (o = o.parent) {\n\t\t\tmtx.prependMatrix(o.getMatrix(o._props.matrix));\n\t\t}\n\t\treturn mtx;\n\t};\n\n\t/**\n\t * Generates a DisplayProps object representing the combined display properties of the  object and all of its\n\t * parent Containers up to the highest level ancestor (usually the {{#crossLink \"Stage\"}}{{/crossLink}}).\n\t * @method getConcatenatedDisplayProps\n\t * @param {DisplayProps} [props] A {{#crossLink \"DisplayProps\"}}{{/crossLink}} object to populate with the calculated values.\n\t * If null, a new DisplayProps object is returned.\n\t * @return {DisplayProps} The combined display properties.\n\t **/\n\tp.getConcatenatedDisplayProps = function(props) {\n\t\tprops = props ? props.identity() : new createjs.DisplayProps();\n\t\tvar o = this, mtx = o.getMatrix(props.matrix); \n\t\tdo {\n\t\t\tprops.prepend(o.visible, o.alpha, o.shadow, o.compositeOperation);\n\t\t\t\n\t\t\t// we do this to avoid problems with the matrix being used for both operations when o._props.matrix is passed in as the props param.\n\t\t\t// this could be simplified (ie. just done as part of the prepend above) if we switched to using a pool.\n\t\t\tif (o != this) { mtx.prependMatrix(o.getMatrix(o._props.matrix)); }\n\t\t} while (o = o.parent);\n\t\treturn props;\n\t};\n\n\t/**\n\t * Tests whether the display object intersects the specified point in local coordinates (ie. draws a pixel with alpha > 0 at\n\t * the specified position). This ignores the alpha, shadow, hitArea, mask, and compositeOperation of the display object.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      stage.addEventListener(\"stagemousedown\", handleMouseDown);\n\t *      function handleMouseDown(event) {\n\t *          var hit = myShape.hitTest(event.stageX, event.stageY);\n\t *      }\n\t *\n\t * Please note that shape-to-shape collision is not currently supported by EaselJS.\n\t * @method hitTest\n\t * @param {Number} x The x position to check in the display object's local coordinates.\n\t * @param {Number} y The y position to check in the display object's local coordinates.\n\t * @return {Boolean} A Boolean indicating whether a visible portion of the DisplayObject intersect the specified\n\t * local Point.\n\t*/\n\tp.hitTest = function(x, y) {\n\t\tvar ctx = DisplayObject._hitTestContext;\n\t\tctx.setTransform(1, 0, 0, 1, -x, -y);\n\t\tthis.draw(ctx);\n\n\t\tvar hit = this._testHit(ctx);\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\tctx.clearRect(0, 0, 2, 2);\n\t\treturn hit;\n\t};\n\n\t/**\n\t * Provides a chainable shortcut method for setting a number of properties on the instance.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var myGraphics = new createjs.Graphics().beginFill(\"#ff0000\").drawCircle(0, 0, 25);\n\t *      var shape = stage.addChild(new Shape()).set({graphics:myGraphics, x:100, y:100, alpha:0.5});\n\t *\n\t * @method set\n\t * @param {Object} props A generic object containing properties to copy to the DisplayObject instance.\n\t * @return {DisplayObject} Returns the instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t*/\n\tp.set = function(props) {\n\t\tfor (var n in props) { this[n] = props[n]; }\n\t\treturn this;\n\t};\n\n\t/**\n\t * Returns a rectangle representing this object's bounds in its local coordinate system (ie. with no transformation).\n\t * Objects that have been cached will return the bounds of the cache.\n\t * \n\t * Not all display objects can calculate their own bounds (ex. Shape). For these objects, you can use \n\t * {{#crossLink \"DisplayObject/setBounds\"}}{{/crossLink}} so that they are included when calculating Container\n\t * bounds.\n\t * \n\t * <table>\n\t * \t<tr><td><b>All</b></td><td>\n\t * \t\tAll display objects support setting bounds manually using setBounds(). Likewise, display objects that\n\t * \t\thave been cached using cache() will return the bounds of their cache. Manual and cache bounds will override\n\t * \t\tthe automatic calculations listed below.\n\t * \t</td></tr>\n\t * \t<tr><td><b>Bitmap</b></td><td>\n\t * \t\tReturns the width and height of the sourceRect (if specified) or image, extending from (x=0,y=0).\n\t * \t</td></tr>\n\t * \t<tr><td><b>Sprite</b></td><td>\n\t * \t\tReturns the bounds of the current frame. May have non-zero x/y if a frame registration point was specified\n\t * \t\tin the spritesheet data. See also {{#crossLink \"SpriteSheet/getFrameBounds\"}}{{/crossLink}}\n\t * \t</td></tr>\n\t * \t<tr><td><b>Container</b></td><td>\n\t * \t\tReturns the aggregate (combined) bounds of all children that return a non-null value from getBounds().\n\t * \t</td></tr>\n\t * \t<tr><td><b>Shape</b></td><td>\n\t * \t\tDoes not currently support automatic bounds calculations. Use setBounds() to manually define bounds.\n\t * \t</td></tr>\n\t * \t<tr><td><b>Text</b></td><td>\n\t * \t\tReturns approximate bounds. Horizontal values (x/width) are quite accurate, but vertical values (y/height) are\n\t * \t\tnot, especially when using textBaseline values other than \"top\".\n\t * \t</td></tr>\n\t * \t<tr><td><b>BitmapText</b></td><td>\n\t * \t\tReturns approximate bounds. Values will be more accurate if spritesheet frame registration points are close\n\t * \t\tto (x=0,y=0).\n\t * \t</td></tr>\n\t* </table>\n\t * \n\t * Bounds can be expensive to calculate for some objects (ex. text, or containers with many children), and\n\t * are recalculated each time you call getBounds(). You can prevent recalculation on static objects by setting the\n\t * bounds explicitly:\n\t * \n\t * \tvar bounds = obj.getBounds();\n\t * \tobj.setBounds(bounds.x, bounds.y, bounds.width, bounds.height);\n\t * \t// getBounds will now use the set values, instead of recalculating\n\t * \n\t * To reduce memory impact, the returned Rectangle instance may be reused internally; clone the instance or copy its\n\t * values if you need to retain it.\n\t * \n\t * \tvar myBounds = obj.getBounds().clone();\n\t * \t// OR:\n\t * \tmyRect.copy(obj.getBounds());\n\t * \n\t * @method getBounds\n\t * @return {Rectangle} A Rectangle instance representing the bounds, or null if bounds are not available for this\n\t * object.\n\t **/\n\tp.getBounds = function() {\n\t\tif (this._bounds) { return this._rectangle.copy(this._bounds); }\n\t\tvar cacheCanvas = this.cacheCanvas;\n\t\tif (cacheCanvas) {\n\t\t\tvar scale = this._cacheScale;\n\t\t\treturn this._rectangle.setValues(this._cacheOffsetX, this._cacheOffsetY, cacheCanvas.width/scale, cacheCanvas.height/scale);\n\t\t}\n\t\treturn null;\n\t};\n\n\t/**\n\t * Returns a rectangle representing this object's bounds in its parent's coordinate system (ie. with transformations applied).\n\t * Objects that have been cached will return the transformed bounds of the cache.\n\t * \n\t * Not all display objects can calculate their own bounds (ex. Shape). For these objects, you can use \n\t * {{#crossLink \"DisplayObject/setBounds\"}}{{/crossLink}} so that they are included when calculating Container\n\t * bounds.\n\t * \n\t * To reduce memory impact, the returned Rectangle instance may be reused internally; clone the instance or copy its\n\t * values if you need to retain it.\n\t * \n\t * Container instances calculate aggregate bounds for all children that return bounds via getBounds.\n\t * @method getTransformedBounds\n\t * @return {Rectangle} A Rectangle instance representing the bounds, or null if bounds are not available for this object.\n\t **/\n\tp.getTransformedBounds = function() {\n\t\treturn this._getBounds();\n\t};\n\n\t/**\n\t * Allows you to manually specify the bounds of an object that either cannot calculate their own bounds (ex. Shape &\n\t * Text) for future reference, or so the object can be included in Container bounds. Manually set bounds will always\n\t * override calculated bounds.\n\t * \n\t * The bounds should be specified in the object's local (untransformed) coordinates. For example, a Shape instance\n\t * with a 25px radius circle centered at 0,0 would have bounds of (-25, -25, 50, 50).\n\t * @method setBounds\n\t * @param {Number} x The x origin of the bounds. Pass null to remove the manual bounds.\n\t * @param {Number} y The y origin of the bounds.\n\t * @param {Number} width The width of the bounds.\n\t * @param {Number} height The height of the bounds.\n\t **/\n\tp.setBounds = function(x, y, width, height) {\n\t\tif (x == null) { this._bounds = x; return; }\n\t\tthis._bounds = (this._bounds || new createjs.Rectangle()).setValues(x, y, width, height);\n\t};\n\n\t/**\n\t * Returns a clone of this DisplayObject. Some properties that are specific to this instance's current context are\n\t * reverted to their defaults (for example .parent). Caches are not maintained across clones, and some elements\n\t * are copied by reference (masks, individual filter instances, hit area)\n\t * @method clone\n\t * @return {DisplayObject} A clone of the current DisplayObject instance.\n\t **/\n\tp.clone = function() {\n\t\treturn this._cloneProps(new DisplayObject());\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[DisplayObject (name=\"+  this.name +\")]\";\n\t};\n\n\n// private methods:\n\t/**\n\t * Called before the object gets drawn and is a chance to ensure the display state of the object is correct.\n\t * Mostly used by {{#crossLink \"MovieClip\"}}{{/crossLink}} and {{#crossLink \"BitmapText\"}}{{/crossLink}} to\n\t * correct their internal state and children prior to being drawn.\n\t *\n\t * Is manually called via draw in a {{#crossLink \"Stage\"}}{{/crossLink}} but is automatically called when\n\t * present in a {{#crossLink \"StageGL\"}}{{/crossLink}} instance.\n\t *\n\t * @method _updateState\n\t * @default null\n\t */\n\tp._updateState = null;\n\n\t// separated so it can be used more easily in subclasses:\n\t/**\n\t * @method _cloneProps\n\t * @param {DisplayObject} o The DisplayObject instance which will have properties from the current DisplayObject\n\t * instance copied into.\n\t * @return {DisplayObject} o\n\t * @protected\n\t **/\n\tp._cloneProps = function(o) {\n\t\to.alpha = this.alpha;\n\t\to.mouseEnabled = this.mouseEnabled;\n\t\to.tickEnabled = this.tickEnabled;\n\t\to.name = this.name;\n\t\to.regX = this.regX;\n\t\to.regY = this.regY;\n\t\to.rotation = this.rotation;\n\t\to.scaleX = this.scaleX;\n\t\to.scaleY = this.scaleY;\n\t\to.shadow = this.shadow;\n\t\to.skewX = this.skewX;\n\t\to.skewY = this.skewY;\n\t\to.visible = this.visible;\n\t\to.x  = this.x;\n\t\to.y = this.y;\n\t\to.compositeOperation = this.compositeOperation;\n\t\to.snapToPixel = this.snapToPixel;\n\t\to.filters = this.filters==null?null:this.filters.slice(0);\n\t\to.mask = this.mask;\n\t\to.hitArea = this.hitArea;\n\t\to.cursor = this.cursor;\n\t\to._bounds = this._bounds;\n\t\treturn o;\n\t};\n\n\t/**\n\t * @method _applyShadow\n\t * @protected\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {Shadow} shadow\n\t **/\n\tp._applyShadow = function(ctx, shadow) {\n\t\tshadow = shadow || Shadow.identity;\n\t\tctx.shadowColor = shadow.color;\n\t\tctx.shadowOffsetX = shadow.offsetX;\n\t\tctx.shadowOffsetY = shadow.offsetY;\n\t\tctx.shadowBlur = shadow.blur;\n\t};\n\n\t/**\n\t * @method _tick\n\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n\t * @protected\n\t **/\n\tp._tick = function(evtObj) {\n\t\t// because tick can be really performance sensitive, check for listeners before calling dispatchEvent.\n\t\tvar ls = this._listeners;\n\t\tif (ls && ls[\"tick\"]) {\n\t\t\t// reset & reuse the event object to avoid construction / GC costs:\n\t\t\tevtObj.target = null;\n\t\t\tevtObj.propagationStopped = evtObj.immediatePropagationStopped = false;\n\t\t\tthis.dispatchEvent(evtObj);\n\t\t}\n\t};\n\n\t/**\n\t * @method _testHit\n\t * @protected\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @return {Boolean}\n\t **/\n\tp._testHit = function(ctx) {\n\t\ttry {\n\t\t\tvar hit = ctx.getImageData(0, 0, 1, 1).data[3] > 1;\n\t\t} catch (e) {\n\t\t\tif (!DisplayObject.suppressCrossDomainErrors) {\n\t\t\t\tthrow \"An error has occurred. This is most likely due to security restrictions on reading canvas pixel data with local or cross-domain images.\";\n\t\t\t}\n\t\t}\n\t\treturn hit;\n\t};\n\n\t/**\n\t * @method _getBounds\n\t * @param {Matrix2D} matrix\n\t * @param {Boolean} ignoreTransform If true, does not apply this object's transform.\n\t * @return {Rectangle}\n\t * @protected\n\t **/\n\tp._getBounds = function(matrix, ignoreTransform){\n\t\treturn this._transformBounds(this.getBounds(), matrix, ignoreTransform);\n\t};\n\n\t/**\n\t * @method _transformBounds\n\t * @param {Rectangle} bounds\n\t * @param {Matrix2D} matrix\n\t * @param {Boolean} ignoreTransform\n\t * @return {Rectangle}\n\t * @protected\n\t **/\n\tp._transformBounds = function(bounds, matrix, ignoreTransform) {\n\t\tif (!bounds) { return bounds; }\n\t\tvar x = bounds.x, y = bounds.y, width = bounds.width, height = bounds.height, mtx = this._props.matrix;\n\t\tmtx = ignoreTransform ? mtx.identity() : this.getMatrix(mtx);\n\t\t\n\t\tif (x || y) { mtx.appendTransform(0,0,1,1,0,0,0,-x,-y); } // TODO: simplify this.\n\t\tif (matrix) { mtx.prependMatrix(matrix); }\n\t\t\n\t\tvar x_a = width*mtx.a, x_b = width*mtx.b;\n\t\tvar y_c = height*mtx.c, y_d = height*mtx.d;\n\t\tvar tx = mtx.tx, ty = mtx.ty;\n\t\t\n\t\tvar minX = tx, maxX = tx, minY = ty, maxY = ty;\n\n\t\tif ((x = x_a + tx) < minX) { minX = x; } else if (x > maxX) { maxX = x; }\n\t\tif ((x = x_a + y_c + tx) < minX) { minX = x; } else if (x > maxX) { maxX = x; }\n\t\tif ((x = y_c + tx) < minX) { minX = x; } else if (x > maxX) { maxX = x; }\n\n\t\tif ((y = x_b + ty) < minY) { minY = y; } else if (y > maxY) { maxY = y; }\n\t\tif ((y = x_b + y_d + ty) < minY) { minY = y; } else if (y > maxY) { maxY = y; }\n\t\tif ((y = y_d + ty) < minY) { minY = y; } else if (y > maxY) { maxY = y; }\n\n\t\treturn bounds.setValues(minX, minY, maxX-minX, maxY-minY);\n\t};\n\n\t/**\n\t * Indicates whether the display object has any mouse event listeners or a cursor.\n\t * @method _isMouseOpaque\n\t * @return {Boolean}\n\t * @protected\n\t **/\n\tp._hasMouseEventListener = function() {\n\t\tvar evts = DisplayObject._MOUSE_EVENTS;\n\t\tfor (var i= 0, l=evts.length; i<l; i++) {\n\t\t\tif (this.hasEventListener(evts[i])) { return true; }\n\t\t}\n\t\treturn !!this.cursor;\n\t};\n\n\tcreatejs.DisplayObject = createjs.promote(DisplayObject, \"EventDispatcher\");\n}());\n\n//##############################################################################\n// Container.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\t\n\n// constructor:\n/**\n * A Container is a nestable display list that allows you to work with compound display elements. For  example you could\n * group arm, leg, torso and head {{#crossLink \"Bitmap\"}}{{/crossLink}} instances together into a Person Container, and\n * transform them as a group, while still being able to move the individual parts relative to each other. Children of\n * containers have their <code>transform</code> and <code>alpha</code> properties concatenated with their parent\n * Container.\n *\n * For example, a {{#crossLink \"Shape\"}}{{/crossLink}} with x=100 and alpha=0.5, placed in a Container with <code>x=50</code>\n * and <code>alpha=0.7</code> will be rendered to the canvas at <code>x=150</code> and <code>alpha=0.35</code>.\n * Containers have some overhead, so you generally shouldn't create a Container to hold a single child.\n *\n * <h4>Example</h4>\n *\n *      var container = new createjs.Container();\n *      container.addChild(bitmapInstance, shapeInstance);\n *      container.x = 100;\n *\n * @class Container\n * @extends DisplayObject\n * @constructor\n **/\n\tfunction Container() {\n\t\tthis.DisplayObject_constructor();\n\t\t\n\t// public properties:\n\t\t/**\n\t\t * The array of children in the display list. You should usually use the child management methods such as\n\t\t * {{#crossLink \"Container/addChild\"}}{{/crossLink}}, {{#crossLink \"Container/removeChild\"}}{{/crossLink}},\n\t\t * {{#crossLink \"Container/swapChildren\"}}{{/crossLink}}, etc, rather than accessing this directly, but it is\n\t\t * included for advanced uses.\n\t\t * @property children\n\t\t * @type Array\n\t\t * @default null\n\t\t **/\n\t\tthis.children = [];\n\t\t\n\t\t/**\n\t\t * Indicates whether the children of this container are independently enabled for mouse/pointer interaction.\n\t\t * If false, the children will be aggregated under the container - for example, a click on a child shape would\n\t\t * trigger a click event on the container.\n\t\t * @property mouseChildren\n\t\t * @type Boolean\n\t\t * @default true\n\t\t **/\n\t\tthis.mouseChildren = true;\n\t\t\n\t\t/**\n\t\t * If false, the tick will not be propagated to children of this Container. This can provide some performance benefits.\n\t\t * In addition to preventing the \"tick\" event from being dispatched, it will also prevent tick related updates\n\t\t * on some display objects (ex. Sprite & MovieClip frame advancing, DOMElement visibility handling).\n\t\t * @property tickChildren\n\t\t * @type Boolean\n\t\t * @default true\n\t\t **/\n\t\tthis.tickChildren = true;\n\t}\n\tvar p = createjs.extend(Container, createjs.DisplayObject);\n\t\n\t\n// getter / setters:\n\t/**\n\t * Use the {{#crossLink \"Container/numChildren:property\"}}{{/crossLink}} property instead.\n\t * @method _getNumChildren\n\t * @protected\n\t * @return {Number}\n\t **/\n\tp._getNumChildren = function() {\n\t\treturn this.children.length;\n\t};\n\t// Container.getNumChildren is @deprecated. Remove for 1.1+\n\tp.getNumChildren = createjs.deprecate(p._getNumChildren, \"Container.getNumChildren\");\n\n\t/**\n\t * Returns the number of children in the container.\n\t * @property numChildren\n\t * @type {Number}\n\t * @readonly\n\t **/\n\ttry {\n\t\tObject.defineProperties(p, {\n\t\t\tnumChildren: { get: p._getNumChildren }\n\t\t});\n\t} catch (e) {}\n\t\n\n// public methods:\n\t/**\n\t * Constructor alias for backwards compatibility. This method will be removed in future versions.\n\t * Subclasses should be updated to use {{#crossLink \"Utility Methods/extends\"}}{{/crossLink}}.\n\t * @method initialize\n\t * @deprecated in favour of `createjs.promote()`\n\t **/\n\tp.initialize = Container; // TODO: deprecated.\n\t\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t **/\n\tp.isVisible = function() {\n\t\tvar hasContent = this.cacheCanvas || this.children.length;\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t};\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache.\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t * into itself).\n\t **/\n\tp.draw = function(ctx, ignoreCache) {\n\t\tif (this.DisplayObject_draw(ctx, ignoreCache)) { return true; }\n\t\t\n\t\t// this ensures we don't have issues with display list changes that occur during a draw:\n\t\tvar list = this.children.slice();\n\t\tfor (var i=0,l=list.length; i<l; i++) {\n\t\t\tvar child = list[i];\n\t\t\tif (!child.isVisible()) { continue; }\n\t\t\t\n\t\t\t// draw the child:\n\t\t\tctx.save();\n\t\t\tchild.updateContext(ctx);\n\t\t\tchild.draw(ctx);\n\t\t\tctx.restore();\n\t\t}\n\t\treturn true;\n\t};\n\t\n\t/**\n\t * Adds a child to the top of the display list.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t * \t\tcontainer.addChild(bitmapInstance);\n\t *\n\t * You can also add multiple children at once:\n\t *\n\t * \t\tcontainer.addChild(bitmapInstance, shapeInstance, textInstance);\n\t *\n\t * @method addChild\n\t * @param {DisplayObject} child The display object to add.\n\t * @return {DisplayObject} The child that was added, or the last child if multiple children were added.\n\t **/\n\tp.addChild = function(child) {\n\t\tif (child == null) { return child; }\n\t\tvar l = arguments.length;\n\t\tif (l > 1) {\n\t\t\tfor (var i=0; i<l; i++) { this.addChild(arguments[i]); }\n\t\t\treturn arguments[l-1];\n\t\t}\n\t\t// Note: a lot of duplication with addChildAt, but push is WAY faster than splice.\n\t\tvar par=child.parent, silent = par === this;\n\t\tpar&&par._removeChildAt(createjs.indexOf(par.children, child), silent);\n\t\tchild.parent = this;\n\t\tthis.children.push(child);\n\t\tif (!silent) { child.dispatchEvent(\"added\"); }\n\t\treturn child;\n\t};\n\n\t/**\n\t * Adds a child to the display list at the specified index, bumping children at equal or greater indexes up one, and\n\t * setting its parent to this Container.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      addChildAt(child1, index);\n\t *\n\t * You can also add multiple children, such as:\n\t *\n\t *      addChildAt(child1, child2, ..., index);\n\t *\n\t * The index must be between 0 and numChildren. For example, to add myShape under otherShape in the display list,\n\t * you could use:\n\t *\n\t *      container.addChildAt(myShape, container.getChildIndex(otherShape));\n\t *\n\t * This would also bump otherShape's index up by one. Fails silently if the index is out of range.\n\t *\n\t * @method addChildAt\n\t * @param {DisplayObject} child The display object to add.\n\t * @param {Number} index The index to add the child at.\n\t * @return {DisplayObject} Returns the last child that was added, or the last child if multiple children were added.\n\t **/\n\tp.addChildAt = function(child, index) {\n\t\tvar l = arguments.length;\n\t\tvar indx = arguments[l-1]; // can't use the same name as the index param or it replaces arguments[1]\n\t\tif (indx < 0 || indx > this.children.length) { return arguments[l-2]; }\n\t\tif (l > 2) {\n\t\t\tfor (var i=0; i<l-1; i++) { this.addChildAt(arguments[i], indx+i); }\n\t\t\treturn arguments[l-2];\n\t\t}\n\t\tvar par=child.parent, silent = par === this;\n\t\tpar&&par._removeChildAt(createjs.indexOf(par.children, child), silent);\n\t\tchild.parent = this;\n\t\tthis.children.splice(index, 0, child);\n\t\tif (!silent) { child.dispatchEvent(\"added\"); }\n\t\treturn child;\n\t};\n\n\t/**\n\t * Removes the specified child from the display list. Note that it is faster to use removeChildAt() if the index is\n\t * already known.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      container.removeChild(child);\n\t *\n\t * You can also remove multiple children:\n\t *\n\t *      removeChild(child1, child2, ...);\n\t *\n\t * Returns true if the child (or children) was removed, or false if it was not in the display list.\n\t * @method removeChild\n\t * @param {DisplayObject} child The child to remove.\n\t * @return {Boolean} true if the child (or children) was removed, or false if it was not in the display list.\n\t **/\n\tp.removeChild = function(child) {\n\t\tvar l = arguments.length;\n\t\tif (l > 1) {\n\t\t\tvar good = true;\n\t\t\tfor (var i=0; i<l; i++) { good = good && this.removeChild(arguments[i]); }\n\t\t\treturn good;\n\t\t}\n\t\treturn this._removeChildAt(createjs.indexOf(this.children, child));\n\t};\n\n\t/**\n\t * Removes the child at the specified index from the display list, and sets its parent to null.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      container.removeChildAt(2);\n\t *\n\t * You can also remove multiple children:\n\t *\n\t *      container.removeChild(2, 7, ...)\n\t *\n\t * Returns true if the child (or children) was removed, or false if any index was out of range.\n\t * @method removeChildAt\n\t * @param {Number} index The index of the child to remove.\n\t * @return {Boolean} true if the child (or children) was removed, or false if any index was out of range.\n\t **/\n\tp.removeChildAt = function(index) {\n\t\tvar l = arguments.length;\n\t\tif (l > 1) {\n\t\t\tvar a = [];\n\t\t\tfor (var i=0; i<l; i++) { a[i] = arguments[i]; }\n\t\t\ta.sort(function(a, b) { return b-a; });\n\t\t\tvar good = true;\n\t\t\tfor (var i=0; i<l; i++) { good = good && this._removeChildAt(a[i]); }\n\t\t\treturn good;\n\t\t}\n\t\treturn this._removeChildAt(index);\n\t};\n\n\t/**\n\t * Removes all children from the display list.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t * \tcontainer.removeAllChildren();\n\t *\n\t * @method removeAllChildren\n\t **/\n\tp.removeAllChildren = function() {\n\t\tvar kids = this.children;\n\t\twhile (kids.length) { this._removeChildAt(0); }\n\t};\n\n\t/**\n\t * Returns the child at the specified index.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      container.getChildAt(2);\n\t *\n\t * @method getChildAt\n\t * @param {Number} index The index of the child to return.\n\t * @return {DisplayObject} The child at the specified index. Returns null if there is no child at the index.\n\t **/\n\tp.getChildAt = function(index) {\n\t\treturn this.children[index];\n\t};\n\t\n\t/**\n\t * Returns the child with the specified name.\n\t * @method getChildByName\n\t * @param {String} name The name of the child to return.\n\t * @return {DisplayObject} The child with the specified name.\n\t **/\n\tp.getChildByName = function(name) {\n\t\tvar kids = this.children;\n\t\tfor (var i=0,l=kids.length;i<l;i++) {\n\t\t\tif(kids[i].name == name) { return kids[i]; }\n\t\t}\n\t\treturn null;\n\t};\n\n\t/**\n\t * Performs an array sort operation on the child list.\n\t *\n\t * <h4>Example: Display children with a higher y in front.</h4>\n\t * \n\t *      var sortFunction = function(obj1, obj2, options) {\n\t *          if (obj1.y > obj2.y) { return 1; }\n\t *          if (obj1.y < obj2.y) { return -1; }\n\t *          return 0;\n\t *      }\n\t *      container.sortChildren(sortFunction);\n\t *\n\t * @method sortChildren\n\t * @param {Function} sortFunction the function to use to sort the child list. See JavaScript's <code>Array.sort</code>\n\t * documentation for details.\n\t **/\n\tp.sortChildren = function(sortFunction) {\n\t\tthis.children.sort(sortFunction);\n\t};\n\n\t/**\n\t * Returns the index of the specified child in the display list, or -1 if it is not in the display list.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var index = container.getChildIndex(child);\n\t *\n\t * @method getChildIndex\n\t * @param {DisplayObject} child The child to return the index of.\n\t * @return {Number} The index of the specified child. -1 if the child is not found.\n\t **/\n\tp.getChildIndex = function(child) {\n\t\treturn createjs.indexOf(this.children, child);\n\t};\n\t\n\t/**\n\t * Swaps the children at the specified indexes. Fails silently if either index is out of range.\n\t * @method swapChildrenAt\n\t * @param {Number} index1\n\t * @param {Number} index2\n\t **/\n\tp.swapChildrenAt = function(index1, index2) {\n\t\tvar kids = this.children;\n\t\tvar o1 = kids[index1];\n\t\tvar o2 = kids[index2];\n\t\tif (!o1 || !o2) { return; }\n\t\tkids[index1] = o2;\n\t\tkids[index2] = o1;\n\t};\n\t\n\t/**\n\t * Swaps the specified children's depth in the display list. Fails silently if either child is not a child of this\n\t * Container.\n\t * @method swapChildren\n\t * @param {DisplayObject} child1\n\t * @param {DisplayObject} child2\n\t **/\n\tp.swapChildren = function(child1, child2) {\n\t\tvar kids = this.children;\n\t\tvar index1,index2;\n\t\tfor (var i=0,l=kids.length;i<l;i++) {\n\t\t\tif (kids[i] == child1) { index1 = i; }\n\t\t\tif (kids[i] == child2) { index2 = i; }\n\t\t\tif (index1 != null && index2 != null) { break; }\n\t\t}\n\t\tif (i==l) { return; } // TODO: throw error?\n\t\tkids[index1] = child2;\n\t\tkids[index2] = child1;\n\t};\n\t\n\t/**\n\t * Changes the depth of the specified child. Fails silently if the child is not a child of this container, or the index is out of range.\n\t * @param {DisplayObject} child\n\t * @param {Number} index  \n\t * @method setChildIndex\n\t **/\n\tp.setChildIndex = function(child, index) {\n\t\tvar kids = this.children, l=kids.length;\n\t\tif (child.parent != this || index < 0 || index >= l) { return; }\n\t\tfor (var i=0;i<l;i++) {\n\t\t\tif (kids[i] == child) { break; }\n\t\t}\n\t\tif (i==l || i == index) { return; }\n\t\tkids.splice(i,1);\n\t\tkids.splice(index,0,child);\n\t};\n\n\t/**\n\t * Returns true if the specified display object either is this container or is a descendent (child, grandchild, etc)\n\t * of this container.\n\t * @method contains\n\t * @param {DisplayObject} child The DisplayObject to be checked.\n\t * @return {Boolean} true if the specified display object either is this container or is a descendent.\n\t **/\n\tp.contains = function(child) {\n\t\twhile (child) {\n\t\t\tif (child == this) { return true; }\n\t\t\tchild = child.parent;\n\t\t}\n\t\treturn false;\n\t};\n\n\t/**\n\t * Tests whether the display object intersects the specified local point (ie. draws a pixel with alpha > 0 at the\n\t * specified position). This ignores the alpha, shadow and compositeOperation of the display object, and all\n\t * transform properties including regX/Y.\n\t * @method hitTest\n\t * @param {Number} x The x position to check in the display object's local coordinates.\n\t * @param {Number} y The y position to check in the display object's local coordinates.\n\t * @return {Boolean} A Boolean indicating whether there is a visible section of a DisplayObject that overlaps the specified\n\t * coordinates.\n\t **/\n\tp.hitTest = function(x, y) {\n\t\t// TODO: optimize to use the fast cache check where possible.\n\t\treturn (this.getObjectUnderPoint(x, y) != null);\n\t};\n\n\t/**\n\t * Returns an array of all display objects under the specified coordinates that are in this container's display\n\t * list. This routine ignores any display objects with {{#crossLink \"DisplayObject/mouseEnabled:property\"}}{{/crossLink}}\n\t * set to `false`. The array will be sorted in order of visual depth, with the top-most display object at index 0.\n\t * This uses shape based hit detection, and can be an expensive operation to run, so it is best to use it carefully.\n\t * For example, if testing for objects under the mouse, test on tick (instead of on {{#crossLink \"DisplayObject/mousemove:event\"}}{{/crossLink}}),\n\t * and only if the mouse's position has changed.\n\t * \n\t * <ul>\n\t *     <li>By default (mode=0) this method evaluates all display objects.</li>\n\t *     <li>By setting the `mode` parameter to `1`, the {{#crossLink \"DisplayObject/mouseEnabled:property\"}}{{/crossLink}}\n\t * \t\tand {{#crossLink \"mouseChildren:property\"}}{{/crossLink}} properties will be respected.</li>\n\t * \t   <li>Setting the `mode` to `2` additionally excludes display objects that do not have active mouse event\n\t * \t   \tlisteners or a {{#crossLink \"DisplayObject:cursor:property\"}}{{/crossLink}} property. That is, only objects\n\t * \t   \tthat would normally intercept mouse interaction will be included. This can significantly improve performance\n\t * \t   \tin some cases by reducing the number of display objects that need to be tested.</li>\n\t * </li>\n\t * \n\t * This method accounts for both {{#crossLink \"DisplayObject/hitArea:property\"}}{{/crossLink}} and {{#crossLink \"DisplayObject/mask:property\"}}{{/crossLink}}.\n\t * @method getObjectsUnderPoint\n\t * @param {Number} x The x position in the container to test.\n\t * @param {Number} y The y position in the container to test.\n\t * @param {Number} [mode=0] The mode to use to determine which display objects to include. 0-all, 1-respect mouseEnabled/mouseChildren, 2-only mouse opaque objects.\n\t * @return {Array} An Array of DisplayObjects under the specified coordinates.\n\t **/\n\tp.getObjectsUnderPoint = function(x, y, mode) {\n\t\tvar arr = [];\n\t\tvar pt = this.localToGlobal(x, y);\n\t\tthis._getObjectsUnderPoint(pt.x, pt.y, arr, mode>0, mode==1);\n\t\treturn arr;\n\t};\n\n\t/**\n\t * Similar to {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}}, but returns only the top-most display\n\t * object. This runs significantly faster than <code>getObjectsUnderPoint()</code>, but is still potentially an expensive\n\t * operation. See {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}} for more information.\n\t * @method getObjectUnderPoint\n\t * @param {Number} x The x position in the container to test.\n\t * @param {Number} y The y position in the container to test.\n\t * @param {Number} mode The mode to use to determine which display objects to include.  0-all, 1-respect mouseEnabled/mouseChildren, 2-only mouse opaque objects.\n\t * @return {DisplayObject} The top-most display object under the specified coordinates.\n\t **/\n\tp.getObjectUnderPoint = function(x, y, mode) {\n\t\tvar pt = this.localToGlobal(x, y);\n\t\treturn this._getObjectsUnderPoint(pt.x, pt.y, null, mode>0, mode==1);\n\t};\n\t\n\t/**\n\t * Docced in superclass.\n\t */\n\tp.getBounds = function() {\n\t\treturn this._getBounds(null, true);\n\t};\n\t\n\t\n\t/**\n\t * Docced in superclass.\n\t */\n\tp.getTransformedBounds = function() {\n\t\treturn this._getBounds();\n\t};\n\n\t/**\n\t * Returns a clone of this Container. Some properties that are specific to this instance's current context are\n\t * reverted to their defaults (for example .parent).\n\t * @method clone\n\t * @param {Boolean} [recursive=false] If true, all of the descendants of this container will be cloned recursively. If false, the\n\t * properties of the container will be cloned, but the new instance will not have any children.\n\t * @return {Container} A clone of the current Container instance.\n\t **/\n\tp.clone = function(recursive) {\n\t\tvar o = this._cloneProps(new Container());\n\t\tif (recursive) { this._cloneChildren(o); }\n\t\treturn o;\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[Container (name=\"+  this.name +\")]\";\n\t};\n\n\n// private methods:\n\t/**\n\t * @method _tick\n\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n\t * @protected\n\t **/\n\tp._tick = function(evtObj) {\n\t\tif (this.tickChildren) {\n\t\t\tfor (var i=this.children.length-1; i>=0; i--) {\n\t\t\t\tvar child = this.children[i];\n\t\t\t\tif (child.tickEnabled && child._tick) { child._tick(evtObj); }\n\t\t\t}\n\t\t}\n\t\tthis.DisplayObject__tick(evtObj);\n\t};\n\t\n\t/**\n\t * Recursively clones all children of this container, and adds them to the target container.\n\t * @method cloneChildren\n\t * @protected\n\t * @param {Container} o The target container.\n\t **/\n\tp._cloneChildren = function(o) {\n\t\tif (o.children.length) { o.removeAllChildren(); }\n\t\tvar arr = o.children;\n\t\tfor (var i=0, l=this.children.length; i<l; i++) {\n\t\t\tvar clone = this.children[i].clone(true);\n\t\t\tclone.parent = o;\n\t\t\tarr.push(clone);\n\t\t}\n\t};\n\t\n\t/**\n\t * Removes the child at the specified index from the display list, and sets its parent to null.\n\t * Used by `removeChildAt`, `addChild`, and `addChildAt`.\n\t * @method removeChildAt\n\t * @protected\n\t * @param {Number} index The index of the child to remove.\n\t * @param {Boolean} [silent] Prevents dispatch of `removed` event if true.\n\t * @return {Boolean} true if the child (or children) was removed, or false if any index was out of range.\n\t **/\n\tp._removeChildAt = function(index, silent) {\n\t\tif (index < 0 || index > this.children.length-1) { return false; }\n\t\tvar child = this.children[index];\n\t\tif (child) { child.parent = null; }\n\t\tthis.children.splice(index, 1);\n\t\tif (!silent) { child.dispatchEvent(\"removed\"); }\n\t\treturn true;\n\t};\n\n\t/**\n\t * @method _getObjectsUnderPoint\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Array} arr\n\t * @param {Boolean} mouse If true, it will respect mouse interaction properties like mouseEnabled, mouseChildren, and active listeners.\n\t * @param {Boolean} activeListener If true, there is an active mouse event listener on a parent object.\n\t * @param {Number} currentDepth Indicates the current depth of the search.\n\t * @return {DisplayObject}\n\t * @protected\n\t **/\n\tp._getObjectsUnderPoint = function(x, y, arr, mouse, activeListener, currentDepth) {\n\t\tcurrentDepth = currentDepth || 0;\n\t\tif (!currentDepth && !this._testMask(this, x, y)) { return null; }\n\t\tvar mtx, ctx = createjs.DisplayObject._hitTestContext;\n\t\tactiveListener = activeListener || (mouse&&this._hasMouseEventListener());\n\n\t\t// draw children one at a time, and check if we get a hit:\n\t\tvar children = this.children, l = children.length;\n\t\tfor (var i=l-1; i>=0; i--) {\n\t\t\tvar child = children[i];\n\t\t\tvar hitArea = child.hitArea;\n\t\t\tif (!child.visible || (!hitArea && !child.isVisible()) || (mouse && !child.mouseEnabled)) { continue; }\n\t\t\tif (!hitArea && !this._testMask(child, x, y)) { continue; }\n\t\t\t\n\t\t\t// if a child container has a hitArea then we only need to check its hitAre2a, so we can treat it as a normal DO:\n\t\t\tif (!hitArea && child instanceof Container) {\n\t\t\t\tvar result = child._getObjectsUnderPoint(x, y, arr, mouse, activeListener, currentDepth+1);\n\t\t\t\tif (!arr && result) { return (mouse && !this.mouseChildren) ? this : result; }\n\t\t\t} else {\n\t\t\t\tif (mouse && !activeListener && !child._hasMouseEventListener()) { continue; }\n\t\t\t\t\n\t\t\t\t// TODO: can we pass displayProps forward, to avoid having to calculate this backwards every time? It's kind of a mixed bag. When we're only hunting for DOs with event listeners, it may not make sense.\n\t\t\t\tvar props = child.getConcatenatedDisplayProps(child._props);\n\t\t\t\tmtx = props.matrix;\n\t\t\t\t\n\t\t\t\tif (hitArea) {\n\t\t\t\t\tmtx.appendMatrix(hitArea.getMatrix(hitArea._props.matrix));\n\t\t\t\t\tprops.alpha = hitArea.alpha;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tctx.globalAlpha = props.alpha;\n\t\t\t\tctx.setTransform(mtx.a,  mtx.b, mtx.c, mtx.d, mtx.tx-x, mtx.ty-y);\n\t\t\t\t(hitArea||child).draw(ctx);\n\t\t\t\tif (!this._testHit(ctx)) { continue; }\n\t\t\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\t\tctx.clearRect(0, 0, 2, 2);\n\t\t\t\tif (arr) { arr.push(child); }\n\t\t\t\telse { return (mouse && !this.mouseChildren) ? this : child; }\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\t\n\t/**\n\t * @method _testMask\n\t * @param {DisplayObject} target\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Boolean} Indicates whether the x/y is within the masked region.\n\t * @protected\n\t **/\n\tp._testMask = function(target, x, y) {\n\t\tvar mask = target.mask;\n\t\tif (!mask || !mask.graphics || mask.graphics.isEmpty()) { return true; }\n\t\t\n\t\tvar mtx = this._props.matrix, parent = target.parent;\n\t\tmtx = parent ? parent.getConcatenatedMatrix(mtx) : mtx.identity();\n\t\tmtx = mask.getMatrix(mask._props.matrix).prependMatrix(mtx);\n\t\t\n\t\tvar ctx = createjs.DisplayObject._hitTestContext;\n\t\tctx.setTransform(mtx.a,  mtx.b, mtx.c, mtx.d, mtx.tx-x, mtx.ty-y);\n\t\t\n\t\t// draw the mask as a solid fill:\n\t\tmask.graphics.drawAsPath(ctx);\n\t\tctx.fillStyle = \"#000\";\n\t\tctx.fill();\n\t\t\n\t\tif (!this._testHit(ctx)) { return false; }\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\tctx.clearRect(0, 0, 2, 2);\n\t\t\n\t\treturn true;\n\t};\n\t\n\t/**\n\t * @method _getBounds\n\t * @param {Matrix2D} matrix\n\t * @param {Boolean} ignoreTransform If true, does not apply this object's transform.\n\t * @return {Rectangle}\n\t * @protected\n\t **/\n\tp._getBounds = function(matrix, ignoreTransform) {\n\t\tvar bounds = this.DisplayObject_getBounds();\n\t\tif (bounds) { return this._transformBounds(bounds, matrix, ignoreTransform); }\n\t\t\n\t\tvar mtx = this._props.matrix;\n\t\tmtx = ignoreTransform ? mtx.identity() : this.getMatrix(mtx);\n\t\tif (matrix) { mtx.prependMatrix(matrix); }\n\t\t\n\t\tvar l = this.children.length, rect=null;\n\t\tfor (var i=0; i<l; i++) {\n\t\t\tvar child = this.children[i];\n\t\t\tif (!child.visible || !(bounds = child._getBounds(mtx))) { continue; }\n\t\t\tif (rect) { rect.extend(bounds.x, bounds.y, bounds.width, bounds.height); }\n\t\t\telse { rect = bounds.clone(); }\n\t\t}\n\t\treturn rect;\n\t};\n\n\n\tcreatejs.Container = createjs.promote(Container, \"DisplayObject\");\n}());\n\n//##############################################################################\n// Stage.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * A stage is the root level {{#crossLink \"Container\"}}{{/crossLink}} for a display list. Each time its {{#crossLink \"Stage/tick\"}}{{/crossLink}}\n\t * method is called, it will render its display list to its target canvas.\n\t *\n\t * <h4>Example</h4>\n\t * This example creates a stage, adds a child to it, then uses {{#crossLink \"Ticker\"}}{{/crossLink}} to update the child\n\t * and redraw the stage using {{#crossLink \"Stage/update\"}}{{/crossLink}}.\n\t *\n\t *      var stage = new createjs.Stage(\"canvasElementId\");\n\t *      var image = new createjs.Bitmap(\"imagePath.png\");\n\t *      stage.addChild(image);\n\t *      createjs.Ticker.addEventListener(\"tick\", handleTick);\n\t *      function handleTick(event) {\n\t *          image.x += 10;\n\t *          stage.update();\n\t *      }\n\t *\n\t * @class Stage\n\t * @extends Container\n\t * @constructor\n\t * @param {HTMLCanvasElement | String | Object} canvas A canvas object that the Stage will render to, or the string id\n\t * of a canvas object in the current document.\n\t **/\n\tfunction Stage(canvas) {\n\t\tthis.Container_constructor();\n\t\n\t\n\t// public properties:\n\t\t/**\n\t\t * Indicates whether the stage should automatically clear the canvas before each render. You can set this to <code>false</code>\n\t\t * to manually control clearing (for generative art, or when pointing multiple stages at the same canvas for\n\t\t * example).\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      var stage = new createjs.Stage(\"canvasId\");\n\t\t *      stage.autoClear = false;\n\t\t *\n\t\t * @property autoClear\n\t\t * @type Boolean\n\t\t * @default true\n\t\t **/\n\t\tthis.autoClear = true;\n\t\n\t\t/**\n\t\t * The canvas the stage will render to. Multiple stages can share a single canvas, but you must disable autoClear for all but the\n\t\t * first stage that will be ticked (or they will clear each other's render).\n\t\t *\n\t\t * When changing the canvas property you must disable the events on the old canvas, and enable events on the\n\t\t * new canvas or mouse events will not work as expected. For example:\n\t\t *\n\t\t *      myStage.enableDOMEvents(false);\n\t\t *      myStage.canvas = anotherCanvas;\n\t\t *      myStage.enableDOMEvents(true);\n\t\t *\n\t\t * @property canvas\n\t\t * @type HTMLCanvasElement | Object\n\t\t **/\n\t\tthis.canvas = (typeof canvas == \"string\") ? document.getElementById(canvas) : canvas;\n\t\n\t\t/**\n\t\t * The current mouse X position on the canvas. If the mouse leaves the canvas, this will indicate the most recent\n\t\t * position over the canvas, and mouseInBounds will be set to false.\n\t\t * @property mouseX\n\t\t * @type Number\n\t\t * @readonly\n\t\t **/\n\t\tthis.mouseX = 0;\n\t\n\t\t/**\n\t\t * The current mouse Y position on the canvas. If the mouse leaves the canvas, this will indicate the most recent\n\t\t * position over the canvas, and mouseInBounds will be set to false.\n\t\t * @property mouseY\n\t\t * @type Number\n\t\t * @readonly\n\t\t **/\n\t\tthis.mouseY = 0;\n\t\n\t\t/**\n\t\t * Specifies the area of the stage to affect when calling update. This can be use to selectively\n\t\t * re-draw specific regions of the canvas. If null, the whole canvas area is drawn.\n\t\t * @property drawRect\n\t\t * @type {Rectangle}\n\t\t */\n\t\tthis.drawRect = null;\n\t\n\t\t/**\n\t\t * Indicates whether display objects should be rendered on whole pixels. You can set the\n\t\t * {{#crossLink \"DisplayObject/snapToPixel\"}}{{/crossLink}} property of\n\t\t * display objects to false to enable/disable this behaviour on a per instance basis.\n\t\t * @property snapToPixelEnabled\n\t\t * @type Boolean\n\t\t * @default false\n\t\t **/\n\t\tthis.snapToPixelEnabled = false;\n\t\n\t\t/**\n\t\t * Indicates whether the mouse is currently within the bounds of the canvas.\n\t\t * @property mouseInBounds\n\t\t * @type Boolean\n\t\t * @default false\n\t\t **/\n\t\tthis.mouseInBounds = false;\n\t\n\t\t/**\n\t\t * If true, tick callbacks will be called on all display objects on the stage prior to rendering to the canvas.\n\t\t * @property tickOnUpdate\n\t\t * @type Boolean\n\t\t * @default true\n\t\t **/\n\t\tthis.tickOnUpdate = true;\n\t\n\t\t/**\n\t\t * If true, mouse move events will continue to be called when the mouse leaves the target canvas. See\n\t\t * {{#crossLink \"Stage/mouseInBounds:property\"}}{{/crossLink}}, and {{#crossLink \"MouseEvent\"}}{{/crossLink}}\n\t\t * x/y/rawX/rawY.\n\t\t * @property mouseMoveOutside\n\t\t * @type Boolean\n\t\t * @default false\n\t\t **/\n\t\tthis.mouseMoveOutside = false;\n\t\t\n\t\t\n\t\t/**\n\t\t * Prevents selection of other elements in the html page if the user clicks and drags, or double clicks on the canvas.\n\t\t * This works by calling `preventDefault()` on any mousedown events (or touch equivalent) originating on the canvas.\n\t\t * @property preventSelection\n\t\t * @type Boolean\n\t\t * @default true\n\t\t **/\n\t\tthis.preventSelection = true;\n\t\n\t\t/**\n\t\t * The hitArea property is not supported for Stage.\n\t\t * @property hitArea\n\t\t * @type {DisplayObject}\n\t\t * @default null\n\t\t */\n\t\t \n\t\t \n\t// private properties:\n\t\t/**\n\t\t * Holds objects with data for each active pointer id. Each object has the following properties:\n\t\t * x, y, event, target, overTarget, overX, overY, inBounds, posEvtObj (native event that last updated position)\n\t\t * @property _pointerData\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n\t\tthis._pointerData = {};\n\t\n\t\t/**\n\t\t * Number of active pointers.\n\t\t * @property _pointerCount\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n\t\tthis._pointerCount = 0;\n\t\n\t\t/**\n\t\t * The ID of the primary pointer.\n\t\t * @property _primaryPointerID\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n\t\tthis._primaryPointerID = null;\n\t\n\t\t/**\n\t\t * @property _mouseOverIntervalID\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n\t\tthis._mouseOverIntervalID = null;\n\t\t\n\t\t/**\n\t\t * @property _nextStage\n\t\t * @protected\n\t\t * @type Stage\n\t\t **/\n\t\tthis._nextStage = null;\n\t\t\n\t\t/**\n\t\t * @property _prevStage\n\t\t * @protected\n\t\t * @type Stage\n\t\t **/\n\t\tthis._prevStage = null;\n\t\t\n\t\t\n\t// initialize:\n\t\tthis.enableDOMEvents(true);\n\t}\n\tvar p = createjs.extend(Stage, createjs.Container);\n\n// events:\n\t/**\n\t * Dispatched when the user moves the mouse over the canvas.\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event stagemousemove\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when the user presses their left mouse button on the canvas. See the {{#crossLink \"MouseEvent\"}}{{/crossLink}}\n\t * class for a listing of event properties.\n\t * @event stagemousedown\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when the user the user presses somewhere on the stage, then releases the mouse button anywhere that the page can detect it (this varies slightly between browsers).\n\t * You can use {{#crossLink \"Stage/mouseInBounds:property\"}}{{/crossLink}} to check whether the mouse is currently within the stage bounds.\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event stagemouseup\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when the mouse moves from within the canvas area (mouseInBounds == true) to outside it (mouseInBounds == false).\n\t * This is currently only dispatched for mouse input (not touch). See the {{#crossLink \"MouseEvent\"}}{{/crossLink}}\n\t * class for a listing of event properties.\n\t * @event mouseleave\n\t * @since 0.7.0\n\t */\n\n\t/**\n\t * Dispatched when the mouse moves into the canvas area (mouseInBounds == false) from outside it (mouseInBounds == true).\n\t * This is currently only dispatched for mouse input (not touch). See the {{#crossLink \"MouseEvent\"}}{{/crossLink}}\n\t * class for a listing of event properties.\n\t * @event mouseenter\n\t * @since 0.7.0\n\t */\n\t \n\t/**\n\t * Dispatched each update immediately before the tick event is propagated through the display list.\n\t * You can call preventDefault on the event object to cancel propagating the tick event.\n\t * @event tickstart\n\t * @since 0.7.0\n\t */\n\t \n\t/**\n\t * Dispatched each update immediately after the tick event is propagated through the display list. Does not fire if\n\t * tickOnUpdate is false. Precedes the \"drawstart\" event.\n\t * @event tickend\n\t * @since 0.7.0\n\t */\n\t \n\t/**\n\t * Dispatched each update immediately before the canvas is cleared and the display list is drawn to it.\n\t * You can call preventDefault on the event object to cancel the draw.\n\t * @event drawstart\n\t * @since 0.7.0\n\t */\n\t \n\t/**\n\t * Dispatched each update immediately after the display list is drawn to the canvas and the canvas context is restored.\n\t * @event drawend\n\t * @since 0.7.0\n\t */\n\n\t \n// getter / setters:\n\t/**\n\t * Specifies a target stage that will have mouse / touch interactions relayed to it after this stage handles them.\n\t * This can be useful in cases where you have multiple layered canvases and want user interactions\n\t * events to pass through. For example, this would relay mouse events from topStage to bottomStage:\n\t *\n\t *      topStage.nextStage = bottomStage;\n\t *\n\t * To disable relaying, set nextStage to null.\n\t * \n\t * MouseOver, MouseOut, RollOver, and RollOut interactions are also passed through using the mouse over settings\n\t * of the top-most stage, but are only processed if the target stage has mouse over interactions enabled.\n\t * Considerations when using roll over in relay targets:<OL>\n\t * <LI> The top-most (first) stage must have mouse over interactions enabled (via enableMouseOver)</LI>\n\t * <LI> All stages that wish to participate in mouse over interaction must enable them via enableMouseOver</LI>\n\t * <LI> All relay targets will share the frequency value of the top-most stage</LI>\n\t * </OL>\n\t * To illustrate, in this example the targetStage would process mouse over interactions at 10hz (despite passing\n\t * 30 as it's desired frequency):\n\t * \ttopStage.nextStage = targetStage;\n\t * \ttopStage.enableMouseOver(10);\n\t * \ttargetStage.enableMouseOver(30);\n\t * \n\t * If the target stage's canvas is completely covered by this stage's canvas, you may also want to disable its\n\t * DOM events using:\n\t * \n\t *\ttargetStage.enableDOMEvents(false);\n\t * \n\t * @property nextStage\n\t * @type {Stage}\n\t **/\n\tp._get_nextStage = function() {\n\t\treturn this._nextStage;\n\t};\n\tp._set_nextStage = function(value) {\n\t\tif (this._nextStage) { this._nextStage._prevStage = null; }\n\t\tif (value) { value._prevStage = this; }\n\t\tthis._nextStage = value;\n\t};\n\t\n\ttry {\n\t\tObject.defineProperties(p, {\n\t\t\tnextStage: { get: p._get_nextStage, set: p._set_nextStage }\n\t\t});\n\t} catch (e) {} // TODO: use Log\n\n\n// public methods:\n\t/**\n\t * Each time the update method is called, the stage will call {{#crossLink \"Stage/tick\"}}{{/crossLink}}\n\t * unless {{#crossLink \"Stage/tickOnUpdate:property\"}}{{/crossLink}} is set to false,\n\t * and then render the display list to the canvas.\n\t *\n\t * @method update\n\t * @param {Object} [props] Props object to pass to `tick()`. Should usually be a {{#crossLink \"Ticker\"}}{{/crossLink}} event object, or similar object with a delta property.\n\t **/\n\tp.update = function(props) {\n\t\tif (!this.canvas) { return; }\n\t\tif (this.tickOnUpdate) { this.tick(props); }\n\t\tif (this.dispatchEvent(\"drawstart\", false, true) === false) { return; }\n\t\tcreatejs.DisplayObject._snapToPixelEnabled = this.snapToPixelEnabled;\n\t\tvar r = this.drawRect, ctx = this.canvas.getContext(\"2d\");\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\tif (this.autoClear) {\n\t\t\tif (r) { ctx.clearRect(r.x, r.y, r.width, r.height); }\n\t\t\telse { ctx.clearRect(0, 0, this.canvas.width+1, this.canvas.height+1); }\n\t\t}\n\t\tctx.save();\n\t\tif (this.drawRect) {\n\t\t\tctx.beginPath();\n\t\t\tctx.rect(r.x, r.y, r.width, r.height);\n\t\t\tctx.clip();\n\t\t}\n\t\tthis.updateContext(ctx);\n\t\tthis.draw(ctx, false);\n\t\tctx.restore();\n\t\tthis.dispatchEvent(\"drawend\");\n\t};\n\t\n\t/**\n\t * Propagates a tick event through the display list. This is automatically called by {{#crossLink \"Stage/update\"}}{{/crossLink}}\n\t * unless {{#crossLink \"Stage/tickOnUpdate:property\"}}{{/crossLink}} is set to false.\n\t *\n\t * If a props object is passed to `tick()`, then all of its properties will be copied to the event object that is\n\t * propagated to listeners.\n\t *\n\t * Some time-based features in EaselJS (for example {{#crossLink \"Sprite/framerate\"}}{{/crossLink}} require that\n\t * a {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}} event object (or equivalent object with a delta property) be\n\t * passed as the `props` parameter to `tick()`. For example:\n\t *\n\t * \tTicker.on(\"tick\", handleTick);\n\t * \tfunction handleTick(evtObj) {\n\t * \t\t// clone the event object from Ticker, and add some custom data to it:\n\t * \t\tvar evt = evtObj.clone().set({greeting:\"hello\", name:\"world\"});\n\t * \t\t\n\t * \t\t// pass it to stage.update():\n\t * \t\tmyStage.update(evt); // subsequently calls tick() with the same param\n\t * \t}\n\t * \t\n\t * \t// ...\n\t * \tmyDisplayObject.on(\"tick\", handleDisplayObjectTick);\n\t * \tfunction handleDisplayObjectTick(evt) {\n\t * \t\tconsole.log(evt.delta); // the delta property from the Ticker tick event object\n\t * \t\tconsole.log(evt.greeting, evt.name); // custom data: \"hello world\"\n\t * \t}\n\t * \n\t * @method tick\n\t * @param {Object} [props] An object with properties that should be copied to the event object. Should usually be a Ticker event object, or similar object with a delta property.\n\t **/\n\tp.tick = function(props) {\n\t\tif (!this.tickEnabled || this.dispatchEvent(\"tickstart\", false, true) === false) { return; }\n\t\tvar evtObj = new createjs.Event(\"tick\");\n\t\tif (props) {\n\t\t\tfor (var n in props) {\n\t\t\t\tif (props.hasOwnProperty(n)) { evtObj[n] = props[n]; }\n\t\t\t}\n\t\t}\n\t\tthis._tick(evtObj);\n\t\tthis.dispatchEvent(\"tickend\");\n\t};\n\n\t/**\n\t * Default event handler that calls the Stage {{#crossLink \"Stage/update\"}}{{/crossLink}} method when a {{#crossLink \"DisplayObject/tick:event\"}}{{/crossLink}}\n\t * event is received. This allows you to register a Stage instance as a event listener on {{#crossLink \"Ticker\"}}{{/crossLink}}\n\t * directly, using:\n\t *\n\t *      Ticker.addEventListener(\"tick\", myStage);\n\t *\n\t * Note that if you subscribe to ticks using this pattern, then the tick event object will be passed through to\n\t * display object tick handlers, instead of <code>delta</code> and <code>paused</code> parameters.\n\t * @property handleEvent\n\t * @type Function\n\t **/\n\tp.handleEvent = function(evt) {\n\t\tif (evt.type == \"tick\") { this.update(evt); }\n\t};\n\n\t/**\n\t * Clears the target canvas. Useful if {{#crossLink \"Stage/autoClear:property\"}}{{/crossLink}} is set to `false`.\n\t * @method clear\n\t **/\n\tp.clear = function() {\n\t\tif (!this.canvas) { return; }\n\t\tvar ctx = this.canvas.getContext(\"2d\");\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\tctx.clearRect(0, 0, this.canvas.width+1, this.canvas.height+1);\n\t};\n\n\t/**\n\t * Returns a data url that contains a Base64-encoded image of the contents of the stage. The returned data url can\n\t * be specified as the src value of an image element.\n\t * @method toDataURL\n\t * @param {String} [backgroundColor] The background color to be used for the generated image. Any valid CSS color\n\t * value is allowed. The default value is a transparent background.\n\t * @param {String} [mimeType=\"image/png\"] The MIME type of the image format to be create. The default is \"image/png\". If an unknown MIME type\n\t * is passed in, or if the browser does not support the specified MIME type, the default value will be used.\n\t * @return {String} a Base64 encoded image.\n\t **/\n\tp.toDataURL = function(backgroundColor, mimeType) {\n\t\tvar data, ctx = this.canvas.getContext('2d'), w = this.canvas.width, h = this.canvas.height;\n\n\t\tif (backgroundColor) {\n\t\t\tdata = ctx.getImageData(0, 0, w, h);\n\t\t\tvar compositeOperation = ctx.globalCompositeOperation;\n\t\t\tctx.globalCompositeOperation = \"destination-over\";\n\t\t\t\n\t\t\tctx.fillStyle = backgroundColor;\n\t\t\tctx.fillRect(0, 0, w, h);\n\t\t}\n\n\t\tvar dataURL = this.canvas.toDataURL(mimeType||\"image/png\");\n\n\t\tif(backgroundColor) {\n\t\t\tctx.putImageData(data, 0, 0);\n\t\t\tctx.globalCompositeOperation = compositeOperation;\n\t\t}\n\n\t\treturn dataURL;\n\t};\n\n\t/**\n\t * Enables or disables (by passing a frequency of 0) mouse over ({{#crossLink \"DisplayObject/mouseover:event\"}}{{/crossLink}}\n\t * and {{#crossLink \"DisplayObject/mouseout:event\"}}{{/crossLink}}) and roll over events ({{#crossLink \"DisplayObject/rollover:event\"}}{{/crossLink}}\n\t * and {{#crossLink \"DisplayObject/rollout:event\"}}{{/crossLink}}) for this stage's display list. These events can\n\t * be expensive to generate, so they are disabled by default. The frequency of the events can be controlled\n\t * independently of mouse move events via the optional `frequency` parameter.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var stage = new createjs.Stage(\"canvasId\");\n\t *      stage.enableMouseOver(10); // 10 updates per second\n\t *\n\t * @method enableMouseOver\n\t * @param {Number} [frequency=20] Optional param specifying the maximum number of times per second to broadcast\n\t * mouse over/out events. Set to 0 to disable mouse over events completely. Maximum is 50. A lower frequency is less\n\t * responsive, but uses less CPU.\n\t **/\n\tp.enableMouseOver = function(frequency) {\n\t\tif (this._mouseOverIntervalID) {\n\t\t\tclearInterval(this._mouseOverIntervalID);\n\t\t\tthis._mouseOverIntervalID = null;\n\t\t\tif (frequency == 0) {\n\t\t\t\tthis._testMouseOver(true);\n\t\t\t}\n\t\t}\n\t\tif (frequency == null) { frequency = 20; }\n\t\telse if (frequency <= 0) { return; }\n\t\tvar o = this;\n\t\tthis._mouseOverIntervalID = setInterval(function(){ o._testMouseOver(); }, 1000/Math.min(50,frequency));\n\t};\n\n\t/**\n\t * Enables or disables the event listeners that stage adds to DOM elements (window, document and canvas). It is good\n\t * practice to disable events when disposing of a Stage instance, otherwise the stage will continue to receive\n\t * events from the page.\n\t *\n\t * When changing the canvas property you must disable the events on the old canvas, and enable events on the\n\t * new canvas or mouse events will not work as expected. For example:\n\t *\n\t *      myStage.enableDOMEvents(false);\n\t *      myStage.canvas = anotherCanvas;\n\t *      myStage.enableDOMEvents(true);\n\t *\n\t * @method enableDOMEvents\n\t * @param {Boolean} [enable=true] Indicates whether to enable or disable the events. Default is true.\n\t **/\n\tp.enableDOMEvents = function(enable) {\n\t\tif (enable == null) { enable = true; }\n\t\tvar n, o, ls = this._eventListeners;\n\t\tif (!enable && ls) {\n\t\t\tfor (n in ls) {\n\t\t\t\to = ls[n];\n\t\t\t\to.t.removeEventListener(n, o.f, false);\n\t\t\t}\n\t\t\tthis._eventListeners = null;\n\t\t} else if (enable && !ls && this.canvas) {\n\t\t\tvar t = window.addEventListener ? window : document;\n\t\t\tvar _this = this;\n\t\t\tls = this._eventListeners = {};\n\t\t\tls[\"mouseup\"] = {t:t, f:function(e) { _this._handleMouseUp(e)} };\n\t\t\tls[\"mousemove\"] = {t:t, f:function(e) { _this._handleMouseMove(e)} };\n\t\t\tls[\"dblclick\"] = {t:this.canvas, f:function(e) { _this._handleDoubleClick(e)} };\n\t\t\tls[\"mousedown\"] = {t:this.canvas, f:function(e) { _this._handleMouseDown(e)} };\n\n\t\t\tfor (n in ls) {\n\t\t\t\to = ls[n];\n\t\t\t\to.t.addEventListener(n, o.f, false);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Stage instances cannot be cloned.\n\t * @method clone\n\t **/\n\tp.clone = function() {\n\t\tthrow(\"Stage cannot be cloned.\");\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[Stage (name=\"+  this.name +\")]\";\n\t};\n\n\n// private methods:\n\t/**\n\t * @method _getElementRect\n\t * @protected\n\t * @param {HTMLElement} e\n\t **/\n\tp._getElementRect = function(e) {\n\t\tvar bounds;\n\t\ttry { bounds = e.getBoundingClientRect(); } // this can fail on disconnected DOM elements in IE9\n\t\tcatch (err) { bounds = {top: e.offsetTop, left: e.offsetLeft, width:e.offsetWidth, height:e.offsetHeight}; }\n\n\t\tvar offX = (window.pageXOffset || document.scrollLeft || 0) - (document.clientLeft || document.body.clientLeft || 0);\n\t\tvar offY = (window.pageYOffset || document.scrollTop || 0) - (document.clientTop  || document.body.clientTop  || 0);\n\n\t\tvar styles = window.getComputedStyle ? getComputedStyle(e,null) : e.currentStyle; // IE <9 compatibility.\n\t\tvar padL = parseInt(styles.paddingLeft)+parseInt(styles.borderLeftWidth);\n\t\tvar padT = parseInt(styles.paddingTop)+parseInt(styles.borderTopWidth);\n\t\tvar padR = parseInt(styles.paddingRight)+parseInt(styles.borderRightWidth);\n\t\tvar padB = parseInt(styles.paddingBottom)+parseInt(styles.borderBottomWidth);\n\n\t\t// note: in some browsers bounds properties are read only.\n\t\treturn {\n\t\t\tleft: bounds.left+offX+padL,\n\t\t\tright: bounds.right+offX-padR,\n\t\t\ttop: bounds.top+offY+padT,\n\t\t\tbottom: bounds.bottom+offY-padB\n\t\t}\n\t};\n\n\t/**\n\t * @method _getPointerData\n\t * @protected\n\t * @param {Number} id\n\t **/\n\tp._getPointerData = function(id) {\n\t\tvar data = this._pointerData[id];\n\t\tif (!data) { data = this._pointerData[id] = {x:0,y:0}; }\n\t\treturn data;\n\t};\n\n\t/**\n\t * @method _handleMouseMove\n\t * @protected\n\t * @param {MouseEvent} e\n\t **/\n\tp._handleMouseMove = function(e) {\n\t\tif(!e){ e = window.event; }\n\t\tthis._handlePointerMove(-1, e, e.pageX, e.pageY);\n\t};\n\n\t/**\n\t * @method _handlePointerMove\n\t * @protected\n\t * @param {Number} id\n\t * @param {Event} e\n\t * @param {Number} pageX\n\t * @param {Number} pageY\n\t * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t **/\n\tp._handlePointerMove = function(id, e, pageX, pageY, owner) {\n\t\tif (this._prevStage && owner === undefined) { return; } // redundant listener.\n\t\tif (!this.canvas) { return; }\n\t\tvar nextStage=this._nextStage, o=this._getPointerData(id);\n\n\t\tvar inBounds = o.inBounds;\n\t\tthis._updatePointerPosition(id, e, pageX, pageY);\n\t\tif (inBounds || o.inBounds || this.mouseMoveOutside) {\n\t\t\tif (id === -1 && o.inBounds == !inBounds) {\n\t\t\t\tthis._dispatchMouseEvent(this, (inBounds ? \"mouseleave\" : \"mouseenter\"), false, id, o, e);\n\t\t\t}\n\t\t\t\n\t\t\tthis._dispatchMouseEvent(this, \"stagemousemove\", false, id, o, e);\n\t\t\tthis._dispatchMouseEvent(o.target, \"pressmove\", true, id, o, e);\n\t\t}\n\t\t\n\t\tnextStage&&nextStage._handlePointerMove(id, e, pageX, pageY, null);\n\t};\n\n\t/**\n\t * @method _updatePointerPosition\n\t * @protected\n\t * @param {Number} id\n\t * @param {Event} e\n\t * @param {Number} pageX\n\t * @param {Number} pageY\n\t **/\n\tp._updatePointerPosition = function(id, e, pageX, pageY) {\n\t\tvar rect = this._getElementRect(this.canvas);\n\t\tpageX -= rect.left;\n\t\tpageY -= rect.top;\n\n\t\tvar w = this.canvas.width;\n\t\tvar h = this.canvas.height;\n\t\tpageX /= (rect.right-rect.left)/w;\n\t\tpageY /= (rect.bottom-rect.top)/h;\n\t\tvar o = this._getPointerData(id);\n\t\tif (o.inBounds = (pageX >= 0 && pageY >= 0 && pageX <= w-1 && pageY <= h-1)) {\n\t\t\to.x = pageX;\n\t\t\to.y = pageY;\n\t\t} else if (this.mouseMoveOutside) {\n\t\t\to.x = pageX < 0 ? 0 : (pageX > w-1 ? w-1 : pageX);\n\t\t\to.y = pageY < 0 ? 0 : (pageY > h-1 ? h-1 : pageY);\n\t\t}\n\n\t\to.posEvtObj = e;\n\t\to.rawX = pageX;\n\t\to.rawY = pageY;\n\n\t\tif (id === this._primaryPointerID || id === -1) {\n\t\t\tthis.mouseX = o.x;\n\t\t\tthis.mouseY = o.y;\n\t\t\tthis.mouseInBounds = o.inBounds;\n\t\t}\n\t};\n\n\t/**\n\t * @method _handleMouseUp\n\t * @protected\n\t * @param {MouseEvent} e\n\t **/\n\tp._handleMouseUp = function(e) {\n\t\tthis._handlePointerUp(-1, e, false);\n\t};\n\n\t/**\n\t * @method _handlePointerUp\n\t * @protected\n\t * @param {Number} id\n\t * @param {Event} e\n\t * @param {Boolean} clear\n\t * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t **/\n\tp._handlePointerUp = function(id, e, clear, owner) {\n\t\tvar nextStage = this._nextStage, o = this._getPointerData(id);\n\t\tif (this._prevStage && owner === undefined) { return; } // redundant listener.\n\t\t\n\t\tvar target=null, oTarget = o.target;\n\t\tif (!owner && (oTarget || nextStage)) { target = this._getObjectsUnderPoint(o.x, o.y, null, true); }\n\t\t\n\t\tif (o.down) { this._dispatchMouseEvent(this, \"stagemouseup\", false, id, o, e, target); o.down = false; }\n\t\t\n\t\tif (target == oTarget) { this._dispatchMouseEvent(oTarget, \"click\", true, id, o, e); }\n\t\tthis._dispatchMouseEvent(oTarget, \"pressup\", true, id, o, e);\n\t\t\n\t\tif (clear) {\n\t\t\tif (id==this._primaryPointerID) { this._primaryPointerID = null; }\n\t\t\tdelete(this._pointerData[id]);\n\t\t} else { o.target = null; }\n\t\t\n\t\tnextStage&&nextStage._handlePointerUp(id, e, clear, owner || target && this);\n\t};\n\n\t/**\n\t * @method _handleMouseDown\n\t * @protected\n\t * @param {MouseEvent} e\n\t **/\n\tp._handleMouseDown = function(e) {\n\t\tthis._handlePointerDown(-1, e, e.pageX, e.pageY);\n\t};\n\n\t/**\n\t * @method _handlePointerDown\n\t * @protected\n\t * @param {Number} id\n\t * @param {Event} e\n\t * @param {Number} pageX\n\t * @param {Number} pageY\n\t * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t **/\n\tp._handlePointerDown = function(id, e, pageX, pageY, owner) {\n\t\tif (this.preventSelection) { e.preventDefault(); }\n\t\tif (this._primaryPointerID == null || id === -1) { this._primaryPointerID = id; } // mouse always takes over.\n\t\t\n\t\tif (pageY != null) { this._updatePointerPosition(id, e, pageX, pageY); }\n\t\tvar target = null, nextStage = this._nextStage, o = this._getPointerData(id);\n\t\tif (!owner) { target = o.target = this._getObjectsUnderPoint(o.x, o.y, null, true); }\n\n\t\tif (o.inBounds) { this._dispatchMouseEvent(this, \"stagemousedown\", false, id, o, e, target); o.down = true; }\n\t\tthis._dispatchMouseEvent(target, \"mousedown\", true, id, o, e);\n\t\t\n\t\tnextStage&&nextStage._handlePointerDown(id, e, pageX, pageY, owner || target && this);\n\t};\n\n\t/**\n\t * @method _testMouseOver\n\t * @param {Boolean} clear If true, clears the mouseover / rollover (ie. no target)\n\t * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t * @param {Stage} eventTarget The stage that the cursor is actively over.\n\t * @protected\n\t **/\n\tp._testMouseOver = function(clear, owner, eventTarget) {\n\t\tif (this._prevStage && owner === undefined) { return; } // redundant listener.\n\t\t\n\t\tvar nextStage = this._nextStage;\n\t\tif (!this._mouseOverIntervalID) {\n\t\t\t// not enabled for mouseover, but should still relay the event.\n\t\t\tnextStage&&nextStage._testMouseOver(clear, owner, eventTarget);\n\t\t\treturn;\n\t\t}\n\t\tvar o = this._getPointerData(-1);\n\t\t// only update if the mouse position has changed. This provides a lot of optimization, but has some trade-offs.\n\t\tif (!o || (!clear && this.mouseX == this._mouseOverX && this.mouseY == this._mouseOverY && this.mouseInBounds)) { return; }\n\t\t\n\t\tvar e = o.posEvtObj;\n\t\tvar isEventTarget = eventTarget || e&&(e.target == this.canvas);\n\t\tvar target=null, common = -1, cursor=\"\", t, i, l;\n\t\t\n\t\tif (!owner && (clear || this.mouseInBounds && isEventTarget)) {\n\t\t\ttarget = this._getObjectsUnderPoint(this.mouseX, this.mouseY, null, true);\n\t\t\tthis._mouseOverX = this.mouseX;\n\t\t\tthis._mouseOverY = this.mouseY;\n\t\t}\n\n\t\tvar oldList = this._mouseOverTarget||[];\n\t\tvar oldTarget = oldList[oldList.length-1];\n\t\tvar list = this._mouseOverTarget = [];\n\n\t\t// generate ancestor list and check for cursor:\n\t\tt = target;\n\t\twhile (t) {\n\t\t\tlist.unshift(t);\n\t\t\tif (!cursor) { cursor = t.cursor; }\n\t\t\tt = t.parent;\n\t\t}\n\t\tthis.canvas.style.cursor = cursor;\n\t\tif (!owner && eventTarget) { eventTarget.canvas.style.cursor = cursor; }\n\n\t\t// find common ancestor:\n\t\tfor (i=0,l=list.length; i<l; i++) {\n\t\t\tif (list[i] != oldList[i]) { break; }\n\t\t\tcommon = i;\n\t\t}\n\n\t\tif (oldTarget != target) {\n\t\t\tthis._dispatchMouseEvent(oldTarget, \"mouseout\", true, -1, o, e, target);\n\t\t}\n\n\t\tfor (i=oldList.length-1; i>common; i--) {\n\t\t\tthis._dispatchMouseEvent(oldList[i], \"rollout\", false, -1, o, e, target);\n\t\t}\n\n\t\tfor (i=list.length-1; i>common; i--) {\n\t\t\tthis._dispatchMouseEvent(list[i], \"rollover\", false, -1, o, e, oldTarget);\n\t\t}\n\n\t\tif (oldTarget != target) {\n\t\t\tthis._dispatchMouseEvent(target, \"mouseover\", true, -1, o, e, oldTarget);\n\t\t}\n\t\t\n\t\tnextStage&&nextStage._testMouseOver(clear, owner || target && this, eventTarget || isEventTarget && this);\n\t};\n\n\t/**\n\t * @method _handleDoubleClick\n\t * @protected\n\t * @param {MouseEvent} e\n\t * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t **/\n\tp._handleDoubleClick = function(e, owner) {\n\t\tvar target=null, nextStage=this._nextStage, o=this._getPointerData(-1);\n\t\tif (!owner) {\n\t\t\ttarget = this._getObjectsUnderPoint(o.x, o.y, null, true);\n\t\t\tthis._dispatchMouseEvent(target, \"dblclick\", true, -1, o, e);\n\t\t}\n\t\tnextStage&&nextStage._handleDoubleClick(e, owner || target && this);\n\t};\n\n\t/**\n\t * @method _dispatchMouseEvent\n\t * @protected\n\t * @param {DisplayObject} target\n\t * @param {String} type\n\t * @param {Boolean} bubbles\n\t * @param {Number} pointerId\n\t * @param {Object} o\n\t * @param {MouseEvent} [nativeEvent]\n\t * @param {DisplayObject} [relatedTarget]\n\t **/\n\tp._dispatchMouseEvent = function(target, type, bubbles, pointerId, o, nativeEvent, relatedTarget) {\n\t\t// TODO: might be worth either reusing MouseEvent instances, or adding a willTrigger method to avoid GC.\n\t\tif (!target || (!bubbles && !target.hasEventListener(type))) { return; }\n\t\t/*\n\t\t// TODO: account for stage transformations?\n\t\tthis._mtx = this.getConcatenatedMatrix(this._mtx).invert();\n\t\tvar pt = this._mtx.transformPoint(o.x, o.y);\n\t\tvar evt = new createjs.MouseEvent(type, bubbles, false, pt.x, pt.y, nativeEvent, pointerId, pointerId==this._primaryPointerID || pointerId==-1, o.rawX, o.rawY);\n\t\t*/\n\t\tvar evt = new createjs.MouseEvent(type, bubbles, false, o.x, o.y, nativeEvent, pointerId, pointerId === this._primaryPointerID || pointerId === -1, o.rawX, o.rawY, relatedTarget);\n\t\ttarget.dispatchEvent(evt);\n\t};\n\n\n\tcreatejs.Stage = createjs.promote(Stage, \"Container\");\n}());\n\n//##############################################################################\n// StageGL.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n/*\n * README IF EDITING:\n * Terminology for developers:\n *\n * Vertex: a point that help defines a shape, 3 per triangle. Usually has an x,y,z but can have more/less info.\n * Vertex Property: a piece of information attached to the vertex like a vector3 containing x,y,z\n * Index/Indices: used in groups of 3 to define a triangle, points to vertices by their index in an array (some render\n * \t\tmodes do not use these)\n * Card: a group of 2 triangles used to display a rectangular image\n * U/V: common names for the [0-1] texture co-ordinates on an image\n * Batch: a single call to the renderer, best done as little as possible so multiple cards are put into a single batch\n * Buffer: WebGL array data\n * Program/Shader: For every vertex we run the Vertex shader. The results are used per pixel by the Fragment shader. When\n * \t\tcombined and paired these are a shader \"program\"\n * Texture: WebGL representation of image data and associated extra information\n * Slot: A space on the GPU into which textures can be loaded for use in a batch, using \"ActiveTexture\" switches texture slot.\n */\n\n(function () {\n\t\"use strict\";\n\n\t/**\n\t * A StageGL instance is the root level {{#crossLink \"Container\"}}{{/crossLink}} for an WebGL-optimized display list,\n\t * which is used in place of the usual {{#crossLink \"Stage\"}}{{/crossLink}}. This class should behave identically to\n\t * a {{#crossLink \"Stage\"}}{{/crossLink}} except for WebGL-specific functionality.\n\t *\n\t * Each time the {{#crossLink \"Stage/tick\"}}{{/crossLink}} method is called, the display list is rendered to the\n\t * target &lt;canvas/&gt; instance, ignoring non-WebGL-compatible display objects. On devices and browsers that don't\n\t * support WebGL, content will automatically be rendered to canvas 2D context instead.\n\t *\n\t * <h4>Limitations</h4>\n\t * - {{#crossLink \"Shape\"}}{{/crossLink}}, {{#crossLink \"Shadow\"}}{{/crossLink}}, and {{#crossLink \"Text\"}}{{/crossLink}}\n\t * \tare not rendered when added to the display list.\n\t * - To display something StageGL cannot render, {{#crossLink \"displayObject/cache\"}}{{/crossLink}} the object.\n\t *\tCaches can be rendered regardless of source.\n\t * - Images are wrapped as a webGL \"Texture\". Each graphics card has a limit to its concurrent Textures, too many \n\t * Textures will noticeably slow performance.\n\t * - Each cache counts as an individual Texture. As such {{#crossLink \"SpriteSheet\"}}{{/crossLink}} and \n\t * {{#crossLink \"SpriteSheetBuilder\"}}{{/crossLink}} are recommended practices to help keep texture counts low.\n\t * - To use any image node (DOM Image/Canvas Element) between multiple StageGL instances it must be a \n\t * {{#crossLink \"Bitmap/clone\"}}{{/crossLink}}, otherwise the GPU texture loading and tracking will get confused.\n\t * - to avoid an up/down scaled render you must call {{#crossLink \"StageGL/updateViewport\"}}{{/crossLink}} if you\n\t * resize your canvas after making a StageGL instance, this will properly size the WebGL context stored in memory.\n\t * - Best performance in demanding scenarios will come from manual management of texture memory, but it is handled\n\t * automatically by default. See {{#crossLink \"StageGL/releaseTexture\"}}{{/crossLink}} for details.\n\t *\n\t * <h4>Example</h4>\n\t * This example creates a StageGL instance, adds a child to it, then uses the EaselJS {{#crossLink \"Ticker\"}}{{/crossLink}}\n\t * to update the child and redraw the stage.\n\t *\n\t *      var stage = new createjs.StageGL(\"canvasElementId\");\n\t *\n\t *      var image = new createjs.Bitmap(\"imagePath.png\");\n\t *      stage.addChild(image);\n\t *\n\t *      createjs.Ticker.on(\"tick\", handleTick);\n\t *\n\t *      function handleTick(event) {\n\t *          image.x += 10;\n\t *          stage.update();\n\t *      }\n\t *\n\t * <h4>Notes</h4>\n\t * - StageGL is not currently included in the minified version of EaselJS.\n\t * - {{#crossLink \"SpriteContainer\"}}{{/crossLink}} (the previous approach to WebGL with EaselJS) has been deprecated.\n\t * - Earlier versions of WebGL support in EaselJS (SpriteStage and SpriteContainer) had hard limitations on images\n\t * \tper container, which have been solved.\n\t *\n\t * @class StageGL\n\t * @extends Stage\n\t * @constructor\n\t * @param {HTMLCanvasElement | String | Object} canvas A canvas object that StageGL will render to, or the string id\n\t *  of a canvas object in the current DOM.\n\t * @param {Object} options All the option parameters in a reference object, some are not supported by some browsers.\n\t * @param {Boolean} [options.preserveBuffer=false] If `true`, the canvas is NOT auto-cleared by WebGL (the spec\n\t *  discourages setting this to `true`). This is useful if you want persistent draw effects.\n\t * @param {Boolean} [options.antialias=false] Specifies whether or not the browser's WebGL implementation should try\n\t *  to perform anti-aliasing. This will also enable linear pixel sampling on power-of-two textures (smoother images).\n\t * @param {Boolean} [options.transparent=false] If `true`, the canvas is transparent. This is <strong>very</strong>\n\t * expensive, and should be used with caution.\n\t * @param {Boolean} [options.premultiply=false] Alters color handling. If `true`, this assumes the shader must\n\t * account for pre-multiplied alpha. This can help avoid visual halo effects with some assets, but may also cause\n\t * problems with other assets.\n\t * @param {Integer} [options.autoPurge=1200] How often the system should automatically dump unused textures with\n\t * `purgeTextures(autoPurge)` every `autoPurge/2` draws. See {{#crossLink \"StageGL/purgeTextures\"}}{{/crossLink}} for more\n\t * information.\n\t */\n\tfunction StageGL(canvas, options) {\n\t\tthis.Stage_constructor(canvas);\n\n\t\tif (options !== undefined) {\n\t\t\tif (typeof options !== \"object\"){ throw(\"Invalid options object\"); }\n\t\t\tvar premultiply = options.premultiply;\n\t\t\tvar transparent = options.transparent;\n\t\t\tvar antialias = options.antialias;\n\t\t\tvar preserveBuffer = options.preserveBuffer;\n\t\t\tvar autoPurge = options.autoPurge;\n\t\t}\n\n// public properties:\n\t\t/**\n\t\t * Console log potential issues and problems. This is designed to have <em>minimal</em> performance impact, so\n\t\t * if extensive debugging information is required, this may be inadequate. See {{#crossLink \"WebGLInspector\"}}{{/crossLink}}\n\t\t * @property vocalDebug\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.vocalDebug = false;\n\n// private properties:\n\t\t/**\n\t\t * Specifies whether or not the canvas is auto-cleared by WebGL. The WebGL spec discourages `true`.\n\t\t * If true, the canvas is NOT auto-cleared by WebGL. Used when the canvas context is created and requires\n\t\t * context re-creation to update.\n\t\t * @property _preserveBuffer\n\t\t * @protected\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis._preserveBuffer = preserveBuffer||false;\n\n\t\t/**\n\t\t * Specifies whether or not the browser's WebGL implementation should try to perform anti-aliasing.\n\t\t * @property _antialias\n\t\t * @protected\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis._antialias = antialias||false;\n\n\t\t/**\n\t\t * Specifies whether or not the browser's WebGL implementation should be transparent.\n\t\t * @property _transparent\n\t\t * @protected\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis._transparent = transparent||false;\n\n\t\t/**\n\t\t * Specifies whether or not StageGL is handling colours as premultiplied alpha.\n\t\t * @property _premultiply\n\t\t * @protected\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis._premultiply = premultiply||false;\n\n\t\t/**\n\t\t * Internal value of {{#crossLink \"StageGL/autoPurge\"}}{{/crossLink}}\n\t\t * @property _autoPurge\n\t\t * @protected\n\t\t * @type {Integer}\n\t\t * @default null\n\t\t */\n\t\tthis._autoPurge = undefined;\n\t\tthis.autoPurge = autoPurge;\t//getter/setter handles setting the real value and validating\n\n\t\t/**\n\t\t * The width in px of the drawing surface saved in memory.\n\t\t * @property _viewportWidth\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis._viewportWidth = 0;\n\n\t\t/**\n\t\t * The height in px of the drawing surface saved in memory.\n\t\t * @property _viewportHeight\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis._viewportHeight = 0;\n\n\t\t/**\n\t\t * A 2D projection matrix used to convert WebGL's viewspace into canvas co-ordinates. Regular canvas display\n\t\t * uses Top-Left values of [0,0] where WebGL uses a Center [0,0] Top-Right [1,1] (euclidean) system.\n\t\t * @property _projectionMatrix\n\t\t * @protected\n\t\t * @type {Float32Array}\n\t\t * @default null\n\t\t */\n\t\tthis._projectionMatrix = null;\n\n\t\t/**\n\t\t * The current WebGL canvas context. Often shorthanded to just \"gl\" in many parts of the code.\n\t\t * @property _webGLContext\n\t\t * @protected\n\t\t * @type {WebGLRenderingContext}\n\t\t * @default null\n\t\t */\n\t\tthis._webGLContext = null;\n\n\t\t/**\n\t\t * The color to use when the WebGL canvas has been cleared. May appear as a background color. Defaults to grey.\n\t\t * @property _clearColor\n\t\t * @protected\n\t\t * @type {Object}\n\t\t * @default {r: 0.50, g: 0.50, b: 0.50, a: 0.00}\n\t\t */\n\t\tthis._clearColor = {r: 0.50, g: 0.50, b: 0.50, a: 0.00};\n\n\t\t/**\n\t\t * The maximum number of cards (aka a single sprite) that can be drawn in one draw call. Use getter/setters to\n\t\t * modify otherwise internal buffers may be incorrect sizes.\n\t\t * @property _maxCardsPerBatch\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default StageGL.DEFAULT_MAX_BATCH_SIZE (10000)\n\t\t */\n\t\tthis._maxCardsPerBatch = StageGL.DEFAULT_MAX_BATCH_SIZE;\t\t\t\t\t\t\t\t\t\t\t\t\t\t//TODO: write getter/setters for this\n\n\t\t/**\n\t\t * The shader program used to draw the current batch.\n\t\t * @property _activeShader\n\t\t * @protected\n\t\t * @type {WebGLProgram}\n\t\t * @default null\n\t\t */\n\t\tthis._activeShader = null;\n\n\t\t/**\n\t\t * The vertex position data for the current draw call.\n\t\t * @property _vertices\n\t\t * @protected\n\t\t * @type {Float32Array}\n\t\t * @default null\n\t\t */\n\t\tthis._vertices = null;\n\n\t\t/**\n\t\t * The WebGL buffer attached to {{#crossLink \"StageGL/_vertices:property\"}}{{/crossLink}}.\n\t\t * @property _vertexPositionBuffer\n\t\t * @protected\n\t\t * @type {WebGLBuffer}\n\t\t * @default null\n\t\t */\n\t\tthis._vertexPositionBuffer = null;\n\n\t\t/**\n\t\t * The vertex U/V data for the current draw call.\n\t\t * @property _uvs\n\t\t * @protected\n\t\t * @type {Float32Array}\n\t\t * @default null\n\t\t */\n\t\tthis._uvs = null;\n\n\t\t/**\n\t\t * The WebGL buffer attached to {{#crossLink \"StageGL/_uvs:property\"}}{{/crossLink}}.\n\t\t * @property _uvPositionBuffer\n\t\t * @protected\n\t\t * @type {WebGLBuffer}\n\t\t * @default null\n\t\t */\n\t\tthis._uvPositionBuffer = null;\n\n\t\t/**\n\t\t * The vertex indices data for the current draw call.\n\t\t * @property _indices\n\t\t * @protected\n\t\t * @type {Float32Array}\n\t\t * @default null\n\t\t */\n\t\tthis._indices = null;\n\n\t\t/**\n\t\t * The WebGL buffer attached to {{#crossLink \"StageGL/_indices:property\"}}{{/crossLink}}.\n\t\t * @property _textureIndexBuffer\n\t\t * @protected\n\t\t * @type {WebGLBuffer}\n\t\t * @default null\n\t\t */\n\t\tthis._textureIndexBuffer = null;\n\n\t\t/**\n\t\t * The vertices data for the current draw call.\n\t\t * @property _alphas\n\t\t * @protected\n\t\t * @type {Float32Array}\n\t\t * @default null\n\t\t */\n\t\tthis._alphas = null;\n\n\t\t/**\n\t\t * The WebGL buffer attached to {{#crossLink \"StageGL/_alphas:property\"}}{{/crossLink}}.\n\t\t * @property _alphaBuffer\n\t\t * @protected\n\t\t * @type {WebGLBuffer}\n\t\t * @default null\n\t\t */\n\t\tthis._alphaBuffer = null;\n\n\t\t/**\n\t\t * An index based lookup of every WebGL Texture currently in use.\n\t\t * @property _drawTexture\n\t\t * @protected\n\t\t * @type {Array}\n\t\t */\n\t\tthis._textureDictionary = [];\n\n\t\t/**\n\t\t * A string based lookup hash of which index a texture is stored at in the dictionary. The lookup string is\n\t\t * often the src url.\n\t\t * @property _textureIDs\n\t\t * @protected\n\t\t * @type {Object}\n\t\t */\n\t\tthis._textureIDs = {};\n\n\t\t/**\n\t\t * An array of all the textures currently loaded into the GPU. The index in the array matches the GPU index.\n\t\t * @property _batchTextures\n\t\t * @protected\n\t\t * @type {Array}\n\t\t */\n\t\tthis._batchTextures = [];\n\n\t\t/**\n\t\t * An array of all the simple filler textures used to prevent issues with missing textures in a batch.\n\t\t * @property _baseTextures\n\t\t * @protected\n\t\t * @type {Array}\n\t\t */\n\t\tthis._baseTextures = [];\n\n\t\t/**\n\t\t * The number of concurrent textures the GPU can handle. This value is dynamically set from WebGL during initialization\n\t\t * via `gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS)`. The WebGL spec states that the lowest guaranteed value is 8,\n\t\t * but it could be higher. Do not set this value higher than the value returned by the GPU. Setting it lower will\n\t\t * probably reduce performance, but may be advisable to reserve slots for custom filter work.\n\t\t * NOTE: Can also act as a length for {{#crossLink \"StageGL/_batchTextures:property\"}}.\n\t\t * @property _batchTextureCount\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 8\n\t\t */\n\t\tthis._batchTextureCount = 8;\n\n\t\t/**\n\t\t * The location at which the last texture was inserted into a GPU slot in {{#crossLink \"StageGL/_batchTextures:property\"}}{{/crossLink}}.\n\t\t * Manual control of this variable can yield improvements in performance by intelligently replacing textures\n\t\t * inside a batch to reduce texture re-load. It is impossible to write automated general use code, as it requires\n\t\t * display list look ahead inspection and/or render foreknowledge.\n\t\t * @property _lastTextureInsert\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default -1\n\t\t */\n\t\tthis._lastTextureInsert = -1;\n\n\t\t/**\n\t\t * The current batch being drawn, A batch consists of a call to `drawElements` on the GPU. Many of these calls\n\t\t * can occur per draw.\n\t\t * @property _batchId\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis._batchID = 0;\n\n\t\t/**\n\t\t * The current draw being performed, may contain multiple batches. Comparing to {{#crossLink \"StageGL/_batchID:property\"}}{{/crossLink}}\n\t\t * can reveal batching efficiency.\n\t\t * @property _drawID\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis._drawID = 0;\n\n\t\t/**\n\t\t * Used to prevent textures in certain GPU slots from being replaced by an insert.\n\t\t * @property _slotBlackList\n\t\t * @protected\n\t\t * @type {Array}\n\t\t */\n\t\tthis._slotBlacklist = [];\n\n\t\t/**\n\t\t * Used to prevent nested draw calls from accidentally overwriting drawing information by tracking depth.\n\t\t * @property _isDrawing\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis._isDrawing = 0;\n\n\t\t/**\n\t\t * Used to ensure every canvas used as a texture source has a unique ID.\n\t\t * @property _lastTrackedCanvas\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis._lastTrackedCanvas = 0;\n\n\t\t/**\n\t\t * Controls whether final rendering output of a {{#crossLink \"cacheDraw\"}}{{/crossLink}} is the canvas or a render\n\t\t * texture. See the {{#crossLink \"cache\"}}{{/crossLink}} function modifications for full implications and discussion.\n\t\t * @property isCacheControlled\n\t\t * @protected\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t * @todo LM: is this supposed to be _isCacheControlled since its private?\n\t\t */\n\t\tthis.isCacheControlled = false;\n\n\t\t/**\n\t\t * Used to counter-position the object being cached so it aligns with the cache surface. Additionally ensures\n\t\t * that all rendering starts with a top level container.\n\t\t * @property _cacheContainer\n\t\t * @protected\n\t\t * @type {Container}\n\t\t * @default An instance of an EaselJS Container.\n\t\t */\n\t\tthis._cacheContainer = new createjs.Container();\n\n\t\t// and begin\n\t\tthis._initializeWebGL();\n\t}\n\tvar p = createjs.extend(StageGL, createjs.Stage);\n\n// static methods:\n\t/**\n\t * Calculate the U/V co-ordinate based info for sprite frames. Instead of pixel count it uses a 0-1 space. Also includes\n\t * the ability to get info back for a specific frame, or only calculate that one frame.\n\t *\n\t *     //generate UV rects for all entries\n\t *     StageGL.buildUVRects( spriteSheetA );\n\t *     //generate all, fetch the first\n\t *     var firstFrame = StageGL.buildUVRects( spriteSheetB, 0 );\n\t *     //generate the rect for just a single frame for performance's sake\n\t *     var newFrame = StageGL.buildUVRects( dynamicSpriteSheet, newFrameIndex, true );\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method buildUVRects\n\t * @param  {SpriteSheet} spritesheet The spritesheet to find the frames on\n\t * @param  {int} [target=-1] The index of the frame to return\n\t * @param  {Boolean} [onlyTarget=false] Whether \"target\" is the only frame that gets calculated\n\t * @static\n\t * @return {Object} the target frame if supplied and present or a generic frame {t, l, b, r}\n\t */\n\tStageGL.buildUVRects = function (spritesheet, target, onlyTarget) {\n\t\tif (!spritesheet || !spritesheet._frames) { return null; }\n\t\tif (target === undefined) { target = -1; }\n\t\tif (onlyTarget === undefined) { onlyTarget = false; }\n\n\t\tvar start = (target != -1 && onlyTarget)?(target):(0);\n\t\tvar end = (target != -1 && onlyTarget)?(target+1):(spritesheet._frames.length);\n\t\tfor (var i=start; i<end; i++) {\n\t\t\tvar f = spritesheet._frames[i];\n\t\t\tif (f.uvRect || f.image.width <= 0 || f.image.height <= 0) { continue; }\n\n\t\t\tvar r = f.rect;\n\t\t\tf.uvRect = {\n\t\t\t\tt: r.y / f.image.height,\n\t\t\t\tl: r.x / f.image.width,\n\t\t\t\tb: (r.y + r.height) / f.image.height,\n\t\t\t\tr: (r.x + r.width) / f.image.width\n\t\t\t};\n\t\t}\n\n\t\treturn spritesheet._frames[(target != -1) ? target : 0].uvRect || {t:0, l:0, b:1, r:1};\n\t};\n\n\t/**\n\t * Test a context to see if it has WebGL enabled on it.\n\t * @method isWebGLActive\n\t * @param {CanvasContext} ctx The context to test\n\t * @static\n\t * @return {Boolean} Whether WebGL is enabled\n\t */\n\tStageGL.isWebGLActive = function (ctx) {\n\t\treturn ctx &&\n\t\t\tctx instanceof WebGLRenderingContext &&\n\t\t\ttypeof WebGLRenderingContext !== 'undefined';\n\t};\n\n// static properties:\n\t/**\n\t * The number of properties defined per vertex (x, y, textureU, textureV, textureIndex, alpha)\n\t * @property VERTEX_PROPERTY_COUNT\n\t * @static\n\t * @final\n\t * @type {Number}\n\t * @default 6\n\t * @readonly\n\t */\n\tStageGL.VERTEX_PROPERTY_COUNT = 6;\n\n\t/**\n\t * The number of triangle indices it takes to form a Card. 3 per triangle, 2 triangles.\n\t * @property INDICIES_PER_CARD\n\t * @static\n\t * @final\n\t * @type {Number}\n\t * @default 6\n\t * @readonly\n\t */\n\tStageGL.INDICIES_PER_CARD = 6;\n\n\t/**\n\t * The default value for the maximum number of cards we want to process in a batch. See\n\t * {{#crossLink \"StageGL/WEBGL_MAX_INDEX_NUM:property\"}}{{/crossLink}} for a hard limit.\n\t * @property DEFAULT_MAX_BATCH_SIZE\n\t * @static\n\t * @final\n\t * @type {Number}\n\t * @default 10000\n\t * @readonly\n\t */\n\tStageGL.DEFAULT_MAX_BATCH_SIZE = 10000;\n\n\t/**\n\t * The maximum size WebGL allows for element index numbers. Uses a 16 bit unsigned integer. It takes 6 indices to\n\t * make a unique card.\n\t * @property WEBGL_MAX_INDEX_NUM\n\t * @static\n\t * @final\n\t * @type {Number}\n\t * @default 65536\n\t * @readonly\n\t */\n\tStageGL.WEBGL_MAX_INDEX_NUM = Math.pow(2, 16);\n\n\t/**\n\t * Default U/V rect for dealing with full coverage from an image source.\n\t * @property UV_RECT\n\t * @static\n\t * @final\n\t * @type {Object}\n\t * @default {t:0, l:0, b:1, r:1}\n\t * @readonly\n\t */\n\tStageGL.UV_RECT = {t:0, l:0, b:1, r:1};\n\n\ttry {\n\t\t/**\n\t\t * Vertex positions for a card that covers the entire render. Used with render targets primarily.\n\t\t * @property COVER_VERT\n\t\t * @static\n\t\t * @final\n\t\t * @type {Float32Array}\n\t\t * @readonly\n\t\t */\n\t\tStageGL.COVER_VERT = new Float32Array([\n\t\t\t-1,\t\t 1,\t\t//TL\n\t\t\t1,\t\t 1,\t\t//TR\n\t\t\t-1,\t\t-1,\t\t//BL\n\t\t\t1,\t\t 1,\t\t//TR\n\t\t\t1,\t\t-1,\t\t//BR\n\t\t\t-1,\t\t-1\t\t//BL\n\t\t]);\n\n\t\t/**\n\t\t * U/V for {{#crossLink \"StageGL/COVER_VERT:property\"}}{{/crossLink}}.\n\t\t * @property COVER_UV\n\t\t * @static\n\t\t * @final\n\t\t * @type {Float32Array}\n\t\t * @readonly\n\t\t */\n\t\tStageGL.COVER_UV = new Float32Array([\n\t\t\t 0,\t\t 0,\t\t//TL\n\t\t\t 1,\t\t 0,\t\t//TR\n\t\t\t 0,\t\t 1,\t\t//BL\n\t\t\t 1,\t\t 0,\t\t//TR\n\t\t\t 1,\t\t 1,\t\t//BR\n\t\t\t 0,\t\t 1\t\t//BL\n\t\t]);\n\n\t\t/**\n\t\t * Flipped U/V for {{#crossLink \"StageGL:COVER_VERT:property\"}}{{/crossLink}}.\n\t\t * @property COVER_UV_FLIP\n\t\t * @static\n\t\t * @final\n\t\t * @type {Float32Array}\n\t\t * @readonly\n\t\t */\n\t\tStageGL.COVER_UV_FLIP = new Float32Array([\n\t\t\t 0,\t\t 1,\t\t//TL\n\t\t\t 1,\t\t 1,\t\t//TR\n\t\t\t 0,\t\t 0,\t\t//BL\n\t\t\t 1,\t\t 1,\t\t//TR\n\t\t\t 1,\t\t 0,\t\t//BR\n\t\t\t 0,\t\t 0\t\t//BL\n\t\t]);\n\t} catch(e) { /* Breaking in older browsers, but those browsers wont run StageGL so no recovery or warning needed */ }\n\n\t/**\n\t * Portion of the shader that contains the \"varying\" properties required in both vertex and fragment shaders. The\n\t * regular shader is designed to render all expected objects. Shader code may contain templates that are replaced\n\t * pre-compile.\n\t * @property REGULAR_VARYING_HEADER\n\t * @static\n\t * @final\n\t * @type {String}\n\t * @readonly\n\t */\n\tStageGL.REGULAR_VARYING_HEADER = (\n\t\t\"precision mediump float;\" +\n\t\t\"varying vec2 vTextureCoord;\" +\n\t\t\"varying lowp float indexPicker;\" +\n\t\t\"varying lowp float alphaValue;\"\n\t);\n\n\t/**\n\t * Actual full header for the vertex shader. Includes the varying header. The regular shader is designed to render\n\t * all expected objects. Shader code may contain templates that are replaced pre-compile.\n\t * @property REGULAR_VERTEX_HEADER\n\t * @static\n\t * @final\n\t * @type {String}\n\t * @readonly\n\t */\n\tStageGL.REGULAR_VERTEX_HEADER = (\n\t\tStageGL.REGULAR_VARYING_HEADER +\n\t\t\"attribute vec2 vertexPosition;\" +\n\t\t\"attribute vec2 uvPosition;\" +\n\t\t\"attribute lowp float textureIndex;\" +\n\t\t\"attribute lowp float objectAlpha;\" +\n\t\t\"uniform mat4 pMatrix;\"\n\t);\n\n\t/**\n\t * Actual full header for the fragment shader. Includes the varying header. The regular shader is designed to render\n\t * all expected objects. Shader code may contain templates that are replaced pre-compile.\n\t * @property REGULAR_FRAGMENT_HEADER\n\t * @static\n\t * @final\n\t * @type {String}\n\t * @readonly\n\t */\n\tStageGL.REGULAR_FRAGMENT_HEADER = (\n\t\tStageGL.REGULAR_VARYING_HEADER +\n\t\t\"uniform sampler2D uSampler[{{count}}];\"\n\t);\n\n\t/**\n\t * Body of the vertex shader. The regular shader is designed to render all expected objects. Shader code may contain\n\t * templates that are replaced pre-compile.\n\t * @property REGULAR_VERTEX_BODY\n\t * @static\n\t * @final\n\t * @type {String}\n\t * @readonly\n\t */\n\tStageGL.REGULAR_VERTEX_BODY  = (\n\t\t\"void main(void) {\" +\n\t\t\t//DHG TODO: This doesn't work. Must be something wrong with the hand built matrix see js... bypass for now\n\t\t\t//vertexPosition, round if flag\n\t\t\t//\"gl_Position = pMatrix * vec4(vertexPosition.x, vertexPosition.y, 0.0, 1.0);\" +\n\t\t\t\"gl_Position = vec4(\"+\n\t\t\t\t\"(vertexPosition.x * pMatrix[0][0]) + pMatrix[3][0],\" +\n\t\t\t\t\"(vertexPosition.y * pMatrix[1][1]) + pMatrix[3][1],\" +\n\t\t\t\t\"pMatrix[3][2],\" +\n\t\t\t\t\"1.0\" +\n\t\t\t\");\" +\n\t\t\t\"alphaValue = objectAlpha;\" +\n\t\t\t\"indexPicker = textureIndex;\" +\n\t\t\t\"vTextureCoord = uvPosition;\" +\n\t\t\"}\"\n\t);\n\n\t/**\n\t * Body of the fragment shader. The regular shader is designed to render all expected objects. Shader code may\n\t * contain templates that are replaced pre-compile.\n\t * @property REGULAR_FRAGMENT_BODY\n\t * @static\n\t * @final\n\t * @type {String}\n\t * @readonly\n\t */\n\tStageGL.REGULAR_FRAGMENT_BODY = (\n\t\t\"void main(void) {\" +\n\t\t\t\"vec4 color = vec4(1.0, 0.0, 0.0, 1.0);\" +\n\n\t\t\t\"if (indexPicker <= 0.5) {\" +\n\t\t\t\t\"color = texture2D(uSampler[0], vTextureCoord);\" +\n\t\t\t\t\"{{alternates}}\" +\n\t\t\t\"}\" +\n\n\t\t\t\"{{fragColor}}\" +\n\t\t\"}\"\n\t);\n\tStageGL.REGULAR_FRAG_COLOR_NORMAL = (\n\t\t\"gl_FragColor = vec4(color.rgb, color.a * alphaValue);\"\n\t);\n\tStageGL.REGULAR_FRAG_COLOR_PREMULTIPLY = (\n\t\t\"if(color.a > 0.0035) {\" +\t\t// 1/255 = 0.0039, so ignore any value below 1 because it's probably noise\n\t\t\t\"gl_FragColor = vec4(color.rgb/color.a, color.a * alphaValue);\" +\n\t\t\"} else {\" +\n\t\t\t\"gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\" +\n\t\t\"}\"\n\t);\n\n\t//TODO: DHG: a real particle shader\n\t/**\n\t * @property PARTICLE_VERTEX_BODY\n\t * @todo\n\t * @final\n\t * @static\n\t * @type {String}\n\t * @readonly\n\t */\n\tStageGL.PARTICLE_VERTEX_BODY = (\n\t\tStageGL.REGULAR_VERTEX_BODY\n\t);\n\t/**\n\t * @property PARTICLE_FRAGMENT_BODY\n\t * @todo\n\t * @final\n\t * @static\n\t * @type {String}\n\t * @readonly\n\t */\n\tStageGL.PARTICLE_FRAGMENT_BODY = (\n\t\tStageGL.REGULAR_FRAGMENT_BODY\n\t);\n\n\t/**\n\t * Portion of the shader that contains the \"varying\" properties required in both vertex and fragment shaders. The\n\t * cover shader is designed to be a simple vertex/uv only texture render that covers the render surface. Shader\n\t * code may contain templates that are replaced pre-compile.\n\t * @property COVER_VARYING_HEADER\n\t * @static\n\t * @final\n\t * @type {String}\n\t * @readonly\n\t */\n\tStageGL.COVER_VARYING_HEADER = (\n\t\t\"precision mediump float;\" +\n\n\t\t\"varying highp vec2 vRenderCoord;\" +\n\t\t\"varying highp vec2 vTextureCoord;\"\n\t);\n\n\t/**\n\t * Actual full header for the vertex shader. Includes the varying header. The cover shader is designed to be a\n\t * simple vertex/uv only texture render that covers the render surface. Shader code may contain templates that are\n\t * replaced pre-compile.\n\t * @property COVER_VERTEX_HEADER\n\t * @static\n\t * @final\n\t * @type {String}\n\t * @readonly\n\t */\n\tStageGL.COVER_VERTEX_HEADER = (\n\t\tStageGL.COVER_VARYING_HEADER +\n\t\t\"attribute vec2 vertexPosition;\" +\n\t\t\"attribute vec2 uvPosition;\" +\n\t\t\"uniform float uUpright;\"\n\t);\n\n\t/**\n\t * Actual full header for the fragment shader. Includes the varying header. The cover shader is designed to be a\n\t * simple vertex/uv only texture render that covers the render surface. Shader code may contain templates that are\n\t * replaced pre-compile.\n\t * @property COVER_FRAGMENT_HEADER\n\t * @static\n\t * @final\n\t * @type {String}\n\t * @readonly\n\t */\n\tStageGL.COVER_FRAGMENT_HEADER = (\n\t\tStageGL.COVER_VARYING_HEADER +\n\t\t\"uniform sampler2D uSampler;\"\n\t);\n\n\t/**\n\t * Body of the vertex shader. The cover shader is designed to be a simple vertex/uv only texture render that covers\n\t * the render surface. Shader code may contain templates that are replaced pre-compile.\n\t * @property COVER_VERTEX_BODY\n\t * @static\n\t * @final\n\t * @type {String}\n\t * @readonly\n\t */\n\tStageGL.COVER_VERTEX_BODY  = (\n\t\t\"void main(void) {\" +\n\t\t\t\"gl_Position = vec4(vertexPosition.x, vertexPosition.y, 0.0, 1.0);\" +\n\t\t\t\"vRenderCoord = uvPosition;\" +\n\t\t\t\"vTextureCoord = vec2(uvPosition.x, abs(uUpright - uvPosition.y));\" +\n\t\t\"}\"\n\t);\n\n\t/**\n\t * Body of the fragment shader. The cover shader is designed to be a simple vertex/uv only texture render that\n\t * covers the render surface. Shader code may contain templates that are replaced pre-compile.\n\t * @property COVER_FRAGMENT_BODY\n\t * @static\n\t * @final\n\t * @type {String}\n\t * @readonly\n\t */\n\tStageGL.COVER_FRAGMENT_BODY = (\n\t\t\"void main(void) {\" +\n\t\t\t\"vec4 color = texture2D(uSampler, vRenderCoord);\" +\n\t\t\t\"gl_FragColor = color;\" +\n\t\t\"}\"\n\t);\n\n// events:\n\t/**\n\t * Dispatched each update immediately before the canvas is cleared and the display list is drawn to it. You can call\n\t * {{#crossLink \"Event/preventDefault\"}}{{/crossLink}} on the event to cancel the draw.\n\t * @event drawstart\n\t */\n\n\t/**\n\t * Dispatched each update immediately after the display list is drawn to the canvas and the canvas context is restored.\n\t * @event drawend\n\t */\n\n// getter / setters:\n\tp._get_isWebGL = function () {\n\t\treturn !!this._webGLContext;\n\t};\n\n\tp._set_autoPurge = function (value) {\n\t\tvalue = isNaN(value)?1200:value;\n\t\tif (value != -1) {\n\t\t\tvalue = value<10?10:value;\n\t\t}\n\t\tthis._autoPurge = value;\n\t};\n\tp._get_autoPurge = function () {\n\t\treturn Number(this._autoPurge);\n\t};\n\n\ttry {\n\t\tObject.defineProperties(p, {\n\t\t\t/**\n\t\t\t * Indicates whether WebGL is being used for rendering. For example, this would be `false` if WebGL is not\n\t\t\t * supported in the browser.\n\t\t\t * @property isWebGL\n\t\t\t * @type {Boolean}\n\t\t\t * @readonly\n\t\t\t */\n\t\t\tisWebGL: { get: p._get_isWebGL },\n\n\t\t\t/**\n\t\t\t * Specifies whether or not StageGL is automatically purging unused textures. Higher numbers purge less\n\t\t\t * often. Values below 10 are upgraded to 10, and -1 disables this feature.\n\t\t\t * @property autoPurge\n\t\t\t * @protected\n\t\t\t * @type {Integer}\n\t\t\t * @default 1000\n\t\t\t */\n\t\t\tautoPurge: { get: p._get_autoPurge, set: p._set_autoPurge }\n\t\t});\n\t} catch (e) {} // TODO: use Log\n\n\n// constructor methods:\n\t/**\n\t * Create and properly initialize the WebGL instance.\n\t * @method _initializeWebGL\n\t * @protected\n\t * @return {WebGLRenderingContext}\n\t */\n\tp._initializeWebGL = function () {\n\t\tif (this.canvas) {\n\t\t\tif (!this._webGLContext || this._webGLContext.canvas !== this.canvas) {\n\t\t\t\t// A context hasn't been defined yet,\n\t\t\t\t// OR the defined context belongs to a different canvas, so reinitialize.\n\n\t\t\t\t// defaults and options\n\t\t\t\tvar options = {\n\t\t\t\t\tdepth: false, // Disable the depth buffer as it isn't used.\n\t\t\t\t\talpha: this._transparent, // Make the canvas background transparent.\n\t\t\t\t\tstencil: true,\n\t\t\t\t\tantialias: this._antialias,\n\t\t\t\t\tpremultipliedAlpha: this._premultiply, // Assume the drawing buffer contains colors with premultiplied alpha.\n\t\t\t\t\tpreserveDrawingBuffer: this._preserveBuffer\n\t\t\t\t};\n\n\t\t\t\tvar gl = this._webGLContext = this._fetchWebGLContext(this.canvas, options);\n\t\t\t\tif (!gl) { return null; }\n\n\t\t\t\tthis.updateSimultaneousTextureCount(gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS));\n\t\t\t\tthis._maxTextureSlots = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n\t\t\t\tthis._createBuffers(gl);\n\t\t\t\tthis._initTextures(gl);\n\n\t\t\t\tgl.disable(gl.DEPTH_TEST);\n\t\t\t\tgl.enable(gl.BLEND);\n\t\t\t\tgl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\t\t\t\tgl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this._premultiply);\n\t\t\t\t//gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, gl.NONE);\n\n\t\t\t\tthis._webGLContext.clearColor(this._clearColor.r, this._clearColor.g, this._clearColor.b, this._clearColor.a);\n\t\t\t\tthis.updateViewport(this._viewportWidth || this.canvas.width, this._viewportHeight || this.canvas.height);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._webGLContext = null;\n\t\t}\n\t\treturn this._webGLContext;\n\t};\n\n// public methods:\n\t/**\n\t * Docced in superclass\n\t */\n\tp.update = function (props) {\n\t\tif (!this.canvas) { return; }\n\t\tif (this.tickOnUpdate) { this.tick(props); }\n\t\tthis.dispatchEvent(\"drawstart\");\n\t\tif (this.autoClear) { this.clear(); }\n\n\t\tif (this._webGLContext) {\n\t\t\t// Use WebGL.\n\t\t\tthis._batchDraw(this, this._webGLContext);\n\t\t\tif (this._autoPurge != -1 && !(this._drawID%((this._autoPurge/2)|0))) {\n\t\t\t\tthis.purgeTextures(this._autoPurge);\n\t\t\t}\n\t\t} else {\n\t\t\t// Use 2D.\n\t\t\tvar ctx = this.canvas.getContext(\"2d\");\n\t\t\tctx.save();\n\t\t\tthis.updateContext(ctx);\n\t\t\tthis.draw(ctx, false);\n\t\t\tctx.restore();\n\t\t}\n\t\tthis.dispatchEvent(\"drawend\");\n\t};\n\n\t/**\n\t * Docced in superclass\n\t */\n\tp.clear = function () {\n\t\tif (!this.canvas) { return; }\n\t\tif (StageGL.isWebGLActive(this._webGLContext)) {\n\t\t\tvar gl = this._webGLContext;\n\t\t\tvar cc = this._clearColor;\n\t\t\tvar adjust = this._transparent ? cc.a : 1.0;\n\t\t\t// Use WebGL settings; adjust for pre multiplied alpha appropriate to scenario\n\t\t\tthis._webGLContext.clearColor(cc.r * adjust, cc.g * adjust, cc.b * adjust, adjust);\n\t\t\tgl.clear(gl.COLOR_BUFFER_BIT);\n\t\t\tthis._webGLContext.clearColor(cc.r, cc.g, cc.b, cc.a);\n\t\t} else {\n\t\t\t// Use 2D.\n\t\t\tthis.Stage_clear();\n\t\t}\n\t};\n\n\t/**\n\t * Draws the stage into the supplied context if possible. Many WebGL properties only exist on their context. As such\n\t * you cannot share contexts among many StageGLs and each context requires a unique StageGL instance. Contexts that\n\t * don't match the context managed by this StageGL will be treated as a 2D context.\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D | WebGLRenderingContext} context The context object to draw into.\n\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache. For\n\t *  example, used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\n\t * @return {Boolean} If the draw was handled by this function\n\t */\n\tp.draw = function (context, ignoreCache) {\n\t\tif (context === this._webGLContext && StageGL.isWebGLActive(this._webGLContext)) {\n\t\t\tvar gl = this._webGLContext;\n\t\t\tthis._batchDraw(this, gl, ignoreCache);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn this.Stage_draw(context, ignoreCache);\n\t\t}\n\t};\n\n\t/**\n\t * Draws the target into the correct context, be it a canvas or Render Texture using WebGL.\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method cacheDraw\n\t * @param {DisplayObject} target The object we're drawing into cache.\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\n\t * @param {Array} filters The filters we're drawing into cache.\n\t * @param {BitmapCache} manager The BitmapCache instance looking after the cache\n\t * @return {Boolean} If the draw was handled by this function\n\t */\n\tp.cacheDraw = function (target, filters, manager) {\n\t\tif (StageGL.isWebGLActive(this._webGLContext)) {\n\t\t\tvar gl = this._webGLContext;\n\t\t\tthis._cacheDraw(gl, target, filters, manager);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\t/**\n\t * Blocks, or frees a texture \"slot\" on the GPU. Can be useful if you are overflowing textures. When overflowing\n\t * textures they are re-uploaded to the GPU every time they're encountered, this can be expensive with large textures.\n\t * By blocking the slot you reduce available slots, potentially increasing draw calls, but mostly you prevent a\n\t * texture being re-uploaded if it would have moved slots due to overflow.\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * For example, block the slot a background image is stored in so there is less re-loading of that image.\n\t * @method protectTextureSlot\n\t * @param  {Number} id The slot to be affected\n\t * @param  {Boolean} [lock=false] Whether this slot is the one being locked.\n\t */\n\tp.protectTextureSlot = function (id, lock) {\n\t\tif (id > this._maxTextureSlots || id < 0) {\n\t\t\tthrow \"Slot outside of acceptable range\";\n\t\t}\n\t\tthis._slotBlacklist[id] = !!lock;\n\t};\n\n\t/**\n\t * Render textures can't draw into themselves so any item being used for renderTextures needs two to alternate between.\n\t * This function creates, gets, and toggles the render surface between the two.\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method getTargetRenderTexture\n\t * @param  {DisplayObject} target The object associated with the render textures, usually a cached object.\n\t * @param  {Number} w The width to create the texture at.\n\t * @param  {Number} h The height to create the texture at.\n\t * @return {Objet}\n\t * @todo fill in return type\n\t */\n\tp.getTargetRenderTexture = function (target, w, h) {\n\t\tvar result, toggle = false;\n\t\tvar gl = this._webGLContext;\n\t\tif (target.__lastRT !== undefined && target.__lastRT === target.__rtA) { toggle = true; }\n\t\tif (!toggle) {\n\t\t\tif (target.__rtA === undefined) {\n\t\t\t\ttarget.__rtA = this.getRenderBufferTexture(w, h);\n\t\t\t} else {\n\t\t\t\tif (w != target.__rtA._width || h != target.__rtA._height) {\n\t\t\t\t\tthis.resizeTexture(target.__rtA, w, h);\n\t\t\t\t}\n\t\t\t\tthis.setTextureParams(gl);\n\t\t\t}\n\t\t\tresult = target.__rtA;\n\t\t} else {\n\t\t\tif (target.__rtB === undefined) {\n\t\t\t\ttarget.__rtB = this.getRenderBufferTexture(w, h);\n\t\t\t} else {\n\t\t\t\tif (w != target.__rtB._width || h != target.__rtB._height) {\n\t\t\t\t\tthis.resizeTexture(target.__rtB, w, h);\n\t\t\t\t}\n\t\t\t\tthis.setTextureParams(gl);\n\t\t\t}\n\t\t\tresult = target.__rtB;\n\t\t}\n\t\tif (!result) {\n\t\t\tthrow \"Problems creating render textures, known causes include using too much VRAM by not releasing WebGL texture instances\";\n\t\t}\n\t\ttarget.__lastRT = result;\n\t\treturn result;\n\t};\n\n\t/**\n\t * For every image encountered StageGL registers and tracks it automatically. This tracking can cause memory leaks \n\t * if not purged. StageGL, by default, automatically purges them. This does have a cost and may unfortunately find\n\t * false positives. This function is for manual management of this memory instead of the automatic system controlled\n\t * by the {{#crossLink \"StageGL/autoPurge:property\"}}{{/crossLink}} property.\n\t *\n\t * This function will recursively remove all textures found on the object, its children, cache, etc. It will uncache \n\t * objects and remove any texture it finds REGARDLESS of whether it is currently in use elsewhere. It is up to the\n\t * developer to ensure that a texture in use is not removed.\n\t *\n\t * Textures in use, or to be used again shortly, should not be removed. This is simply for performance reasons.\n\t * Removing a texture in use will cause the texture to have to be re-uploaded slowing rendering.\n\t * @method releaseTexture\n\t * @param  {DisplayObject | Texture | Image | Canvas} item An object that used the texture to be discarded.\n\t */\n\tp.releaseTexture = function (item) {\n\t\tvar i, l;\n\t\tif (!item) { return; }\n\n\t\t// this is a container object\n\t\tif (item.children) {\n\t\t\tfor (i = 0, l = item.children.length; i < l; i++) {\n\t\t\t\tthis.releaseTexture(item.children[i]);\n\t\t\t}\n\t\t}\n\n\t\t// this has a cache canvas\n\t\tif (item.cacheCanvas) {\n\t\t\titem.uncache();\n\t\t}\n\n\t\tvar foundImage = undefined;\n\t\tif (item._storeID !== undefined) {\n\t\t\t// this is a texture itself\n\t\t\tif (item === this._textureDictionary[item._storeID]) {\n\t\t\t\tthis._killTextureObject(item);\n\t\t\t\titem._storeID = undefined;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// this is an image or canvas\n\t\t\tfoundImage = item;\n\t\t} else if (item._webGLRenderStyle === 2) {\n\t\t\t// this is a Bitmap class\n\t\t\tfoundImage = item.image;\n\t\t} else if (item._webGLRenderStyle === 1) {\n\t\t\t// this is a SpriteSheet, we can't tell which image we used from the list easily so remove them all!\n\t\t\tfor (i = 0, l = item.spriteSheet._images.length; i < l; i++) {\n\t\t\t\tthis.releaseTexture(item.spriteSheet._images[i]);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// did we find anything\n\t\tif (foundImage === undefined) {\n\t\t\tif (this.vocalDebug) {\n\t\t\t\tconsole.log(\"No associated texture found on release\");\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// remove it\n\t\tthis._killTextureObject(this._textureDictionary[foundImage._storeID]);\n\t\tfoundImage._storeID = undefined;\n\t};\n\n\t/**\n\t * Similar to {{#crossLink \"releaseTexture\"}}{{/crossLink}}, but this function differs by searching for textures to\n\t * release. It works by assuming that it can purge any texture which was last used more than \"count\" draw calls ago.\n\t * Because this process is unaware of the objects and whether they may be used on your stage, false positives can\n\t * occur. It is recommended to manually manage your memory with {{#crossLink \"StageGL/releaseTexture\"}}{{/crossLink}},\n\t * however, there are many use cases where this is simpler and error-free. This process is also run by default under\n\t * the hood to prevent leaks. To disable it see the {{#crossLink \"StageGL/autoPurge:property\"}}{{/crossLink}} property.\n\t * @method purgeTextures\n\t * @param {Number} [count=100] How many renders ago the texture was last used\n\t */\n\tp.purgeTextures = function (count) {\n\t\tif (count == undefined){ count = 100; }\n\n\t\tvar dict = this._textureDictionary;\n\t\tvar l = dict.length;\n\t\tfor (var i= 0; i<l; i++) {\n\t\t\tvar item = dict[i];\n\t\t\tif (!item) { continue; }\n\t\t\tif (item._drawID + count <= this._drawID) {\t// use draw not batch as draw is more indicative of time\n\t\t\t\tthis._killTextureObject(item);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Try to set the max textures the system can handle. It should default to the hardware maximum, and lower values\n\t * may limit performance. Some devices have been known to mis-report their max textures, or you may need a standard\n\t * baseline cross devices for testing. Barring the previous suggestions, there is little need to call this function\n\t * as the library will automatically try to find the best value.\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method updateSimultaneousTextureCount\n\t * @param {Number} [count=1] The number of textures intended for simultaneous loading.\n\t */\n\tp.updateSimultaneousTextureCount = function (count) {\n\t\t// TODO: DHG: make sure API works in all instances, may be some issues with buffers etc I haven't foreseen\n\t\tvar gl = this._webGLContext;\n\t\tvar success = false;\n\n\t\tif (count < 1 || isNaN(count)) { count = 1; }\n\t\tthis._batchTextureCount = count;\n\n\t\twhile (!success) {\n\t\t\ttry {\n\t\t\t\tthis._activeShader = this._fetchShaderProgram(gl);\n\t\t\t\tsuccess = true;\n\t\t\t} catch(e) {\n\t\t\t\tif (this._batchTextureCount == 1) {\n\t\t\t\t\tthrow \"Cannot compile shader \" + e;\n\t\t\t\t}\n\n\t\t\t\tthis._batchTextureCount -= 4;\n\t\t\t\tif (this._batchTextureCount < 1) { this._batchTextureCount = 1; }\n\n\t\t\t\tif (this.vocalDebug) {\n\t\t\t\t\tconsole.log(\"Reducing desired texture count due to errors: \" + this._batchTextureCount);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Update the WebGL viewport. Note that this does <strong>not</strong> update the canvas element's width/height, but\n\t * the render surface's instead. This is necessary after manually resizing the canvas element on the DOM to avoid a\n\t * up/down scaled render.\n\t * @method updateViewport\n\t * @param {Integer} width The width of the render surface in pixels.\n\t * @param {Integer} height The height of the render surface in pixels.\n\t */\n\tp.updateViewport = function (width, height) {\n\t\tthis._viewportWidth = width|0;\n\t\tthis._viewportHeight = height|0;\n\t\tvar gl = this._webGLContext;\n\n\t\tif (gl) {\n\t\t\tgl.viewport(0, 0, this._viewportWidth, this._viewportHeight);\n\n\t\t\t// WebGL works with a -1,1 space on its screen. It also follows Y-Up\n\t\t\t// we need to flip the y, scale and then translate the co-ordinates to match this\n\t\t\t// additionally we offset into they Y so the polygons are inside the camera's \"clipping\" plane\n\t\t\tthis._projectionMatrix = new Float32Array([\n\t\t\t\t2 / this._viewportWidth,\t0,\t\t\t\t\t\t\t\t0,\t\t\t\t\t\t\t0,\n\t\t\t\t0,\t\t\t\t\t\t\t-2 / this._viewportHeight,\t\t1,\t\t\t\t\t\t\t0,\n\t\t\t\t0,\t\t\t\t\t\t\t0,\t\t\t\t\t\t\t\t1,\t\t\t\t\t\t\t0,\n\t\t\t\t-1,\t\t\t\t\t\t\t1,\t\t\t\t\t\t\t\t0.1,\t\t\t\t\t\t0\n\t\t\t]);\n\t\t\t// create the flipped version for use with render texture flipping\n\t\t\t// DHG: this would be a slice/clone but some platforms don't offer them for Float32Array\n\t\t\tthis._projectionMatrixFlip = new Float32Array([0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0]);\n\t\t\tthis._projectionMatrixFlip.set(this._projectionMatrix);\n\t\t\tthis._projectionMatrixFlip[5] *= -1;\n\t\t\tthis._projectionMatrixFlip[13] *= -1;\n\t\t}\n\t};\n\n\t/**\n\t * Fetches the shader compiled and set up to work with the provided filter/object. The shader is compiled on first\n\t * use and returned on subsequent calls.\n\t * @method getFilterShader\n\t * @param  {Filter|Object} filter The object which will provide the information needed to construct the filter shader.\n\t * @return {WebGLProgram}\n\t */\n\tp.getFilterShader = function (filter) {\n\t\tif (!filter) { filter = this; }\n\n\t\tvar gl = this._webGLContext;\n\t\tvar targetShader = this._activeShader;\n\n\t\tif (filter._builtShader) {\n\t\t\ttargetShader = filter._builtShader;\n\t\t\tif (filter.shaderParamSetup) {\n\t\t\t\tgl.useProgram(targetShader);\n\t\t\t\tfilter.shaderParamSetup(gl, this, targetShader);\n\t\t\t}\n\t\t} else {\n\t\t\ttry {\n\t\t\t\ttargetShader = this._fetchShaderProgram(\n\t\t\t\t\tgl, \"filter\",\n\t\t\t\t\tfilter.VTX_SHADER_BODY, filter.FRAG_SHADER_BODY,\n\t\t\t\t\tfilter.shaderParamSetup && filter.shaderParamSetup.bind(filter)\n\t\t\t\t);\n\t\t\t\tfilter._builtShader = targetShader;\n\t\t\t\ttargetShader._name = filter.toString();\n\t\t\t} catch (e) {\n\t\t\t\tconsole && console.log(\"SHADER SWITCH FAILURE\", e);\n\t\t\t}\n\t\t}\n\t\treturn targetShader;\n\t};\n\n\t/**\n\t * Returns a base texture that has no image or data loaded. Not intended for loading images. It may return `null`\n\t * in some error cases, and trying to use a \"null\" texture can cause renders to fail.\n\t * @method getBaseTexture\n\t * @param  {uint} [w=1] The width of the texture in pixels, defaults to 1\n\t * @param  {uint} [h=1] The height of the texture in pixels, defaults to 1\n\t */\n\tp.getBaseTexture = function (w, h) {\n\t\tvar width = Math.ceil(w > 0 ? w : 1) || 1;\n\t\tvar height = Math.ceil(h > 0 ? h : 1) || 1;\n\n\t\tvar gl = this._webGLContext;\n\t\tvar texture = gl.createTexture();\n\t\tthis.resizeTexture(texture, width, height);\n\t\tthis.setTextureParams(gl, false);\n\n\t\treturn texture;\n\t};\n\n\t/**\n\t * Resizes a supplied texture element. May generate invalid textures in some error cases such as; when the texture\n\t * is too large, when an out of texture memory error occurs, or other error scenarios. Trying to use an invalid texture\n\t * can cause renders to hard stop on some devices. Check the WebGL bound texture after running this function.\n\t *\n\t * NOTE: The supplied texture must have been made with the WebGL \"texImage2D\" function, all default APIs in StageGL\n\t * use this, so this note only matters for library developers and plugins.\n\t *\n\t * @protected\n\t * @method resizeTexture\n\t * @param  {WebGLTexture} texture The GL Texture to be modified.\n\t * @param  {uint} [width=1] The width of the texture in pixels, defaults to 1\n\t * @param  {uint} [height=1] The height of the texture in pixels, defaults to 1\n\t */\n\tp.resizeTexture = function (texture, width,height) {\n\t\tvar gl = this._webGLContext;\n\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\tgl.texImage2D(\n\t\t\tgl.TEXTURE_2D,\t\t\t\t// target\n\t\t\t0,\t\t\t\t\t\t\t// level of detail\n\t\t\tgl.RGBA,\t\t\t\t\t// internal format\n\t\t\twidth, height, 0,\t\t\t// width, height, border (only for array/null sourced textures)\n\t\t\tgl.RGBA,\t\t\t\t\t// format (match internal format)\n\t\t\tgl.UNSIGNED_BYTE,\t\t\t// type of texture(pixel color depth)\n\t\t\tnull\t\t\t\t\t\t// image data, we can do null because we're doing array data\n\t\t);\n\t\ttexture.width = width;\n\t\ttexture.height = height;\n\t};\n\n\t/**\n\t * Returns a base texture (see {{#crossLink \"StageGL/getBaseTexture\"}}{{/crossLink}}) for details. Also includes an\n\t * attached and linked render buffer in `texture._frameBuffer`. RenderTextures can be thought of as an internal\n\t * canvas on the GPU that can be drawn to.\n\t * @method getRenderBufferTexture\n\t * @param  {Number} w The width of the texture in pixels.\n\t * @param  {Number} h The height of the texture in pixels.\n\t * @return {Texture} the basic texture instance with a render buffer property.\n\t */\n\tp.getRenderBufferTexture = function (w, h) {\n\t\tvar gl = this._webGLContext;\n\n\t\t// get the texture\n\t\tvar renderTexture = this.getBaseTexture(w, h);\n\t\tif (!renderTexture) { return null; }\n\n\t\t// get the frame buffer\n\t\tvar frameBuffer = gl.createFramebuffer();\n\t\tif (!frameBuffer) { return null; }\n\n\t\t// set its width and height for spoofing as an image\n\t\trenderTexture.width = w;\n\t\trenderTexture.height = h;\n\n\t\t// attach frame buffer to texture and provide cross links to look up each other\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, renderTexture, 0);\n\t\tframeBuffer._renderTexture = renderTexture;\n\t\trenderTexture._frameBuffer = frameBuffer;\n\n\t\t// these keep track of themselves simply to reduce complexity of some lookup code\n\t\trenderTexture._storeID = this._textureDictionary.length;\n\t\tthis._textureDictionary[renderTexture._storeID] = renderTexture;\n\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\treturn renderTexture;\n\t};\n\n\t/**\n\t * Common utility function used to apply the correct texture processing parameters for the bound texture.\n\t * @method setTextureParams\n\t * @param  {WebGLRenderingContext} gl The canvas WebGL context object to draw into.\n\t * @param  {Boolean} [isPOT=false] Marks whether the texture is \"Power of Two\", this may allow better quality AA.\n\t */\n\tp.setTextureParams = function (gl, isPOT) {\n\t\tif (isPOT && this._antialias) {\n\t\t\t//non POT linear works in some devices, but performance is NOT good, investigate\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\t\t} else {\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t}\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t};\n\n\t/**\n\t * Changes the webGL clear, aka \"background\" color to the provided value. A transparent clear is recommended, as\n\t * non-transparent colours may create undesired boxes around some visuals.\n\t *\n\t * The clear color will also be used for filters and other \"render textures\". The stage background will ignore the\n\t * transparency value and display a solid color normally. For the stage to recognize and use transparency it must be\n\t * created with the transparent flag set to `true` (see {{#crossLink \"StageGL/constructor\"}}{{/crossLink}})).\n\t *\n\t * Using \"transparent white\" to demonstrate, the valid data formats are as follows:\n\t * <ul>\n\t *     <li>\"#FFF\"</li>\n\t *     <li>\"#FFFFFF\"</li>\n\t *     <li>\"#FFFFFF00\"</li>\n\t *     <li>\"rgba(255,255,255,0.0)\"</li>\n\t * </ul>\n\t * @method setClearColor\n\t * @param {String|int} [color=0x00000000] The new color to use as the background\n\t */\n\tp.setClearColor = function (color) {\n\t\tvar r, g, b, a, output;\n\n\t\tif (typeof color == \"string\") {\n\t\t\tif (color.indexOf(\"#\") == 0) {\n\t\t\t\tif (color.length == 4) {\n\t\t\t\t\tcolor = \"#\" + color.charAt(1)+color.charAt(1) + color.charAt(2)+color.charAt(2) + color.charAt(3)+color.charAt(3)\n\t\t\t\t}\n\t\t\t\tr = Number(\"0x\"+color.slice(1, 3))/255;\n\t\t\t\tg = Number(\"0x\"+color.slice(3, 5))/255;\n\t\t\t\tb = Number(\"0x\"+color.slice(5, 7))/255;\n\t\t\t\ta = Number(\"0x\"+color.slice(7, 9))/255;\n\t\t\t} else if (color.indexOf(\"rgba(\") == 0) {\n\t\t\t\toutput = color.slice(5, -1).split(\",\");\n\t\t\t\tr = Number(output[0])/255;\n\t\t\t\tg = Number(output[1])/255;\n\t\t\t\tb = Number(output[2])/255;\n\t\t\t\ta = Number(output[3]);\n\t\t\t}\n\t\t} else {\t// >>> is an unsigned shift which is what we want as 0x80000000 and up are negative values\n\t\t\tr = ((color & 0xFF000000) >>> 24)/255;\n\t\t\tg = ((color & 0x00FF0000) >>> 16)/255;\n\t\t\tb = ((color & 0x0000FF00) >>> 8)/255;\n\t\t\ta = (color & 0x000000FF)/255;\n\t\t}\n\n\t\tthis._clearColor.r = r || 0;\n\t\tthis._clearColor.g = g || 0;\n\t\tthis._clearColor.b = b || 0;\n\t\tthis._clearColor.a = a || 0;\n\n\t\tif (!this._webGLContext) { return; }\n\t\tthis._webGLContext.clearColor(this._clearColor.r, this._clearColor.g, this._clearColor.b, this._clearColor.a);\n\t};\n\n\t/**\n\t * docced in subclass\n\t */\n\tp.toString = function () {\n\t\treturn \"[StageGL (name=\"+  this.name +\")]\";\n\t};\n\n// private methods:\n\t/**\n\t * Sets up and returns the WebGL context for the canvas. May return undefined in error scenarios. These can include \n\t * situations where the canvas element already has a context, 2D or GL.\n\t * @param  {Canvas} canvas The DOM canvas element to attach to\n\t * @param  {Object} options The options to be handed into the WebGL object, see WebGL spec\n\t * @method _fetchWebGLContext\n\t * @protected\n\t * @return {WebGLRenderingContext} The WebGL context, may return undefined in error scenarios\n\t */\n\tp._fetchWebGLContext = function (canvas, options) {\n\t\tvar gl;\n\n\t\ttry {\n\t\t\tgl = canvas.getContext(\"webgl\", options) || canvas.getContext(\"experimental-webgl\", options);\n\t\t} catch (e) {\n\t\t\t// don't do anything in catch, null check will handle it\n\t\t}\n\n\t\tif (!gl) {\n\t\t\tvar msg = \"Could not initialize WebGL\";\n\t\t\tconsole.error?console.error(msg):console.log(msg);\n\t\t} else {\n\t\t\tgl.viewportWidth = canvas.width;\n\t\t\tgl.viewportHeight = canvas.height;\n\t\t}\n\n\t\treturn gl;\n\t};\n\n\t/**\n\t * Create the completed Shader Program from the vertex and fragment shaders. Allows building of custom shaders for\n\t * filters. Once compiled, shaders are saved so. If the Shader code requires dynamic alterations re-run this function\n\t * to generate a new shader.\n\t * @method _fetchShaderProgram\n\t * @param  {WebGLRenderingContext} gl The canvas WebGL context object to draw into.\n\t * @param  {String} [shaderName=\"regular\"] Working values: \"regular\", \"override\", and \"filter\". Which type of shader to build.\n\t * Filter and override both accept the custom params. Regular and override have all features. Filter is a special case reduced feature shader meant to be over-ridden.\n\t * @param  {String} [customVTX] Extra vertex shader information to replace a regular draw, see \n\t * {{#crossLink \"StageGL/COVER_VERTEX_BODY\"}}{{/crossLink}} for default and {{#crossLink \"Filter\"}}{{/crossLink}} for examples.\n\t * @param  {String} [customFRAG] Extra fragment shader information to replace a regular draw, see \n\t * {{#crossLink \"StageGL/COVER_FRAGMENT_BODY\"}}{{/crossLink}} for default and {{#crossLink \"Filter\"}}{{/crossLink}} for examples.\n\t * @param  {Function} [shaderParamSetup] Function to run so custom shader parameters can get applied for the render.\n\t * @protected\n\t * @return {WebGLProgram} The compiled and linked shader\n\t */\n\tp._fetchShaderProgram = function (gl, shaderName, customVTX, customFRAG, shaderParamSetup) {\n\t\tgl.useProgram(null);\t\t// safety to avoid collisions\n\n\t\t// build the correct shader string out of the right headers and bodies\n\t\tvar targetFrag, targetVtx;\n\t\tswitch (shaderName) {\n\t\t\tcase \"filter\":\n\t\t\t\ttargetVtx = StageGL.COVER_VERTEX_HEADER + (customVTX || StageGL.COVER_VERTEX_BODY);\n\t\t\t\ttargetFrag = StageGL.COVER_FRAGMENT_HEADER + (customFRAG || StageGL.COVER_FRAGMENT_BODY);\n\t\t\t\tbreak;\n\t\t\tcase \"particle\": //TODO\n\t\t\t\ttargetVtx = StageGL.REGULAR_VERTEX_HEADER + StageGL.PARTICLE_VERTEX_BODY;\n\t\t\t\ttargetFrag = StageGL.REGULAR_FRAGMENT_HEADER + StageGL.PARTICLE_FRAGMENT_BODY;\n\t\t\t\tbreak;\n\t\t\tcase \"override\":\n\t\t\t\ttargetVtx = StageGL.REGULAR_VERTEX_HEADER + (customVTX || StageGL.REGULAR_VERTEX_BODY);\n\t\t\t\ttargetFrag = StageGL.REGULAR_FRAGMENT_HEADER + (customFRAG || StageGL.REGULAR_FRAGMENT_BODY);\n\t\t\t\tbreak;\n\t\t\tcase \"regular\":\n\t\t\tdefault:\n\t\t\t\ttargetVtx = StageGL.REGULAR_VERTEX_HEADER + StageGL.REGULAR_VERTEX_BODY;\n\t\t\t\ttargetFrag = StageGL.REGULAR_FRAGMENT_HEADER + StageGL.REGULAR_FRAGMENT_BODY;\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// create the separate vars\n\t\tvar vertexShader = this._createShader(gl, gl.VERTEX_SHADER, targetVtx);\n\t\tvar fragmentShader = this._createShader(gl, gl.FRAGMENT_SHADER, targetFrag);\n\n\t\t// link them together\n\t\tvar shaderProgram = gl.createProgram();\n\t\tgl.attachShader(shaderProgram, vertexShader);\n\t\tgl.attachShader(shaderProgram, fragmentShader);\n\t\tgl.linkProgram(shaderProgram);\n\t\tshaderProgram._type = shaderName;\n\n\t\t// check compile status\n\t\tif (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n\t\t\tgl.useProgram(this._activeShader);\n\t\t\tthrow gl.getProgramInfoLog(shaderProgram);\n\t\t}\n\n\t\t// set up the parameters on the shader\n\t\tgl.useProgram(shaderProgram);\n\t\tswitch (shaderName) {\n\t\t\tcase \"filter\":\n\t\t\t\t// get the places in memory the shader is stored so we can feed information into them\n\t\t\t\t// then save it off on the shader because it's so tied to the shader itself\n\t\t\t\tshaderProgram.vertexPositionAttribute = gl.getAttribLocation(shaderProgram, \"vertexPosition\");\n\t\t\t\tgl.enableVertexAttribArray(shaderProgram.vertexPositionAttribute);\n\n\t\t\t\tshaderProgram.uvPositionAttribute = gl.getAttribLocation(shaderProgram, \"uvPosition\");\n\t\t\t\tgl.enableVertexAttribArray(shaderProgram.uvPositionAttribute);\n\n\t\t\t\tshaderProgram.samplerUniform = gl.getUniformLocation(shaderProgram, \"uSampler\");\n\t\t\t\tgl.uniform1i(shaderProgram.samplerUniform, 0);\n\n\t\t\t\tshaderProgram.uprightUniform = gl.getUniformLocation(shaderProgram, \"uUpright\");\n\t\t\t\tgl.uniform1f(shaderProgram.uprightUniform, 0);\n\n\t\t\t\t// if there's some custom attributes be sure to hook them up\n\t\t\t\tif (shaderParamSetup) {\n\t\t\t\t\tshaderParamSetup(gl, this, shaderProgram);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"override\":\n\t\t\tcase \"particle\":\n\t\t\tcase \"regular\":\n\t\t\tdefault:\n\t\t\t\t// get the places in memory the shader is stored so we can feed information into them\n\t\t\t\t// then save it off on the shader because it's so tied to the shader itself\n\t\t\t\tshaderProgram.vertexPositionAttribute = gl.getAttribLocation(shaderProgram, \"vertexPosition\");\n\t\t\t\tgl.enableVertexAttribArray(shaderProgram.vertexPositionAttribute);\n\n\t\t\t\tshaderProgram.uvPositionAttribute = gl.getAttribLocation(shaderProgram, \"uvPosition\");\n\t\t\t\tgl.enableVertexAttribArray(shaderProgram.uvPositionAttribute);\n\n\t\t\t\tshaderProgram.textureIndexAttribute = gl.getAttribLocation(shaderProgram, \"textureIndex\");\n\t\t\t\tgl.enableVertexAttribArray(shaderProgram.textureIndexAttribute);\n\n\t\t\t\tshaderProgram.alphaAttribute = gl.getAttribLocation(shaderProgram, \"objectAlpha\");\n\t\t\t\tgl.enableVertexAttribArray(shaderProgram.alphaAttribute);\n\n\t\t\t\tvar samplers = [];\n\t\t\t\tfor (var i = 0; i < this._batchTextureCount; i++) {\n\t\t\t\t\tsamplers[i] = i;\n\t\t\t\t}\n\n\t\t\t\tshaderProgram.samplerData = samplers;\n\t\t\t\tshaderProgram.samplerUniform = gl.getUniformLocation(shaderProgram, \"uSampler\");\n\t\t\t\tgl.uniform1iv(shaderProgram.samplerUniform, samplers);\n\n\t\t\t\tshaderProgram.pMatrixUniform = gl.getUniformLocation(shaderProgram, \"pMatrix\");\n\t\t\t\tbreak;\n\t\t}\n\n\t\tgl.useProgram(this._activeShader);\n\t\treturn shaderProgram;\n\t};\n\n\t/**\n\t * Creates a shader from the specified string replacing templates. Template items are defined via `{{` `key` `}}``.\n\t * @method _createShader\n\t * @param  {WebGLRenderingContext} gl The canvas WebGL context object to draw into.\n\t * @param  {Number} type The type of shader to create. gl.VERTEX_SHADER | gl.FRAGMENT_SHADER\n\t * @param  {String} str The definition for the shader.\n\t * @return {WebGLShader}\n\t * @protected\n\t */\n\tp._createShader = function (gl, type, str) {\n\t\t// inject the static number\n\t\tstr = str.replace(/{{count}}/g, this._batchTextureCount);\n\n\t\t// resolve issue with no dynamic samplers by creating correct samplers in if else chain\n\t\t// TODO: WebGL 2.0 does not need this support\n\t\tvar insert = \"\";\n\t\tfor (var i = 1; i<this._batchTextureCount; i++) {\n\t\t\tinsert += \"} else if (indexPicker <= \"+ i +\".5) { color = texture2D(uSampler[\"+ i +\"], vTextureCoord);\";\n\t\t}\n\t\tstr = str.replace(/{{alternates}}/g, insert);\n\t\tstr = str.replace(/{{fragColor}}/g, this._premultiply ? StageGL.REGULAR_FRAG_COLOR_PREMULTIPLY : StageGL.REGULAR_FRAG_COLOR_NORMAL);\n\n\t\t// actually compile the shader\n\t\tvar shader = gl.createShader(type);\n\t\tgl.shaderSource(shader, str);\n\t\tgl.compileShader(shader);\n\n\t\t// check compile status\n\t\tif (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n\t\t\tthrow gl.getShaderInfoLog(shader);\n\t\t}\n\n\t\treturn shader;\n\t};\n\n\t/**\n\t * Sets up the necessary vertex property buffers, including position and U/V.\n\t * @method _createBuffers\n\t * @param {WebGLRenderingContext} gl\n\t * @protected\n\t */\n\tp._createBuffers = function (gl) {\n\t\tvar groupCount = this._maxCardsPerBatch * StageGL.INDICIES_PER_CARD;\n\t\tvar groupSize, i, l;\n\n\t\t// INFO:\n\t\t// all buffers are created using this pattern\n\t\t// create a WebGL buffer\n\t\t// attach it to context\n\t\t// figure out how many parts it has to an entry\n\t\t// fill it with empty data to reserve the memory\n\t\t// attach the empty data to the GPU\n\t\t// track the sizes on the buffer object\n\n\t\t// INFO:\n\t\t// a single buffer may be optimal in some situations and would be approached like this,\n\t\t// currently not implemented due to lack of need and potential complications with drawCover\n\n\t\t// var vertexBuffer = this._vertexBuffer = gl.createBuffer();\n\t\t// gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n\t\t// groupSize = 2 + 2 + 1 + 1; //x/y, u/v, index, alpha\n\t\t// var vertexData = this._vertexData = new Float32Array(groupCount * groupSize);\n\t\t// for (i=0; i<vertexData.length; i+=groupSize) {\n\t\t// \tvertexData[i+0] = vertexData[i+1] = 0;\n\t\t// \tvertexData[i+2] = vertexData[i+3] = 0.5;\n\t\t// \tvertexData[i+4] = 0;\n\t\t// \tvertexData[i+5] = 1;\n\t\t// }\n\t\t// vertexBuffer.itemSize = groupSize;\n\t\t// vertexBuffer.numItems = groupCount;\n\t\t// TODO bechmark and test using unified buffer\n\n\t\t// the actual position information\n\t\tvar vertexPositionBuffer = this._vertexPositionBuffer = gl.createBuffer();\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, vertexPositionBuffer);\n\t\tgroupSize = 2;\n\t\tvar vertices = this._vertices = new Float32Array(groupCount * groupSize);\n\t\tfor (i=0, l=vertices.length; i<l; i+=groupSize) { vertices[i] = vertices[i+1] = 0; }\n\t\tgl.bufferData(gl.ARRAY_BUFFER, vertices, gl.DYNAMIC_DRAW);\n\t\tvertexPositionBuffer.itemSize = groupSize;\n\t\tvertexPositionBuffer.numItems = groupCount;\n\n\t\t// where on the texture it gets its information\n\t\tvar uvPositionBuffer = this._uvPositionBuffer = gl.createBuffer();\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, uvPositionBuffer);\n\t\tgroupSize = 2;\n\t\tvar uvs = this._uvs = new Float32Array(groupCount * groupSize);\n\t\tfor (i=0, l=uvs.length; i<l; i+=groupSize) { uvs[i] = uvs[i+1] = 0; }\n\t\tgl.bufferData(gl.ARRAY_BUFFER, uvs, gl.DYNAMIC_DRAW);\n\t\tuvPositionBuffer.itemSize = groupSize;\n\t\tuvPositionBuffer.numItems = groupCount;\n\n\t\t// what texture it should use\n\t\tvar textureIndexBuffer = this._textureIndexBuffer = gl.createBuffer();\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, textureIndexBuffer);\n\t\tgroupSize = 1;\n\t\tvar indices = this._indices = new Float32Array(groupCount * groupSize);\n\t\tfor (i=0, l=indices.length; i<l; i++) { indices[i] = 0; }\n\t\tgl.bufferData(gl.ARRAY_BUFFER, indices, gl.DYNAMIC_DRAW);\n\t\ttextureIndexBuffer.itemSize = groupSize;\n\t\ttextureIndexBuffer.numItems = groupCount;\n\n\t\t// what alpha it should have\n\t\tvar alphaBuffer = this._alphaBuffer = gl.createBuffer();\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, alphaBuffer);\n\t\tgroupSize = 1;\n\t\tvar alphas = this._alphas = new Float32Array(groupCount * groupSize);\n\t\tfor (i=0, l=alphas.length; i<l; i++) { alphas[i] = 1; }\n\t\tgl.bufferData(gl.ARRAY_BUFFER, alphas, gl.DYNAMIC_DRAW);\n\t\talphaBuffer.itemSize = groupSize;\n\t\talphaBuffer.numItems = groupCount;\n\t};\n\n\t/**\n\t * Do all the setup steps for textures in the system.\n\t * @method _initTextures\n\t * @protected\n\t */\n\tp._initTextures = function () {\n\t\t//TODO: DHG: add a cleanup routine in here in case this happens mid stream\n\n\t\t// reset counters\n\t\tthis._lastTextureInsert = -1;\n\n\t\t// clear containers\n\t\tthis._textureDictionary = [];\n\t\tthis._textureIDs = {};\n\t\tthis._baseTextures = [];\n\t\tthis._batchTextures = [];\n\n\t\t// fill in blanks as it helps the renderer be stable while textures are loading and reduces need for safety code\n\t\tfor (var i=0; i<this._batchTextureCount;i++) {\n\t\t\tvar tex = this.getBaseTexture();\n\t\t\tthis._baseTextures[i] = this._batchTextures[i] = tex;\n\t\t\tif (!tex) {\n\t\t\t\tthrow \"Problems creating basic textures, known causes include using too much VRAM by not releasing WebGL texture instances\";\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Load a specific texture, accounting for potential delay, as it might not be preloaded.\n\t * @method _loadTextureImage\n\t * @param {WebGLRenderingContext} gl\n\t * @param {Image} image Actual image to be loaded\n\t * @return {WebGLTexture} The resulting Texture object\n\t * @protected\n\t */\n\tp._loadTextureImage = function (gl, image) {\n\t\tvar src = image.src;\n\n\t\tif (!src) {\n\t\t\t// one time canvas property setup\n\t\t\timage._isCanvas = true;\n\t\t\tsrc = image.src = \"canvas_\" + this._lastTrackedCanvas++;\n\t\t}\n\n\t\t// put the texture into our storage system\n\t\tvar storeID = this._textureIDs[src];\n\t\tif (storeID === undefined) {\n\t\t\tstoreID = this._textureIDs[src] = this._textureDictionary.length;\n\t\t}\n\t\tif (this._textureDictionary[storeID] === undefined) {\n\t\t\tthis._textureDictionary[storeID] = this.getBaseTexture();\n\t\t}\n\n\t\tvar texture = this._textureDictionary[storeID];\n\n\t\tif (texture) {\n\t\t\t// get texture params all set up\n\t\t\ttexture._batchID = this._batchID;\n\t\t\ttexture._storeID = storeID;\n\t\t\ttexture._imageData = image;\n\t\t\tthis._insertTextureInBatch(gl, texture);\n\n\t\t\t// get the data into the texture or wait for it to load\n\t\t\timage._storeID = storeID;\n\t\t\tif (image.complete || image.naturalWidth || image._isCanvas) {\t// is it already loaded\n\t\t\t\tthis._updateTextureImageData(gl, image);\n\t\t\t} else  {\n\t\t\t\timage.addEventListener(\"load\", this._updateTextureImageData.bind(this, gl, image));\n\t\t\t}\n\t\t} else {\n\t\t\t// we really really should have a texture, try to recover the error by using a saved empty texture so we don't crash\n\t\t\tvar msg = \"Problem creating desired texture, known causes include using too much VRAM by not releasing WebGL texture instances\";\n\t\t\t(console.error && console.error(msg)) || console.log(msg);\n\n\t\t\ttexture = this._baseTextures[0];\n\t\t\ttexture._batchID = this._batchID;\n\t\t\ttexture._storeID = -1;\n\t\t\ttexture._imageData = texture;\n\t\t\tthis._insertTextureInBatch(gl, texture);\n\t\t}\n\n\t\treturn texture;\n\t};\n\n\t/**\n\t * Necessary to upload the actual image data to the GPU. Without this the texture will be blank. Called automatically\n\t * in most cases due to loading and caching APIs. Flagging an image source with `_invalid = true` will trigger this\n\t * next time the image is rendered.\n\t * @param {WebGLRenderingContext} gl\n\t * @param {Image | Canvas} image The image data to be uploaded\n\t * @protected\n\t */\n\tp._updateTextureImageData = function (gl, image) {\n\t\t// the bitwise & is intentional, cheap exponent 2 check\n\t\tvar isNPOT = (image.width & image.width-1) || (image.height & image.height-1);\n\t\tvar texture = this._textureDictionary[image._storeID];\n\n\t\tgl.activeTexture(gl.TEXTURE0 + texture._activeIndex);\n\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\n\t\ttexture.isPOT = !isNPOT;\n\t\tthis.setTextureParams(gl, texture.isPOT);\n\n\t\ttry {\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n\t\t} catch(e) {\n\t\t\tvar errString = \"\\nAn error has occurred. This is most likely due to security restrictions on WebGL images with local or cross-domain origins\";\n\t\t\tif(console.error) {\n\t\t\t\t//TODO: LM: I recommend putting this into a log function internally, since you do it so often, and each is implemented differently.\n\t\t\t\tconsole.error(errString);\n\t\t\t\tconsole.error(e);\n\t\t\t} else if (console) {\n\t\t\t\tconsole.log(errString);\n\t\t\t\tconsole.log(e);\n\t\t\t}\n\t\t}\n\n\t\timage._invalid = false;\n\n\t\ttexture._w = image.width;\n\t\ttexture._h = image.height;\n\n\t\tif (this.vocalDebug) {\n\t\t\tif (isNPOT) {\n\t\t\t\tconsole.warn(\"NPOT(Non Power of Two) Texture: \"+ image.src);\n\t\t\t}\n\t\t\tif (image.width > gl.MAX_TEXTURE_SIZE || image.height > gl.MAX_TEXTURE_SIZE){\n\t\t\t\tconsole && console.error(\"Oversized Texture: \"+ image.width+\"x\"+image.height +\" vs \"+ gl.MAX_TEXTURE_SIZE +\"max\");\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Adds the texture to a spot in the current batch, forcing a draw if no spots are free.\n\t * @method _insertTextureInBatch\n\t * @param {WebGLRenderingContext} gl The canvas WebGL context object to draw into.\n\t * @param {WebGLTexture} texture The texture to be inserted.\n\t * @protected\n\t */\n\tp._insertTextureInBatch = function (gl, texture) {\n\t\t// if it wasn't used last batch\n\t\tif (this._batchTextures[texture._activeIndex] !== texture) {\n\t\t\t// we've got to find it a a spot.\n\t\t\tvar found = -1;\n\t\t\tvar start = (this._lastTextureInsert+1) % this._batchTextureCount;\n\t\t\tvar look = start;\n\t\t\tdo {\n\t\t\t\tif (this._batchTextures[look]._batchID != this._batchID && !this._slotBlacklist[look]) {\n\t\t\t\t\tfound = look;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlook = (look+1) % this._batchTextureCount;\n\t\t\t} while (look !== start);\n\n\t\t\t// we couldn't find anywhere for it go, meaning we're maxed out\n\t\t\tif (found === -1) {\n\t\t\t\tthis.batchReason = \"textureOverflow\";\n\t\t\t\tthis._drawBuffers(gl);\t\t// <------------------------------------------------------------------------\n\t\t\t\tthis.batchCardCount = 0;\n\t\t\t\tfound = start;\n\t\t\t}\n\n\t\t\t// lets put it into that spot\n\t\t\tthis._batchTextures[found] = texture;\n\t\t\ttexture._activeIndex = found;\n\t\t\tvar image = texture._imageData;\n\t\t\tif (image && image._invalid && texture._drawID !== undefined) {\n\t\t\t\tthis._updateTextureImageData(gl, image);\n\t\t\t} else {\n\t\t\t\tgl.activeTexture(gl.TEXTURE0 + found);\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\t\tthis.setTextureParams(gl);\n\t\t\t}\n\t\t\tthis._lastTextureInsert = found;\n\t\t} else {\n\t\t\tvar image = texture._imageData;\n\t\t\tif (texture._storeID != undefined && image && image._invalid) {\n\t\t\t\tthis._updateTextureImageData(gl, image);\n\t\t\t}\n\t\t}\n\n\t\ttexture._drawID = this._drawID;\n\t\ttexture._batchID = this._batchID;\n\t};\n\n\t/**\n\t * Remove and clean the texture, expects a texture and is inflexible. Mostly for internal use, recommended to call \n\t * {{#crossLink \"StageGL/releaseTexture\"}}{{/crossLink}} instead as it will call this with the correct texture object(s).\n\t * Note: Testing shows this may not happen immediately, have to wait frames for WebGL to have actually adjust memory.\n\t * @method _killTextureObject\n\t * @param {Texture} tex The texture to be cleaned out\n\t * @protected\n\t */\n\tp._killTextureObject = function (tex) {\n\t\tif (!tex) { return; }\n\t\tvar gl = this._webGLContext;\n\n\t\t// remove linkage\n\t\tif (tex._storeID !== undefined && tex._storeID >= 0) {\n\t\t\tthis._textureDictionary[tex._storeID] = undefined;\n\t\t\tfor (var n in this._textureIDs) {\n\t\t\t\tif (this._textureIDs[n] == tex._storeID) { delete this._textureIDs[n]; }\n\t\t\t}\n\t\t\tif(tex._imageData) { tex._imageData._storeID = undefined; }\n\t\t\ttex._imageData = tex._storeID = undefined;\n\t\t}\n\n\t\t// make sure to drop it out of an active slot\n\t\tif (tex._activeIndex !== undefined && this._batchTextures[tex._activeIndex] === tex) {\n\t\t\tthis._batchTextures[tex._activeIndex] = this._baseTextures[tex._activeIndex];\n\t\t}\n\n\t\t// remove buffers if present\n\t\ttry {\n\t\t\tif (tex._frameBuffer) { gl.deleteFramebuffer(tex._frameBuffer); }\n\t\t\ttex._frameBuffer = undefined;\n\t\t} catch(e) {\n\t\t\t/* suppress delete errors because it's already gone or didn't need deleting probably */\n\t\t\tif (this.vocalDebug) { console.log(e); }\n\t\t}\n\n\t\t// remove entry\n\t\ttry {\n\t\t\tgl.deleteTexture(tex);\n\t\t} catch(e) {\n\t\t\t/* suppress delete errors because it's already gone or didn't need deleting probably */\n\t\t\tif (this.vocalDebug) { console.log(e); }\n\t\t}\n\t};\n\n\t/**\n\t * Store or restore current batch textures into a backup array\n\t * @method _backupBatchTextures\n\t * @param {Boolean} restore Perform a restore instead of a store.\n\t * @param {Array} [target=this._backupTextures] Where to perform the backup, defaults to internal backup.\n\t * @protected\n\t */\n\tp._backupBatchTextures = function (restore, target) {\n\t\tvar gl = this._webGLContext;\n\n\t\tif (!this._backupTextures) { this._backupTextures = []; }\n\t\tif (target === undefined) { target = this._backupTextures; }\n\n\t\tfor (var i=0; i<this._batchTextureCount; i++) {\n\t\t\tgl.activeTexture(gl.TEXTURE0 + i);\n\t\t\tif (restore) {\n\t\t\t\tthis._batchTextures[i] = target[i];\n\t\t\t} else {\n\t\t\t\ttarget[i] = this._batchTextures[i];\n\t\t\t\tthis._batchTextures[i] = this._baseTextures[i];\n\t\t\t}\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, this._batchTextures[i]);\n\t\t\tthis.setTextureParams(gl, this._batchTextures[i].isPOT);\n\t\t}\n\n\t\tif (restore && target === this._backupTextures) { this._backupTextures = []; }\n\t};\n\n\t/**\n\t * Begin the drawing process for a regular render.\n\t * @method _batchDraw\n\t * @param {WebGLRenderingContext} gl The canvas WebGL context object to draw into.\n\t * @param {Stage || Container} sceneGraph {{#crossLink \"Container\"}}{{/crossLink}} object with all that needs to rendered, preferably a Stage.\n\t * @param {Boolean} ignoreCache\n\t * @protected\n\t */\n\tp._batchDraw = function (sceneGraph, gl, ignoreCache) {\n\t\tif (this._isDrawing > 0) {\n\t\t\tthis._drawBuffers(gl);\n\t\t}\n\t\tthis._isDrawing++;\n\t\tthis._drawID++;\n\n\t\tthis.batchCardCount = 0;\n\t\tthis.depth = 0;\n\n\t\tthis._appendToBatchGroup(sceneGraph, gl, new createjs.Matrix2D(), this.alpha, ignoreCache);\n\n\t\tthis.batchReason = \"drawFinish\";\n\t\tthis._drawBuffers(gl);\t\t\t\t\t\t\t\t// <--------------------------------------------------------\n\t\tthis._isDrawing--;\n\t};\n\n\t/**\n\t * Perform the drawing process to fill a specific cache texture, including applying filters.\n\t * @method _cacheDraw\n\t * @param {DisplayObject} target The object we're drawing into the cache. For example, used for drawing the cache\n\t * (to prevent it from simply drawing an existing cache back into itself).\n\t * @param {Array} filters The filters we're drawing into cache.\n\t * @param {BitmapCache} manager The BitmapCache instance looking after the cache\n\t * @protected\n\t */\n\tp._cacheDraw = function (gl, target, filters, manager) {\n\t\t/*\n\t\tImplicitly there are 4 modes to this function: filtered-sameContext, filtered-uniqueContext, sameContext, uniqueContext.\n\t\tEach situation must be handled slightly differently as 'sameContext' or 'uniqueContext' define how the output works,\n\t\tone drawing directly into the main context and the other drawing into a stored renderTexture respectively.\n\t\tWhen the draw is a 'filtered' draw, the filters are applied sequentially and will draw into saved textures repeatedly.\n\t\tOnce the final filter is done the final output is treated depending upon whether it is a same or unique context.\n\t\tThe internal complexity comes from reducing over-draw, shared code, and issues like textures needing to be flipped\n\t\tsometimes when written to render textures.\n\t\t*/\n\t\tvar renderTexture;\n\t\tvar shaderBackup = this._activeShader;\n\t\tvar blackListBackup = this._slotBlacklist;\n\t\tvar lastTextureSlot = this._maxTextureSlots-1;\n\t\tvar wBackup = this._viewportWidth, hBackup = this._viewportHeight;\n\n\t\t// protect the last slot so that we have somewhere to bind the renderTextures so it doesn't get upset\n\t\tthis.protectTextureSlot(lastTextureSlot, true);\n\n\t\t// create offset container for drawing item\n\t\tvar mtx = target.getMatrix();\n\t\tmtx = mtx.clone();\n\t\tmtx.scale(1/manager.scale, 1/manager.scale);\n\t\tmtx = mtx.invert();\n\t\tmtx.translate(-manager.offX/manager.scale*target.scaleX, -manager.offY/manager.scale*target.scaleY);\n\t\tvar container = this._cacheContainer;\n\t\tcontainer.children = [target];\n\t\tcontainer.transformMatrix = mtx;\n\n\t\tthis._backupBatchTextures(false);\n\n\t\tif (filters && filters.length) {\n\t\t\tthis._drawFilters(target, filters, manager);\n\t\t} else {\n\t\t\t// is this for another stage or mine?\n\t\t\tif (this.isCacheControlled) {\n\t\t\t\t// draw item to canvas\t\t\t\tI -> C\n\t\t\t\tgl.clear(gl.COLOR_BUFFER_BIT);\n\t\t\t\tthis._batchDraw(container, gl, true);\n\t\t\t} else {\n\t\t\t\tgl.activeTexture(gl.TEXTURE0 + lastTextureSlot);\n\t\t\t\ttarget.cacheCanvas = this.getTargetRenderTexture(target, manager._drawWidth, manager._drawHeight);\n\t\t\t\trenderTexture = target.cacheCanvas;\n\n\t\t\t\t// draw item to render texture\t\tI -> T\n\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture._frameBuffer);\n\t\t\t\tthis.updateViewport(manager._drawWidth, manager._drawHeight);\n\t\t\t\tthis._projectionMatrix = this._projectionMatrixFlip;\n\t\t\t\tgl.clear(gl.COLOR_BUFFER_BIT);\n\t\t\t\tthis._batchDraw(container, gl, true);\n\n\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\t\t\tthis.updateViewport(wBackup, hBackup);\n\t\t\t}\n\t\t}\n\n\t\tthis._backupBatchTextures(true);\n\n\t\tthis.protectTextureSlot(lastTextureSlot, false);\n\t\tthis._activeShader = shaderBackup;\n\t\tthis._slotBlacklist = blackListBackup;\n\t};\n\n\t/**\n\t * Sub portion of _cacheDraw, split off for readability. Do not call independently.\n\t * @method _drawFilters\n\t * @param {DisplayObject} target The object we're drawing with a filter.\n\t * @param {Array} filters The filters we're drawing into cache.\n\t * @param {BitmapCache} manager The BitmapCache instance looking after the cache\n\t */\n\tp._drawFilters = function (target, filters, manager) {\n\t\tvar gl = this._webGLContext;\n\t\tvar renderTexture;\n\t\tvar lastTextureSlot = this._maxTextureSlots-1;\n\t\tvar wBackup = this._viewportWidth, hBackup = this._viewportHeight;\n\n\t\tvar container = this._cacheContainer;\n\t\tvar filterCount = filters.length;\n\n\t\t// we don't know which texture slot we're dealing with previously and we need one out of the way\n\t\t// once we're using that slot activate it so when we make and bind our RenderTexture it's safe there\n\t\tgl.activeTexture(gl.TEXTURE0 + lastTextureSlot);\n\t\trenderTexture = this.getTargetRenderTexture(target, manager._drawWidth, manager._drawHeight);\n\n\t\t// draw item to render texture\t\tI -> T\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture._frameBuffer);\n\t\tthis.updateViewport(manager._drawWidth, manager._drawHeight);\n\t\tgl.clear(gl.COLOR_BUFFER_BIT);\n\t\tthis._batchDraw(container, gl, true);\n\n\t\t// bind the result texture to slot 0 as all filters and cover draws assume original content is in slot 0\n\t\tgl.activeTexture(gl.TEXTURE0);\n\t\tgl.bindTexture(gl.TEXTURE_2D, renderTexture);\n\t\tthis.setTextureParams(gl);\n\n\t\tvar flipY = false;\n\t\tvar i = 0, filter = filters[i];\n\t\tdo { // this is safe because we wouldn't be in apply filters without a filter count of at least 1\n\n\t\t\t// swap to correct shader\n\t\t\tthis._activeShader = this.getFilterShader(filter);\n\t\t\tif (!this._activeShader) { continue; }\n\n\t\t\t// now the old result is stored in slot 0, make a new render texture\n\t\t\tgl.activeTexture(gl.TEXTURE0 + lastTextureSlot);\n\t\t\trenderTexture = this.getTargetRenderTexture(target, manager._drawWidth, manager._drawHeight);\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture._frameBuffer);\n\n\t\t\t// draw result to render texture\tR -> T\n\t\t\tgl.viewport(0, 0, manager._drawWidth, manager._drawHeight);\n\t\t\tgl.clear(gl.COLOR_BUFFER_BIT);\n\t\t\tthis._drawCover(gl, flipY);\n\n\t\t\t// bind the result texture to slot 0 as all filters and cover draws assume original content is in slot 0\n\t\t\tgl.activeTexture(gl.TEXTURE0);\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, renderTexture);\n\t\t\tthis.setTextureParams(gl);\n\n\t\t\t// use flipping to keep things upright, things already cancel out on a single filter\n\t\t\t// this needs to be here as multiPass is not accurate to _this_ frame until after shader acquisition\n\t\t\tif (filterCount > 1 || filters[0]._multiPass) {\n\t\t\t\tflipY = !flipY;\n\t\t\t}\n\n\t\t\t// work through the multipass if it's there, otherwise move on\n\t\t\tfilter = filter._multiPass !== null ? filter._multiPass : filters[++i];\n\t\t} while (filter);\n\n\t\t// is this for another stage or mine\n\t\tif (this.isCacheControlled) {\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\t\tthis.updateViewport(wBackup, hBackup);\n\n\t\t\t// draw result to canvas\t\t\tR -> C\n\t\t\tthis._activeShader = this.getFilterShader(this);\n\t\t\tgl.clear(gl.COLOR_BUFFER_BIT);\n\t\t\tthis._drawCover(gl, flipY);\n\t\t} else {\n\t\t\t//TODO: DHG: this is less than ideal. A flipped initial render for this circumstance might help. Adjust the perspective matrix?\n\t\t\tif (flipY) {\n\t\t\t\tgl.activeTexture(gl.TEXTURE0 + lastTextureSlot);\n\t\t\t\trenderTexture = this.getTargetRenderTexture(target, manager._drawWidth, manager._drawHeight);\n\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture._frameBuffer);\n\n\t\t\t\tthis._activeShader = this.getFilterShader(this);\n\t\t\t\tgl.viewport(0, 0, manager._drawWidth, manager._drawHeight);\n\t\t\t\tgl.clear(gl.COLOR_BUFFER_BIT);\n\t\t\t\tthis._drawCover(gl, !flipY);\n\t\t\t}\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\t\tthis.updateViewport(wBackup, hBackup);\n\n\t\t\t// make sure the last texture is the active thing to draw\n\t\t\ttarget.cacheCanvas = renderTexture;\n\t\t}\n\t};\n\n\t/**\n\t * Add all the contents of a container to the pending buffers, called recursively on each container. This may\n\t * trigger a draw if a buffer runs out of space. This is the main workforce of the render loop.\n\t * @method _appendToBatchGroup\n\t * @param {Container} container The {{#crossLink \"Container\"}}{{/crossLink}} that contains everything to be drawn.\n\t * @param {WebGLRenderingContext} gl The canvas WebGL context object to draw into.\n\t * @param {Matrix2D} concatMtx The effective (concatenated) transformation matrix when beginning this container\n\t * @param {Number} concatAlpha The effective (concatenated) alpha when beginning this container\n\t * @param {Boolean} ignoreCache Don't use an element's cache during this draw\n\t * @protected\n\t */\n\tp._appendToBatchGroup = function (container, gl, concatMtx, concatAlpha, ignoreCache) {\n\t\t// sort out shared properties\n\t\tif (!container._glMtx) { container._glMtx = new createjs.Matrix2D(); }\n\t\tvar cMtx = container._glMtx;\n\t\tcMtx.copy(concatMtx);\n\t\tif (container.transformMatrix) {\n\t\t\tcMtx.appendMatrix(container.transformMatrix);\n\t\t} else {\n\t\t\tcMtx.appendTransform(\n\t\t\t\tcontainer.x, container.y,\n\t\t\t\tcontainer.scaleX, container.scaleY,\n\t\t\t\tcontainer.rotation, container.skewX, container.skewY,\n\t\t\t\tcontainer.regX, container.regY\n\t\t\t);\n\t\t}\n\n\t\t// sub components of figuring out the position an object holds\n\t\tvar subL, subT, subR, subB;\n\n\t\t// actually apply its data to the buffers\n\t\tvar l = container.children.length;\n\t\tfor (var i = 0; i < l; i++) {\n\t\t\tvar item = container.children[i];\n\n\t\t\tif (!(item.visible && concatAlpha)) { continue; }\n\t\t\tif (!item.cacheCanvas || ignoreCache) {\n\t\t\t\tif (item._updateState){\n\t\t\t\t\titem._updateState();\n\t\t\t\t}\n\t\t\t\tif (item.children) {\n\t\t\t\t\tthis._appendToBatchGroup(item, gl, cMtx, item.alpha * concatAlpha);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// check for overflowing batch, if yes then force a render\n\t\t\t// TODO: DHG: consider making this polygon count dependant for things like vector draws\n\t\t\tif (this.batchCardCount+1 > this._maxCardsPerBatch) {\n\t\t\t\tthis.batchReason = \"vertexOverflow\";\n\t\t\t\tthis._drawBuffers(gl);\t\t\t\t\t// <------------------------------------------------------------\n\t\t\t\tthis.batchCardCount = 0;\n\t\t\t}\n\n\t\t\t// keep track of concatenated position\n\t\t\tif (!item._glMtx) { item._glMtx = new createjs.Matrix2D(); }\n\t\t\tvar iMtx = item._glMtx;\n\t\t\tiMtx.copy(cMtx);\n\t\t\tif (item.transformMatrix) {\n\t\t\t\tiMtx.appendMatrix(item.transformMatrix);\n\t\t\t} else {\n\t\t\t\tiMtx.appendTransform(\n\t\t\t\t\titem.x, item.y,\n\t\t\t\t\titem.scaleX, item.scaleY,\n\t\t\t\t\titem.rotation, item.skewX, item.skewY,\n\t\t\t\t\titem.regX, item.regY\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tvar uvRect, texIndex, image, frame, texture, src;\n\t\t\tvar useCache = item.cacheCanvas && !ignoreCache;\n\n\t\t\tif (item._webGLRenderStyle === 2 || useCache) {\t\t\t// BITMAP / Cached Canvas\n\t\t\t\timage = (ignoreCache?false:item.cacheCanvas) || item.image;\n\t\t\t} else if (item._webGLRenderStyle === 1) {\t\t\t\t\t\t\t\t\t\t\t// SPRITE\n\t\t\t\tframe = item.spriteSheet.getFrame(item.currentFrame);\t//TODO: Faster way?\n\t\t\t\tif (frame === null) { continue; }\n\t\t\t\timage = frame.image;\n\t\t\t} else {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// MISC (DOM objects render themselves later)\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar uvs = this._uvs;\n\t\t\tvar vertices = this._vertices;\n\t\t\tvar texI = this._indices;\n\t\t\tvar alphas = this._alphas;\n\n\t\t\t// calculate texture\n\t\t\tif (!image) { continue; }\n\t\t\tif (image._storeID === undefined) {\n\t\t\t\t// this texture is new to us so load it and add it to the batch\n\t\t\t\ttexture = this._loadTextureImage(gl, image);\n\t\t\t\tthis._insertTextureInBatch(gl, texture);\n\t\t\t} else {\n\t\t\t\t// fetch the texture (render textures know how to look themselves up to simplify this logic)\n\t\t\t\ttexture = this._textureDictionary[image._storeID];\n\t\t\t\tif (!texture){\n\t\t\t\t\tif (this.vocalDebug){ console.log(\"Texture should not be looked up while not being stored.\"); }\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// put it in the batch if needed\n\t\t\t\tif (texture._batchID !== this._batchID) {\n\t\t\t\t\tthis._insertTextureInBatch(gl, texture);\n\t\t\t\t}\n\t\t\t}\n\t\t\ttexIndex = texture._activeIndex;\n\n\t\t\tif (item._webGLRenderStyle === 2 || useCache) {\t\t\t// BITMAP / Cached Canvas\n\t\t\t\tif (!useCache && item.sourceRect) {\n\t\t\t\t\t// calculate uvs\n\t\t\t\t\tif (!item._uvRect) { item._uvRect = {}; }\n\t\t\t\t\tsrc = item.sourceRect;\n\t\t\t\t\tuvRect = item._uvRect;\n\t\t\t\t\tuvRect.t = (src.y)/image.height;\n\t\t\t\t\tuvRect.l = (src.x)/image.width;\n\t\t\t\t\tuvRect.b = (src.y + src.height)/image.height;\n\t\t\t\t\tuvRect.r = (src.x + src.width)/image.width;\n\n\t\t\t\t\t// calculate vertices\n\t\t\t\t\tsubL = 0;\t\t\t\t\t\t\tsubT = 0;\n\t\t\t\t\tsubR = src.width+subL;\t\t\t\tsubB = src.height+subT;\n\t\t\t\t} else {\n\t\t\t\t\t// calculate uvs\n\t\t\t\t\tuvRect = StageGL.UV_RECT;\n\t\t\t\t\t// calculate vertices\n\t\t\t\t\tif (useCache) {\n\t\t\t\t\t\tsrc = item.bitmapCache;\n\t\t\t\t\t\tsubL = src.x+(src._filterOffX/src.scale);\tsubT = src.y+(src._filterOffY/src.scale);\n\t\t\t\t\t\tsubR = (src._drawWidth/src.scale)+subL;\t\tsubB = (src._drawHeight/src.scale)+subT;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsubL = 0;\t\t\t\t\t\tsubT = 0;\n\t\t\t\t\t\tsubR = image.width+subL;\t\tsubB = image.height+subT;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (item._webGLRenderStyle === 1) {\t\t\t\t\t\t\t\t\t\t\t// SPRITE\n\t\t\t\tvar rect = frame.rect;\n\n\t\t\t\t// calculate uvs\n\t\t\t\tuvRect = frame.uvRect;\n\t\t\t\tif (!uvRect) {\n\t\t\t\t\tuvRect = StageGL.buildUVRects(item.spriteSheet, item.currentFrame, false);\n\t\t\t\t}\n\n\t\t\t\t// calculate vertices\n\t\t\t\tsubL = -frame.regX;\t\t\t\t\t\t\t\tsubT = -frame.regY;\n\t\t\t\tsubR = rect.width-frame.regX;\t\t\t\t\tsubB = rect.height-frame.regY;\n\t\t\t}\n\n\t\t\t// These must be calculated here else a forced draw might happen after they're set\n\t\t\tvar offV1 = this.batchCardCount*StageGL.INDICIES_PER_CARD;\t\t// offset for 1 component vectors\n\t\t\tvar offV2 = offV1*2;\t\t\t\t\t\t\t\t\t\t\t// offset for 2 component vectors\n\n\t\t\t//DHG: See Matrix2D.transformPoint for why this math specifically\n\t\t\t// apply vertices\n\t\t\tvertices[offV2] =\t\tsubL *iMtx.a + subT *iMtx.c +iMtx.tx;\t\tvertices[offV2+1] =\t\tsubL *iMtx.b + subT *iMtx.d +iMtx.ty;\n\t\t\tvertices[offV2+2] =\t\tsubL *iMtx.a + subB *iMtx.c +iMtx.tx;\t\tvertices[offV2+3] =\t\tsubL *iMtx.b + subB *iMtx.d +iMtx.ty;\n\t\t\tvertices[offV2+4] =\t\tsubR *iMtx.a + subT *iMtx.c +iMtx.tx;\t\tvertices[offV2+5] =\t\tsubR *iMtx.b + subT *iMtx.d +iMtx.ty;\n\t\t\tvertices[offV2+6] =\t\tvertices[offV2+2];\t\t\t\t\t\t\tvertices[offV2+7] =\t\tvertices[offV2+3];\n\t\t\tvertices[offV2+8] =\t\tvertices[offV2+4];\t\t\t\t\t\t\tvertices[offV2+9] =\t\tvertices[offV2+5];\n\t\t\tvertices[offV2+10] =\tsubR *iMtx.a + subB *iMtx.c +iMtx.tx;\t\tvertices[offV2+11] =\tsubR *iMtx.b + subB *iMtx.d +iMtx.ty;\n\n\t\t\t// apply uvs\n\t\t\tuvs[offV2] =\tuvRect.l;\t\t\tuvs[offV2+1] =\tuvRect.t;\n\t\t\tuvs[offV2+2] =\tuvRect.l;\t\t\tuvs[offV2+3] =\tuvRect.b;\n\t\t\tuvs[offV2+4] =\tuvRect.r;\t\t\tuvs[offV2+5] =\tuvRect.t;\n\t\t\tuvs[offV2+6] =\tuvRect.l;\t\t\tuvs[offV2+7] =\tuvRect.b;\n\t\t\tuvs[offV2+8] =\tuvRect.r;\t\t\tuvs[offV2+9] =\tuvRect.t;\n\t\t\tuvs[offV2+10] =\tuvRect.r;\t\t\tuvs[offV2+11] =\tuvRect.b;\n\n\t\t\t// apply texture\n\t\t\ttexI[offV1] = texI[offV1+1] = texI[offV1+2] = texI[offV1+3] = texI[offV1+4] = texI[offV1+5] = texIndex;\n\n\t\t\t// apply alpha\n\t\t\talphas[offV1] = alphas[offV1+1] = alphas[offV1+2] = alphas[offV1+3] = alphas[offV1+4] = alphas[offV1+5] = item.alpha * concatAlpha;\n\n\t\t\tthis.batchCardCount++;\n\t\t}\n\t};\n\n\t/**\n\t * Draws all the currently defined cards in the buffer to the render surface.\n\t * @method _drawBuffers\n\t * @param {WebGLRenderingContext} gl The canvas WebGL context object to draw into.\n\t * @protected\n\t */\n\tp._drawBuffers = function (gl) {\n\t\tif (this.batchCardCount <= 0) { return; }\t// prevents error logs on stages filled with un-renederable content.\n\n\t\tif (this.vocalDebug) {\n\t\t\tconsole.log(\"Draw[\"+ this._drawID +\":\"+ this._batchID +\"] : \"+ this.batchReason);\n\t\t}\n\t\tvar shaderProgram = this._activeShader;\n\t\tvar vertexPositionBuffer = this._vertexPositionBuffer;\n\t\tvar textureIndexBuffer = this._textureIndexBuffer;\n\t\tvar uvPositionBuffer = this._uvPositionBuffer;\n\t\tvar alphaBuffer = this._alphaBuffer;\n\n\t\tgl.useProgram(shaderProgram);\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, vertexPositionBuffer);\n\t\tgl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, vertexPositionBuffer.itemSize, gl.FLOAT, false, 0, 0);\n\t\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, this._vertices);\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, textureIndexBuffer);\n\t\tgl.vertexAttribPointer(shaderProgram.textureIndexAttribute, textureIndexBuffer.itemSize, gl.FLOAT, false, 0, 0);\n\t\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, this._indices);\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, uvPositionBuffer);\n\t\tgl.vertexAttribPointer(shaderProgram.uvPositionAttribute, uvPositionBuffer.itemSize, gl.FLOAT, false, 0, 0);\n\t\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, this._uvs);\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, alphaBuffer);\n\t\tgl.vertexAttribPointer(shaderProgram.alphaAttribute, alphaBuffer.itemSize, gl.FLOAT, false, 0, 0);\n\t\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, this._alphas);\n\n\t\tgl.uniformMatrix4fv(shaderProgram.pMatrixUniform, gl.FALSE, this._projectionMatrix);\n\n\t\tfor (var i = 0; i < this._batchTextureCount; i++) {\n\t\t\tvar texture = this._batchTextures[i];\n\t\t\tgl.activeTexture(gl.TEXTURE0 + i);\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\tthis.setTextureParams(gl, texture.isPOT);\n\t\t}\n\n\t\tgl.drawArrays(gl.TRIANGLES, 0, this.batchCardCount*StageGL.INDICIES_PER_CARD);\n\t\tthis._batchID++;\n\t};\n\n\t/**\n\t * Draws a card that covers the entire render surface. Mainly used for filters.\n\t * @method _drawBuffers\n\t * @param {WebGLRenderingContext} gl The canvas WebGL context object to draw into.\n\t * @param {Boolean} flipY Covers are used for things like RenderTextures and because of 3D vs Canvas space this can\n\t * end up meaning the `y` space sometimes requires flipping in the render.\n\t * @protected\n\t */\n\tp._drawCover = function (gl, flipY) {\n\t\tif (this._isDrawing > 0) {\n\t\t\tthis._drawBuffers(gl);\n\t\t}\n\n\t\tif (this.vocalDebug) {\n\t\t\tconsole.log(\"Draw[\"+ this._drawID +\":\"+ this._batchID +\"] : \"+ \"Cover\");\n\t\t}\n\t\tvar shaderProgram = this._activeShader;\n\t\tvar vertexPositionBuffer = this._vertexPositionBuffer;\n\t\tvar uvPositionBuffer = this._uvPositionBuffer;\n\n\t\tgl.clear(gl.COLOR_BUFFER_BIT);\n\t\tgl.useProgram(shaderProgram);\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, vertexPositionBuffer);\n\t\tgl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, vertexPositionBuffer.itemSize, gl.FLOAT, false, 0, 0);\n\t\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, StageGL.COVER_VERT);\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, uvPositionBuffer);\n\t\tgl.vertexAttribPointer(shaderProgram.uvPositionAttribute, uvPositionBuffer.itemSize, gl.FLOAT, false, 0, 0);\n\t\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, flipY?StageGL.COVER_UV_FLIP:StageGL.COVER_UV);\n\n\t\tgl.uniform1i(shaderProgram.samplerUniform, 0);\n\t\tgl.uniform1f(shaderProgram.uprightUniform, flipY?0:1);\n\n\t\tgl.drawArrays(gl.TRIANGLES, 0, StageGL.INDICIES_PER_CARD);\n\t};\n\n\tcreatejs.StageGL = createjs.promote(StageGL, \"Stage\");\n}());\n\n//##############################################################################\n// Bitmap.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\n\t/**\n\t * A Bitmap represents an Image, Canvas, or Video in the display list. A Bitmap can be instantiated using an existing\n\t * HTML element, or a string.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t * \tvar bitmap = new createjs.Bitmap(\"imagePath.jpg\");\n\t *\n\t * <strong>Notes:</strong>\n\t * <ol>\n\t * \t<li>When using a video source that may loop or seek, use a {{#crossLink \"VideoBuffer\"}}{{/crossLink}} object to\n\t * \t prevent blinking / flashing.\n\t * \t<li>When a string path or image tag that is not yet loaded is used, the stage may need to be redrawn before it\n\t * \t will be displayed.</li>\n\t * \t<li>Bitmaps with an SVG source currently will not respect an alpha value other than 0 or 1. To get around this,\n\t * \tthe Bitmap can be cached.</li>\n\t * \t<li>Bitmaps with an SVG source will taint the canvas with cross-origin data, which prevents interactivity. This\n\t * \thappens in all browsers except recent Firefox builds.</li>\n\t * \t<li>Images loaded cross-origin will throw cross-origin security errors when interacted with using a mouse, using\n\t * \tmethods such as `getObjectUnderPoint`, or using filters, or caching. You can get around this by setting\n\t * \t`crossOrigin` flags on your images before passing them to EaselJS, eg: `img.crossOrigin=\"Anonymous\";`</li>\n\t * </ol>\n\t *\n\t * @class Bitmap\n\t * @extends DisplayObject\n\t * @constructor\n\t * @param {CanvasImageSource | String | Object} imageOrUri The source image to display. This can be a CanvasImageSource\n\t * (image, video, canvas), an object with a `getImage` method that returns a CanvasImageSource, or a string URL to an image.\n\t * If the latter, a new Image instance with the URL as its src will be used.\n\t **/\n\tfunction Bitmap(imageOrUri) {\n\t\tthis.DisplayObject_constructor();\n\t\t\n\t\t\n\t// public properties:\n\t\t/**\n\t\t * The source image to display. This can be a CanvasImageSource\n\t\t * (image, video, canvas), an object with a `getImage` method that returns a CanvasImageSource, or a string URL to an image.\n\t\t * If the latter, a new Image instance with the URL as its src will be used.\n\t\t * @property image\n\t\t * @type CanvasImageSource | Object\n\t\t **/\n\t\tif (typeof imageOrUri == \"string\") {\n\t\t\tthis.image = document.createElement(\"img\");\n\t\t\tthis.image.src = imageOrUri;\n\t\t} else {\n\t\t\tthis.image = imageOrUri;\n\t\t}\n\t\n\t\t/**\n\t\t * Specifies an area of the source image to draw. If omitted, the whole image will be drawn.\n\t\t * Notes:\n\t\t * <ul>\n\t\t *     <li>that video sources must have a width / height set to work correctly with `sourceRect`</li>\n\t\t *     <li>Cached objects will ignore the `sourceRect` property</li>\n\t\t * </ul>\n\t\t * @property sourceRect\n\t\t * @type Rectangle\n\t\t * @default null\n\t\t */\n\t\tthis.sourceRect = null;\n\n\t// private properties:\n\t\t/**\n\t\t * Docced in superclass.\n\t\t */\n\t\tthis._webGLRenderStyle = createjs.DisplayObject._StageGL_BITMAP;\n\t}\n\tvar p = createjs.extend(Bitmap, createjs.DisplayObject);\n\t\n\t\n// public methods:\n\t/**\n\t * Constructor alias for backwards compatibility. This method will be removed in future versions.\n\t * Subclasses should be updated to use {{#crossLink \"Utility Methods/extends\"}}{{/crossLink}}.\n\t * @method initialize\n\t * @deprecated in favour of `createjs.promote()`\n\t **/\n\tp.initialize = Bitmap; // TODO: deprecated.\n\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t **/\n\tp.isVisible = function() {\n\t\tvar image = this.image;\n\t\tvar hasContent = this.cacheCanvas || (image && (image.naturalWidth || image.getContext || image.readyState >= 2));\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t};\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache.\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t * into itself).\n\t * @return {Boolean}\n\t **/\n\tp.draw = function(ctx, ignoreCache) {\n\t\tif (this.DisplayObject_draw(ctx, ignoreCache)) { return true; }\n\t\tvar img = this.image, rect = this.sourceRect;\n\t\tif (img.getImage) { img = img.getImage(); }\n\t\tif (!img) { return true; }\n\t\tif (rect) {\n\t\t\t// some browsers choke on out of bound values, so we'll fix them:\n\t\t\tvar x1 = rect.x, y1 = rect.y, x2 = x1 + rect.width, y2 = y1 + rect.height, x = 0, y = 0, w = img.width, h = img.height;\n\t\t\tif (x1 < 0) { x -= x1; x1 = 0; }\n\t\t\tif (x2 > w) { x2 = w; }\n\t\t\tif (y1 < 0) { y -= y1; y1 = 0; }\n\t\t\tif (y2 > h) { y2 = h; }\n\t\t\tctx.drawImage(img, x1, y1, x2-x1, y2-y1, x, y, x2-x1, y2-y1);\n\t\t} else {\n\t\t\tctx.drawImage(img, 0, 0);\n\t\t}\n\t\treturn true;\n\t};\n\t\n\t//Note, the doc sections below document using the specified APIs (from DisplayObject)  from\n\t//Bitmap. This is why they have no method implementations.\n\t\n\t/**\n\t * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n\t * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n\t *\n\t * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n\t * To see the API for caching, please visit the DisplayObject {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\n\t * method.\n\t * @method cache\n\t **/\n\t\n\t/**\n\t * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n\t * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n\t *\n\t * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n\t * To see the API for caching, please visit the DisplayObject {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\n\t * method.\n\t * @method updateCache\n\t **/\n\t\n\t/**\n\t * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n\t * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n\t *\n\t * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n\t * To see the API for caching, please visit the DisplayObject {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\n\t * method.\n\t * @method uncache\n\t **/\n\n\t/**\n\t * Docced in superclass.\n\t */\n\tp.getBounds = function() {\n\t\tvar rect = this.DisplayObject_getBounds();\n\t\tif (rect) { return rect; }\n\t\tvar image = this.image, o = this.sourceRect || image;\n\t\tvar hasContent = (image && (image.naturalWidth || image.getContext || image.readyState >= 2));\n\t\treturn hasContent ? this._rectangle.setValues(0, 0, o.width, o.height) : null;\n\t};\n\t\n\t/**\n\t * Returns a clone of the Bitmap instance.\n\t * @method clone\n\t * @param {Boolean} node Whether the underlying dom element should be cloned as well.\n\t * @return {Bitmap} a clone of the Bitmap instance.\n\t **/\n\tp.clone = function(node) {\n\t\tvar image = this.image;\n\t\tif(image && node){ image = image.cloneNode(); }\n\t\tvar o = new Bitmap(image);\n\t\tif (this.sourceRect) { o.sourceRect = this.sourceRect.clone(); }\n\t\tthis._cloneProps(o);\n\t\treturn o;\n\t};\n\t\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[Bitmap (name=\"+  this.name +\")]\";\n\t};\n\n\t\n\tcreatejs.Bitmap = createjs.promote(Bitmap, \"DisplayObject\");\n}());\n\n//##############################################################################\n// Sprite.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Displays a frame or sequence of frames (ie. an animation) from a SpriteSheet instance. A sprite sheet is a series of\n\t * images (usually animation frames) combined into a single image. For example, an animation consisting of 8 100x100\n\t * images could be combined into a 400x200 sprite sheet (4 frames across by 2 high). You can display individual frames,\n\t * play frames as an animation, and even sequence animations together.\n\t *\n\t * See the {{#crossLink \"SpriteSheet\"}}{{/crossLink}} class for more information on setting up frames and animations.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var instance = new createjs.Sprite(spriteSheet);\n\t *      instance.gotoAndStop(\"frameName\");\n\t *\n\t * Until {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} or {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}} is called,\n\t * only the first defined frame defined in the sprite sheet will be displayed.\n\t *\n\t * @class Sprite\n\t * @extends DisplayObject\n\t * @constructor\n\t * @param {SpriteSheet} spriteSheet The SpriteSheet instance to play back. This includes the source image(s), frame\n\t * dimensions, and frame data. See {{#crossLink \"SpriteSheet\"}}{{/crossLink}} for more information.\n\t * @param {String|Number} [frameOrAnimation] The frame number or animation to play initially.\n\t **/\n\tfunction Sprite(spriteSheet, frameOrAnimation) {\n\t\tthis.DisplayObject_constructor();\n\t\t\n\t\t\n\t// public properties:\n\t\t/**\n\t\t * The frame index that will be drawn when draw is called. Note that with some {{#crossLink \"SpriteSheet\"}}{{/crossLink}}\n\t\t * definitions, this will advance non-sequentially. This will always be an integer value.\n\t\t * @property currentFrame\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @readonly\n\t\t **/\n\t\tthis.currentFrame = 0;\n\t\n\t\t/**\n\t\t * Returns the name of the currently playing animation.\n\t\t * @property currentAnimation\n\t\t * @type {String}\n\t\t * @final\n\t\t * @readonly\n\t\t **/\n\t\tthis.currentAnimation = null;\n\t\n\t\t/**\n\t\t * Prevents the animation from advancing each tick automatically. For example, you could create a sprite\n\t\t * sheet of icons, set paused to true, and display the appropriate icon by setting <code>currentFrame</code>.\n\t\t * @property paused\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t **/\n\t\tthis.paused = true;\n\t\n\t\t/**\n\t\t * The SpriteSheet instance to play back. This includes the source image, frame dimensions, and frame\n\t\t * data. See {{#crossLink \"SpriteSheet\"}}{{/crossLink}} for more information.\n\t\t * @property spriteSheet\n\t\t * @type {SpriteSheet}\n\t\t * @readonly\n\t\t **/\n\t\tthis.spriteSheet = spriteSheet;\n\t\n\t\t/**\n\t\t * Specifies the current frame index within the currently playing animation. When playing normally, this will increase\n\t\t * from 0 to n-1, where n is the number of frames in the current animation.\n\t\t *\n\t\t * This could be a non-integer value if\n\t\t * using time-based playback (see {{#crossLink \"Sprite/framerate\"}}{{/crossLink}}, or if the animation's speed is\n\t\t * not an integer.\n\t\t * @property currentAnimationFrame\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n\t\tthis.currentAnimationFrame = 0;\n\t\n\t\t/**\n\t\t * By default Sprite instances advance one frame per tick. Specifying a framerate for the Sprite (or its related\n\t\t * SpriteSheet) will cause it to advance based on elapsed time between ticks as appropriate to maintain the target\n\t\t * framerate.\n\t\t *\n\t\t * For example, if a Sprite with a framerate of 10 is placed on a Stage being updated at 40fps, then the Sprite will\n\t\t * advance roughly one frame every 4 ticks. This will not be exact, because the time between each tick will\n\t\t * vary slightly between frames.\n\t\t *\n\t\t * This feature is dependent on the tick event object (or an object with an appropriate \"delta\" property) being\n\t\t * passed into {{#crossLink \"Stage/update\"}}{{/crossLink}}.\n\t\t * @property framerate\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n\t\tthis.framerate = 0;\n\t\n\t\n\t// private properties:\n\t\t/**\n\t\t * Current animation object.\n\t\t * @property _animation\n\t\t * @protected\n\t\t * @type {Object}\n\t\t * @default null\n\t\t **/\n\t\tthis._animation = null;\n\t\n\t\t/**\n\t\t * Current frame index.\n\t\t * @property _currentFrame\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default null\n\t\t **/\n\t\tthis._currentFrame = null;\n\t\t\n\t\t/**\n\t\t * Skips the next auto advance. Used by gotoAndPlay to avoid immediately jumping to the next frame\n\t\t * @property _skipAdvance\n\t\t * @protected\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t **/\n\t\tthis._skipAdvance = false;\n\n\t\t/**\n\t\t * Docced in superclass.\n\t\t */\n\t\tthis._webGLRenderStyle = createjs.DisplayObject._StageGL_SPRITE;\n\n\t\tif (frameOrAnimation != null) { this.gotoAndPlay(frameOrAnimation); }\n\t}\n\tvar p = createjs.extend(Sprite, createjs.DisplayObject);\n\n\t/**\n\t * Constructor alias for backwards compatibility. This method will be removed in future versions.\n\t * Subclasses should be updated to use {{#crossLink \"Utility Methods/extends\"}}{{/crossLink}}.\n\t * @method initialize\n\t * @deprecated in favour of `createjs.promote()`\n\t **/\n\tp.initialize = Sprite; // TODO: Deprecated. This is for backwards support of Flash/Animate spritesheet export.\n\n\n// events:\n\t/**\n\t * Dispatched when an animation reaches its ends.\n\t * @event animationend\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @param {String} name The name of the animation that just ended.\n\t * @param {String} next The name of the next animation that will be played, or null. This will be the same as name if the animation is looping.\n\t * @since 0.6.0\n\t */\n\t \n\t/**\n\t * Dispatched any time the current frame changes. For example, this could be due to automatic advancement on a tick,\n\t * or calling gotoAndPlay() or gotoAndStop().\n\t * @event change\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t */\n\n\n// public methods:\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t **/\n\tp.isVisible = function() {\n\t\tvar hasContent = this.cacheCanvas || this.spriteSheet.complete;\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t};\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} ignoreCache Indicates whether the draw operation should ignore any current cache.\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t * into itself).\n\t **/\n\tp.draw = function(ctx, ignoreCache) {\n\t\tif (this.DisplayObject_draw(ctx, ignoreCache)) { return true; }\n\t\tthis._normalizeFrame();\n\t\tvar o = this.spriteSheet.getFrame(this._currentFrame|0);\n\t\tif (!o) { return false; }\n\t\tvar rect = o.rect;\n\t\tif (rect.width && rect.height) { ctx.drawImage(o.image, rect.x, rect.y, rect.width, rect.height, -o.regX, -o.regY, rect.width, rect.height); }\n\t\treturn true;\n\t};\n\n\t//Note, the doc sections below document using the specified APIs (from DisplayObject)  from\n\t//Bitmap. This is why they have no method implementations.\n\n\t/**\n\t * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n\t * You should not cache Sprite instances as it can degrade performance.\n\t * @method cache\n\t **/\n\n\t/**\n\t * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n\t * You should not cache Sprite instances as it can degrade performance.\n\t * @method updateCache\n\t **/\n\n\t/**\n\t * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n\t * You should not cache Sprite instances as it can degrade performance.\n\t * @method uncache\n\t **/\n\n\t/**\n\t * Play (unpause) the current animation. The Sprite will be paused if either {{#crossLink \"Sprite/stop\"}}{{/crossLink}}\n\t * or {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} is called. Single frame animations will remain\n\t * unchanged.\n\t * @method play\n\t **/\n\tp.play = function() {\n\t\tthis.paused = false;\n\t};\n\n\t/**\n\t * Stop playing a running animation. The Sprite will be playing if {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}}\n\t * is called. Note that calling {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}} or {{#crossLink \"Sprite/play\"}}{{/crossLink}}\n\t * will resume playback.\n\t * @method stop\n\t **/\n\tp.stop = function() {\n\t\tthis.paused = true;\n\t};\n\n\t/**\n\t * Sets paused to false and plays the specified animation name, named frame, or frame number.\n\t * @method gotoAndPlay\n\t * @param {String|Number} frameOrAnimation The frame number or animation name that the playhead should move to\n\t * and begin playing.\n\t **/\n\tp.gotoAndPlay = function(frameOrAnimation) {\n\t\tthis.paused = false;\n\t\tthis._skipAdvance = true;\n\t\tthis._goto(frameOrAnimation);\n\t};\n\n\t/**\n\t * Sets paused to true and seeks to the specified animation name, named frame, or frame number.\n\t * @method gotoAndStop\n\t * @param {String|Number} frameOrAnimation The frame number or animation name that the playhead should move to\n\t * and stop.\n\t **/\n\tp.gotoAndStop = function(frameOrAnimation) {\n\t\tthis.paused = true;\n\t\tthis._goto(frameOrAnimation);\n\t};\n\n\t/**\n\t * Advances the playhead. This occurs automatically each tick by default.\n\t * @param [time] {Number} The amount of time in ms to advance by. Only applicable if framerate is set on the Sprite\n\t * or its SpriteSheet.\n\t * @method advance\n\t*/\n\tp.advance = function(time) {\n\t\tvar fps = this.framerate || this.spriteSheet.framerate;\n\t\tvar t = (fps && time != null) ? time/(1000/fps) : 1;\n\t\tthis._normalizeFrame(t);\n\t};\n\t\n\t/**\n\t * Returns a {{#crossLink \"Rectangle\"}}{{/crossLink}} instance defining the bounds of the current frame relative to\n\t * the origin. For example, a 90 x 70 frame with <code>regX=50</code> and <code>regY=40</code> would return a\n\t * rectangle with [x=-50, y=-40, width=90, height=70]. This ignores transformations on the display object.\n\t *\n\t * Also see the SpriteSheet {{#crossLink \"SpriteSheet/getFrameBounds\"}}{{/crossLink}} method.\n\t * @method getBounds\n\t * @return {Rectangle} A Rectangle instance. Returns null if the frame does not exist, or the image is not fully\n\t * loaded.\n\t **/\n\tp.getBounds = function() {\n\t\t// TODO: should this normalizeFrame?\n\t\treturn this.DisplayObject_getBounds() || this.spriteSheet.getFrameBounds(this.currentFrame, this._rectangle);\n\t};\n\n\t/**\n\t * Returns a clone of the Sprite instance. Note that the same SpriteSheet is shared between cloned\n\t * instances.\n\t * @method clone\n\t * @return {Sprite} a clone of the Sprite instance.\n\t **/\n\tp.clone = function() {\n\t\treturn this._cloneProps(new Sprite(this.spriteSheet));\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[Sprite (name=\"+  this.name +\")]\";\n\t};\n\n// private methods:\n\t/**\n\t * @method _cloneProps\n\t * @param {Sprite} o\n\t * @return {Sprite} o\n\t * @protected\n\t **/\n\tp._cloneProps = function(o) {\n\t\tthis.DisplayObject__cloneProps(o);\n\t\to.currentFrame = this.currentFrame;\n\t\to.currentAnimation = this.currentAnimation;\n\t\to.paused = this.paused;\n\t\to.currentAnimationFrame = this.currentAnimationFrame;\n\t\to.framerate = this.framerate;\n\t\t\n\t\to._animation = this._animation;\n\t\to._currentFrame = this._currentFrame;\n\t\to._skipAdvance = this._skipAdvance;\n\t\treturn o;\n\t};\n\t\n\t/**\n\t * Advances the <code>currentFrame</code> if paused is not true. This is called automatically when the {{#crossLink \"Stage\"}}{{/crossLink}}\n\t * ticks.\n\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n\t * @protected\n\t * @method _tick\n\t **/\n\tp._tick = function(evtObj) {\n\t\tif (!this.paused) {\n\t\t\tif (!this._skipAdvance) { this.advance(evtObj&&evtObj.delta); }\n\t\t\tthis._skipAdvance = false;\n\t\t}\n\t\tthis.DisplayObject__tick(evtObj);\n\t};\n\n\n\t/**\n\t * Normalizes the current frame, advancing animations and dispatching callbacks as appropriate.\n\t * @protected\n\t * @method _normalizeFrame\n\t **/\n\tp._normalizeFrame = function(frameDelta) {\n\t\tframeDelta = frameDelta || 0;\n\t\tvar animation = this._animation;\n\t\tvar paused = this.paused;\n\t\tvar frame = this._currentFrame;\n\t\tvar l;\n\t\t\n\t\tif (animation) {\n\t\t\tvar speed = animation.speed || 1;\n\t\t\tvar animFrame = this.currentAnimationFrame;\n\t\t\tl = animation.frames.length;\n\t\t\tif (animFrame + frameDelta * speed >= l) {\n\t\t\t\tvar next = animation.next;\n\t\t\t\tif (this._dispatchAnimationEnd(animation, frame, paused, next, l - 1)) {\n\t\t\t\t\t// something changed in the event stack, so we shouldn't make any more changes here.\n\t\t\t\t\treturn;\n\t\t\t\t} else if (next) {\n\t\t\t\t\t// sequence. Automatically calls _normalizeFrame again with the remaining frames.\n\t\t\t\t\treturn this._goto(next, frameDelta - (l - animFrame) / speed);\n\t\t\t\t} else {\n\t\t\t\t\t// end.\n\t\t\t\t\tthis.paused = true;\n\t\t\t\t\tanimFrame = animation.frames.length - 1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tanimFrame += frameDelta * speed;\n\t\t\t}\n\t\t\tthis.currentAnimationFrame = animFrame;\n\t\t\tthis._currentFrame = animation.frames[animFrame | 0]\n\t\t} else {\n\t\t\tframe = (this._currentFrame += frameDelta);\n\t\t\tl = this.spriteSheet.getNumFrames();\n\t\t\tif (frame >= l && l > 0) {\n\t\t\t\tif (!this._dispatchAnimationEnd(animation, frame, paused, l - 1)) {\n\t\t\t\t\t// looped.\n\t\t\t\t\tif ((this._currentFrame -= l) >= l) { return this._normalizeFrame(); }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tframe = this._currentFrame | 0;\n\t\tif (this.currentFrame != frame) {\n\t\t\tthis.currentFrame = frame;\n\t\t\tthis.dispatchEvent(\"change\");\n\t\t}\n\t};\n\n\t/**\n\t * Dispatches the \"animationend\" event. Returns true if a handler changed the animation (ex. calling {{#crossLink \"Sprite/stop\"}}{{/crossLink}},\n\t * {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}}, etc.)\n\t * @property _dispatchAnimationEnd\n\t * @private\n\t * @type {Function}\n\t **/\n\tp._dispatchAnimationEnd = function(animation, frame, paused, next, end) {\n\t\tvar name = animation ? animation.name : null;\n\t\tif (this.hasEventListener(\"animationend\")) {\n\t\t\tvar evt = new createjs.Event(\"animationend\");\n\t\t\tevt.name = name;\n\t\t\tevt.next = next;\n\t\t\tthis.dispatchEvent(evt);\n\t\t}\n\t\t// did the animation get changed in the event stack?:\n\t\tvar changed = (this._animation != animation || this._currentFrame != frame);\n\t\t// if the animation hasn't changed, but the sprite was paused, then we want to stick to the last frame:\n\t\tif (!changed && !paused && this.paused) { this.currentAnimationFrame = end; changed = true; }\n\t\treturn changed;\n\t};\n\n\t/**\n\t * Moves the playhead to the specified frame number or animation.\n\t * @method _goto\n\t * @param {String|Number} frameOrAnimation The frame number or animation that the playhead should move to.\n\t * @param {Boolean} [frame] The frame of the animation to go to. Defaults to 0.\n\t * @protected\n\t **/\n\tp._goto = function(frameOrAnimation, frame) {\n\t\tthis.currentAnimationFrame = 0;\n\t\tif (isNaN(frameOrAnimation)) {\n\t\t\tvar data = this.spriteSheet.getAnimation(frameOrAnimation);\n\t\t\tif (data) {\n\t\t\t\tthis._animation = data;\n\t\t\t\tthis.currentAnimation = frameOrAnimation;\n\t\t\t\tthis._normalizeFrame(frame);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.currentAnimation = this._animation = null;\n\t\t\tthis._currentFrame = frameOrAnimation;\n\t\t\tthis._normalizeFrame();\n\t\t}\n\t};\n\n\n\tcreatejs.Sprite = createjs.promote(Sprite, \"DisplayObject\");\n}());\n\n//##############################################################################\n// Shape.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * A Shape allows you to display vector art in the display list. It composites a {{#crossLink \"Graphics\"}}{{/crossLink}}\n\t * instance which exposes all of the vector drawing methods. The Graphics instance can be shared between multiple Shape\n\t * instances to display the same vector graphics with different positions or transforms.\n\t *\n\t * If the vector art will not\n\t * change between draws, you may want to use the {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} method to reduce the\n\t * rendering cost.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var graphics = new createjs.Graphics().beginFill(\"#ff0000\").drawRect(0, 0, 100, 100);\n\t *      var shape = new createjs.Shape(graphics);\n\t *\n\t *      //Alternatively use can also use the graphics property of the Shape class to renderer the same as above.\n\t *      var shape = new createjs.Shape();\n\t *      shape.graphics.beginFill(\"#ff0000\").drawRect(0, 0, 100, 100);\n\t *\n\t * @class Shape\n\t * @extends DisplayObject\n\t * @constructor\n\t * @param {Graphics} graphics Optional. The graphics instance to display. If null, a new Graphics instance will be created.\n\t **/\n\tfunction Shape(graphics) {\n\t\tthis.DisplayObject_constructor();\n\t\t\n\t\t\n\t// public properties:\n\t\t/**\n\t\t * The graphics instance to display.\n\t\t * @property graphics\n\t\t * @type Graphics\n\t\t **/\n\t\tthis.graphics = graphics ? graphics : new createjs.Graphics();\n\t}\n\tvar p = createjs.extend(Shape, createjs.DisplayObject);\n\n\t// TODO: deprecated\n\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n\n// public methods:\n\t/**\n\t * Returns true or false indicating whether the Shape would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the Shape would be visible if drawn to a canvas\n\t **/\n\tp.isVisible = function() {\n\t\tvar hasContent = this.cacheCanvas || (this.graphics && !this.graphics.isEmpty());\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t};\n\n\t/**\n\t * Draws the Shape into the specified context ignoring its visible, alpha, shadow, and transform. Returns true if\n\t * the draw was handled (useful for overriding functionality).\n\t *\n\t * <i>NOTE: This method is mainly for internal use, though it may be useful for advanced uses.</i>\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache. For example,\n\t * used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\n\t * @return {Boolean}\n\t **/\n\tp.draw = function(ctx, ignoreCache) {\n\t\tif (this.DisplayObject_draw(ctx, ignoreCache)) { return true; }\n\t\tthis.graphics.draw(ctx, this);\n\t\treturn true;\n\t};\n\n\t/**\n\t * Returns a clone of this Shape. Some properties that are specific to this instance's current context are reverted to\n\t * their defaults (for example .parent).\n\t * @method clone\n\t * @param {Boolean} recursive If true, this Shape's {{#crossLink \"Graphics\"}}{{/crossLink}} instance will also be\n\t * cloned. If false, the Graphics instance will be shared with the new Shape.\n\t **/\n\tp.clone = function(recursive) {\n\t\tvar g = (recursive && this.graphics) ? this.graphics.clone() : this.graphics;\n\t\treturn  this._cloneProps(new Shape(g));\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[Shape (name=\"+  this.name +\")]\";\n\t};\n\n\n\tcreatejs.Shape = createjs.promote(Shape, \"DisplayObject\");\n}());\n\n//##############################################################################\n// Text.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Display one or more lines of dynamic text (not user editable) in the display list. Line wrapping support (using the\n\t * lineWidth) is very basic, wrapping on spaces and tabs only. Note that as an alternative to Text, you can position HTML\n\t * text above or below the canvas relative to items in the display list using the {{#crossLink \"DisplayObject/localToGlobal\"}}{{/crossLink}}\n\t * method, or using {{#crossLink \"DOMElement\"}}{{/crossLink}}.\n\t *\n\t * <b>Please note that Text does not support HTML text, and can only display one font style at a time.</b> To use\n\t * multiple font styles, you will need to create multiple text instances, and position them manually.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var text = new createjs.Text(\"Hello World\", \"20px Arial\", \"#ff7700\");\n\t *      text.x = 100;\n\t *      text.textBaseline = \"alphabetic\";\n\t *\n\t * CreateJS Text supports web fonts (the same rules as Canvas). The font must be loaded and supported by the browser\n\t * before it can be displayed.\n\t *\n\t * <strong>Note:</strong> Text can be expensive to generate, so cache instances where possible. Be aware that not all\n\t * browsers will render Text exactly the same.\n\t * @class Text\n\t * @extends DisplayObject\n\t * @constructor\n\t * @param {String} [text] The text to display.\n\t * @param {String} [font] The font style to use. Any valid value for the CSS font attribute is acceptable (ex. \"bold\n\t * 36px Arial\").\n\t * @param {String} [color] The color to draw the text in. Any valid value for the CSS color attribute is acceptable (ex.\n\t * \"#F00\", \"red\", or \"#FF0000\").\n\t **/\n\tfunction Text(text, font, color) {\n\t\tthis.DisplayObject_constructor();\n\t\t\n\t\t\n\t// public properties:\n\t\t/**\n\t\t * The text to display.\n\t\t * @property text\n\t\t * @type String\n\t\t **/\n\t\tthis.text = text;\n\t\n\t\t/**\n\t\t * The font style to use. Any valid value for the CSS font attribute is acceptable (ex. \"bold 36px Arial\").\n\t\t * @property font\n\t\t * @type String\n\t\t **/\n\t\tthis.font = font;\n\t\n\t\t/**\n\t\t * The color to draw the text in. Any valid value for the CSS color attribute is acceptable (ex. \"#F00\"). Default is \"#000\".\n\t\t * It will also accept valid canvas fillStyle values.\n\t\t * @property color\n\t\t * @type String\n\t\t **/\n\t\tthis.color = color;\n\t\n\t\t/**\n\t\t * The horizontal text alignment. Any of \"start\", \"end\", \"left\", \"right\", and \"center\". For detailed\n\t\t * information view the\n\t\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">\n\t\t * whatwg spec</a>. Default is \"left\".\n\t\t * @property textAlign\n\t\t * @type String\n\t\t **/\n\t\tthis.textAlign = \"left\";\n\t\n\t\t/**\n\t\t * The vertical alignment point on the font. Any of \"top\", \"hanging\", \"middle\", \"alphabetic\", \"ideographic\", or\n\t\t * \"bottom\". For detailed information view the <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">\n\t\t * whatwg spec</a>. Default is \"top\".\n\t\t * @property textBaseline\n\t\t * @type String\n\t\t*/\n\t\tthis.textBaseline = \"top\";\n\t\n\t\t/**\n\t\t * The maximum width to draw the text. If maxWidth is specified (not null), the text will be condensed or\n\t\t * shrunk to make it fit in this width. For detailed information view the\n\t\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">\n\t\t * whatwg spec</a>.\n\t\t * @property maxWidth\n\t\t * @type Number\n\t\t*/\n\t\tthis.maxWidth = null;\n\t\n\t\t/**\n\t\t * If greater than 0, the text will be drawn as a stroke (outline) of the specified width.\n\t\t * @property outline\n\t\t * @type Number\n\t\t **/\n\t\tthis.outline = 0;\n\t\n\t\t/**\n\t\t * Indicates the line height (vertical distance between baselines) for multi-line text. If null or 0,\n\t\t * the value of getMeasuredLineHeight is used.\n\t\t * @property lineHeight\n\t\t * @type Number\n\t\t **/\n\t\tthis.lineHeight = 0;\n\t\n\t\t/**\n\t\t * Indicates the maximum width for a line of text before it is wrapped to multiple lines. If null,\n\t\t * the text will not be wrapped.\n\t\t * @property lineWidth\n\t\t * @type Number\n\t\t **/\n\t\tthis.lineWidth = null;\n\t}\n\tvar p = createjs.extend(Text, createjs.DisplayObject);\n\n\t// TODO: deprecated\n\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n\t\n// static properties:\n\t/**\n\t * @property _workingContext\n\t * @type CanvasRenderingContext2D\n\t * @private\n\t **/\n\tvar canvas = (createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\"));\n\tif (canvas.getContext) { Text._workingContext = canvas.getContext(\"2d\"); canvas.width = canvas.height = 1; }\n\t\n\t\n// constants:\n\t/**\n\t * Lookup table for the ratio to offset bounds x calculations based on the textAlign property.\n\t * @property H_OFFSETS\n\t * @type Object\n\t * @protected\n\t * @static\n\t **/\n\tText.H_OFFSETS = {start: 0, left: 0, center: -0.5, end: -1, right: -1};\n\t\n\t/**\n\t * Lookup table for the ratio to offset bounds y calculations based on the textBaseline property.\n\t * @property H_OFFSETS\n\t * @type Object\n\t * @protected\n\t * @static\n\t **/\n\tText.V_OFFSETS = {top: 0, hanging: -0.01, middle: -0.4, alphabetic: -0.8, ideographic: -0.85, bottom: -1};\n\n\n// public methods:\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Whether the display object would be visible if drawn to a canvas\n\t **/\n\tp.isVisible = function() {\n\t\tvar hasContent = this.cacheCanvas || (this.text != null && this.text !== \"\");\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t};\n\n\t/**\n\t * Draws the Text into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} ignoreCache Indicates whether the draw operation should ignore any current cache.\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t * into itself).\n\t **/\n\tp.draw = function(ctx, ignoreCache) {\n\t\tif (this.DisplayObject_draw(ctx, ignoreCache)) { return true; }\n\n\t\tvar col = this.color || \"#000\";\n\t\tif (this.outline) { ctx.strokeStyle = col; ctx.lineWidth = this.outline*1; }\n\t\telse { ctx.fillStyle = col; }\n\t\t\n\t\tthis._drawText(this._prepContext(ctx));\n\t\treturn true;\n\t};\n\n\t/**\n\t * Returns the measured, untransformed width of the text without wrapping. Use getBounds for a more robust value.\n\t * @method getMeasuredWidth\n\t * @return {Number} The measured, untransformed width of the text.\n\t **/\n\tp.getMeasuredWidth = function() {\n\t\treturn this._getMeasuredWidth(this.text);\n\t};\n\n\t/**\n\t * Returns an approximate line height of the text, ignoring the lineHeight property. This is based on the measured\n\t * width of a \"M\" character multiplied by 1.2, which provides an approximate line height for most fonts.\n\t * @method getMeasuredLineHeight\n\t * @return {Number} an approximate line height of the text, ignoring the lineHeight property. This is\n\t * based on the measured width of a \"M\" character multiplied by 1.2, which approximates em for most fonts.\n\t **/\n\tp.getMeasuredLineHeight = function() {\n\t\treturn this._getMeasuredWidth(\"M\")*1.2;\n\t};\n\n\t/**\n\t * Returns the approximate height of multi-line text by multiplying the number of lines against either the\n\t * <code>lineHeight</code> (if specified) or {{#crossLink \"Text/getMeasuredLineHeight\"}}{{/crossLink}}. Note that\n\t * this operation requires the text flowing logic to run, which has an associated CPU cost.\n\t * @method getMeasuredHeight\n\t * @return {Number} The approximate height of the untransformed multi-line text.\n\t **/\n\tp.getMeasuredHeight = function() {\n\t\treturn this._drawText(null,{}).height;\n\t};\n\n\t/**\n\t * Docced in superclass.\n\t */\n\tp.getBounds = function() {\n\t\tvar rect = this.DisplayObject_getBounds();\n\t\tif (rect) { return rect; }\n\t\tif (this.text == null || this.text === \"\") { return null; }\n\t\tvar o = this._drawText(null, {});\n\t\tvar w = (this.maxWidth && this.maxWidth < o.width) ? this.maxWidth : o.width;\n\t\tvar x = w * Text.H_OFFSETS[this.textAlign||\"left\"];\n\t\tvar lineHeight = this.lineHeight||this.getMeasuredLineHeight();\n\t\tvar y = lineHeight * Text.V_OFFSETS[this.textBaseline||\"top\"];\n\t\treturn this._rectangle.setValues(x, y, w, o.height);\n\t};\n\t\n\t/**\n\t * Returns an object with width, height, and lines properties. The width and height are the visual width and height\n\t * of the drawn text. The lines property contains an array of strings, one for\n\t * each line of text that will be drawn, accounting for line breaks and wrapping. These strings have trailing\n\t * whitespace removed.\n\t * @method getMetrics\n\t * @return {Object} An object with width, height, and lines properties.\n\t **/\n\tp.getMetrics = function() {\n\t\tvar o = {lines:[]};\n\t\to.lineHeight = this.lineHeight || this.getMeasuredLineHeight();\n\t\to.vOffset = o.lineHeight * Text.V_OFFSETS[this.textBaseline||\"top\"];\n\t\treturn this._drawText(null, o, o.lines);\n\t};\n\n\t/**\n\t * Returns a clone of the Text instance.\n\t * @method clone\n\t * @return {Text} a clone of the Text instance.\n\t **/\n\tp.clone = function() {\n\t\treturn this._cloneProps(new Text(this.text, this.font, this.color));\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[Text (text=\"+  (this.text.length > 20 ? this.text.substr(0, 17)+\"...\" : this.text) +\")]\";\n\t};\n\n\n// private methods:\n\t/**\n\t * @method _cloneProps\n\t * @param {Text} o\n\t * @protected\n\t * @return {Text} o\n\t **/\n\tp._cloneProps = function(o) {\n\t\tthis.DisplayObject__cloneProps(o);\n\t\to.textAlign = this.textAlign;\n\t\to.textBaseline = this.textBaseline;\n\t\to.maxWidth = this.maxWidth;\n\t\to.outline = this.outline;\n\t\to.lineHeight = this.lineHeight;\n\t\to.lineWidth = this.lineWidth;\n\t\treturn o;\n\t};\n\n\t/**\n\t * @method _getWorkingContext\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @return {CanvasRenderingContext2D}\n\t * @protected\n\t **/\n\tp._prepContext = function(ctx) {\n\t\tctx.font = this.font||\"10px sans-serif\";\n\t\tctx.textAlign = this.textAlign||\"left\";\n\t\tctx.textBaseline = this.textBaseline||\"top\";\n\t\tctx.lineJoin = \"miter\";\n\t\tctx.miterLimit = 2.5;\n\t\treturn ctx;\n\t};\n\n\t/**\n\t * Draws multiline text.\n\t * @method _drawText\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {Object} o\n\t * @param {Array} lines\n\t * @return {Object}\n\t * @protected\n\t **/\n\tp._drawText = function(ctx, o, lines) {\n\t\tvar paint = !!ctx;\n\t\tif (!paint) {\n\t\t\tctx = Text._workingContext;\n\t\t\tctx.save();\n\t\t\tthis._prepContext(ctx);\n\t\t}\n\t\tvar lineHeight = this.lineHeight||this.getMeasuredLineHeight();\n\t\t\n\t\tvar maxW = 0, count = 0;\n\t\tvar hardLines = String(this.text).split(/(?:\\r\\n|\\r|\\n)/);\n\t\tfor (var i=0, l=hardLines.length; i<l; i++) {\n\t\t\tvar str = hardLines[i];\n\t\t\tvar w = null;\n\t\t\t\n\t\t\tif (this.lineWidth != null && (w = ctx.measureText(str).width) > this.lineWidth) {\n\t\t\t\t// text wrapping:\n\t\t\t\tvar words = str.split(/(\\s)/);\n\t\t\t\tstr = words[0];\n\t\t\t\tw = ctx.measureText(str).width;\n\t\t\t\t\n\t\t\t\tfor (var j=1, jl=words.length; j<jl; j+=2) {\n\t\t\t\t\t// Line needs to wrap:\n\t\t\t\t\tvar wordW = ctx.measureText(words[j] + words[j+1]).width;\n\t\t\t\t\tif (w + wordW > this.lineWidth) {\n\t\t\t\t\t\tif (paint) { this._drawTextLine(ctx, str, count*lineHeight); }\n\t\t\t\t\t\tif (lines) { lines.push(str); }\n\t\t\t\t\t\tif (w > maxW) { maxW = w; }\n\t\t\t\t\t\tstr = words[j+1];\n\t\t\t\t\t\tw = ctx.measureText(str).width;\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstr += words[j] + words[j+1];\n\t\t\t\t\t\tw += wordW;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (paint) { this._drawTextLine(ctx, str, count*lineHeight); }\n\t\t\tif (lines) { lines.push(str); }\n\t\t\tif (o && w == null) { w = ctx.measureText(str).width; }\n\t\t\tif (w > maxW) { maxW = w; }\n\t\t\tcount++;\n\t\t}\n\t\t\n\t\tif (o) {\n\t\t\to.width = maxW;\n\t\t\to.height = count*lineHeight;\n\t\t}\n\t\tif (!paint) { ctx.restore(); }\n\t\treturn o;\n\t};\n\n\t/**\n\t * @method _drawTextLine\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {String} text\n\t * @param {Number} y\n\t * @protected\n\t **/\n\tp._drawTextLine = function(ctx, text, y) {\n\t\t// Chrome 17 will fail to draw the text if the last param is included but null, so we feed it a large value instead:\n\t\tif (this.outline) { ctx.strokeText(text, 0, y, this.maxWidth||0xFFFF); }\n\t\telse { ctx.fillText(text, 0, y, this.maxWidth||0xFFFF); }\n\t};\n\t\n\t\n\t/**\n\t * @method _getMeasuredWidth\n\t * @param {String} text\n\t * @protected\n\t **/\n\tp._getMeasuredWidth = function(text) {\n\t\tvar ctx = Text._workingContext;\n\t\tctx.save();\n\t\tvar w = this._prepContext(ctx).measureText(text).width;\n\t\tctx.restore();\n\t\treturn w;\n\t};\n\n\n\tcreatejs.Text = createjs.promote(Text, \"DisplayObject\");\n}());\n\n//##############################################################################\n// BitmapText.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Displays text using bitmap glyphs defined in a sprite sheet. Multi-line text is supported using new line characters,\n\t * but automatic wrapping is not supported. See the {{#crossLink \"BitmapText/spriteSheet:property\"}}{{/crossLink}}\n\t * property for more information on defining glyphs.\n\t *\n\t * <strong>Important:</strong> While BitmapText extends Container, it is not designed to be used as one.\n\t * As such, methods like addChild and removeChild are disabled.\n\t *\n\t *\n\t * @class BitmapText\n\t * @extends DisplayObject\n\t * @param {String} [text=\"\"] The text to display.\n\t * @param {SpriteSheet} [spriteSheet=null] The spritesheet that defines the character glyphs.\n\t * @constructor\n\t **/\n\tfunction BitmapText(text, spriteSheet) {\n\t\tthis.Container_constructor();\n\t\t\n\t\t\n\t// public properties:\n\t\t/**\n\t\t * The text to display.\n\t\t * @property text\n\t\t * @type String\n\t\t * @default \"\"\n\t\t **/\n\t\tthis.text = text||\"\";\n\t\t\n\t\t/**\n\t\t * A SpriteSheet instance that defines the glyphs for this bitmap text. Each glyph/character\n\t\t * should have a single frame animation defined in the sprite sheet named the same as\n\t\t * corresponding character. For example, the following animation definition:\n\t\t *\n\t\t * \t\t\"A\": {frames: [0]}\n\t\t *\n\t\t * would indicate that the frame at index 0 of the spritesheet should be drawn for the \"A\" character. The short form\n\t\t * is also acceptable:\n\t\t * \n\t\t * \t\t\"A\": 0\n\t\t *\n\t\t * Note that if a character in the text is not found in the sprite sheet, it will also\n\t\t * try to use the alternate case (upper or lower).\n\t\t *\n\t\t * See SpriteSheet for more information on defining sprite sheet data.\n\t\t * @property spriteSheet\n\t\t * @type SpriteSheet\n\t\t * @default null\n\t\t **/\n\t\tthis.spriteSheet = spriteSheet;\n\t\n\t\t/**\n\t\t * The height of each line of text. If 0, then it will use a line height calculated\n\t\t * by checking for the height of the \"1\", \"T\", or \"L\" character (in that order). If\n\t\t * those characters are not defined, it will use the height of the first frame of the\n\t\t * sprite sheet.\n\t\t * @property lineHeight\n\t\t * @type Number\n\t\t * @default 0\n\t\t **/\n\t\tthis.lineHeight = 0;\n\t\n\t\t/**\n\t\t * This spacing (in pixels) will be added after each character in the output.\n\t\t * @property letterSpacing\n\t\t * @type Number\n\t\t * @default 0\n\t\t **/\n\t\tthis.letterSpacing = 0;\n\t\n\t\t/**\n\t\t * If a space character is not defined in the sprite sheet, then empty pixels equal to\n\t\t * spaceWidth will be inserted instead. If 0, then it will use a value calculated\n\t\t * by checking for the width of the \"1\", \"l\", \"E\", or \"A\" character (in that order). If\n\t\t * those characters are not defined, it will use the width of the first frame of the\n\t\t * sprite sheet.\n\t\t * @property spaceWidth\n\t\t * @type Number\n\t\t * @default 0\n\t\t **/\n\t\tthis.spaceWidth = 0;\n\t\t\n\t\t\n\t// private properties:\n\t \t/**\n\t\t * @property _oldProps\n\t\t * @type Object\n\t\t * @protected\n\t\t **/\n\t\tthis._oldProps = {text:0,spriteSheet:0,lineHeight:0,letterSpacing:0,spaceWidth:0};\n\n\t\t/**\n\t\t * Used to track the object which this class attached listeners to, helps optimize listener attachment.\n\t\t * @property _oldStage\n\t\t * @type Stage\n\t\t * @protected\n\t\t */\n\t\tthis._oldStage = null;\n\t\t/**\n\t\t * The event listener proxy triggered drawing draw for special circumstances.\n\t\t * @property _drawAction\n\t\t * @type function\n\t\t * @protected\n\t\t */\n\t\tthis._drawAction = null;\n\t}\n\tvar p = createjs.extend(BitmapText, createjs.Container);\n\n// static properties:\n\t/**\n\t * BitmapText uses Sprite instances to draw text. To reduce the creation and destruction of instances (and thus garbage collection), it maintains\n\t * an internal object pool of sprite instances to reuse. Increasing this value can cause more sprites to be\n\t * retained, slightly increasing memory use, but reducing instantiation.\n\t * @property maxPoolSize\n\t * @type Number\n\t * @static\n\t * @default 100\n\t **/\n\tBitmapText.maxPoolSize = 100;\n\t\n\t/**\n\t * Sprite object pool.\n\t * @type {Array}\n\t * @static\n\t * @private\n\t */\n\tBitmapText._spritePool = [];\n\n\t\n// public methods:\n\t/**\n\t * Docced in superclass.\n\t **/\n\tp.draw = function(ctx, ignoreCache) {\n\t\tif (this.DisplayObject_draw(ctx, ignoreCache)) { return; }\n\t\tthis._updateState();\n\t\tthis.Container_draw(ctx, ignoreCache);\n\t};\n\t\n\t/**\n\t * Docced in superclass.\n\t **/\n\tp.getBounds = function() {\n\t\tthis._updateText();\n\t\treturn this.Container_getBounds();\n\t};\n\t\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t **/\n\tp.isVisible = function() {\n\t\tvar hasContent = this.cacheCanvas || (this.spriteSheet && this.spriteSheet.complete && this.text);\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX !== 0 && this.scaleY !== 0 && hasContent);\n\t};\n\t\n\tp.clone = function() {\n\t\treturn this._cloneProps(new BitmapText(this.text, this.spriteSheet));\n\t};\n\t\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t * @method addChild\n\t **/\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t * @method addChildAt\n\t **/\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t * @method removeChild\n\t **/\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t * @method removeChildAt\n\t **/\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t * @method removeAllChildren\n\t **/\n\tp.addChild = p.addChildAt = p.removeChild = p.removeChildAt = p.removeAllChildren = function() {};\n\n\n// private methods:\n\t/**\n\t * Docced in superclass.\n\t **/\n\tp._updateState = function() {\n\t\tthis._updateText();\n\t};\n\n \t/**\n\t * @method _cloneProps\n\t * @param {BitmapText} o\n\t * @return {BitmapText} o\n\t * @protected\n\t **/\n\tp._cloneProps = function(o) {\n\t\tthis.Container__cloneProps(o);\n\t\to.lineHeight = this.lineHeight;\n\t\to.letterSpacing = this.letterSpacing;\n\t\to.spaceWidth = this.spaceWidth;\n\t\treturn o;\n\t};\n\t\n\t/**\n\t * @method _getFrameIndex\n\t * @param {String} character\n\t * @param {SpriteSheet} spriteSheet\n\t * @return {Number}\n\t * @protected\n\t **/\n\tp._getFrameIndex = function(character, spriteSheet) {\n\t\tvar c, o = spriteSheet.getAnimation(character);\n\t\tif (!o) {\n\t\t\t(character != (c = character.toUpperCase())) || (character != (c = character.toLowerCase())) || (c=null);\n\t\t\tif (c) { o = spriteSheet.getAnimation(c); }\n\t\t}\n\t\treturn o && o.frames[0];\n\t};\n\t\n\t/**\n\t * @method _getFrame\n\t * @param {String} character\n\t * @param {SpriteSheet} spriteSheet\n\t * @return {Object}\n\t * @protected\n\t **/\n\tp._getFrame = function(character, spriteSheet) {\n\t\tvar index = this._getFrameIndex(character, spriteSheet);\n\t\treturn index == null ? index : spriteSheet.getFrame(index);\n\t};\n\n\t/**\n\t * @method _getLineHeight\n\t * @param {SpriteSheet} ss\n\t * @return {Number}\n\t * @protected\n\t **/\n\tp._getLineHeight = function(ss) {\n\t\tvar frame = this._getFrame(\"1\",ss) || this._getFrame(\"T\",ss) || this._getFrame(\"L\",ss) || ss.getFrame(0);\n\t\treturn frame ? frame.rect.height : 1;\n\t};\n\n\t/**\n\t * @method _getSpaceWidth\n\t * @param {SpriteSheet} ss\n\t * @return {Number}\n\t * @protected\n\t **/\n\tp._getSpaceWidth = function(ss) {\n\t\tvar frame = this._getFrame(\"1\",ss) || this._getFrame(\"l\",ss) || this._getFrame(\"e\",ss) || this._getFrame(\"a\",ss) || ss.getFrame(0);\n\t\treturn frame ? frame.rect.width : 1;\n\t};\n\n\t/**\n\t * @method _updateText\n\t * @protected\n\t **/\n\tp._updateText = function() {\n\t\tvar x=0, y=0, o=this._oldProps, change=false, spaceW=this.spaceWidth, lineH=this.lineHeight, ss=this.spriteSheet;\n\t\tvar pool=BitmapText._spritePool, kids=this.children, childIndex=0, numKids=kids.length, sprite;\n\t\t\n\t\tfor (var n in o) {\n\t\t\tif (o[n] != this[n]) {\n\t\t\t\to[n] = this[n];\n\t\t\t\tchange = true;\n\t\t\t}\n\t\t}\n\t\tif (!change) { return; }\n\t\t\n\t\tvar hasSpace = !!this._getFrame(\" \", ss);\n\t\tif (!hasSpace && !spaceW) { spaceW = this._getSpaceWidth(ss); }\n\t\tif (!lineH) { lineH = this._getLineHeight(ss); }\n\t\t\n\t\tfor(var i=0, l=this.text.length; i<l; i++) {\n\t\t\tvar character = this.text.charAt(i);\n\t\t\tif (character == \" \" && !hasSpace) {\n\t\t\t\tx += spaceW;\n\t\t\t\tcontinue;\n\t\t\t} else if (character==\"\\n\" || character==\"\\r\") {\n\t\t\t\tif (character==\"\\r\" && this.text.charAt(i+1) == \"\\n\") { i++; } // crlf\n\t\t\t\tx = 0;\n\t\t\t\ty += lineH;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar index = this._getFrameIndex(character, ss);\n\t\t\tif (index == null) { continue; }\n\t\t\t\n\t\t\tif (childIndex < numKids) {\n\t\t\t\tsprite = kids[childIndex];\n\t\t\t} else {\n\t\t\t\tkids.push(sprite = pool.length ? pool.pop() : new createjs.Sprite());\n\t\t\t\tsprite.parent = this;\n\t\t\t\tnumKids++;\n\t\t\t}\n\t\t\tsprite.spriteSheet = ss;\n\t\t\tsprite.gotoAndStop(index);\n\t\t\tsprite.x = x;\n\t\t\tsprite.y = y;\n\t\t\tchildIndex++;\n\t\t\t\n\t\t\tx += sprite.getBounds().width + this.letterSpacing;\n\t\t}\n\t\twhile (numKids > childIndex) {\n\t\t\t // faster than removeChild.\n\t\t\tpool.push(sprite = kids.pop());\n\t\t\tsprite.parent = null;\n\t\t\tnumKids--;\n\t\t}\n\t\tif (pool.length > BitmapText.maxPoolSize) { pool.length = BitmapText.maxPoolSize; }\n\t};\n\n\n\tcreatejs.BitmapText = createjs.promote(BitmapText, \"Container\");\n}());\n\n//##############################################################################\n// MovieClip.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * The MovieClip class associates a TweenJS Timeline with an EaselJS {{#crossLink \"Container\"}}{{/crossLink}}. It allows\n\t * you to create objects which encapsulate timeline animations, state changes, and synched actions. The MovieClip\n\t * class has been included in the EaselJS minified file since 0.7.0.\n\t *\n\t * Currently MovieClip only works properly if it is tick based (as opposed to time based) though some concessions have\n\t * been made to support time-based timelines in the future.\n\t *\n\t * <h4>Example</h4>\n\t * This example animates two shapes back and forth. The grey shape starts on the left, but we jump to a mid-point in\n\t * the animation using {{#crossLink \"MovieClip/gotoAndPlay\"}}{{/crossLink}}.\n\t *\n\t *      var stage = new createjs.Stage(\"canvas\");\n\t *      createjs.Ticker.addEventListener(\"tick\", stage);\n\t *\n\t *      var mc = new createjs.MovieClip({loop:-1, labels:{myLabel:20}});\n\t *      stage.addChild(mc);\n\t *\n\t *      var child1 = new createjs.Shape(\n\t *          new createjs.Graphics().beginFill(\"#999999\")\n\t *              .drawCircle(30,30,30));\n\t *      var child2 = new createjs.Shape(\n\t *          new createjs.Graphics().beginFill(\"#5a9cfb\")\n\t *              .drawCircle(30,30,30));\n\t *\n\t *      mc.timeline.addTween(\n\t *          createjs.Tween.get(child1)\n\t *              .to({x:0}).to({x:60}, 50).to({x:0}, 50));\n\t *      mc.timeline.addTween(\n\t *          createjs.Tween.get(child2)\n\t *              .to({x:60}).to({x:0}, 50).to({x:60}, 50));\n\t *\n\t *      mc.gotoAndPlay(\"start\");\n\t *\n\t * It is recommended to use <code>tween.to()</code> to animate and set properties (use no duration to have it set\n\t * immediately), and the <code>tween.wait()</code> method to create delays between animations. Note that using the\n\t * <code>tween.set()</code> method to affect properties will likely not provide the desired result.\n\t *\n\t * @class MovieClip\n\t * @main MovieClip\n\t * @param {Object} [props] The configuration properties to apply to this instance (ex. `{mode:MovieClip.SYNCHED}`).\n\t * Supported props for the MovieClip are listed below. These props are set on the corresponding instance properties except where\n\t * specified.<UL>\n\t *    <LI> `mode`</LI>\n\t *    <LI> `startPosition`</LI>\n\t *    <LI> `frameBounds`</LI>\n\t * </UL>\n\t * \n\t * This object will also be passed into the Timeline instance associated with this MovieClip. See the documentation\n\t * for Timeline for a list of supported props (ex. `paused`, `labels`, `loop`, `reversed`, etc.)\n\t * @extends Container\n\t * @constructor\n\t **/\n\tfunction MovieClip(props) {\n\t\tthis.Container_constructor();\n\t\t!MovieClip.inited&&MovieClip.init(); // static init\n\t\t\n\t\tvar mode, startPosition, loop, labels;\n\t\t\n\t\t// handle old params (mode, startPosition, loop, labels):\n\t\t// TODO: deprecated param handling:\n\t\tif (props instanceof String || arguments.length > 1) {\n\t\t\tmode = props;\n\t\t\tstartPosition = arguments[1];\n\t\t\tloop = arguments[2];\n\t\t\tlabels = arguments[3];\n\t\t\tif (loop == null) { loop = -1; }\n\t\t\tprops = null;\n\t\t} else if (props) {\n\t\t\tmode = props.mode;\n\t\t\tstartPosition = props.startPosition;\n\t\t\tloop = props.loop;\n\t\t\tlabels = props.labels;\n\t\t}\n\t\tif (!props) { props = {labels:labels}; }\n\t\t\n\t\t\n\t// public properties:\n\t\t/**\n\t\t * Controls how this MovieClip advances its time. Must be one of 0 (INDEPENDENT), 1 (SINGLE_FRAME), or 2 (SYNCHED).\n\t\t * See each constant for a description of the behaviour.\n\t\t * @property mode\n\t\t * @type String\n\t\t * @default null\n\t\t **/\n\t\tthis.mode = mode||MovieClip.INDEPENDENT;\n\t\n\t\t/**\n\t\t * Specifies what the first frame to play in this movieclip, or the only frame to display if mode is SINGLE_FRAME.\n\t\t * @property startPosition\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n\t\tthis.startPosition = startPosition||0;\n\t\n\t\t/**\n\t\t * Specifies how many times this MovieClip should loop. A value of -1 indicates it should loop indefinitely. A value of\n\t\t * 1 would cause it to loop once (ie. play a total of twice).\n\t\t * @property loop\n\t\t * @type Number\n\t\t * @default -1\n\t\t */\n\t\tthis.loop = loop === true ? -1 : (loop || 0);\n\t\n\t\t/**\n\t\t * The current frame of the movieclip.\n\t\t * @property currentFrame\n\t\t * @type Number\n\t\t * @default 0\n\t\t * @readonly\n\t\t */\n\t\tthis.currentFrame = 0;\n\t\n\t\t/**\n\t\t * If true, the MovieClip's position will not advance when ticked.\n\t\t * @property paused\n\t\t * @type Boolean\n\t\t * @default false\n\t\t */\n\t\tthis.paused = props.paused||false;\n\t\n\t\t/**\n\t\t * If true, actions in this MovieClip's tweens will be run when the playhead advances.\n\t\t * @property actionsEnabled\n\t\t * @type Boolean\n\t\t * @default true\n\t\t */\n\t\tthis.actionsEnabled = true;\n\t\n\t\t/**\n\t\t * If true, the MovieClip will automatically be reset to its first frame whenever the timeline adds\n\t\t * it back onto the display list. This only applies to MovieClip instances with mode=INDEPENDENT.\n\t\t * <br><br>\n\t\t * For example, if you had a character animation with a \"body\" child MovieClip instance\n\t\t * with different costumes on each frame, you could set body.autoReset = false, so that\n\t\t * you can manually change the frame it is on, without worrying that it will be reset\n\t\t * automatically.\n\t\t * @property autoReset\n\t\t * @type Boolean\n\t\t * @default true\n\t\t */\n\t\tthis.autoReset = true;\n\t\t\n\t\t/**\n\t\t * An array of bounds for each frame in the MovieClip. This is mainly intended for tool output.\n\t\t * @property frameBounds\n\t\t * @type Array\n\t\t * @default null\n\t\t */\n\t\tthis.frameBounds = this.frameBounds||props.frameBounds; // frameBounds are set on the prototype in Animate.\n\t\t\n\t\t/**\n\t\t * By default MovieClip instances advance one frame per tick. Specifying a framerate for the MovieClip\n\t\t * will cause it to advance based on elapsed time between ticks as appropriate to maintain the target\n\t\t * framerate.\n\t\t *\n\t\t * For example, if a MovieClip with a framerate of 10 is placed on a Stage being updated at 40fps, then the MovieClip will\n\t\t * advance roughly one frame every 4 ticks. This will not be exact, because the time between each tick will\n\t\t * vary slightly between frames.\n\t\t *\n\t\t * This feature is dependent on the tick event object (or an object with an appropriate \"delta\" property) being\n\t\t * passed into {{#crossLink \"Stage/update\"}}{{/crossLink}}.\n\t\t * @property framerate\n\t\t * @type {Number}\n\t\t * @default null\n\t\t **/\n\t\tthis.framerate = null;\n\t\t\n\t\t// set up the needed props for Timeline:\n\t\tprops.useTicks = props.paused = true;\n\t\t\n\t\t/**\n\t\t * The TweenJS Timeline that is associated with this MovieClip. This is created automatically when the MovieClip\n\t\t * instance is initialized. Animations are created by adding <a href=\"http://tweenjs.com\">TweenJS</a> Tween\n\t\t * instances to the timeline.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      var tween = createjs.Tween.get(target).to({x:0}).to({x:100}, 30);\n\t\t *      var mc = new createjs.MovieClip();\n\t\t *      mc.timeline.addTween(tween);\n\t\t *\n\t\t * Elements can be added and removed from the timeline by toggling an \"_off\" property\n\t\t * using the <code>tweenInstance.to()</code> method. Note that using <code>Tween.set</code> is not recommended to\n\t\t * create MovieClip animations. The following example will toggle the target off on frame 0, and then back on for\n\t\t * frame 1. You can use the \"visible\" property to achieve the same effect.\n\t\t *\n\t\t *      var tween = createjs.Tween.get(target).to({_off:false})\n\t\t *          .wait(1).to({_off:true})\n\t\t *          .wait(1).to({_off:false});\n\t\t *\n\t\t * @property timeline\n\t\t * @type Timeline\n\t\t * @default null\n\t\t */\n\t\tthis.timeline = new createjs.Timeline(props);\n\t\t\n\t\t\n\t// private properties:\n\t\t/**\n\t\t * @property _synchOffset\n\t\t * @type Number\n\t\t * @default 0\n\t\t * @private\n\t\t */\n\t\tthis._synchOffset = 0;\n\t\n\t\t/**\n\t\t * @property _rawPosition\n\t\t * @type Number\n\t\t * @default -1\n\t\t * @private\n\t\t */\n\t\tthis._rawPosition = -1; // TODO: evaluate using a ._reset Boolean prop instead of -1.\n\t\t\n\t\t/**\n\t\t * @property _bound_resolveState\n\t\t * @type Function\n\t\t * @private\n\t\t */\n\t\tthis._bound_resolveState = this._resolveState.bind(this);\n\t\n\t\n\t\t/**\n\t\t * The time remaining from the previous tick, only applicable when .framerate is set.\n\t\t * @property _t\n\t\t * @type Number\n\t\t * @private\n\t\t */\n\t\tthis._t = 0;\n\t\n\t\t/**\n\t\t * List of display objects that are actively being managed by the MovieClip.\n\t\t * @property _managed\n\t\t * @type Object\n\t\t * @private\n\t\t */\n\t\tthis._managed = {};\n\t}\n\tvar p = createjs.extend(MovieClip, createjs.Container);\n\n\n// constants:\n\t/**\n\t * The MovieClip will advance independently of its parent, even if its parent is paused.\n\t * This is the default mode.\n\t * @property INDEPENDENT\n\t * @static\n\t * @type String\n\t * @default \"independent\"\n\t * @readonly\n\t **/\n\tMovieClip.INDEPENDENT = \"independent\";\n\n\t/**\n\t * The MovieClip will only display a single frame (as determined by the startPosition property).\n\t * @property SINGLE_FRAME\n\t * @static\n\t * @type String\n\t * @default \"single\"\n\t * @readonly\n\t **/\n\tMovieClip.SINGLE_FRAME = \"single\";\n\n\t/**\n\t * The MovieClip will be advanced only when its parent advances and will be synched to the position of\n\t * the parent MovieClip.\n\t * @property SYNCHED\n\t * @static\n\t * @type String\n\t * @default \"synched\"\n\t * @readonly\n\t **/\n\tMovieClip.SYNCHED = \"synched\";\n\t\n\t\n// static properties:\n\tMovieClip.inited = false;\n\t\n\t\n// static methods:\n\tMovieClip.init = function() {\n\t\tif (MovieClip.inited) { return; }\n\t\t// plugins introduce some overhead to Tween, so we only install this if an MC is instantiated.\n\t\tMovieClipPlugin.install();\n\t\tMovieClip.inited = true;\n\t};\n\t\n\t\n// getter / setters:\n\t/**\n\t * Use the {{#crossLink \"MovieClip/labels:property\"}}{{/crossLink}} property instead.\n\t * @method _getLabels\n\t * @protected\n\t * @return {Array}\n\t **/\n\tp._getLabels = function() {\n\t\treturn this.timeline.getLabels();\n\t};\n\t// MovieClip.getLabels is @deprecated. Remove for 1.1+\n\tp.getLabels = createjs.deprecate(p._getLabels, \"MovieClip.getLabels\");\n\n\t/**\n\t * Use the {{#crossLink \"MovieClip/currentLabel:property\"}}{{/crossLink}} property instead.\n\t * @method _getCurrentLabel\n\t * @protected\n\t * @return {String}\n\t **/\n\tp._getCurrentLabel = function() {\n\t\treturn this.timeline.currentLabel;\n\t};\n\t// MovieClip.getCurrentLabel is @deprecated. Remove for 1.1+\n\tp.getCurrentLabel = createjs.deprecate(p._getCurrentLabel, \"MovieClip.getCurrentLabel\");\n\n\t/**\n\t * Use the {{#crossLink \"MovieClip/duration:property\"}}{{/crossLink}} property instead.\n\t * @method _getDuration\n\t * @protected\n\t * @return {Number}\n\t **/\n\tp._getDuration = function() {\n\t\treturn this.timeline.duration;\n\t};\n\t// MovieClip.getDuration is @deprecated. Remove for 1.1+\n\tp.getDuration = createjs.deprecate(p._getDuration, \"MovieClip.getDuration\");\n\n\t/**\n\t * Returns an array of objects with label and position (aka frame) properties, sorted by position.\n\t * @property labels\n\t * @type {Array}\n\t * @readonly\n\t **/\n\t\n\t/**\n\t * Returns the name of the label on or immediately before the current frame.\n\t * @property currentLabel\n\t * @type {String}\n\t * @readonly\n\t **/\n\t\n\t/**\n\t * Returns the duration of this MovieClip in seconds or ticks.\n\t * @property totalFrames\n\t * @type {Number}\n\t * @readonly\n\t **/\n\t\n\t/**\n\t * Returns the duration of this MovieClip in seconds or ticks.\n\t * @property duration\n\t * @type {Number}\n\t * @readonly\n\t **/\n\ttry {\n\t\tObject.defineProperties(p, {\n\t\t\tlabels: { get: p._getLabels },\n\t\t\tcurrentLabel: { get: p._getCurrentLabel },\n\t\t\ttotalFrames: { get: p._getDuration },\n\t\t\tduration: { get: p._getDuration }\n\t\t\t// TODO: can we just proxy .currentFrame to tl.position as well? Ditto for .loop (or just remove entirely).\n\t\t});\n\t} catch (e) {}\n\n\n// public methods:\n\t/**\n\t * Constructor alias for backwards compatibility. This method will be removed in future versions.\n\t * Subclasses should be updated to use {{#crossLink \"Utility Methods/extends\"}}{{/crossLink}}.\n\t * @method initialize\n\t * @deprecated in favour of `createjs.promote()`\n\t **/\n\tp.initialize = MovieClip; // TODO: Deprecated. This is for backwards support of Adobe Flash/Animate\n\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t **/\n\tp.isVisible = function() {\n\t\t// children are placed in draw, so we can't determine if we have content.\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0);\n\t};\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} ignoreCache Indicates whether the draw operation should ignore any current cache.\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t * into itself).\n\t **/\n\tp.draw = function(ctx, ignoreCache) {\n\t\t// draw to cache first:\n\t\tif (this.DisplayObject_draw(ctx, ignoreCache)) { return true; }\n\t\tthis._updateState();\n\t\tthis.Container_draw(ctx, ignoreCache);\n\t\treturn true;\n\t};\n\n\t/**\n\t * Sets paused to false.\n\t * @method play\n\t **/\n\tp.play = function() {\n\t\tthis.paused = false;\n\t};\n\t\n\t/**\n\t * Sets paused to true.\n\t * @method stop\n\t **/\n\tp.stop = function() {\n\t\tthis.paused = true;\n\t};\n\t\n\t/**\n\t * Advances this movie clip to the specified position or label and sets paused to false.\n\t * @method gotoAndPlay\n\t * @param {String|Number} positionOrLabel The animation name or frame number to go to.\n\t **/\n\tp.gotoAndPlay = function(positionOrLabel) {\n\t\tthis.paused = false;\n\t\tthis._goto(positionOrLabel);\n\t};\n\t\n\t/**\n\t * Advances this movie clip to the specified position or label and sets paused to true.\n\t * @method gotoAndStop\n\t * @param {String|Number} positionOrLabel The animation or frame name to go to.\n\t **/\n\tp.gotoAndStop = function(positionOrLabel) {\n\t\tthis.paused = true;\n\t\tthis._goto(positionOrLabel);\n\t};\n\t\n\t/**\n\t * Advances the playhead. This occurs automatically each tick by default.\n\t * @param [time] {Number} The amount of time in ms to advance by. Only applicable if framerate is set.\n\t * @method advance\n\t*/\n\tp.advance = function(time) {\n\t\tvar independent = MovieClip.INDEPENDENT;\n\t\tif (this.mode !== independent) { return; } // update happens in draw for synched clips\n\t\t\n\t\t// if this MC doesn't have a framerate, hunt ancestors for one:\n\t\tvar o=this, fps = o.framerate;\n\t\twhile ((o = o.parent) && fps === null) { if (o.mode === independent) { fps = o._framerate; } }\n\t\tthis._framerate = fps;\n\t\t\n\t\tif (this.paused) { return; }\n\t\t\n\t\t// calculate how many frames to advance:\n\t\tvar t = (fps !== null && fps !== -1 && time !== null) ? time/(1000/fps) + this._t : 1;\n\t\tvar frames = t|0;\n\t\tthis._t = t-frames; // leftover time, save to add to next advance.\n\t\t\n\t\twhile (frames--) { this._updateTimeline(this._rawPosition+1, false); }\n\t};\n\t\n\t/**\n\t * MovieClip instances cannot be cloned.\n\t * @method clone\n\t **/\n\tp.clone = function() {\n\t\t// TODO: add support for this? Need to clone the Timeline & retarget tweens - pretty complex.\n\t\tthrow(\"MovieClip cannot be cloned.\");\n\t};\n\t\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[MovieClip (name=\"+  this.name +\")]\";\n\t};\n\n\n// private methods:\n\t/**\n\t * Docced in superclass.\n\t **/\n\tp._updateState = function() {\n\t\tif (this._rawPosition === -1 || this.mode !== MovieClip.INDEPENDENT) { this._updateTimeline(-1); }\n\t};\n\n\t/**\n\t * @method _tick\n\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n\t * function.\n\t * @protected\n\t **/\n\tp._tick = function(evtObj) {\n\t\tthis.advance(evtObj&&evtObj.delta);\n\t\tthis.Container__tick(evtObj);\n\t};\n\t\n\t/**\n\t * @method _goto\n\t * @param {String|Number} positionOrLabel The animation name or frame number to go to.\n\t * @protected\n\t **/\n\tp._goto = function(positionOrLabel) {\n\t\tvar pos = this.timeline.resolve(positionOrLabel);\n\t\tif (pos == null) { return; }\n\t\tthis._t = 0;\n\t\tthis._updateTimeline(pos, true);\n\t};\n\t\n\t/**\n\t * @method _reset\n\t * @private\n\t **/\n\tp._reset = function() {\n\t\tthis._rawPosition = -1;\n\t\tthis._t = this.currentFrame = 0;\n\t\tthis.paused = false;\n\t};\n\t\n\t/**\n\t * @method _updateTimeline\n\t * @param {Boolean} jump Indicates whether this update is due to jumping (via gotoAndXX) to a new position.\n\t * @protected\n\t **/\n\tp._updateTimeline = function(rawPosition, jump) {\n\t\tvar synced = this.mode !== MovieClip.INDEPENDENT, tl = this.timeline;\n\t\tif (synced) { rawPosition = this.startPosition + (this.mode===MovieClip.SINGLE_FRAME?0:this._synchOffset); }\n\t\tif (rawPosition < 0) { rawPosition = 0; }\n\t\tif (this._rawPosition === rawPosition && !synced) { return; }\n\t\tthis._rawPosition = rawPosition;\n\t\t\n\t\t// update timeline position, ignoring actions if this is a graphic.\n\t\ttl.loop = this.loop; // TODO: should we maintain this on MovieClip, or just have it on timeline?\n\t\ttl.setPosition(rawPosition, synced || !this.actionsEnabled, jump, this._bound_resolveState);\n\t};\n\t\n\t/**\n\t * Renders position 0 without running actions or updating _rawPosition.\n\t * Primarily used by Animate CC to build out the first frame in the constructor of MC symbols.\n\t * NOTE: not tested when run after the MC advances past the first frame.\n\t * @method _renderFirstFrame\n\t * @protected\n\t **/\n\tp._renderFirstFrame = function() {\n\t\tvar tl = this.timeline, pos = tl.rawPosition;\n\t\ttl.setPosition(0, true, true, this._bound_resolveState);\n\t\ttl.rawPosition = pos;\n\t};\n\t\n\t/**\n\t * Runs via a callback after timeline property updates and before actions.\n\t * @method _resolveState\n\t * @protected\n\t **/\n\tp._resolveState = function() {\n\t\tvar tl = this.timeline;\n\t\tthis.currentFrame = tl.position;\n\t\t\n\t\tfor (var n in this._managed) { this._managed[n] = 1; }\n\n\t\tvar tweens = tl.tweens;\n\t\tfor (var i=0, l=tweens.length; i<l; i++) {\n\t\t\tvar tween = tweens[i],  target = tween.target;\n\t\t\tif (target === this || tween.passive) { continue; } // TODO: this assumes the actions tween from Animate has `this` as the target. There's likely a better approach.\n\t\t\tvar offset = tween._stepPosition;\n\n\t\t\tif (target instanceof createjs.DisplayObject) {\n\t\t\t\t// motion tween.\n\t\t\t\tthis._addManagedChild(target, offset);\n\t\t\t} else {\n\t\t\t\t// state tween.\n\t\t\t\tthis._setState(target.state, offset);\n\t\t\t}\n\t\t}\n\n\t\tvar kids = this.children;\n\t\tfor (i=kids.length-1; i>=0; i--) {\n\t\t\tvar id = kids[i].id;\n\t\t\tif (this._managed[id] === 1) {\n\t\t\t\tthis.removeChildAt(i);\n\t\t\t\tdelete(this._managed[id]);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * @method _setState\n\t * @param {Array} state\n\t * @param {Number} offset\n\t * @protected\n\t **/\n\tp._setState = function(state, offset) {\n\t\tif (!state) { return; }\n\t\tfor (var i=state.length-1;i>=0;i--) {\n\t\t\tvar o = state[i];\n\t\t\tvar target = o.t;\n\t\t\tvar props = o.p;\n\t\t\tfor (var n in props) { target[n] = props[n]; }\n\t\t\tthis._addManagedChild(target, offset);\n\t\t}\n\t};\n\n\t/**\n\t * Adds a child to the timeline, and sets it up as a managed child.\n\t * @method _addManagedChild\n\t * @param {MovieClip} child The child MovieClip to manage\n\t * @param {Number} offset\n\t * @private\n\t **/\n\tp._addManagedChild = function(child, offset) {\n\t\tif (child._off) { return; }\n\t\tthis.addChildAt(child,0);\n\n\t\tif (child instanceof MovieClip) {\n\t\t\tchild._synchOffset = offset;\n\t\t\t// TODO: this does not precisely match Adobe Flash/Animate, which loses track of the clip if it is renamed or removed from the timeline, which causes it to reset.\n\t\t\t// TODO: should also reset when MovieClip loops, though that will be a bit tricky to detect.\n\t\t\tif (child.mode === MovieClip.INDEPENDENT && child.autoReset && (!this._managed[child.id])) { child._reset(); }\n\t\t}\n\t\tthis._managed[child.id] = 2;\n\t};\n\t\n\t/**\n\t * @method _getBounds\n\t * @param {Matrix2D} matrix\n\t * @param {Boolean} ignoreTransform\n\t * @return {Rectangle}\n\t * @protected\n\t **/\n\tp._getBounds = function(matrix, ignoreTransform) {\n\t\tvar bounds = this.DisplayObject_getBounds();\n\t\tif (!bounds) {\n\t\t\tif (this.frameBounds) { bounds = this._rectangle.copy(this.frameBounds[this.currentFrame]); }\n\t\t}\n\t\tif (bounds) { return this._transformBounds(bounds, matrix, ignoreTransform); }\n\t\treturn this.Container__getBounds(matrix, ignoreTransform);\n\t};\n\n\n\tcreatejs.MovieClip = createjs.promote(MovieClip, \"Container\");\n\n\n\n// MovieClipPlugin for TweenJS:\n\t/**\n\t * This plugin works with <a href=\"http://tweenjs.com\" target=\"_blank\">TweenJS</a> to prevent the startPosition\n\t * property from tweening.\n\t * @private\n\t * @class MovieClipPlugin\n\t * @constructor\n\t **/\n\tfunction MovieClipPlugin() {\n\t\tthrow(\"MovieClipPlugin cannot be instantiated.\")\n\t}\n\t\n\t/**\n\t * @property priority\n\t * @type {Number}\n\t * @static\n\t * @readonly\n\t **/\n\tMovieClipPlugin.priority = 100; // very high priority, should run first\n\t\n\t/**\n\t * @property ID\n\t * @type {String}\n\t * @static\n\t * @readonly\n\t **/\n\tMovieClipPlugin.ID = \"MovieClip\";\n\n\t/**\n\t * @method install\n\t * @static\n\t **/\n\tMovieClipPlugin.install = function() {\n\t\tcreatejs.Tween._installPlugin(MovieClipPlugin);\n\t};\n\t\n\t/**\n\t * @method init\n\t * @param {Tween} tween\n\t * @param {String} prop\n\t * @param {*} value\n\t * @static\n\t **/\n\tMovieClipPlugin.init = function(tween, prop, value) {\n\t\tif (prop === \"startPosition\" && tween.target instanceof MovieClip) { tween._addPlugin(MovieClipPlugin); }\n\t};\n\t\n\t/**\n\t * @method step\n\t * @param {Tween} tween\n\t * @param {TweenStep} step\n\t * @param {Object} props\n\t * @static\n\t **/\n\tMovieClipPlugin.step = function(tween, step, props) {};\n\n\t/**\n\t * @method change\n\t * @param {Tween} tween\n\t * @param {TweenStep} step\n\t * @param {*} value\n\t * @param {Number} ratio\n\t * @param {Object} end\n\t * @return {*}\n\t * @static\n\t */\n\tMovieClipPlugin.change = function(tween, step, prop, value, ratio, end) {\n\t\tif (prop === \"startPosition\") { return (ratio === 1 ? step.props[prop] : step.prev.props[prop]); }\n\t};\n\n}());\n\n//##############################################################################\n// SpriteSheetUtils.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\t\n\t\n// constructor:\n\t/**\n\t * The SpriteSheetUtils class is a collection of static methods for working with {{#crossLink \"SpriteSheet\"}}{{/crossLink}}s.\n\t * A sprite sheet is a series of images (usually animation frames) combined into a single image on a regular grid. For\n\t * example, an animation consisting of 8 100x100 images could be combined into a 400x200 sprite sheet (4 frames across\n\t * by 2 high). The SpriteSheetUtils class uses a static interface and should not be instantiated.\n\t * @class SpriteSheetUtils\n\t * @static\n\t **/\n\tfunction SpriteSheetUtils() {\n\t\tthrow \"SpriteSheetUtils cannot be instantiated\";\n\t}\n\n\n// private static properties:\n\t/**\n\t * @property _workingCanvas\n\t * @static\n\t * @type HTMLCanvasElement | Object\n\t * @protected\n\t*/\n\t/**\n\t * @property _workingContext\n\t * @static\n\t * @type CanvasRenderingContext2D\n\t * @protected\n\t*/\n\tvar canvas = (createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\"));\n\tif (canvas.getContext) {\n\t\tSpriteSheetUtils._workingCanvas = canvas;\n\t\tSpriteSheetUtils._workingContext = canvas.getContext(\"2d\");\n\t\tcanvas.width = canvas.height = 1;\n\t}\n\n\n// public static methods:\n\t/**\n\t * Returns a single frame of the specified sprite sheet as a new PNG image. An example of when this may be useful is\n\t * to use a spritesheet frame as the source for a bitmap fill.\n\t *\n\t * <strong>WARNING:</strong> In almost all cases it is better to display a single frame using a {{#crossLink \"Sprite\"}}{{/crossLink}}\n\t * with a {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} call than it is to slice out a frame using this\n\t * method and display it with a Bitmap instance. You can also crop an image using the {{#crossLink \"Bitmap/sourceRect\"}}{{/crossLink}}\n\t * property of {{#crossLink \"Bitmap\"}}{{/crossLink}}.\n\t *\n\t * The extractFrame method may cause cross-domain warnings since it accesses pixels directly on the canvas.\n\t * @method extractFrame\n\t * @static\n\t * @param {SpriteSheet} spriteSheet The SpriteSheet instance to extract a frame from.\n\t * @param {Number|String} frameOrAnimation The frame number or animation name to extract. If an animation\n\t * name is specified, only the first frame of the animation will be extracted.\n\t * @return {HTMLImageElement} a single frame of the specified sprite sheet as a new PNG image.\n\t*/\n\tSpriteSheetUtils.extractFrame = function(spriteSheet, frameOrAnimation) {\n\t\tif (isNaN(frameOrAnimation)) {\n\t\t\tframeOrAnimation = spriteSheet.getAnimation(frameOrAnimation).frames[0];\n\t\t}\n\t\tvar data = spriteSheet.getFrame(frameOrAnimation);\n\t\tif (!data) { return null; }\n\t\tvar r = data.rect;\n\t\tvar canvas = SpriteSheetUtils._workingCanvas;\n\t\tcanvas.width = r.width;\n\t\tcanvas.height = r.height;\n\t\tSpriteSheetUtils._workingContext.drawImage(data.image, r.x, r.y, r.width, r.height, 0, 0, r.width, r.height);\n\t\tvar img = document.createElement(\"img\");\n\t\timg.src = canvas.toDataURL(\"image/png\");\n\t\treturn img;\n\t};\n\n\t// SpriteSheetUtils.addFlippedFrames is @deprecated. Remove for 1.1+\n\tSpriteSheetUtils.addFlippedFrames = createjs.deprecate(null, \"SpriteSheetUtils.addFlippedFrames\");\n\n\t// SpriteSheetUtils.addFlippedFrames is @deprecated. Remove for 1.1+\n\tSpriteSheetUtils.mergeAlpha = createjs.deprecate(null, \"SpriteSheetUtils.mergeAlpha\");\n\n\t\n// private static methods:\n\tSpriteSheetUtils._flip = function(spriteSheet, count, h, v) {\n\t\tvar imgs = spriteSheet._images;\n\t\tvar canvas = SpriteSheetUtils._workingCanvas;\n\t\tvar ctx = SpriteSheetUtils._workingContext;\n\t\tvar il = imgs.length/count;\n\t\tfor (var i=0;i<il;i++) {\n\t\t\tvar src = imgs[i];\n\t\t\tsrc.__tmp = i; // a bit hacky, but faster than doing indexOf below.\n\t\t\tctx.setTransform(1,0,0,1,0,0);\n\t\t\tctx.clearRect(0,0,canvas.width+1,canvas.height+1);\n\t\t\tcanvas.width = src.width;\n\t\t\tcanvas.height = src.height;\n\t\t\tctx.setTransform(h?-1:1, 0, 0, v?-1:1, h?src.width:0, v?src.height:0);\n\t\t\tctx.drawImage(src,0,0);\n\t\t\tvar img = document.createElement(\"img\");\n\t\t\timg.src = canvas.toDataURL(\"image/png\");\n\t\t\t// work around a strange bug in Safari:\n\t\t\timg.width = (src.width||src.naturalWidth);\n\t\t\timg.height = (src.height||src.naturalHeight);\n\t\t\timgs.push(img);\n\t\t}\n\n\t\tvar frames = spriteSheet._frames;\n\t\tvar fl = frames.length/count;\n\t\tfor (i=0;i<fl;i++) {\n\t\t\tsrc = frames[i];\n\t\t\tvar rect = src.rect.clone();\n\t\t\timg = imgs[src.image.__tmp+il*count];\n\n\t\t\tvar frame = {image:img,rect:rect,regX:src.regX,regY:src.regY};\n\t\t\tif (h) {\n\t\t\t\trect.x = (img.width||img.naturalWidth)-rect.x-rect.width; // update rect\n\t\t\t\tframe.regX = rect.width-src.regX; // update registration point\n\t\t\t}\n\t\t\tif (v) {\n\t\t\t\trect.y = (img.height||img.naturalHeight)-rect.y-rect.height;  // update rect\n\t\t\t\tframe.regY = rect.height-src.regY; // update registration point\n\t\t\t}\n\t\t\tframes.push(frame);\n\t\t}\n\n\t\tvar sfx = \"_\"+(h?\"h\":\"\")+(v?\"v\":\"\");\n\t\tvar names = spriteSheet._animations;\n\t\tvar data = spriteSheet._data;\n\t\tvar al = names.length/count;\n\t\tfor (i=0;i<al;i++) {\n\t\t\tvar name = names[i];\n\t\t\tsrc = data[name];\n\t\t\tvar anim = {name:name+sfx,speed:src.speed,next:src.next,frames:[]};\n\t\t\tif (src.next) { anim.next += sfx; }\n\t\t\tframes = src.frames;\n\t\t\tfor (var j=0,l=frames.length;j<l;j++) {\n\t\t\t\tanim.frames.push(frames[j]+fl*count);\n\t\t\t}\n\t\t\tdata[anim.name] = anim;\n\t\t\tnames.push(anim.name);\n\t\t}\n\t};\n\n\n\tcreatejs.SpriteSheetUtils = SpriteSheetUtils;\n}());\n\n//##############################################################################\n// SpriteSheetBuilder.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * The SpriteSheetBuilder allows you to generate {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instances at run time\n\t * from any display object. This can allow you to maintain your assets as vector graphics (for low file size), and\n\t * render them at run time as SpriteSheets for better performance.\n\t *\n\t * SpriteSheets can be built either synchronously, or asynchronously, so that large SpriteSheets can be generated\n\t * without locking the UI.\n\t *\n\t * Note that the \"images\" used in the generated SpriteSheet are actually canvas elements, and that they will be\n\t * sized to the nearest power of 2 up to the value of {{#crossLink \"SpriteSheetBuilder/maxWidth:property\"}}{{/crossLink}}\n\t * or {{#crossLink \"SpriteSheetBuilder/maxHeight:property\"}}{{/crossLink}}.\n\t * @class SpriteSheetBuilder\n\t * @param {Number} [framerate=0] The {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} of\n\t * {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instances that are created.\n\t * @extends EventDispatcher\n\t * @constructor\n\t **/\n\tfunction SpriteSheetBuilder(framerate) {\n\t\tthis.EventDispatcher_constructor();\n\t\t\n\t// public properties:\n\t\t/**\n\t\t * The maximum width for the images (not individual frames) in the generated SpriteSheet. It is recommended to\n\t\t * use a power of 2 for this value (ex. 1024, 2048, 4096). If the frames cannot all fit within the max\n\t\t * dimensions, then additional images will be created as needed.\n\t\t * @property maxWidth\n\t\t * @type Number\n\t\t * @default 2048\n\t\t*/\n\t\tthis.maxWidth = 2048;\n\t\n\t\t/**\n\t\t * The maximum height for the images (not individual frames) in the generated SpriteSheet. It is recommended to\n\t\t * use a power of 2 for this value (ex. 1024, 2048, 4096). If the frames cannot all fit within the max\n\t\t * dimensions, then additional images will be created as needed.\n\t\t * @property maxHeight\n\t\t * @type Number\n\t\t * @default 2048\n\t\t **/\n\t\tthis.maxHeight = 2048;\n\t\n\t\t/**\n\t\t * The SpriteSheet that was generated. This will be null before a build is completed successfully.\n\t\t * @property spriteSheet\n\t\t * @type SpriteSheet\n\t\t **/\n\t\tthis.spriteSheet = null;\n\t\n\t\t/**\n\t\t * The scale to apply when drawing all frames to the SpriteSheet. This is multiplied against any scale specified\n\t\t * in the addFrame call. This can be used, for example, to generate a SpriteSheet at run time that is tailored\n\t\t * to the a specific device resolution (ex. tablet vs mobile).\n\t\t * @property scale\n\t\t * @type Number\n\t\t * @default 1\n\t\t **/\n\t\tthis.scale = 1;\n\t\n\t\t/**\n\t\t* The padding to use between frames. This is helpful to preserve antialiasing on drawn vector content.\n\t\t* @property padding\n\t\t* @type Number\n\t\t* @default 1\n\t\t**/\n\t\tthis.padding = 1;\n\t\n\t\t/**\n\t\t * A number from 0.01 to 0.99 that indicates what percentage of time the builder can use. This can be\n\t\t * thought of as the number of seconds per second the builder will use. For example, with a timeSlice value of 0.3,\n\t\t * the builder will run 20 times per second, using approximately 15ms per build (30% of available time, or 0.3s per second).\n\t\t * Defaults to 0.3.\n\t\t * @property timeSlice\n\t\t * @type Number\n\t\t * @default 0.3\n\t\t **/\n\t\tthis.timeSlice = 0.3;\n\t\n\t\t/**\n\t\t * A value between 0 and 1 that indicates the progress of a build, or -1 if a build has not\n\t\t * been initiated.\n\t\t * @property progress\n\t\t * @type Number\n\t\t * @default -1\n\t\t * @readonly\n\t\t */\n\t\tthis.progress = -1;\n\n\t\t/**\n\t\t * A {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} value that will be passed to new {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instances that are\n\t\t * created. If no framerate is specified (or it is 0), then SpriteSheets will use the {{#crossLink \"Ticker\"}}{{/crossLink}}\n\t\t * framerate.\n\t\t * @property framerate\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n\t\tthis.framerate = framerate || 0;\n\t\n\t\n\t// private properties:\n\t\t/**\n\t\t * @property _frames\n\t\t * @protected\n\t\t * @type Array\n\t\t **/\n\t\tthis._frames = [];\n\t\n\t\t/**\n\t\t * @property _animations\n\t\t * @protected\n\t\t * @type Array\n\t\t **/\n\t\tthis._animations = {};\n\t\n\t\t/**\n\t\t * @property _data\n\t\t * @protected\n\t\t * @type Array\n\t\t **/\n\t\tthis._data = null;\n\t\n\t\t/**\n\t\t * @property _nextFrameIndex\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n\t\tthis._nextFrameIndex = 0;\n\t\n\t\t/**\n\t\t * @property _index\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n\t\tthis._index = 0;\n\t\n\t\t/**\n\t\t * @property _timerID\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n\t\tthis._timerID = null;\n\t\n\t\t/**\n\t\t * @property _scale\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n\t\tthis._scale = 1;\n\t}\n\tvar p = createjs.extend(SpriteSheetBuilder, createjs.EventDispatcher);\n\n// constants:\n\tSpriteSheetBuilder.ERR_DIMENSIONS = \"frame dimensions exceed max spritesheet dimensions\";\n\tSpriteSheetBuilder.ERR_RUNNING = \"a build is already running\";\n\n// events:\n\t/**\n\t * Dispatched when a build completes.\n\t * @event complete\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when an asynchronous build has progress.\n\t * @event progress\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @param {Number} progress The current progress value (0-1).\n\t * @since 0.6.0\n\t */\n\n\n// public methods:\n\t/**\n\t * Adds a frame to the {{#crossLink \"SpriteSheet\"}}{{/crossLink}}. Note that the frame will not be drawn until you\n\t * call {{#crossLink \"SpriteSheetBuilder/build\"}}{{/crossLink}} method. The optional setup params allow you to have\n\t * a function run immediately before the draw occurs. For example, this allows you to add a single source multiple\n\t * times, but manipulate it or its children to change it to generate different frames.\n\t *\n\t * Note that the source's transformations (x, y, scale, rotate, alpha) will be ignored, except for regX/Y. To apply\n\t * transforms to a source object and have them captured in the SpriteSheet, simply place it into a {{#crossLink \"Container\"}}{{/crossLink}}\n\t * and pass in the Container as the source.\n\t * @method addFrame\n\t * @param {DisplayObject} source The source {{#crossLink \"DisplayObject\"}}{{/crossLink}}  to draw as the frame.\n\t * @param {Rectangle} [sourceRect] A {{#crossLink \"Rectangle\"}}{{/crossLink}} defining the portion of the\n\t * source to draw to the frame. If not specified, it will look for a `getBounds` method, bounds property, or\n\t * `nominalBounds` property on the source to use. If one is not found, the frame will be skipped.\n\t * @param {Number} [scale=1] Optional. The scale to draw this frame at. Default is 1.\n\t * @param {Function} [setupFunction] A function to call immediately before drawing this frame. It will be called with two parameters: the source, and setupData.\n\t * @param {Object} [setupData] Arbitrary setup data to pass to setupFunction as the second parameter.\n\t * @return {Number} The index of the frame that was just added, or null if a sourceRect could not be determined.\n\t **/\n\tp.addFrame = function(source, sourceRect, scale, setupFunction, setupData) {\n\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\tvar rect = sourceRect||source.bounds||source.nominalBounds;\n\t\tif (!rect&&source.getBounds) { rect = source.getBounds(); }\n\t\tif (!rect) { return null; }\n\t\tscale = scale||1;\n\t\treturn this._frames.push({source:source, sourceRect:rect, scale:scale, funct:setupFunction, data:setupData, index:this._frames.length, height:rect.height*scale})-1;\n\t};\n\n\t/**\n\t * Adds an animation that will be included in the created {{#crossLink \"SpriteSheet\"}}{{/crossLink}}.\n\t * @method addAnimation\n\t * @param {String} name The name for the animation.\n\t * @param {Array} frames An array of frame indexes that comprise the animation. Ex. [3,6,5] would describe an animation\n\t * that played frame indexes 3, 6, and 5 in that order.\n\t * @param {String} [next] Specifies the name of the animation to continue to after this animation ends. You can\n\t * also pass false to have the animation stop when it ends. By default it will loop to the start of the same animation.\n\t * @param {Number} [speed] Specifies a frame advance speed for this animation. For example, a value of 0.5 would\n\t * cause the animation to advance every second tick. Note that earlier versions used `frequency` instead, which had\n\t * the opposite effect.\n\t **/\n\tp.addAnimation = function(name, frames, next, speed) {\n\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\tthis._animations[name] = {frames:frames, next:next, speed:speed};\n\t};\n\n\t/**\n\t * This will take a {{#crossLink \"MovieClip\"}}{{/crossLink}} instance, and add its frames and labels to this\n\t * builder. Labels will be added as an animation running from the label index to the next label. For example, if\n\t * there is a label named \"foo\" at frame 0 and a label named \"bar\" at frame 10, in a MovieClip with 15 frames, it\n\t * will add an animation named \"foo\" that runs from frame index 0 to 9, and an animation named \"bar\" that runs from\n\t * frame index 10 to 14.\n\t *\n\t * Note that this will iterate through the full MovieClip with {{#crossLink \"MovieClip/actionsEnabled:property\"}}{{/crossLink}}\n\t * set to `false`, ending on the last frame.\n\t * @method addMovieClip\n\t * @param {MovieClip} source The source MovieClip instance to add to the SpriteSheet.\n\t * @param {Rectangle} [sourceRect] A {{#crossLink \"Rectangle\"}}{{/crossLink}} defining the portion of the source to\n\t * draw to the frame. If not specified, it will look for a {{#crossLink \"DisplayObject/getBounds\"}}{{/crossLink}}\n\t * method, `frameBounds` Array, `bounds` property, or `nominalBounds` property on the source to use. If one is not\n\t * found, the MovieClip will be skipped.\n\t * @param {Number} [scale=1] The scale to draw the movie clip at.\n\t * @param {Function} [setupFunction] A function to call immediately before drawing each frame. It will be called\n\t * with three parameters: the source, setupData, and the frame index.\n\t * @param {Object} [setupData] Arbitrary setup data to pass to setupFunction as the second parameter.\n\t * @param {Function} [labelFunction] This method will be called for each MovieClip label that is added with four\n\t * parameters: the label name, the source MovieClip instance, the starting frame index (in the movieclip timeline)\n\t * and the end index. It must return a new name for the label/animation, or `false` to exclude the label.\n\t **/\n\tp.addMovieClip = function(source, sourceRect, scale, setupFunction, setupData, labelFunction) {\n\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\tvar rects = source.frameBounds;\n\t\tvar rect = sourceRect||source.bounds||source.nominalBounds;\n\t\tif (!rect&&source.getBounds) { rect = source.getBounds(); }\n\t\tif (!rect && !rects) { return; }\n\n\t\tvar i, l, baseFrameIndex = this._frames.length;\n\t\tvar duration = source.timeline.duration;\n\t\tfor (i=0; i<duration; i++) {\n\t\t\tvar r = (rects&&rects[i]) ? rects[i] : rect;\n\t\t\tthis.addFrame(source, r, scale, this._setupMovieClipFrame, {i:i, f:setupFunction, d:setupData});\n\t\t}\n\t\tvar labels = source.timeline._labels;\n\t\tvar lbls = [];\n\t\tfor (var n in labels) {\n\t\t\tlbls.push({index:labels[n], label:n});\n\t\t}\n\t\tif (lbls.length) {\n\t\t\tlbls.sort(function(a,b){ return a.index-b.index; });\n\t\t\tfor (i=0,l=lbls.length; i<l; i++) {\n\t\t\t\tvar label = lbls[i].label;\n\t\t\t\tvar start = baseFrameIndex+lbls[i].index;\n\t\t\t\tvar end = baseFrameIndex+((i == l-1) ? duration : lbls[i+1].index);\n\t\t\t\tvar frames = [];\n\t\t\t\tfor (var j=start; j<end; j++) { frames.push(j); }\n\t\t\t\tif (labelFunction) {\n\t\t\t\t\tlabel = labelFunction(label, source, start, end);\n\t\t\t\t\tif (!label) { continue; }\n\t\t\t\t}\n\t\t\t\tthis.addAnimation(label, frames, true); // for now, this loops all animations.\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Builds a {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instance based on the current frames.\n\t * @method build\n\t * @return {SpriteSheet} The created SpriteSheet instance, or null if a build is already running or an error\n\t * occurred.\n\t **/\n\tp.build = function() {\n\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\tthis._startBuild();\n\t\twhile (this._drawNext()) {}\n\t\tthis._endBuild();\n\t\treturn this.spriteSheet;\n\t};\n\n\t/**\n\t * Asynchronously builds a {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instance based on the current frames. It will\n\t * run 20 times per second, using an amount of time defined by `timeSlice`. When it is complete it will call the\n\t * specified callback.\n\t * @method buildAsync\n\t * @param {Number} [timeSlice] Sets the timeSlice property on this instance.\n\t **/\n\tp.buildAsync = function(timeSlice) {\n\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\tthis.timeSlice = timeSlice;\n\t\tthis._startBuild();\n\t\tvar _this = this;\n\t\tthis._timerID = setTimeout(function() { _this._run(); }, 50-Math.max(0.01, Math.min(0.99, this.timeSlice||0.3))*50);\n\t};\n\n\t/**\n\t * Stops the current asynchronous build.\n\t * @method stopAsync\n\t **/\n\tp.stopAsync = function() {\n\t\tclearTimeout(this._timerID);\n\t\tthis._data = null;\n\t};\n\n\t/**\n\t * SpriteSheetBuilder instances cannot be cloned.\n\t * @method clone\n\t **/\n\tp.clone = function() {\n\t\tthrow(\"SpriteSheetBuilder cannot be cloned.\");\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[SpriteSheetBuilder]\";\n\t};\n\n\n// private methods:\n\t/**\n\t * @method _startBuild\n\t * @protected\n\t **/\n\tp._startBuild = function() {\n\t\tvar pad = this.padding||0;\n\t\tthis.progress = 0;\n\t\tthis.spriteSheet = null;\n\t\tthis._index = 0;\n\t\tthis._scale = this.scale;\n\t\tvar dataFrames = [];\n\t\tthis._data = {\n\t\t\timages: [],\n\t\t\tframes: dataFrames,\n\t\t\tframerate: this.framerate,\n\t\t\tanimations: this._animations // TODO: should we \"clone\" _animations in case someone adds more animations after a build?\n\t\t};\n\n\t\tvar frames = this._frames.slice();\n\t\tframes.sort(function(a,b) { return (a.height<=b.height) ? -1 : 1; });\n\n\t\tif (frames[frames.length-1].height+pad*2 > this.maxHeight) { throw SpriteSheetBuilder.ERR_DIMENSIONS; }\n\t\tvar y=0, x=0;\n\t\tvar img = 0;\n\t\twhile (frames.length) {\n\t\t\tvar o = this._fillRow(frames, y, img, dataFrames, pad);\n\t\t\tif (o.w > x) { x = o.w; }\n\t\t\ty += o.h;\n\t\t\tif (!o.h || !frames.length) {\n\t\t\t\tvar canvas = createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\");\n\t\t\t\tcanvas.width = this._getSize(x,this.maxWidth);\n\t\t\t\tcanvas.height = this._getSize(y,this.maxHeight);\n\t\t\t\tthis._data.images[img] = canvas;\n\t\t\t\tif (!o.h) {\n\t\t\t\t\tx=y=0;\n\t\t\t\t\timg++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t * @method _setupMovieClipFrame\n\t * @protected\n\t * @return {Number} The width & height of the row.\n\t **/\n\tp._setupMovieClipFrame = function(source, data) {\n\t\tvar ae = source.actionsEnabled;\n\t\tsource.actionsEnabled = false;\n\t\tsource.gotoAndStop(data.i);\n\t\tsource.actionsEnabled = ae;\n\t\tdata.f&&data.f(source, data.d, data.i);\n\t};\n\n\t/**\n\t * @method _getSize\n\t * @protected\n\t * @return {Number} The width & height of the row.\n\t **/\n\tp._getSize = function(size,max) {\n\t\tvar pow = 4;\n\t\twhile (Math.pow(2,++pow) < size){}\n\t\treturn Math.min(max,Math.pow(2,pow));\n\t};\n\n\t/**\n\t * @method _fillRow\n\t * @param {Array} frames\n\t * @param {Number} y\n\t * @param {HTMLImageElement} img\n\t * @param {Object} dataFrames\n\t * @param {Number} pad\n\t * @protected\n\t * @return {Number} The width & height of the row.\n\t **/\n\tp._fillRow = function(frames, y, img, dataFrames, pad) {\n\t\tvar w = this.maxWidth;\n\t\tvar maxH = this.maxHeight;\n\t\ty += pad;\n\t\tvar h = maxH-y;\n\t\tvar x = pad;\n\t\tvar height = 0;\n\t\tfor (var i=frames.length-1; i>=0; i--) {\n\t\t\tvar frame = frames[i];\n\t\t\tvar sc = this._scale*frame.scale;\n\t\t\tvar rect = frame.sourceRect;\n\t\t\tvar source = frame.source;\n\t\t\tvar rx = Math.floor(sc*rect.x-pad);\n\t\t\tvar ry = Math.floor(sc*rect.y-pad);\n\t\t\tvar rh = Math.ceil(sc*rect.height+pad*2);\n\t\t\tvar rw = Math.ceil(sc*rect.width+pad*2);\n\t\t\tif (rw > w) { throw SpriteSheetBuilder.ERR_DIMENSIONS; }\n\t\t\tif (rh > h || x+rw > w) { continue; }\n\t\t\tframe.img = img;\n\t\t\tframe.rect = new createjs.Rectangle(x,y,rw,rh);\n\t\t\theight = height || rh;\n\t\t\tframes.splice(i,1);\n\t\t\tdataFrames[frame.index] = [x,y,rw,rh,img,Math.round(-rx+sc*source.regX-pad),Math.round(-ry+sc*source.regY-pad)];\n\t\t\tx += rw;\n\t\t}\n\t\treturn {w:x, h:height};\n\t};\n\n\t/**\n\t * @method _endBuild\n\t * @protected\n\t **/\n\tp._endBuild = function() {\n\t\tthis.spriteSheet = new createjs.SpriteSheet(this._data);\n\t\tthis._data = null;\n\t\tthis.progress = 1;\n\t\tthis.dispatchEvent(\"complete\");\n\t};\n\n\t/**\n\t * @method _run\n\t * @protected\n\t **/\n\tp._run = function() {\n\t\tvar ts = Math.max(0.01, Math.min(0.99, this.timeSlice||0.3))*50;\n\t\tvar t = (new Date()).getTime()+ts;\n\t\tvar complete = false;\n\t\twhile (t > (new Date()).getTime()) {\n\t\t\tif (!this._drawNext()) { complete = true; break; }\n\t\t}\n\t\tif (complete) {\n\t\t\tthis._endBuild();\n\t\t} else {\n\t\t\tvar _this = this;\n\t\t\tthis._timerID = setTimeout(function() { _this._run(); }, 50-ts);\n\t\t}\n\t\tvar p = this.progress = this._index/this._frames.length;\n\t\tif (this.hasEventListener(\"progress\")) {\n\t\t\tvar evt = new createjs.Event(\"progress\");\n\t\t\tevt.progress = p;\n\t\t\tthis.dispatchEvent(evt);\n\t\t}\n\t};\n\n\t/**\n\t * @method _drawNext\n\t * @protected\n\t * @return Boolean Returns false if this is the last draw.\n\t **/\n\tp._drawNext = function() {\n\t\tvar frame = this._frames[this._index];\n\t\tvar sc = frame.scale*this._scale;\n\t\tvar rect = frame.rect;\n\t\tvar sourceRect = frame.sourceRect;\n\t\tvar canvas = this._data.images[frame.img];\n\t\tvar ctx = canvas.getContext(\"2d\");\n\t\tframe.funct&&frame.funct(frame.source, frame.data);\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(rect.x, rect.y, rect.width, rect.height);\n\t\tctx.clip();\n\t\tctx.translate(Math.ceil(rect.x-sourceRect.x*sc), Math.ceil(rect.y-sourceRect.y*sc));\n\t\tctx.scale(sc,sc);\n\t\tframe.source.draw(ctx); // display object will draw itself.\n\t\tctx.restore();\n\t\treturn (++this._index) < this._frames.length;\n\t};\n\n\n\tcreatejs.SpriteSheetBuilder = createjs.promote(SpriteSheetBuilder, \"EventDispatcher\");\n}());\n\n//##############################################################################\n// DOMElement.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * <b>This class is still experimental, and more advanced use is likely to be buggy. Please report bugs.</b>\n\t *\n\t * A DOMElement allows you to associate a HTMLElement with the display list. It will be transformed\n\t * within the DOM as though it is child of the {{#crossLink \"Container\"}}{{/crossLink}} it is added to. However, it is\n\t * not rendered to canvas, and as such will retain whatever z-index it has relative to the canvas (ie. it will be\n\t * drawn in front of or behind the canvas).\n\t *\n\t * The position of a DOMElement is relative to their parent node in the DOM. It is recommended that\n\t * the DOM Object be added to a div that also contains the canvas so that they share the same position\n\t * on the page.\n\t *\n\t * DOMElement is useful for positioning HTML elements over top of canvas content, and for elements\n\t * that you want to display outside the bounds of the canvas. For example, a tooltip with rich HTML\n\t * content.\n\t *\n\t * <h4>Mouse Interaction</h4>\n\t *\n\t * DOMElement instances are not full EaselJS display objects, and do not participate in EaselJS mouse\n\t * events or support methods like hitTest. To get mouse events from a DOMElement, you must instead add handlers to\n\t * the htmlElement (note, this does not support EventDispatcher)\n\t *\n\t *      var domElement = new createjs.DOMElement(htmlElement);\n\t *      domElement.htmlElement.onclick = function() {\n\t *          console.log(\"clicked\");\n\t *      }\n\t *\n\t * <strong>Important:</strong> This class needs to be notified it is about to be drawn, this will happen automatically\n\t * if you call stage.update, calling stage.draw or disabling tickEnabled will miss important steps and it will render\n\t * stale information.\n\t *\n\t * @class DOMElement\n\t * @extends DisplayObject\n\t * @constructor\n\t * @param {HTMLElement} htmlElement A reference or id for the DOM element to manage.\n\t */\n\tfunction DOMElement(htmlElement) {\n\t\tthis.DisplayObject_constructor();\n\t\t\n\t\tif (typeof(htmlElement)==\"string\") { htmlElement = document.getElementById(htmlElement); }\n\t\tthis.mouseEnabled = false;\n\t\t\n\t\tvar style = htmlElement.style;\n\t\tstyle.position = \"absolute\";\n\t\tstyle.transformOrigin = style.WebkitTransformOrigin = style.msTransformOrigin = style.MozTransformOrigin = style.OTransformOrigin = \"0% 0%\";\n\t\t\n\t\t\n\t// public properties:\n\t\t/**\n\t\t * The DOM object to manage.\n\t\t * @property htmlElement\n\t\t * @type HTMLElement\n\t\t */\n\t\tthis.htmlElement = htmlElement;\n\t\n\t\n\t// private properties:\n\t\t/**\n\t\t * @property _oldMtx\n\t\t * @type Matrix2D\n\t\t * @protected\n\t\t */\n\t\tthis._oldProps = null;\n\n\t\t/**\n\t\t * Used to track the object which this class attached listeners to, helps optimize listener attachment.\n\t\t * @property _oldStage\n\t\t * @type Stage\n\t\t * @protected\n\t\t */\n\t\tthis._oldStage = null;\n\t\t/**\n\t\t * The event listener proxy triggered drawing draw for special circumstances.\n\t\t * @property _drawAction\n\t\t * @type function\n\t\t * @protected\n\t\t */\n\t\tthis._drawAction = null;\n\t}\n\tvar p = createjs.extend(DOMElement, createjs.DisplayObject);\n\n\t// TODO: deprecated\n\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n\n// public methods:\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t */\n\tp.isVisible = function() {\n\t\treturn this.htmlElement != null;\n\t};\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} ignoreCache Indicates whether the draw operation should ignore any current cache.\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t * into itself).\n\t * @return {Boolean}\n\t */\n\tp.draw = function(ctx, ignoreCache) {\n\t\t// this relies on the _tick method because draw isn't called if the parent is not visible.\n\t\t// the actual update happens in _handleDrawEnd\n\t\treturn true;\n\t};\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method cache\n\t */\n\tp.cache = function() {};\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method uncache\n\t */\n\tp.uncache = function() {};\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method updateCache\n\t */\n\tp.updateCache = function() {};\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method hitTest\n\t */\n\tp.hitTest = function() {};\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method localToGlobal\n\t */\n\tp.localToGlobal = function() {};\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method globalToLocal\n\t */\n\tp.globalToLocal = function() {};\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method localToLocal\n\t */\n\tp.localToLocal = function() {};\n\n\t/**\n\t * DOMElement cannot be cloned. Throws an error.\n\t * @method clone\n\t */\n\tp.clone = function() {\n\t\tthrow(\"DOMElement cannot be cloned.\")\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\tp.toString = function() {\n\t\treturn \"[DOMElement (name=\"+  this.name +\")]\";\n\t};\n\n\t/**\n     * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n\t * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n\t * @event click\n\t */\n\n     /**\n     * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n \t * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n\t * @event dblClick\n\t */\n\n     /**\n      * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n \t  * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n\t  * @event mousedown\n\t  */\n\n     /**\n      * The HTMLElement can listen for the mouseover event, not the DOMElement instance.\n      * Since DOMElement instances are not full EaselJS display objects and do not participate in EaselJS mouse events.\n      * @event mouseover\n\t  */\n\n     /**\n      * Not applicable to DOMElement.\n\t  * @event tick\n\t  */\n\n\n// private methods:\n\t/**\n\t * @method _tick\n\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n\t * function.\n\t * @protected\n\t */\n\tp._tick = function(evtObj) {\n\t\tvar stage = this.stage;\n\t\tif(stage && stage !== this._oldStage) {\n\t\t\tthis._drawAction && stage.off(\"drawend\", this._drawAction);\n\t\t\tthis._drawAction = stage.on(\"drawend\", this._handleDrawEnd, this);\n\t\t\tthis._oldStage = stage;\n\t\t}\n\t\tthis.DisplayObject__tick(evtObj);\n\t};\n\t\n\t/**\n\t * @method _handleDrawEnd\n\t * @param {Event} evt\n\t * @protected\n\t */\n\tp._handleDrawEnd = function(evt) {\n\t\tvar o = this.htmlElement;\n\t\tif (!o) { return; }\n\t\tvar style = o.style;\n\t\t\n\t\tvar props = this.getConcatenatedDisplayProps(this._props), mtx = props.matrix;\n\t\t\n\t\tvar visibility = props.visible ? \"visible\" : \"hidden\";\n\t\tif (visibility != style.visibility) { style.visibility = visibility; }\n\t\tif (!props.visible) { return; }\n\t\t\n\t\tvar oldProps = this._oldProps, oldMtx = oldProps&&oldProps.matrix;\n\t\tvar n = 10000; // precision\n\t\t\n\t\tif (!oldMtx || !oldMtx.equals(mtx)) {\n\t\t\tvar str = \"matrix(\" + (mtx.a*n|0)/n +\",\"+ (mtx.b*n|0)/n +\",\"+ (mtx.c*n|0)/n +\",\"+ (mtx.d*n|0)/n +\",\"+ (mtx.tx+0.5|0);\n\t\t\tstyle.transform = style.WebkitTransform = style.OTransform = style.msTransform = str +\",\"+ (mtx.ty+0.5|0) +\")\";\n\t\t\tstyle.MozTransform = str +\"px,\"+ (mtx.ty+0.5|0) +\"px)\";\n\t\t\tif (!oldProps) { oldProps = this._oldProps = new createjs.DisplayProps(true, null); }\n\t\t\toldProps.matrix.copy(mtx);\n\t\t}\n\t\t\n\t\tif (oldProps.alpha != props.alpha) {\n\t\t\tstyle.opacity = \"\"+(props.alpha*n|0)/n;\n\t\t\toldProps.alpha = props.alpha;\n\t\t}\n\t};\n\n\n\tcreatejs.DOMElement = createjs.promote(DOMElement, \"DisplayObject\");\n}());\n\n//##############################################################################\n// Filter.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Base class that all filters should inherit from. Filters need to be applied to objects that have been cached using\n\t * the {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} method. If an object changes, please cache it again, or use\n\t * {{#crossLink \"DisplayObject/updateCache\"}}{{/crossLink}}. Note that the filters must be applied before caching.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      myInstance.filters = [\n\t *          new createjs.ColorFilter(0, 0, 0, 1, 255, 0, 0),\n\t *          new createjs.BlurFilter(5, 5, 10)\n\t *      ];\n\t *      myInstance.cache(0,0, 100, 100);\n\t *\n\t * Note that each filter can implement a {{#crossLink \"Filter/getBounds\"}}{{/crossLink}} method, which returns the\n\t * margins that need to be applied in order to fully display the filter. For example, the {{#crossLink \"BlurFilter\"}}{{/crossLink}}\n\t * will cause an object to feather outwards, resulting in a margin around the shape.\n\t *\n\t * <h4>EaselJS Filters</h4>\n\t * EaselJS comes with a number of pre-built filters:\n\t * <ul><li>{{#crossLink \"AlphaMapFilter\"}}{{/crossLink}} : Map a greyscale image to the alpha channel of a display object</li>\n\t *      <li>{{#crossLink \"AlphaMaskFilter\"}}{{/crossLink}}: Map an image's alpha channel to the alpha channel of a display object</li>\n\t *      <li>{{#crossLink \"BlurFilter\"}}{{/crossLink}}: Apply vertical and horizontal blur to a display object</li>\n\t *      <li>{{#crossLink \"ColorFilter\"}}{{/crossLink}}: Color transform a display object</li>\n\t *      <li>{{#crossLink \"ColorMatrixFilter\"}}{{/crossLink}}: Transform an image using a {{#crossLink \"ColorMatrix\"}}{{/crossLink}}</li>\n\t * </ul>\n\t *\n\t * @class Filter\n\t * @constructor\n\t **/\n\tfunction Filter() {\n\t\t/**\n\t\t * A flag stating that this filter uses a context draw mode and cannot be batched into imageData processing.\n\t\t * @property usesContext\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.usesContext = false;\n\n\t\t/**\n\t\t * Another filter that is required to act as part of this filter and created and managed under the hood.\n\t\t * @private\n\t\t * @property _multiPass\n\t\t * @type {Filter}\n\t\t * @default null\n\t\t */\n\t\tthis._multiPass = null;\n\n\t\t/**\n\t\t * Pre-processed template shader code. It will be parsed before being fed in into the shader compiler.\n\t\t * This should be based upon StageGL.SHADER_VERTEX_BODY_REGULAR\n\t\t * @property VTX_SHADER\n\t\t * @virtual\n\t\t * @type {String}\n\t\t * @readonly\n\t\t */\n\t\tthis.VTX_SHADER_BODY = null;\n\n\t\t/**\n\t\t * Pre-processed template shader code. It will be parsed before being fed in into the shader compiler.\n\t\t * This should be based upon StageGL.SHADER_FRAGMENT_BODY_REGULAR\n\t\t * @property FRAG_SHADER\n\t\t * @virtual\n\t\t * @type {String}\n\t\t * @readonly\n\t\t */\n\t\tthis.FRAG_SHADER_BODY = null;\n\t}\n\tvar p = Filter.prototype;\n\n// public methods:\n\t/**\n\t * Provides padding values for this filter. That is, how much the filter will extend the visual bounds of an object it is applied to.\n\t * @method getBounds\n\t * @param {Rectangle} [rect] If specified, the provided Rectangle instance will be expanded by the padding amounts and returned.\n\t * @return {Rectangle} If a `rect` param was provided, it is returned. If not, either a new rectangle with the padding values, or null if no padding is required for this filter.\n\t **/\n\tp.getBounds = function(rect) {\n\t\treturn rect;\n\t};\n\n\t/**\n\t * Assign any unique uniforms or other setup functionality here.\n\t * @method shaderParamSetup\n\t * @virtual\n\t * @param {WebGLContext} gl The context associated with the stage performing the render.\n\t * @param {StageGL} stage The stage instance that will be rendering.\n\t * @param {ShaderProgram} shaderProgram The compiled shader that is going to be used to perform the render.\n\t */\n\tp.shaderParamSetup = function(gl, stage, shaderProgram) {};\n\n\t/**\n\t * Applies the filter to the specified context.\n\t * @method applyFilter\n\t * @param {CanvasRenderingContext2D} ctx The 2D context to use as the source.\n\t * @param {Number} x The x position to use for the source rect.\n\t * @param {Number} y The y position to use for the source rect.\n\t * @param {Number} width The width to use for the source rect.\n\t * @param {Number} height The height to use for the source rect.\n\t * @param {CanvasRenderingContext2D} [targetCtx] The 2D context to draw the result to. Defaults to the context passed to ctx.\n\t * @param {Number} [targetX] The x position to draw the result to. Defaults to the value passed to x.\n\t * @param {Number} [targetY] The y position to draw the result to. Defaults to the value passed to y.\n\t * @return {Boolean} If the filter was applied successfully.\n\t **/\n\tp.applyFilter = function(ctx, x, y, width, height, targetCtx, targetX, targetY) {\n\t\t// this is the default behaviour because most filters access pixel data. It is overridden when not needed.\n\t\ttargetCtx = targetCtx || ctx;\n\t\tif (targetX == null) { targetX = x; }\n\t\tif (targetY == null) { targetY = y; }\n\t\ttry {\n\t\t\tvar imageData = ctx.getImageData(x, y, width, height);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this._applyFilter(imageData)) {\n\t\t\ttargetCtx.putImageData(imageData, targetX, targetY);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[Filter]\";\n\t};\n\n\t/**\n\t * Returns a clone of this Filter instance.\n\t * @method clone\n\t * @return {Filter} A clone of the current Filter instance.\n\t **/\n\tp.clone = function() {\n\t\treturn new Filter();\n\t};\n\t\n// private methods:\n\t/**\n\t * @method _applyFilter\n\t * @param {ImageData} imageData Target ImageData instance.\n\t * @return {Boolean}\n\t **/\n\tp._applyFilter = function(imageData) { return true; };\n\n\n\tcreatejs.Filter = Filter;\n}());\n\n//##############################################################################\n// BitmapCache.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * The BitmapCache is an internal representation of all the cache properties and logic required in order to \"cache\"\n\t * an object. This information and functionality used to be located on a {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\n\t * method in {{#crossLink \"DisplayObject\"}}{{/crossLink}}, but was moved to its own class.\n\t *\n\t * Caching in this context is purely visual, and will render the DisplayObject out into an image to be used instead\n\t * of the object. The actual cache itself is still stored on the target with the {{#crossLink \"DisplayObject/cacheCanvas:property\"}}{{/crossLink}}.\n\t * Working with a singular image like a {{#crossLink \"Bitmap\"}}{{/crossLink}} there is little benefit to performing \n\t * a cache as it is already a single image. Caching is best done on containers containing multiple complex parts that \n\t * do not move often, so that rendering the image instead will improve overall rendering speed. A cached object will \n\t * not visually update until explicitly told to do so with a call to update, much like a Stage. If a cache is being \n\t * updated every frame it is likely not improving rendering performance. Cache are best used when updates will be sparse.\n\t *\n\t * Caching is also a co-requisite for applying filters to prevent expensive filters running constantly without need, \n\t * and to physically enable some effects. The BitmapCache is also responsible for applying filters to objects and \n\t * reads each {{#crossLink \"Filter\"}}{{/crossLink}} due to this relationship. Real-time Filters are not recommended \n\t * performance wise when dealing with a Context2D canvas. For best performance and to still allow for some visual \n\t * effects use a compositeOperation when possible.\n\t * @class BitmapCache\n\t * @constructor\n\t **/\n\tfunction BitmapCache() {\n\n\t\t// public:\n\t\t/**\n\t\t * Width of the cache relative to the target object.\n\t\t * @property width\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default undefined\n\t\t **/\n\t\tthis.width = undefined;\n\n\t\t/**\n\t\t * Height of the cache relative to the target object.\n\t\t * @property height\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default undefined\n\t\t * @todo Should the width and height be protected?\n\t\t **/\n\t\tthis.height = undefined;\n\n\t\t/**\n\t\t * Horizontal position of the cache relative to the target's origin.\n\t\t * @property x\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default undefined\n\t\t **/\n\t\tthis.x = undefined;\n\n\t\t/**\n\t\t * Vertical position of the cache relative to target's origin.\n\t\t * @property y\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default undefined\n\t\t **/\n\t\tthis.y = undefined;\n\n\t\t/**\n\t\t * The internal scale of the cache image, does not affects display size. This is useful to both increase and\n\t\t * decrease render quality. Objects with increased scales are more likely to look good when scaled up or rotated.\n\t\t * Objects with decreased scales can save on rendering performance.\n\t\t * @property scale\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t **/\n\t\tthis.scale = 1;\n\n\t\t/**\n\t\t * The x offset used for drawing into the cache itself, accounts for both transforms applied.\n\t\t * @property offX\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n\t\tthis.offX = 0;\n\n\t\t/**\n\t\t * The y offset used for drawing into the cache itself, accounts for both transforms applied.\n\t\t * @property offY\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n\t\tthis.offY = 0;\n\n\t\t/**\n\t\t * Track how many times the cache has been updated, mostly used for preventing duplicate cacheURLs.\n\t\t * This can be useful to see if a cache has been updated.\n\t\t * @property cacheID\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n\t\tthis.cacheID = 0;\n\n\t\t// protected:\n\t\t/**\n\t\t * The relative offset of the filter's x position, used for drawing the cache onto its container.\n\t\t * Re-calculated every update call before drawing.\n\t\t * @property _filterOffY\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n\t\tthis._filterOffX = 0;\n\n\t\t/**\n\t\t * The relative offset of the filter's y position, used for drawing the cache onto its container.\n\t\t * Re-calculated every update call before drawing.\n\t\t * @property _filterOffY\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n\t\tthis._filterOffY = 0;\n\n\t\t/**\n\t\t * The cacheID when a DataURL was requested.\n\t\t * @property _cacheDataURLID\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n\t\tthis._cacheDataURLID = 0;\n\n\t\t/**\n\t\t * The cache's DataURL, generated on-demand using the getter.\n\t\t * @property _cacheDataURL\n\t\t * @protected\n\t\t * @type {String}\n\t\t * @default null\n\t\t **/\n\t\tthis._cacheDataURL = null;\n\n\t\t/**\n\t\t * Internal tracking of final bounding width, approximately width*scale; however, filters can complicate the actual value.\n\t\t * @property _drawWidth\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n\t\tthis._drawWidth = 0;\n\n\t\t/**\n\t\t * Internal tracking of final bounding height, approximately height*scale; however, filters can complicate the actual value.\n\t\t * @property _drawHeight\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n\t\tthis._drawHeight = 0;\n\t}\n\tvar p = BitmapCache.prototype;\n\n\t/**\n\t * Returns the bounds that surround all applied filters, relies on each filter to describe how it changes bounds.\n\t * @method getFilterBounds\n\t * @param {DisplayObject} target The object to check the filter bounds for.\n\t * @param {Rectangle} [output=null] Optional parameter, if provided then calculated bounds will be applied to that object.\n\t * @return {Rectangle} bounds object representing the bounds with filters.\n\t * @static\n\t **/\n\tBitmapCache.getFilterBounds = function(target, output) {\n\t\tif(!output){ output = new createjs.Rectangle(); }\n\t\tvar filters = target.filters;\n\t\tvar filterCount = filters && filters.length;\n\t\tif (!!filterCount <= 0) { return output; }\n\n\t\tfor(var i=0; i<filterCount; i++) {\n\t\t\tvar f = filters[i];\n\t\t\tif(!f || !f.getBounds){ continue; }\n\t\t\tvar test = f.getBounds();\n\t\t\tif(!test){ continue; }\n\t\t\tif(i==0) {\n\t\t\t\toutput.setValues(test.x, test.y, test.width, test.height);\n\t\t\t} else {\n\t\t\t\toutput.extend(test.x, test.y, test.width, test.height);\n\t\t\t}\n\t\t}\n\n\t\treturn output;\n\t};\n\n// public methods:\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[BitmapCache]\";\n\t};\n\n\t/**\n\t * Actually create the correct cache surface and properties associated with it. Caching and it's benefits are discussed\n\t * by the {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} function and this class description. Here are the detailed\n\t * specifics of how to use the options object.\n\t *\n\t * - If options.useGL is set to \"new\" a StageGL is created and contained on this for use when rendering the cache.\n\t * - If options.useGL is set to \"stage\" if the current stage is a StageGL it will be used. If not then it will default to \"new\".\n\t * - If options.useGL is a StageGL instance it will not create one but use the one provided.\n\t * - If options.useGL is undefined a Context 2D cache will be performed.\n\t *\n\t * This means you can use any combination of StageGL and 2D with either, neither, or both the stage and cache being\n\t * WebGL. Using \"new\" with a StageGL display list is highly unrecommended, but still an option. It should be avoided\n\t * due to negative performance reasons and the Image loading limitation noted in the class complications above.\n\t *\n\t * When \"options.useGL\" is set to the parent stage of the target and WebGL, performance is increased by using\n\t * \"RenderTextures\" instead of canvas elements. These are internal Textures on the graphics card stored in the GPU.\n\t * Because they are no longer canvases you cannot perform operations you could with a regular canvas. The benefit\n\t * is that this avoids the slowdown of copying the texture back and forth from the GPU to a Canvas element.\n\t * This means \"stage\" is the recommended option when available.\n\t *\n\t * A StageGL cache does not infer the ability to draw objects a StageGL cannot currently draw, i.e. do not use a\n\t * WebGL context cache when caching a Shape, Text, etc.\n\t * <h4>WebGL cache with a 2D context</h4>\n\t *\n\t *     var stage = new createjs.Stage();\n\t *     var bmp = new createjs.Bitmap(src);\n\t *     bmp.cache(0, 0, bmp.width, bmp.height, 1, {gl: \"new\"});          // no StageGL to use, so make one\n\t *\n\t *     var shape = new createjs.Shape();\n\t *     shape.graphics.clear().fill(\"red\").drawRect(0,0,20,20);\n\t *     shape.cache(0, 0, 20, 20, 1);                             // cannot use WebGL cache\n\t *\n\t * <h4>WebGL cache with a WebGL context</h4>\n\t *\n\t *     var stageGL = new createjs.StageGL();\n\t *     var bmp = new createjs.Bitmap(src);\n\t *     bmp.cache(0, 0, bmp.width, bmp.height, 1, {gl: \"stage\"});       // use our StageGL to cache\n\t *\n\t *     var shape = new createjs.Shape();\n\t *     shape.graphics.clear().fill(\"red\").drawRect(0,0,20,20);\n\t *     shape.cache(0, 0, 20, 20, 1);                             // cannot use WebGL cache\n\t *\n\t * You may wish to create your own StageGL instance to control factors like clear color, transparency, AA, and\n\t * others. If you do, pass a new instance in instead of \"true\", the library will automatically set the\n\t * {{#crossLink \"StageGL/isCacheControlled\"}}{{/crossLink}} to true on your instance. This will trigger it to behave\n\t * correctly, and not assume your main context is WebGL.\n\t *\n\t * @public\n\t * @method BitmapCache.cache\n\t * @param {Number} x The x coordinate origin for the cache region.\n\t * @param {Number} y The y coordinate origin for the cache region.\n\t * @param {Number} width The width of the cache region.\n\t * @param {Number} height The height of the cache region.\n\t * @param {Number} [scale=1] The scale at which the cache will be created. For example, if you cache a vector shape\n\t * using myShape.cache(0,0,100,100,2) then the resulting cacheCanvas will be 200x200 px. This lets you scale and\n\t * rotate cached elements with greater fidelity. Default is 1.\n\t * @param {Object} [options=undefined] Specify additional parameters for the cache logic\n\t * @param {undefined|\"new\"|\"stage\"|StageGL} [options.useGL=undefined] Select whether to use context 2D, or WebGL rendering, and\n\t * whether to make a new stage instance or use an existing one. See above for extensive details on use.\n\t * @for BitmapCache\n\t */\n\t p.define = function(target, x, y, width, height, scale, options) {\n\t\tif(!target){ throw \"No symbol to cache\"; }\n\t\tthis._options = options;\n\t\tthis.target = target;\n\n\t\tthis.width =\t\twidth >= 1 ? width : 1;\n\t\tthis.height =\t\theight >= 1 ? height : 1;\n\t\tthis.x =\t\t\tx || 0;\n\t\tthis.y =\t\t\ty || 0;\n\t\tthis.scale =\t\tscale || 1;\n\n\t\tthis.update();\n\t};\n\n\t/**\n\t * Directly called via {{#crossLink \"DisplayObject/updateCache:method\"}}{{/crossLink}}, but also internally. This\n\t * has the dual responsibility of making sure the surface is ready to be drawn to, and performing the draw. For\n\t * full details of each behaviour, check the protected functions {{#crossLink \"BitmapCache/_updateSurface\"}}{{/crossLink}}\n\t * and {{#crossLink \"BitmapCache/_drawToCache\"}}{{/crossLink}} respectively.\n\t * @method update\n\t * @param {String} [compositeOperation=null] The DisplayObject this cache is linked to.\n\t **/\n\tp.update = function(compositeOperation) {\n\t\tif(!this.target) { throw \"define() must be called before update()\"; }\n\n\t\tvar filterBounds = BitmapCache.getFilterBounds(this.target);\n\t\tvar surface = this.target.cacheCanvas;\n\n\t\tthis._drawWidth = Math.ceil(this.width*this.scale) + filterBounds.width;\n\t\tthis._drawHeight = Math.ceil(this.height*this.scale) + filterBounds.height;\n\n\t\tif(!surface || this._drawWidth != surface.width || this._drawHeight != surface.height) {\n\t\t\tthis._updateSurface();\n\t\t}\n\n\t\tthis._filterOffX = filterBounds.x;\n\t\tthis._filterOffY = filterBounds.y;\n\t\tthis.offX = this.x*this.scale + this._filterOffX;\n\t\tthis.offY = this.y*this.scale + this._filterOffY;\n\n\t\tthis._drawToCache(compositeOperation);\n\n\t\tthis.cacheID = this.cacheID?this.cacheID+1:1;\n\t};\n\n\t/**\n\t * Reset and release all the properties and memory associated with this cache.\n\t * @method release\n\t **/\n\tp.release = function() {\n\t\tif (this._webGLCache) {\n\t\t\t// if it isn't cache controlled clean up after yourself\n\t\t\tif (!this._webGLCache.isCacheControlled) {\n\t\t\t\tif (this.__lastRT){ this.__lastRT = undefined; }\n\t\t\t\tif (this.__rtA){ this._webGLCache._killTextureObject(this.__rtA); }\n\t\t\t\tif (this.__rtB){ this._webGLCache._killTextureObject(this.__rtB); }\n\t\t\t\tif (this.target && this.target.cacheCanvas){ this._webGLCache._killTextureObject(this.target.cacheCanvas); }\n\t\t\t}\n\t\t\t// set the context to none and let the garbage collector get the rest when the canvas itself gets removed\n\t\t\tthis._webGLCache = false;\n\t\t} else {\n\t\t\tvar stage = this.target.stage;\n\t\t\tif (stage instanceof createjs.StageGL){\n\t\t\t\tstage.releaseTexture(this.target.cacheCanvas);\n\t\t\t}\n\t\t}\n\n\t\tthis.target = this.target.cacheCanvas = null;\n\t\tthis.cacheID = this._cacheDataURLID = this._cacheDataURL = undefined;\n\t\tthis.width = this.height = this.x = this.y = this.offX = this.offY = 0;\n\t\tthis.scale = 1;\n\t};\n\n\t/**\n\t * Returns a data URL for the cache, or `null` if this display object is not cached.\n\t * Uses {{#crossLink \"BitmapCache/cacheID:property\"}}{{/crossLink}} to ensure a new data URL is not generated if the\n\t * cache has not changed.\n\t * @method getCacheDataURL\n\t * @return {String} The image data url for the cache.\n\t **/\n\tp.getCacheDataURL = function() {\n\t\tvar cacheCanvas = this.target && this.target.cacheCanvas;\n\t\tif (!cacheCanvas) { return null; }\n\t\tif (this.cacheID != this._cacheDataURLID) {\n\t\t\tthis._cacheDataURLID = this.cacheID;\n\t\t\tthis._cacheDataURL = cacheCanvas.toDataURL?cacheCanvas.toDataURL():null;\t// incase function is\n\t\t}\n\t\treturn this._cacheDataURL;\n\t};\n\n\t/**\n\t * Use context2D drawing commands to display the cache canvas being used.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The context to draw into.\n\t * @return {Boolean} Whether the draw was handled successfully.\n\t **/\n\tp.draw = function(ctx) {\n\t\tif(!this.target) { return false; }\n\t\tctx.drawImage(this.target.cacheCanvas,\n\t\t\tthis.x + (this._filterOffX/this.scale),\t\tthis.y + (this._filterOffY/this.scale),\n\t\t\tthis._drawWidth/this.scale,\t\t\t\t\tthis._drawHeight/this.scale\n\t\t);\n\t\treturn true;\n\t};\n\n// private methods:\n\t/**\n\t * Create or resize the invisible canvas/surface that is needed for the display object(s) to draw to,\n\t * and in turn be used in their stead when drawing. The surface is resized to the size defined\n\t * by the width and height, factoring in scaling and filters. Adjust them to adjust the output size.\n\t * @method _updateSurface\n\t * @protected\n\t **/\n\tp._updateSurface = function() {\n\t\tif (!this._options || !this._options.useGL) {\n\t\t\tvar surface = this.target.cacheCanvas;\n\n\t\t\t// create it if it's missing\n\t\t\tif(!surface) {\n\t\t\t\tsurface = this.target.cacheCanvas = createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\");\n\t\t\t}\n\n\t\t\t// now size it\n\t\t\tsurface.width = this._drawWidth;\n\t\t\tsurface.height = this._drawHeight;\n\t\t\treturn;\n\t\t}\n\n\t\t// create it if it's missing\n\t\tif (!this._webGLCache) {\n\t\t\tif (this._options.useGL === \"stage\") {\n\t\t\t\tif(!(this.target.stage && this.target.stage.isWebGL)){\n\t\t\t\t\tvar error = \"Cannot use 'stage' for cache because the object's parent stage is \";\n\t\t\t\t\terror += this.target.stage ? \"non WebGL.\" : \"not set, please addChild to the correct stage.\";\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t\tthis.target.cacheCanvas = true; // will be replaced with RenderTexture, temporary positive value for old \"isCached\" checks\n\t\t\t\tthis._webGLCache = this.target.stage;\n\n\t\t\t} else if(this._options.useGL === \"new\") {\n\t\t\t\tthis.target.cacheCanvas = document.createElement(\"canvas\"); // we can turn off autopurge because we wont be making textures here\n\t\t\t\tthis._webGLCache = new createjs.StageGL(this.target.cacheCanvas, {antialias: true, transparent: true, autoPurge: -1});\n\t\t\t\tthis._webGLCache.isCacheControlled = true;\t// use this flag to control stage sizing and final output\n\n\t\t\t} else if(this._options.useGL instanceof createjs.StageGL) {\n\t\t\t\tthis.target.cacheCanvas = true; // will be replaced with RenderTexture, temporary positive value for old \"isCached\" checks\n\t\t\t\tthis._webGLCache = this._options.useGL;\n\t\t\t\tthis._webGLCache.isCacheControlled = true;\t// use this flag to control stage sizing and final output\n\n\t\t\t} else {\n\t\t\t\tthrow \"Invalid option provided to useGL, expected ['stage', 'new', StageGL, undefined], got \"+ this._options.useGL;\n\t\t\t}\n\t\t}\n\n\t\t// now size render surfaces\n\t\tvar surface = this.target.cacheCanvas;\n\t\tvar stageGL = this._webGLCache;\n\n\t\t// if we have a dedicated stage we've gotta size it\n\t\tif (stageGL.isCacheControlled) {\n\t\t\tsurface.width = this._drawWidth;\n\t\t\tsurface.height = this._drawHeight;\n\t\t\tstageGL.updateViewport(this._drawWidth, this._drawHeight);\n\t\t}\n\t\tif (this.target.filters) {\n\t\t\t// with filters we can't tell how many we'll need but the most we'll ever need is two, so make them now\n\t\t\tstageGL.getTargetRenderTexture(this.target, this._drawWidth,this._drawHeight);\n\t\t\tstageGL.getTargetRenderTexture(this.target, this._drawWidth,this._drawHeight);\n\t\t} else {\n\t\t\t// without filters then we only need one RenderTexture, and that's only if its not a dedicated stage\n\t\t\tif (!stageGL.isCacheControlled) {\n\t\t\t\tstageGL.getTargetRenderTexture(this.target, this._drawWidth,this._drawHeight);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Perform the cache draw out for context 2D now that the setup properties have been performed.\n\t * @method _drawToCache\n\t * @protected\n\t **/\n\tp._drawToCache = function(compositeOperation) {\n\t\tvar surface = this.target.cacheCanvas;\n\t\tvar target = this.target;\n\t\tvar webGL = this._webGLCache;\n\n\t\tif (webGL){\n\t\t\t//TODO: auto split blur into an x/y pass\n\t\t\twebGL.cacheDraw(target, target.filters, this);\n\n\t\t\t// we may of swapped around which element the surface is, so we re-fetch it\n\t\t\tsurface = this.target.cacheCanvas;\n\n\t\t\tsurface.width = this._drawWidth;\n\t\t\tsurface.height = this._drawHeight;\n\t\t} else {\n\t\t\tvar ctx = surface.getContext(\"2d\");\n\n\t\t\tif (!compositeOperation) {\n\t\t\t\tctx.clearRect(0, 0, this._drawWidth+1, this._drawHeight+1);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.globalCompositeOperation = compositeOperation;\n\t\t\tctx.setTransform(this.scale,0,0,this.scale, -this._filterOffX,-this._filterOffY);\n\t\t\tctx.translate(-this.x, -this.y);\n\t\t\ttarget.draw(ctx, true);\n\t\t\tctx.restore();\n\n\n\t\t\tif (target.filters && target.filters.length) {\n\t\t\t\tthis._applyFilters(ctx);\n\t\t\t}\n\t\t}\n\t\tsurface._invalid = true;\n\t};\n\n\t/**\n\t * Work through every filter and apply its individual visual transformation.\n\t * @method _applyFilters\n\t * @protected\n\t **/\n\tp._applyFilters = function(ctx) {\n\t\tvar filters = this.target.filters;\n\n\t\tvar w = this._drawWidth;\n\t\tvar h = this._drawHeight;\n\n\t\tvar data;\n\n\t\tvar i = 0, filter = filters[i];\n\t\tdo { // this is safe because we wouldn't be in apply filters without a filter count of at least 1\n\t\t\tif(filter.usesContext){\n\t\t\t\tif(data) {\n\t\t\t\t\tctx.putImageData(data, 0,0);\n\t\t\t\t\tdata = null;\n\t\t\t\t}\n\t\t\t\tfilter.applyFilter(ctx, 0,0, w,h);\n\t\t\t} else {\n\t\t\t\tif(!data) {\n\t\t\t\t\tdata = ctx.getImageData(0,0, w,h);\n\t\t\t\t}\n\t\t\t\tfilter._applyFilter(data);\n\t\t\t}\n\n\t\t\t// work through the multipass if it's there, otherwise move on\n\t\t\tfilter = filter._multiPass !== null ? filter._multiPass : filters[++i];\n\t\t} while (filter);\n\n\t\t//done\n\t\tif(data) {\n\t\t\tctx.putImageData(data, 0,0);\n\t\t}\n\t};\n\n\tcreatejs.BitmapCache = BitmapCache;\n}());\n\n//##############################################################################\n// BlurFilter.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Applies a box blur to DisplayObjects in context 2D and a Gaussian blur in webgl. Note that this filter is fairly\n\t * intensive, particularly if the quality is set higher than 1.\n\t *\n\t * <h4>Example</h4>\n\t * This example creates a red circle, and then applies a 5 pixel blur to it. It uses the {{#crossLink \"Filter/getBounds\"}}{{/crossLink}}\n\t * method to account for the spread that the blur causes.\n\t *\n\t *      var shape = new createjs.Shape().set({x:100,y:100});\n\t *      shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n\t *\n\t *      var blurFilter = new createjs.BlurFilter(5, 5, 1);\n\t *      shape.filters = [blurFilter];\n\t *      var bounds = blurFilter.getBounds();\n\t *\n\t *      shape.cache(-50+bounds.x, -50+bounds.y, 100+bounds.width, 100+bounds.height);\n\t *\n\t * See {{#crossLink \"Filter\"}}{{/crossLink}} for an more information on applying filters.\n\t * @class BlurFilter\n\t * @extends Filter\n\t * @constructor\n\t * @param {Number} [blurX=0] The horizontal blur radius in pixels.\n\t * @param {Number} [blurY=0] The vertical blur radius in pixels.\n\t * @param {Number} [quality=1] The number of blur iterations.\n\t **/\n\tfunction BlurFilter( blurX, blurY, quality) {\n\t\tthis.Filter_constructor();\n\n\t\t// public properties:\n\t\t/**\n\t\t * Horizontal blur radius in pixels\n\t\t * @property blurX\n\t\t * @default 0\n\t\t * @type Number\n\t\t **/\n\t\tthis._blurX = blurX;\n\t\tthis._blurXTable = [];\n\t\tthis._lastBlurX = null;\n\n\t\t/**\n\t\t * Vertical blur radius in pixels\n\t\t * @property blurY\n\t\t * @default 0\n\t\t * @type Number\n\t\t **/\n\t\tthis._blurY = blurY;\n\t\tthis._blurYTable = [];\n\t\tthis._lastBlurY = null;\n\n\t\t/**\n\t\t * Number of blur iterations. For example, a value of 1 will produce a rough blur. A value of 2 will produce a\n\t\t * smoother blur, but take twice as long to run.\n\t\t * @property quality\n\t\t * @default 1\n\t\t * @type Number\n\t\t **/\n\t\tthis._quality;\n\t\tthis._lastQuality = null;\n\n\t\t/**\n\t\t * This is a template to generate the shader for {{#crossLink FRAG_SHADER_BODY}}{{/crossLink}}\n\t\t */\n\t\tthis.FRAG_SHADER_TEMPLATE = (\n\t\t\t\"uniform float xWeight[{{blurX}}];\" +\n\t\t\t\"uniform float yWeight[{{blurY}}];\" +\n\t\t\t\"uniform vec2 textureOffset;\" +\n\t\t\t\"void main(void) {\" +\n\t\t\t\t\"vec4 color = vec4(0.0);\" +\n\n\t\t\t\t\"float xAdj = ({{blurX}}.0-1.0)/2.0;\" +\n\t\t\t\t\"float yAdj = ({{blurY}}.0-1.0)/2.0;\" +\n\t\t\t\t\"vec2 sampleOffset;\" +\n\n\t\t\t\t\"for(int i=0; i<{{blurX}}; i++) {\" +\n\t\t\t\t\t\"for(int j=0; j<{{blurY}}; j++) {\" +\n\t\t\t\t\t\t\"sampleOffset = vRenderCoord + (textureOffset * vec2(float(i)-xAdj, float(j)-yAdj));\" +\n\t\t\t\t\t\t\"color += texture2D(uSampler, sampleOffset) * (xWeight[i] * yWeight[j]);\" +\n\t\t\t\t\t\"}\" +\n\t\t\t\t\"}\" +\n\n\t\t\t\t\"gl_FragColor = color.rgba;\" +\n\t\t\t\"}\"\n\t\t);\n\n\t\t// update the filter using the setters\n\t\tif(isNaN(quality) || quality < 1){ quality = 1; }\n\t\tthis.setQuality(quality|0);\n\t}\n\tvar p = createjs.extend(BlurFilter, createjs.Filter);\n\n\t// TODO: deprecated\n\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n\tp.getBlurX = function() { return this._blurX; };\n\tp.getBlurY = function() { return this._blurY; };\n\tp.setBlurX = function(value) {\n\t\tif(isNaN(value) || value < 0){ value = 0; }\n\t\tthis._blurX = value;\n\t};\n\tp.setBlurY = function(value) {\n\t\tif(isNaN(value) || value < 0){ value = 0; }\n\t\tthis._blurY = value;\n\t};\n\tp.getQuality = function() { return this._quality; };\n\tp.setQuality = function(value) {\n\t\tif(isNaN(value) || value < 0){ value = 0; }\n\t\tthis._quality = value | 0;\n\t};\n\tp._getShader = function() {\n\t\tvar xChange = this._lastBlurX !== this._blurX;\n\t\tvar yChange = this._lastBlurY !== this._blurY;\n\t\tvar qChange = this._lastQuality !== this._quality;\n\t\tif(xChange || yChange || qChange) {\n\t\t\tif(xChange || qChange) { this._blurXTable = this._getTable(this._blurX * this._quality); }\n\t\t\tif(yChange || qChange) { this._blurYTable = this._getTable(this._blurY * this._quality); }\n\t\t\tthis._updateShader();\n\t\t\tthis._lastBlurX = this._blurX;\n\t\t\tthis._lastBlurY = this._blurY;\n\t\t\tthis._lastQuality = this._quality;\n\t\t\treturn undefined; // force a rebuild\n\t\t}\n\t\treturn this._compiledShader;\n\t};\n\tp._setShader = function() { this._compiledShader; };\n\n\ttry {\n\t\tObject.defineProperties(p, {\n\t\t\tblurX: { get: p.getBlurX, set: p.setBlurX },\n\t\t\tblurY: { get: p.getBlurY, set: p.setBlurY },\n\t\t\tquality: { get: p.getQuality, set: p.setQuality },\n\t\t\t_builtShader: { get: p._getShader, set: p._setShader}\n\t\t});\n\t} catch (e) { console.log(e); }\n\n\t/**\n\t * Internal lookup function to create gaussian distribution.\n\t * @method _getTable\n\t * @param {Number} spread How many steps in the curve.\n\t * @return {Array<Number>} An array with Math.ceil(spread*2) entries with appropriately distributed weights.\n\t */\n\tp._getTable = function(spread) {\n\t\tvar EDGE = 4.2;\n\t\tif(spread<=1) { return [1]; }\n\n\t\tvar result = [];\n\t\tvar count = Math.ceil(spread*2);\n\t\tcount += (count%2)?0:1;\n\t\tvar adjust = (count/2)|0;\n\t\tfor(var i = -adjust; i<=adjust; i++) {\n\t\t\tvar x = (i/adjust)*EDGE;\n\t\t\tresult.push(1/Math.sqrt(2*Math.PI) * Math.pow(Math.E, -(Math.pow(x,2)/4)));\n\t\t}\n\t\tvar factor = result.reduce(function(a, b) { return a + b; });\n\t\treturn result.map(function(currentValue, index, array) { return currentValue/factor; });\n\t};\n\n\t/**\n\t * Internal update function to create shader properties.\n\t * @method _updateShader\n\t */\n\tp._updateShader = function() {\n\t\tif(this._blurX === undefined || this._blurY === undefined){ return; }\n\t\tvar result = this.FRAG_SHADER_TEMPLATE;\n\t\tresult = result.replace(/\\{\\{blurX\\}\\}/g, (this._blurXTable.length).toFixed(0));\n\t\tresult = result.replace(/\\{\\{blurY\\}\\}/g, (this._blurYTable.length).toFixed(0));\n\t\tthis.FRAG_SHADER_BODY = result;\n\t};\n\n\t/** docced in super class **/\n\tp.shaderParamSetup = function(gl, stage, shaderProgram) {\n\t\t// load the normalized gaussian weight tables\n\t\tgl.uniform1fv(\n\t\t\tgl.getUniformLocation(shaderProgram, \"xWeight\"),\n\t\t\tthis._blurXTable\n\t\t);\n\t\tgl.uniform1fv(\n\t\t\tgl.getUniformLocation(shaderProgram, \"yWeight\"),\n\t\t\tthis._blurYTable\n\t\t);\n\n\t\t// what is the size of a single pixel in -1, 1 (webGL) space\n\t\tgl.uniform2f(\n\t\t\tgl.getUniformLocation(shaderProgram, \"textureOffset\"),\n\t\t\t2/(stage._viewportWidth*this._quality), 2/(stage._viewportHeight*this._quality)\n\t\t);\n\t};\n\n// constants:\n\t/**\n\t * Array of multiply values for blur calculations.\n\t * @property MUL_TABLE\n\t * @type Array\n\t * @protected\n\t * @static\n\t **/\n\tBlurFilter.MUL_TABLE = [1, 171, 205, 293, 57, 373, 79, 137, 241, 27, 391, 357, 41, 19, 283, 265, 497, 469, 443, 421, 25, 191, 365, 349, 335, 161, 155, 149, 9, 278, 269, 261, 505, 245, 475, 231, 449, 437, 213, 415, 405, 395, 193, 377, 369, 361, 353, 345, 169, 331, 325, 319, 313, 307, 301, 37, 145, 285, 281, 69, 271, 267, 263, 259, 509, 501, 493, 243, 479, 118, 465, 459, 113, 446, 55, 435, 429, 423, 209, 413, 51, 403, 199, 393, 97, 3, 379, 375, 371, 367, 363, 359, 355, 351, 347, 43, 85, 337, 333, 165, 327, 323, 5, 317, 157, 311, 77, 305, 303, 75, 297, 294, 73, 289, 287, 71, 141, 279, 277, 275, 68, 135, 67, 133, 33, 262, 260, 129, 511, 507, 503, 499, 495, 491, 61, 121, 481, 477, 237, 235, 467, 232, 115, 457, 227, 451, 7, 445, 221, 439, 218, 433, 215, 427, 425, 211, 419, 417, 207, 411, 409, 203, 202, 401, 399, 396, 197, 49, 389, 387, 385, 383, 95, 189, 47, 187, 93, 185, 23, 183, 91, 181, 45, 179, 89, 177, 11, 175, 87, 173, 345, 343, 341, 339, 337, 21, 167, 83, 331, 329, 327, 163, 81, 323, 321, 319, 159, 79, 315, 313, 39, 155, 309, 307, 153, 305, 303, 151, 75, 299, 149, 37, 295, 147, 73, 291, 145, 289, 287, 143, 285, 71, 141, 281, 35, 279, 139, 69, 275, 137, 273, 17, 271, 135, 269, 267, 133, 265, 33, 263, 131, 261, 130, 259, 129, 257, 1];\n\n\t/**\n\t * Array of shift values for blur calculations.\n\t * @property SHG_TABLE\n\t * @type Array\n\t * @protected\n\t * @static\n\t **/\n\tBlurFilter.SHG_TABLE = [0, 9, 10, 11, 9, 12, 10, 11, 12, 9, 13, 13, 10, 9, 13, 13, 14, 14, 14, 14, 10, 13, 14, 14, 14, 13, 13, 13, 9, 14, 14, 14, 15, 14, 15, 14, 15, 15, 14, 15, 15, 15, 14, 15, 15, 15, 15, 15, 14, 15, 15, 15, 15, 15, 15, 12, 14, 15, 15, 13, 15, 15, 15, 15, 16, 16, 16, 15, 16, 14, 16, 16, 14, 16, 13, 16, 16, 16, 15, 16, 13, 16, 15, 16, 14, 9, 16, 16, 16, 16, 16, 16, 16, 16, 16, 13, 14, 16, 16, 15, 16, 16, 10, 16, 15, 16, 14, 16, 16, 14, 16, 16, 14, 16, 16, 14, 15, 16, 16, 16, 14, 15, 14, 15, 13, 16, 16, 15, 17, 17, 17, 17, 17, 17, 14, 15, 17, 17, 16, 16, 17, 16, 15, 17, 16, 17, 11, 17, 16, 17, 16, 17, 16, 17, 17, 16, 17, 17, 16, 17, 17, 16, 16, 17, 17, 17, 16, 14, 17, 17, 17, 17, 15, 16, 14, 16, 15, 16, 13, 16, 15, 16, 14, 16, 15, 16, 12, 16, 15, 16, 17, 17, 17, 17, 17, 13, 16, 15, 17, 17, 17, 16, 15, 17, 17, 17, 16, 15, 17, 17, 14, 16, 17, 17, 16, 17, 17, 16, 15, 17, 16, 14, 17, 16, 15, 17, 16, 17, 17, 16, 17, 15, 16, 17, 14, 17, 16, 15, 17, 16, 17, 13, 17, 16, 17, 17, 16, 17, 14, 17, 16, 17, 16, 17, 16, 17, 9];\n\n// public methods:\n\t/** docced in super class **/\n\tp.getBounds = function (rect) {\n\t\tvar x = this.blurX|0, y = this.blurY| 0;\n\t\tif(x <= 0 && y <= 0) { return rect; }\n\t\tvar q = Math.pow(this.quality, 0.2);\n\t\treturn (rect || new createjs.Rectangle()).pad(y*q+1,x*q+1,y*q+1,x*q+1);\n\t};\n\n\t/** docced in super class **/\n\tp.clone = function() {\n\t\treturn new BlurFilter(this.blurX, this.blurY, this.quality);\n\t};\n\n\t/** docced in super class **/\n\tp.toString = function() {\n\t\treturn \"[BlurFilter]\";\n\t};\n\n\n// private methods:\n\n\t/** docced in super class **/\n\tp._applyFilter = function (imageData) {\n\t\tvar radiusX = this._blurX >> 1;\n\t\tif (isNaN(radiusX) || radiusX < 0) return false;\n\t\tvar radiusY = this._blurY >> 1;\n\t\tif (isNaN(radiusY) || radiusY < 0) return false;\n\t\tif (radiusX == 0 && radiusY == 0) return false;\n\n\t\tvar iterations = this.quality;\n\t\tif (isNaN(iterations) || iterations < 1) iterations = 1;\n\t\titerations |= 0;\n\t\tif (iterations > 3) iterations = 3;\n\t\tif (iterations < 1) iterations = 1;\n\n\t\tvar px = imageData.data;\n\t\tvar x=0, y=0, i=0, p=0, yp=0, yi=0, yw=0, r=0, g=0, b=0, a=0, pr=0, pg=0, pb=0, pa=0;\n\n\t\tvar divx = (radiusX + radiusX + 1) | 0;\n\t\tvar divy = (radiusY + radiusY + 1) | 0;\n\t\tvar w = imageData.width | 0;\n\t\tvar h = imageData.height | 0;\n\n\t\tvar w1 = (w - 1) | 0;\n\t\tvar h1 = (h - 1) | 0;\n\t\tvar rxp1 = (radiusX + 1) | 0;\n\t\tvar ryp1 = (radiusY + 1) | 0;\n\n\t\tvar ssx = {r:0,b:0,g:0,a:0};\n\t\tvar sx = ssx;\n\t\tfor ( i = 1; i < divx; i++ )\n\t\t{\n\t\t\tsx = sx.n = {r:0,b:0,g:0,a:0};\n\t\t}\n\t\tsx.n = ssx;\n\n\t\tvar ssy = {r:0,b:0,g:0,a:0};\n\t\tvar sy = ssy;\n\t\tfor ( i = 1; i < divy; i++ )\n\t\t{\n\t\t\tsy = sy.n = {r:0,b:0,g:0,a:0};\n\t\t}\n\t\tsy.n = ssy;\n\n\t\tvar si = null;\n\n\n\t\tvar mtx = BlurFilter.MUL_TABLE[radiusX] | 0;\n\t\tvar stx = BlurFilter.SHG_TABLE[radiusX] | 0;\n\t\tvar mty = BlurFilter.MUL_TABLE[radiusY] | 0;\n\t\tvar sty = BlurFilter.SHG_TABLE[radiusY] | 0;\n\n\t\twhile (iterations-- > 0) {\n\n\t\t\tyw = yi = 0;\n\t\t\tvar ms = mtx;\n\t\t\tvar ss = stx;\n\t\t\tfor (y = h; --y > -1;) {\n\t\t\t\tr = rxp1 * (pr = px[(yi) | 0]);\n\t\t\t\tg = rxp1 * (pg = px[(yi + 1) | 0]);\n\t\t\t\tb = rxp1 * (pb = px[(yi + 2) | 0]);\n\t\t\t\ta = rxp1 * (pa = px[(yi + 3) | 0]);\n\n\t\t\t\tsx = ssx;\n\n\t\t\t\tfor( i = rxp1; --i > -1; )\n\t\t\t\t{\n\t\t\t\t\tsx.r = pr;\n\t\t\t\t\tsx.g = pg;\n\t\t\t\t\tsx.b = pb;\n\t\t\t\t\tsx.a = pa;\n\t\t\t\t\tsx = sx.n;\n\t\t\t\t}\n\n\t\t\t\tfor( i = 1; i < rxp1; i++ )\n\t\t\t\t{\n\t\t\t\t\tp = (yi + ((w1 < i ? w1 : i) << 2)) | 0;\n\t\t\t\t\tr += ( sx.r = px[p]);\n\t\t\t\t\tg += ( sx.g = px[p+1]);\n\t\t\t\t\tb += ( sx.b = px[p+2]);\n\t\t\t\t\ta += ( sx.a = px[p+3]);\n\n\t\t\t\t\tsx = sx.n;\n\t\t\t\t}\n\n\t\t\t\tsi = ssx;\n\t\t\t\tfor ( x = 0; x < w; x++ )\n\t\t\t\t{\n\t\t\t\t\tpx[yi++] = (r * ms) >>> ss;\n\t\t\t\t\tpx[yi++] = (g * ms) >>> ss;\n\t\t\t\t\tpx[yi++] = (b * ms) >>> ss;\n\t\t\t\t\tpx[yi++] = (a * ms) >>> ss;\n\n\t\t\t\t\tp = ((yw + ((p = x + radiusX + 1) < w1 ? p : w1)) << 2);\n\n\t\t\t\t\tr -= si.r - ( si.r = px[p]);\n\t\t\t\t\tg -= si.g - ( si.g = px[p+1]);\n\t\t\t\t\tb -= si.b - ( si.b = px[p+2]);\n\t\t\t\t\ta -= si.a - ( si.a = px[p+3]);\n\n\t\t\t\t\tsi = si.n;\n\n\t\t\t\t}\n\t\t\t\tyw += w;\n\t\t\t}\n\n\t\t\tms = mty;\n\t\t\tss = sty;\n\t\t\tfor (x = 0; x < w; x++) {\n\t\t\t\tyi = (x << 2) | 0;\n\n\t\t\t\tr = (ryp1 * (pr = px[yi])) | 0;\n\t\t\t\tg = (ryp1 * (pg = px[(yi + 1) | 0])) | 0;\n\t\t\t\tb = (ryp1 * (pb = px[(yi + 2) | 0])) | 0;\n\t\t\t\ta = (ryp1 * (pa = px[(yi + 3) | 0])) | 0;\n\n\t\t\t\tsy = ssy;\n\t\t\t\tfor( i = 0; i < ryp1; i++ )\n\t\t\t\t{\n\t\t\t\t\tsy.r = pr;\n\t\t\t\t\tsy.g = pg;\n\t\t\t\t\tsy.b = pb;\n\t\t\t\t\tsy.a = pa;\n\t\t\t\t\tsy = sy.n;\n\t\t\t\t}\n\n\t\t\t\typ = w;\n\n\t\t\t\tfor( i = 1; i <= radiusY; i++ )\n\t\t\t\t{\n\t\t\t\t\tyi = ( yp + x ) << 2;\n\n\t\t\t\t\tr += ( sy.r = px[yi]);\n\t\t\t\t\tg += ( sy.g = px[yi+1]);\n\t\t\t\t\tb += ( sy.b = px[yi+2]);\n\t\t\t\t\ta += ( sy.a = px[yi+3]);\n\n\t\t\t\t\tsy = sy.n;\n\n\t\t\t\t\tif( i < h1 )\n\t\t\t\t\t{\n\t\t\t\t\t\typ += w;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tyi = x;\n\t\t\t\tsi = ssy;\n\t\t\t\tif ( iterations > 0 )\n\t\t\t\t{\n\t\t\t\t\tfor ( y = 0; y < h; y++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tp = yi << 2;\n\t\t\t\t\t\tpx[p+3] = pa =(a * ms) >>> ss;\n\t\t\t\t\t\tif ( pa > 0 )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpx[p]   = ((r * ms) >>> ss );\n\t\t\t\t\t\t\tpx[p+1] = ((g * ms) >>> ss );\n\t\t\t\t\t\t\tpx[p+2] = ((b * ms) >>> ss );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpx[p] = px[p+1] = px[p+2] = 0\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tp = ( x + (( ( p = y + ryp1) < h1 ? p : h1 ) * w )) << 2;\n\n\t\t\t\t\t\tr -= si.r - ( si.r = px[p]);\n\t\t\t\t\t\tg -= si.g - ( si.g = px[p+1]);\n\t\t\t\t\t\tb -= si.b - ( si.b = px[p+2]);\n\t\t\t\t\t\ta -= si.a - ( si.a = px[p+3]);\n\n\t\t\t\t\t\tsi = si.n;\n\n\t\t\t\t\t\tyi += w;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor ( y = 0; y < h; y++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tp = yi << 2;\n\t\t\t\t\t\tpx[p+3] = pa =(a * ms) >>> ss;\n\t\t\t\t\t\tif ( pa > 0 )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpa = 255 / pa;\n\t\t\t\t\t\t\tpx[p]   = ((r * ms) >>> ss ) * pa;\n\t\t\t\t\t\t\tpx[p+1] = ((g * ms) >>> ss ) * pa;\n\t\t\t\t\t\t\tpx[p+2] = ((b * ms) >>> ss ) * pa;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpx[p] = px[p+1] = px[p+2] = 0\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tp = ( x + (( ( p = y + ryp1) < h1 ? p : h1 ) * w )) << 2;\n\n\t\t\t\t\t\tr -= si.r - ( si.r = px[p]);\n\t\t\t\t\t\tg -= si.g - ( si.g = px[p+1]);\n\t\t\t\t\t\tb -= si.b - ( si.b = px[p+2]);\n\t\t\t\t\t\ta -= si.a - ( si.a = px[p+3]);\n\n\t\t\t\t\t\tsi = si.n;\n\n\t\t\t\t\t\tyi += w;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\treturn true;\n\t};\n\n\tcreatejs.BlurFilter = createjs.promote(BlurFilter, \"Filter\");\n}());\n\n//##############################################################################\n// AlphaMapFilter.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\t\n\t\n// constructor:\n\t/**\n\t * Applies a greyscale alpha map image (or canvas) to the target, such that the alpha channel of the result will\n\t * be copied from the red channel of the map, and the RGB channels will be copied from the target.\n\t *\n\t * Generally, it is recommended that you use {{#crossLink \"AlphaMaskFilter\"}}{{/crossLink}}, because it has much\n\t * better performance.\n\t *\n\t * <h4>Example</h4>\n\t * This example draws a red->blue box, caches it, and then uses the cache canvas as an alpha map on a 100x100 image.\n\t *\n\t *       var box = new createjs.Shape();\n\t *       box.graphics.beginLinearGradientFill([\"#ff0000\", \"#0000ff\"], [0, 1], 0, 0, 0, 100)\n\t *       box.graphics.drawRect(0, 0, 100, 100);\n\t *       box.cache(0, 0, 100, 100);\n\t *\n\t *       var bmp = new createjs.Bitmap(\"path/to/image.jpg\");\n\t *       bmp.filters = [\n\t *           new createjs.AlphaMapFilter(box.cacheCanvas)\n\t *       ];\n\t *       bmp.cache(0, 0, 100, 100);\n\t *       stage.addChild(bmp);\n\t *\n\t * See {{#crossLink \"Filter\"}}{{/crossLink}} for more information on applying filters.\n\t * @class AlphaMapFilter\n\t * @extends Filter\n\t * @constructor\n\t * @param {HTMLImageElement|HTMLCanvasElement} alphaMap The greyscale image (or canvas) to use as the alpha value for the\n\t * result. This should be exactly the same dimensions as the target.\n\t **/\n\tfunction AlphaMapFilter(alphaMap) {\n\t\tthis.Filter_constructor();\n\t\n\t// public properties:\n\t\t/**\n\t\t * The greyscale image (or canvas) to use as the alpha value for the result. This should be exactly the same\n\t\t * dimensions as the target.\n\t\t * @property alphaMap\n\t\t * @type HTMLImageElement|HTMLCanvasElement\n\t\t **/\n\t\tthis.alphaMap = alphaMap;\n\t\t\n\t\t\n\t// private properties:\n\t\t/**\n\t\t * @property _alphaMap\n\t\t * @protected\n\t\t * @type HTMLImageElement|HTMLCanvasElement\n\t\t **/\n\t\tthis._alphaMap = null;\n\t\t\n\t\t/**\n\t\t * @property _mapData\n\t\t * @protected\n\t\t * @type Uint8ClampedArray\n\t\t **/\n\t\tthis._mapData = null;\n\t\tthis._mapTexture = null;\n\n\t\tthis.FRAG_SHADER_BODY = (\n\t\t\t\"uniform sampler2D uAlphaSampler;\"+\n\n\t\t\t\"void main(void) {\" +\n\t\t\t\t\"vec4 color = texture2D(uSampler, vRenderCoord);\" +\n\t\t\t\t\"vec4 alphaMap = texture2D(uAlphaSampler, vTextureCoord);\" +\n\n\t\t\t\t// some image formats can have transparent white rgba(1,1,1, 0) when put on the GPU, this means we need a slight tweak\n\t\t\t\t// using ceil ensure that the colour will be used so long as it exists but pure transparency will be treated black\n\t\t\t\t\"gl_FragColor = vec4(color.rgb, color.a * (alphaMap.r * ceil(alphaMap.a)));\" +\n\t\t\t\"}\"\n\t\t);\n\t}\n\tvar p = createjs.extend(AlphaMapFilter, createjs.Filter);\n\n\t// TODO: deprecated\n\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n\t/** docced in super class **/\n\tp.shaderParamSetup = function(gl, stage, shaderProgram) {\n\t\tif(!this._mapTexture) { this._mapTexture = gl.createTexture(); }\n\n\t\tgl.activeTexture(gl.TEXTURE1);\n\t\tgl.bindTexture(gl.TEXTURE_2D, this._mapTexture);\n\t\tstage.setTextureParams(gl);\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.alphaMap);\n\n\t\tgl.uniform1i(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uAlphaSampler\"),\n\t\t\t1\n\t\t);\n\t};\n\n// public methods:\n\t/** docced in super class **/\n\tp.clone = function () {\n\t\tvar o = new AlphaMapFilter(this.alphaMap);\n\t\to._alphaMap = this._alphaMap;\n\t\to._mapData = this._mapData;\n\t\treturn o;\n\t};\n\n\t/** docced in super class **/\n\tp.toString = function () {\n\t\treturn \"[AlphaMapFilter]\";\n\t};\n\n\n// private methods:\n\t/** docced in super class **/\n\tp._applyFilter = function (imageData) {\n\t\tif (!this.alphaMap) { return true; }\n\t\tif (!this._prepAlphaMap()) { return false; }\n\t\t\n\t\t// TODO: update to support scenarios where the target has different dimensions.\n\t\tvar data = imageData.data;\n\t\tvar map = this._mapData;\n\t\tfor(var i=0, l=data.length; i<l; i += 4) { data[i + 3] = map[i] || 0; }\n\t\t\n\t\treturn true;\n\t};\n\n\t/**\n\t * @method _prepAlphaMap\n\t * @protected\n\t **/\n\tp._prepAlphaMap = function () {\n\t\tif (!this.alphaMap) { return false; }\n\t\tif (this.alphaMap == this._alphaMap && this._mapData) { return true; }\n\n\t\tthis._mapData = null;\n\t\tvar map = this._alphaMap = this.alphaMap;\n\t\tvar canvas = map;\n\t\tvar ctx;\n\t\tif (map instanceof HTMLCanvasElement) {\n\t\t\tctx = canvas.getContext(\"2d\");\n\t\t} else {\n\t\t\tcanvas = createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\");\n\t\t\tcanvas.width = map.width;\n\t\t\tcanvas.height = map.height;\n\t\t\tctx = canvas.getContext(\"2d\");\n\t\t\tctx.drawImage(map, 0, 0);\n\t\t}\n\n\t\ttry {\n\t\t\tvar imgData = ctx.getImageData(0, 0, map.width, map.height);\n\t\t} catch (e) {\n\t\t\t//if (!this.suppressCrossDomainErrors) throw new Error(\"unable to access local image data: \" + e);\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tthis._mapData = imgData.data;\n\t\treturn true;\n\t};\n\n\n\tcreatejs.AlphaMapFilter = createjs.promote(AlphaMapFilter, \"Filter\");\n}());\n\n//##############################################################################\n// AlphaMaskFilter.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Applies the alpha from the mask image (or canvas) to the target, such that the alpha channel of the result will\n\t * be derived from the mask, and the RGB channels will be copied from the target. This can be used, for example, to\n\t * apply an alpha mask to a display object. This can also be used to combine a JPG compressed RGB image with a PNG32\n\t * alpha mask, which can result in a much smaller file size than a single PNG32 containing ARGB.\n\t *\n\t * <b>IMPORTANT NOTE: This filter currently does not support the targetCtx, or targetX/Y parameters correctly.</b>\n\t *\n\t * <h4>Example</h4>\n\t * This example draws a gradient box, then caches it and uses the \"cacheCanvas\" as the alpha mask on a 100x100 image.\n\t *\n\t *      var box = new createjs.Shape();\n\t *      box.graphics.beginLinearGradientFill([\"#000000\", \"rgba(0, 0, 0, 0)\"], [0, 1], 0, 0, 100, 100)\n\t *      box.graphics.drawRect(0, 0, 100, 100);\n\t *      box.cache(0, 0, 100, 100);\n\t *\n\t *      var bmp = new createjs.Bitmap(\"path/to/image.jpg\");\n\t *      bmp.filters = [\n\t *          new createjs.AlphaMaskFilter(box.cacheCanvas)\n\t *      ];\n\t *      bmp.cache(0, 0, 100, 100);\n\t *\n\t * See {{#crossLink \"Filter\"}}{{/crossLink}} for more information on applying filters.\n\t * @class AlphaMaskFilter\n\t * @extends Filter\n\t * @constructor\n\t * @param {HTMLImageElement|HTMLCanvasElement} mask\n\t **/\n\tfunction AlphaMaskFilter(mask) {\n\t\tthis.Filter_constructor();\n\t\n\t// public properties:\n\t\t/**\n\t\t * The image (or canvas) to use as the mask.\n\t\t * @property mask\n\t\t * @type HTMLImageElement|HTMLCanvasElement\n\t\t **/\n\t\tthis.mask = mask;\n\n\t\t/** docced in super class **/\n\t\tthis.usesContext = true;\n\n\t\tthis.FRAG_SHADER_BODY = (\n\t\t\t\"uniform sampler2D uAlphaSampler;\"+\n\n\t\t\t\"void main(void) {\" +\n\t\t\t\t\"vec4 color = texture2D(uSampler, vRenderCoord);\" +\n\t\t\t\t\"vec4 alphaMap = texture2D(uAlphaSampler, vTextureCoord);\" +\n\n\t\t\t\t\"gl_FragColor = vec4(color.rgb, color.a * alphaMap.a);\" +\n\t\t\t\"}\"\n\t\t);\n\t}\n\tvar p = createjs.extend(AlphaMaskFilter, createjs.Filter);\n\n\t// TODO: deprecated\n\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n\t/** docced in super class **/\n\tp.shaderParamSetup = function(gl, stage, shaderProgram) {\n\t\tif(!this._mapTexture) { this._mapTexture = gl.createTexture(); }\n\n\t\tgl.activeTexture(gl.TEXTURE1);\n\t\tgl.bindTexture(gl.TEXTURE_2D, this._mapTexture);\n\t\tstage.setTextureParams(gl);\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.mask);\n\n\t\tgl.uniform1i(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uAlphaSampler\"),\n\t\t\t1\n\t\t);\n\t};\n\n// public methods:\n\t/**\n\t * Applies the filter to the specified context.\n\t *\n\t * <strong>IMPORTANT NOTE: This filter currently does not support the targetCtx, or targetX/Y parameters\n\t * correctly.</strong>\n\t * @method applyFilter\n\t * @param {CanvasRenderingContext2D} ctx The 2D context to use as the source.\n\t * @param {Number} x The x position to use for the source rect.\n\t * @param {Number} y The y position to use for the source rect.\n\t * @param {Number} width The width to use for the source rect.\n\t * @param {Number} height The height to use for the source rect.\n\t * @param {CanvasRenderingContext2D} [targetCtx] NOT SUPPORTED IN THIS FILTER. The 2D context to draw the result to. Defaults to the context passed to ctx.\n\t * @param {Number} [targetX] NOT SUPPORTED IN THIS FILTER. The x position to draw the result to. Defaults to the value passed to x.\n\t * @param {Number} [targetY] NOT SUPPORTED IN THIS FILTER. The y position to draw the result to. Defaults to the value passed to y.\n\t * @return {Boolean} If the filter was applied successfully.\n\t **/\n\tp.applyFilter = function (ctx, x, y, width, height, targetCtx, targetX, targetY) {\n\t\tif (!this.mask) { return true; }\n\t\ttargetCtx = targetCtx || ctx;\n\t\tif (targetX == null) { targetX = x; }\n\t\tif (targetY == null) { targetY = y; }\n\n\t\ttargetCtx.save();\n\t\tif (ctx != targetCtx) {\n\t\t\t// TODO: support targetCtx and targetX/Y\n\t\t\t// clearRect, then draw the ctx in?\n\t\t\treturn false;\n\t\t}\n\n\t\ttargetCtx.globalCompositeOperation = \"destination-in\";\n\t\ttargetCtx.drawImage(this.mask, targetX, targetY);\n\t\ttargetCtx.restore();\n\t\treturn true;\n\t};\n\n\t/** docced in super class **/\n\tp.clone = function () {\n\t\treturn new AlphaMaskFilter(this.mask);\n\t};\n\n\t/** docced in super class **/\n\tp.toString = function () {\n\t\treturn \"[AlphaMaskFilter]\";\n\t};\n\n\n\tcreatejs.AlphaMaskFilter = createjs.promote(AlphaMaskFilter, \"Filter\");\n}());\n\n//##############################################################################\n// ColorFilter.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Applies a color transform to DisplayObjects.\n\t *\n\t * <h4>Example</h4>\n\t * This example draws a red circle, and then transforms it to Blue. This is accomplished by multiplying all the channels\n\t * to 0 (except alpha, which is set to 1), and then adding 255 to the blue channel.\n\t *\n\t *      var shape = new createjs.Shape().set({x:100,y:100});\n\t *      shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n\t *\n\t *      shape.filters = [\n\t *          new createjs.ColorFilter(0,0,0,1, 0,0,255,0)\n\t *      ];\n\t *      shape.cache(-50, -50, 100, 100);\n\t *\n\t * See {{#crossLink \"Filter\"}}{{/crossLink}} for an more information on applying filters.\n\t * @class ColorFilter\n\t * @param {Number} [redMultiplier=1] The amount to multiply against the red channel. This is a range between 0 and 1.\n\t * @param {Number} [greenMultiplier=1] The amount to multiply against the green channel. This is a range between 0 and 1.\n\t * @param {Number} [blueMultiplier=1] The amount to multiply against the blue channel. This is a range between 0 and 1.\n\t * @param {Number} [alphaMultiplier=1] The amount to multiply against the alpha channel. This is a range between 0 and 1.\n\t * @param {Number} [redOffset=0] The amount to add to the red channel after it has been multiplied. This is a range\n\t * between -255 and 255.\n\t * @param {Number} [greenOffset=0] The amount to add to the green channel after it has been multiplied. This is a range\n\t  * between -255 and 255.\n\t * @param {Number} [blueOffset=0] The amount to add to the blue channel after it has been multiplied. This is a range\n\t  * between -255 and 255.\n\t * @param {Number} [alphaOffset=0] The amount to add to the alpha channel after it has been multiplied. This is a range\n\t  * between -255 and 255.\n\t * @constructor\n\t * @extends Filter\n\t **/\n\tfunction ColorFilter(redMultiplier, greenMultiplier, blueMultiplier, alphaMultiplier, redOffset, greenOffset, blueOffset, alphaOffset) {\n\t\tthis.Filter_constructor();\n\n\t// public properties:\n\t\t/**\n\t\t * Red channel multiplier.\n\t\t * @property redMultiplier\n\t\t * @type Number\n\t\t **/\n\t\tthis.redMultiplier = redMultiplier != null ? redMultiplier : 1;\n\t\n\t\t/**\n\t\t * Green channel multiplier.\n\t\t * @property greenMultiplier\n\t\t * @type Number\n\t\t **/\n\t\tthis.greenMultiplier = greenMultiplier != null ? greenMultiplier : 1;\n\t\n\t\t/**\n\t\t * Blue channel multiplier.\n\t\t * @property blueMultiplier\n\t\t * @type Number\n\t\t **/\n\t\tthis.blueMultiplier = blueMultiplier != null ? blueMultiplier : 1;\n\t\n\t\t/**\n\t\t * Alpha channel multiplier.\n\t\t * @property alphaMultiplier\n\t\t * @type Number\n\t\t **/\n\t\tthis.alphaMultiplier = alphaMultiplier != null ? alphaMultiplier : 1;\n\t\n\t\t/**\n\t\t * Red channel offset (added to value).\n\t\t * @property redOffset\n\t\t * @type Number\n\t\t **/\n\t\tthis.redOffset = redOffset || 0;\n\t\n\t\t/**\n\t\t * Green channel offset (added to value).\n\t\t * @property greenOffset\n\t\t * @type Number\n\t\t **/\n\t\tthis.greenOffset = greenOffset || 0;\n\t\n\t\t/**\n\t\t * Blue channel offset (added to value).\n\t\t * @property blueOffset\n\t\t * @type Number\n\t\t **/\n\t\tthis.blueOffset = blueOffset || 0;\n\t\n\t\t/**\n\t\t * Alpha channel offset (added to value).\n\t\t * @property alphaOffset\n\t\t * @type Number\n\t\t **/\n\t\tthis.alphaOffset = alphaOffset || 0;\n\n\t\tthis.FRAG_SHADER_BODY = (\n\t\t\t\"uniform vec4 uColorMultiplier;\" +\n\t\t\t\"uniform vec4 uColorOffset;\" +\n\n\t\t\t\"void main(void) {\" +\n\t\t\t\t\"vec4 color = texture2D(uSampler, vRenderCoord);\" +\n\n\t\t\t\t\"gl_FragColor = (color * uColorMultiplier) + uColorOffset;\" +\n\t\t\t\"}\"\n\t\t);\n\n\t}\n\tvar p = createjs.extend(ColorFilter, createjs.Filter);\n\n\t// TODO: deprecated\n\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n\n// public methods:\n\t/** docced in super class **/\n\tp.shaderParamSetup = function(gl, stage, shaderProgram) {\n\t\tgl.uniform4f(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uColorMultiplier\"),\n\t\t\tthis.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier\n\t\t);\n\n\t\tgl.uniform4f(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uColorOffset\"),\n\t\t\tthis.redOffset/255, this.greenOffset/255, this.blueOffset/255, this.alphaOffset/255\n\t\t);\n\t};\n\n\t/** docced in super class **/\n\tp.toString = function() {\n\t\treturn \"[ColorFilter]\";\n\t};\n\n\t/** docced in super class **/\n\tp.clone = function() {\n\t\treturn new ColorFilter(\n\t\t\tthis.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier,\n\t\t\tthis.redOffset, this.greenOffset, this.blueOffset, this.alphaOffset\n\t\t);\n\t};\n\n// private methods:\n\t/** docced in super class **/\n\tp._applyFilter = function(imageData) {\n\t\tvar data = imageData.data;\n\t\tvar l = data.length;\n\t\tfor (var i=0; i<l; i+=4) {\n\t\t\tdata[i] = data[i]*this.redMultiplier+this.redOffset;\n\t\t\tdata[i+1] = data[i+1]*this.greenMultiplier+this.greenOffset;\n\t\t\tdata[i+2] = data[i+2]*this.blueMultiplier+this.blueOffset;\n\t\t\tdata[i+3] = data[i+3]*this.alphaMultiplier+this.alphaOffset;\n\t\t}\n\t\treturn true;\n\t};\n\n\n\tcreatejs.ColorFilter = createjs.promote(ColorFilter, \"Filter\");\n}());\n\n//##############################################################################\n// ColorMatrix.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Provides helper functions for assembling a matrix for use with the {{#crossLink \"ColorMatrixFilter\"}}{{/crossLink}}.\n\t * Most methods return the instance to facilitate chained calls.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      myColorMatrix.adjustHue(20).adjustBrightness(50);\n\t *\n\t * See {{#crossLink \"Filter\"}}{{/crossLink}} for an example of how to apply filters, or {{#crossLink \"ColorMatrixFilter\"}}{{/crossLink}}\n\t * for an example of how to use ColorMatrix to change a DisplayObject's color.\n\t * @class ColorMatrix\n\t * @param {Number} brightness\n\t * @param {Number} contrast\n\t * @param {Number} saturation\n\t * @param {Number} hue\n\t * @constructor\n\t **/\n\tfunction ColorMatrix(brightness, contrast, saturation, hue) {\n\t\tthis.setColor(brightness, contrast, saturation, hue);\n\t}\n\tvar p = ColorMatrix.prototype;\n\n// constants:\n\t/**\n\t * Array of delta values for contrast calculations.\n\t * @property DELTA_INDEX\n\t * @type Array\n\t * @protected\n\t * @static\n\t **/\n\tColorMatrix.DELTA_INDEX = [\n\t\t0,    0.01, 0.02, 0.04, 0.05, 0.06, 0.07, 0.08, 0.1,  0.11,\n\t\t0.12, 0.14, 0.15, 0.16, 0.17, 0.18, 0.20, 0.21, 0.22, 0.24,\n\t\t0.25, 0.27, 0.28, 0.30, 0.32, 0.34, 0.36, 0.38, 0.40, 0.42,\n\t\t0.44, 0.46, 0.48, 0.5,  0.53, 0.56, 0.59, 0.62, 0.65, 0.68,\n\t\t0.71, 0.74, 0.77, 0.80, 0.83, 0.86, 0.89, 0.92, 0.95, 0.98,\n\t\t1.0,  1.06, 1.12, 1.18, 1.24, 1.30, 1.36, 1.42, 1.48, 1.54,\n\t\t1.60, 1.66, 1.72, 1.78, 1.84, 1.90, 1.96, 2.0,  2.12, 2.25,\n\t\t2.37, 2.50, 2.62, 2.75, 2.87, 3.0,  3.2,  3.4,  3.6,  3.8,\n\t\t4.0,  4.3,  4.7,  4.9,  5.0,  5.5,  6.0,  6.5,  6.8,  7.0,\n\t\t7.3,  7.5,  7.8,  8.0,  8.4,  8.7,  9.0,  9.4,  9.6,  9.8,\n\t\t10.0\n\t];\n\n\t/**\n\t * Identity matrix values.\n\t * @property IDENTITY_MATRIX\n\t * @type Array\n\t * @protected\n\t * @static\n\t **/\n\tColorMatrix.IDENTITY_MATRIX = [\n\t\t1,0,0,0,0,\n\t\t0,1,0,0,0,\n\t\t0,0,1,0,0,\n\t\t0,0,0,1,0,\n\t\t0,0,0,0,1\n\t];\n\n\t/**\n\t * The constant length of a color matrix.\n\t * @property LENGTH\n\t * @type Number\n\t * @protected\n\t * @static\n\t **/\n\tColorMatrix.LENGTH = ColorMatrix.IDENTITY_MATRIX.length;\n\n\n// public methods:\n\t/**\n\t * Resets the instance with the specified values.\n\t * @method setColor\n\t * @param {Number} brightness\n\t * @param {Number} contrast\n\t * @param {Number} saturation\n\t * @param {Number} hue\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tp.setColor = function(brightness,contrast,saturation,hue) {\n\t\treturn this.reset().adjustColor(brightness,contrast,saturation,hue);\n\t};\n\n\t/**\n\t * Resets the matrix to identity values.\n\t * @method reset\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tp.reset = function() {\n\t\treturn this.copy(ColorMatrix.IDENTITY_MATRIX);\n\t};\n\n\t/**\n\t * Shortcut method to adjust brightness, contrast, saturation and hue.\n\t * Equivalent to calling adjustHue(hue), adjustContrast(contrast),\n\t * adjustBrightness(brightness), adjustSaturation(saturation), in that order.\n\t * @method adjustColor\n\t * @param {Number} brightness\n\t * @param {Number} contrast\n\t * @param {Number} saturation\n\t * @param {Number} hue\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.adjustColor = function(brightness,contrast,saturation,hue) {\n\t\tthis.adjustHue(hue);\n\t\tthis.adjustContrast(contrast);\n\t\tthis.adjustBrightness(brightness);\n\t\treturn this.adjustSaturation(saturation);\n\t};\n\n\t/**\n\t * Adjusts the brightness of pixel color by adding the specified value to the red, green and blue channels.\n\t * Positive values will make the image brighter, negative values will make it darker.\n\t * @method adjustBrightness\n\t * @param {Number} value A value between -255 & 255 that will be added to the RGB channels.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.adjustBrightness = function(value) {\n\t\tif (value == 0 || isNaN(value)) { return this; }\n\t\tvalue = this._cleanValue(value,255);\n\t\tthis._multiplyMatrix([\n\t\t\t1,0,0,0,value,\n\t\t\t0,1,0,0,value,\n\t\t\t0,0,1,0,value,\n\t\t\t0,0,0,1,0,\n\t\t\t0,0,0,0,1\n\t\t]);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Adjusts the contrast of pixel color.\n\t * Positive values will increase contrast, negative values will decrease contrast.\n\t * @method adjustContrast\n\t * @param {Number} value A value between -100 & 100.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.adjustContrast = function(value) {\n\t\tif (value == 0 || isNaN(value)) { return this; }\n\t\tvalue = this._cleanValue(value,100);\n\t\tvar x;\n\t\tif (value<0) {\n\t\t\tx = 127+value/100*127;\n\t\t} else {\n\t\t\tx = value%1;\n\t\t\tif (x == 0) {\n\t\t\t\tx = ColorMatrix.DELTA_INDEX[value];\n\t\t\t} else {\n\t\t\t\tx = ColorMatrix.DELTA_INDEX[(value<<0)]*(1-x)+ColorMatrix.DELTA_INDEX[(value<<0)+1]*x; // use linear interpolation for more granularity.\n\t\t\t}\n\t\t\tx = x*127+127;\n\t\t}\n\t\tthis._multiplyMatrix([\n\t\t\tx/127,0,0,0,0.5*(127-x),\n\t\t\t0,x/127,0,0,0.5*(127-x),\n\t\t\t0,0,x/127,0,0.5*(127-x),\n\t\t\t0,0,0,1,0,\n\t\t\t0,0,0,0,1\n\t\t]);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Adjusts the color saturation of the pixel.\n\t * Positive values will increase saturation, negative values will decrease saturation (trend towards greyscale).\n\t * @method adjustSaturation\n\t * @param {Number} value A value between -100 & 100.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.adjustSaturation = function(value) {\n\t\tif (value == 0 || isNaN(value)) { return this; }\n\t\tvalue = this._cleanValue(value,100);\n\t\tvar x = 1+((value > 0) ? 3*value/100 : value/100);\n\t\tvar lumR = 0.3086;\n\t\tvar lumG = 0.6094;\n\t\tvar lumB = 0.0820;\n\t\tthis._multiplyMatrix([\n\t\t\tlumR*(1-x)+x,lumG*(1-x),lumB*(1-x),0,0,\n\t\t\tlumR*(1-x),lumG*(1-x)+x,lumB*(1-x),0,0,\n\t\t\tlumR*(1-x),lumG*(1-x),lumB*(1-x)+x,0,0,\n\t\t\t0,0,0,1,0,\n\t\t\t0,0,0,0,1\n\t\t]);\n\t\treturn this;\n\t};\n\n\n\t/**\n\t * Adjusts the hue of the pixel color.\n\t * @method adjustHue\n\t * @param {Number} value A value between -180 & 180.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.adjustHue = function(value) {\n\t\tif (value == 0 || isNaN(value)) { return this; }\n\t\tvalue = this._cleanValue(value,180)/180*Math.PI;\n\t\tvar cosVal = Math.cos(value);\n\t\tvar sinVal = Math.sin(value);\n\t\tvar lumR = 0.213;\n\t\tvar lumG = 0.715;\n\t\tvar lumB = 0.072;\n\t\tthis._multiplyMatrix([\n\t\t\tlumR+cosVal*(1-lumR)+sinVal*(-lumR),lumG+cosVal*(-lumG)+sinVal*(-lumG),lumB+cosVal*(-lumB)+sinVal*(1-lumB),0,0,\n\t\t\tlumR+cosVal*(-lumR)+sinVal*(0.143),lumG+cosVal*(1-lumG)+sinVal*(0.140),lumB+cosVal*(-lumB)+sinVal*(-0.283),0,0,\n\t\t\tlumR+cosVal*(-lumR)+sinVal*(-(1-lumR)),lumG+cosVal*(-lumG)+sinVal*(lumG),lumB+cosVal*(1-lumB)+sinVal*(lumB),0,0,\n\t\t\t0,0,0,1,0,\n\t\t\t0,0,0,0,1\n\t\t]);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Concatenates (multiplies) the specified matrix with this one.\n\t * @method concat\n\t * @param {Array} matrix An array or ColorMatrix instance.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.concat = function(matrix) {\n\t\tmatrix = this._fixMatrix(matrix);\n\t\tif (matrix.length != ColorMatrix.LENGTH) { return this; }\n\t\tthis._multiplyMatrix(matrix);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Returns a clone of this ColorMatrix.\n\t * @method clone\n\t * @return {ColorMatrix} A clone of this ColorMatrix.\n\t **/\n\tp.clone = function() {\n\t\treturn (new ColorMatrix()).copy(this);\n\t};\n\n\t/**\n\t * Return a length 25 (5x5) array instance containing this matrix's values.\n\t * @method toArray\n\t * @return {Array} An array holding this matrix's values.\n\t **/\n\tp.toArray = function() {\n\t\tvar arr = [];\n\t\tfor (var i= 0, l=ColorMatrix.LENGTH; i<l; i++) {\n\t\t\tarr[i] = this[i];\n\t\t}\n\t\treturn arr;\n\t};\n\n\t/**\n\t * Copy the specified matrix's values to this matrix.\n\t * @method copy\n\t * @param {Array} matrix An array or ColorMatrix instance.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.copy = function(matrix) {\n\t\tvar l = ColorMatrix.LENGTH;\n\t\tfor (var i=0;i<l;i++) {\n\t\t\tthis[i] = matrix[i];\n\t\t}\n\t\treturn this;\n\t};\n\t\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[ColorMatrix]\";\n\t};\n\n\n// private methods:\n\t/**\n\t * @method _multiplyMatrix\n\t * @param {Array} matrix\n\t * @protected\n\t **/\n\tp._multiplyMatrix = function(matrix) {\n\t\tvar i, j, k, col = [];\n\n\t\tfor (i=0;i<5;i++) {\n\t\t\tfor (j=0;j<5;j++) {\n\t\t\t\tcol[j] = this[j+i*5];\n\t\t\t}\n\t\t\tfor (j=0;j<5;j++) {\n\t\t\t\tvar val=0;\n\t\t\t\tfor (k=0;k<5;k++) {\n\t\t\t\t\tval += matrix[j+k*5]*col[k];\n\t\t\t\t}\n\t\t\t\tthis[j+i*5] = val;\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Make sure values are within the specified range, hue has a limit of 180, brightness is 255, others are 100.\n\t * @method _cleanValue\n\t * @param {Number} value The raw number\n\t * @param {Number} limit The maximum that the number can be. The minimum is the limit * -1.\n\t * @protected\n\t **/\n\tp._cleanValue = function(value, limit) {\n\t\treturn Math.min(limit,Math.max(-limit,value));\n\t};\n\n\t/**\n\t * Makes sure matrixes are 5x5 (25 long).\n\t * @method _fixMatrix\n\t * @param {Array} matrix\n\t * @protected\n\t **/\n\tp._fixMatrix = function(matrix) {\n\t\tif (matrix instanceof ColorMatrix) { matrix = matrix.toArray(); }\n\t\tif (matrix.length < ColorMatrix.LENGTH) {\n\t\t\tmatrix = matrix.slice(0,matrix.length).concat(ColorMatrix.IDENTITY_MATRIX.slice(matrix.length,ColorMatrix.LENGTH));\n\t\t} else if (matrix.length > ColorMatrix.LENGTH) {\n\t\t\tmatrix = matrix.slice(0,ColorMatrix.LENGTH);\n\t\t}\n\t\treturn matrix;\n\t};\n\n\n\tcreatejs.ColorMatrix = ColorMatrix;\n}());\n\n//##############################################################################\n// ColorMatrixFilter.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Allows you to carry out complex color operations such as modifying saturation, brightness, or inverting. See the\n\t * {{#crossLink \"ColorMatrix\"}}{{/crossLink}} for more information on changing colors. For an easier color transform,\n\t * consider the {{#crossLink \"ColorFilter\"}}{{/crossLink}}.\n\t *\n\t * <h4>Example</h4>\n\t * This example creates a red circle, inverts its hue, and then saturates it to brighten it up.\n\t *\n\t *      var shape = new createjs.Shape().set({x:100,y:100});\n\t *      shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n\t *\n\t *      var matrix = new createjs.ColorMatrix().adjustHue(180).adjustSaturation(100);\n\t *      shape.filters = [\n\t *          new createjs.ColorMatrixFilter(matrix)\n\t *      ];\n\t *\n\t *      shape.cache(-50, -50, 100, 100);\n\t *\n\t * See {{#crossLink \"Filter\"}}{{/crossLink}} for an more information on applying filters.\n\t * @class ColorMatrixFilter\n\t * @constructor\n\t * @extends Filter\n\t * @param {Array | ColorMatrix} matrix A 4x5 matrix describing the color operation to perform. See also the {{#crossLink \"ColorMatrix\"}}{{/crossLink}}\n\t * class.\n\t **/\n\tfunction ColorMatrixFilter(matrix) {\n\t\tthis.Filter_constructor();\n\n\t// public properties:\n\t\t/**\n\t\t * A 4x5 matrix describing the color operation to perform. See also the {{#crossLink \"ColorMatrix\"}}{{/crossLink}}\n\t\t * @property matrix\n\t\t * @type Array | ColorMatrix\n\t\t **/\n\t\tthis.matrix = matrix;\n\n\t\tthis.FRAG_SHADER_BODY = (\n\t\t\t\"uniform mat4 uColorMatrix;\" +\n\t\t\t\"uniform vec4 uColorMatrixOffset;\" +\n\n\t\t\t\"void main(void) {\" +\n\t\t\t\t\"vec4 color = texture2D(uSampler, vRenderCoord);\" +\n\n\t\t\t\t\"mat4 m = uColorMatrix;\" +\n\t\t\t\t\"vec4 newColor = vec4(0,0,0,0);\" +\n\t\t\t\t\"newColor.r = color.r*m[0][0] + color.g*m[0][1] + color.b*m[0][2] + color.a*m[0][3];\" +\n\t\t\t\t\"newColor.g = color.r*m[1][0] + color.g*m[1][1] + color.b*m[1][2] + color.a*m[1][3];\" +\n\t\t\t\t\"newColor.b = color.r*m[2][0] + color.g*m[2][1] + color.b*m[2][2] + color.a*m[2][3];\" +\n\t\t\t\t\"newColor.a = color.r*m[3][0] + color.g*m[3][1] + color.b*m[3][2] + color.a*m[3][3];\" +\n\n\t\t\t\t\"gl_FragColor = newColor + uColorMatrixOffset;\" +\n\t\t\t\"}\"\n\t\t);\n\t}\n\tvar p = createjs.extend(ColorMatrixFilter, createjs.Filter);\n\n\t// TODO: deprecated\n\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n\t/** docced in super class **/\n\tp.shaderParamSetup = function(gl, stage, shaderProgram) {\n\t\tvar mat = this.matrix;\n\t\tvar colorMatrix = new Float32Array([\n\t\t\tmat[0],mat[1],mat[2],mat[3],\n\t\t\tmat[5],mat[6],mat[7],mat[8],\n\t\t\tmat[10],mat[11],mat[12],mat[13],\n\t\t\tmat[15],mat[16],mat[17],mat[18]\n\t\t]);\n\n\t\tgl.uniformMatrix4fv(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uColorMatrix\"),\n\t\t\tfalse, colorMatrix\n\t\t);\n\t\tgl.uniform4f(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uColorMatrixOffset\"),\n\t\t\tmat[4]/255, mat[9]/255, mat[14]/255, mat[19]/255\n\t\t);\n\t};\n\n// public methods:\n\t/** docced in super class **/\n\tp.toString = function() {\n\t\treturn \"[ColorMatrixFilter]\";\n\t};\n\n\t/** docced in super class **/\n\tp.clone = function() {\n\t\treturn new ColorMatrixFilter(this.matrix);\n\t};\n\n// private methods:\n\t/** docced in super class **/\n\tp._applyFilter = function(imageData) { \n\t\tvar data = imageData.data;\n\t\tvar l = data.length;\n\t\tvar r,g,b,a;\n\t\tvar mtx = this.matrix;\n\t\tvar m0 =  mtx[0],  m1 =  mtx[1],  m2 =  mtx[2],  m3 =  mtx[3],  m4 =  mtx[4];\n\t\tvar m5 =  mtx[5],  m6 =  mtx[6],  m7 =  mtx[7],  m8 =  mtx[8],  m9 =  mtx[9];\n\t\tvar m10 = mtx[10], m11 = mtx[11], m12 = mtx[12], m13 = mtx[13], m14 = mtx[14];\n\t\tvar m15 = mtx[15], m16 = mtx[16], m17 = mtx[17], m18 = mtx[18], m19 = mtx[19];\n\n\t\tfor (var i=0; i<l; i+=4) {\n\t\t\tr = data[i];\n\t\t\tg = data[i+1];\n\t\t\tb = data[i+2];\n\t\t\ta = data[i+3];\n\t\t\tdata[i] = r*m0+g*m1+b*m2+a*m3+m4; // red\n\t\t\tdata[i+1] = r*m5+g*m6+b*m7+a*m8+m9; // green\n\t\t\tdata[i+2] = r*m10+g*m11+b*m12+a*m13+m14; // blue\n\t\t\tdata[i+3] = r*m15+g*m16+b*m17+a*m18+m19; // alpha\n\t\t}\n\t\treturn true;\n\t};\n\n\tcreatejs.ColorMatrixFilter = createjs.promote(ColorMatrixFilter, \"Filter\");\n}());\n\n//##############################################################################\n// Touch.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n * Global utility for working with multi-touch enabled devices in EaselJS. Currently supports W3C Touch API (iOS and\n * modern Android browser) and the Pointer API (IE), including ms-prefixed events in IE10, and unprefixed in IE11.\n *\n * Ensure that you {{#crossLink \"Touch/disable\"}}{{/crossLink}} touch when cleaning up your application. You do not have\n * to check if touch is supported to enable it, as it will fail gracefully if it is not supported.\n *\n * <h4>Example</h4>\n *\n *      var stage = new createjs.Stage(\"canvasId\");\n *      createjs.Touch.enable(stage);\n *\n * <strong>Note:</strong> It is important to disable Touch on a stage that you are no longer using:\n *\n *      createjs.Touch.disable(stage);\n *\n * @class Touch\n * @static\n **/\n\tfunction Touch() {\n\t\tthrow \"Touch cannot be instantiated\";\n\t}\n\n\n// public static methods:\n\t/**\n\t * Returns `true` if touch is supported in the current browser.\n\t * @method isSupported\n\t * @return {Boolean} Indicates whether touch is supported in the current browser.\n\t * @static\n\t **/\n\tTouch.isSupported = function() {\n\t\treturn\t!!(('ontouchstart' in window) // iOS & Android\n\t\t\t|| (window.navigator['msPointerEnabled'] && window.navigator['msMaxTouchPoints'] > 0) // IE10\n\t\t\t|| (window.navigator['pointerEnabled'] && window.navigator['maxTouchPoints'] > 0)); // IE11+\n\t};\n\n\t/**\n\t * Enables touch interaction for the specified EaselJS {{#crossLink \"Stage\"}}{{/crossLink}}. Currently supports iOS\n\t * (and compatible browsers, such as modern Android browsers), and IE10/11. Supports both single touch and\n\t * multi-touch modes. Extends the EaselJS {{#crossLink \"MouseEvent\"}}{{/crossLink}} model, but without support for\n\t * double click or over/out events. See the MouseEvent {{#crossLink \"MouseEvent/pointerId:property\"}}{{/crossLink}}\n\t * for more information.\n\t * @method enable\n\t * @param {Stage} stage The {{#crossLink \"Stage\"}}{{/crossLink}} to enable touch on.\n\t * @param {Boolean} [singleTouch=false] If `true`, only a single touch will be active at a time.\n\t * @param {Boolean} [allowDefault=false] If `true`, then default gesture actions (ex. scrolling, zooming) will be\n\t * allowed when the user is interacting with the target canvas.\n\t * @return {Boolean} Returns `true` if touch was successfully enabled on the target stage.\n\t * @static\n\t **/\n\tTouch.enable = function(stage, singleTouch, allowDefault) {\n\t\tif (!stage || !stage.canvas || !Touch.isSupported()) { return false; }\n\t\tif (stage.__touch) { return true; }\n\n\t\t// inject required properties on stage:\n\t\tstage.__touch = {pointers:{}, multitouch:!singleTouch, preventDefault:!allowDefault, count:0};\n\n\t\t// note that in the future we may need to disable the standard mouse event model before adding\n\t\t// these to prevent duplicate calls. It doesn't seem to be an issue with iOS devices though.\n\t\tif ('ontouchstart' in window) { Touch._IOS_enable(stage); }\n\t\telse if (window.navigator['msPointerEnabled'] || window.navigator[\"pointerEnabled\"]) { Touch._IE_enable(stage); }\n\t\treturn true;\n\t};\n\n\t/**\n\t * Removes all listeners that were set up when calling `Touch.enable()` on a stage.\n\t * @method disable\n\t * @param {Stage} stage The {{#crossLink \"Stage\"}}{{/crossLink}} to disable touch on.\n\t * @static\n\t **/\n\tTouch.disable = function(stage) {\n\t\tif (!stage) { return; }\n\t\tif ('ontouchstart' in window) { Touch._IOS_disable(stage); }\n\t\telse if (window.navigator['msPointerEnabled'] || window.navigator[\"pointerEnabled\"]) { Touch._IE_disable(stage); }\n\t\t\n\t\tdelete stage.__touch;\n\t};\n\n\n// Private static methods:\n\t/**\n\t * @method _IOS_enable\n\t * @protected\n\t * @param {Stage} stage\n\t * @static\n\t **/\n\tTouch._IOS_enable = function(stage) {\n\t\tvar canvas = stage.canvas;\n\t\tvar f = stage.__touch.f = function(e) { Touch._IOS_handleEvent(stage,e); };\n\t\tcanvas.addEventListener(\"touchstart\", f, false);\n\t\tcanvas.addEventListener(\"touchmove\", f, false);\n\t\tcanvas.addEventListener(\"touchend\", f, false);\n\t\tcanvas.addEventListener(\"touchcancel\", f, false);\n\t};\n\n\t/**\n\t * @method _IOS_disable\n\t * @protected\n\t * @param {Stage} stage\n\t * @static\n\t **/\n\tTouch._IOS_disable = function(stage) {\n\t\tvar canvas = stage.canvas;\n\t\tif (!canvas) { return; }\n\t\tvar f = stage.__touch.f;\n\t\tcanvas.removeEventListener(\"touchstart\", f, false);\n\t\tcanvas.removeEventListener(\"touchmove\", f, false);\n\t\tcanvas.removeEventListener(\"touchend\", f, false);\n\t\tcanvas.removeEventListener(\"touchcancel\", f, false);\n\t};\n\n\t/**\n\t * @method _IOS_handleEvent\n\t * @param {Stage} stage\n\t * @param {Object} e The event to handle\n\t * @protected\n\t * @static\n\t **/\n\tTouch._IOS_handleEvent = function(stage, e) {\n\t\tif (!stage) { return; }\n\t\tif (stage.__touch.preventDefault) { e.preventDefault&&e.preventDefault(); }\n\t\tvar touches = e.changedTouches;\n\t\tvar type = e.type;\n\t\tfor (var i= 0,l=touches.length; i<l; i++) {\n\t\t\tvar touch = touches[i];\n\t\t\tvar id = touch.identifier;\n\t\t\tif (touch.target != stage.canvas) { continue; }\n\n\t\t\tif (type == \"touchstart\") {\n\t\t\t\tthis._handleStart(stage, id, e, touch.pageX, touch.pageY);\n\t\t\t} else if (type == \"touchmove\") {\n\t\t\t\tthis._handleMove(stage, id, e, touch.pageX, touch.pageY);\n\t\t\t} else if (type == \"touchend\" || type == \"touchcancel\") {\n\t\t\t\tthis._handleEnd(stage, id, e);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * @method _IE_enable\n\t * @protected\n\t * @param {Stage} stage\n\t * @static\n\t **/\n\tTouch._IE_enable = function(stage) {\n\t\tvar canvas = stage.canvas;\n\t\tvar f = stage.__touch.f = function(e) { Touch._IE_handleEvent(stage,e); };\n\n\t\tif (window.navigator[\"pointerEnabled\"] === undefined) {\n\t\t\tcanvas.addEventListener(\"MSPointerDown\", f, false);\n\t\t\twindow.addEventListener(\"MSPointerMove\", f, false);\n\t\t\twindow.addEventListener(\"MSPointerUp\", f, false);\n\t\t\twindow.addEventListener(\"MSPointerCancel\", f, false);\n\t\t\tif (stage.__touch.preventDefault) { canvas.style.msTouchAction = \"none\"; }\n\t\t} else {\n\t\t\tcanvas.addEventListener(\"pointerdown\", f, false);\n\t\t\twindow.addEventListener(\"pointermove\", f, false);\n\t\t\twindow.addEventListener(\"pointerup\", f, false);\n\t\t\twindow.addEventListener(\"pointercancel\", f, false);\n\t\t\tif (stage.__touch.preventDefault) { canvas.style.touchAction = \"none\"; }\n\n\t\t}\n\t\tstage.__touch.activeIDs = {};\n\t};\n\n\t/**\n\t * @method _IE_disable\n\t * @protected\n\t * @param {Stage} stage\n\t * @static\n\t **/\n\tTouch._IE_disable = function(stage) {\n\t\tvar f = stage.__touch.f;\n\n\t\tif (window.navigator[\"pointerEnabled\"] === undefined) {\n\t\t\twindow.removeEventListener(\"MSPointerMove\", f, false);\n\t\t\twindow.removeEventListener(\"MSPointerUp\", f, false);\n\t\t\twindow.removeEventListener(\"MSPointerCancel\", f, false);\n\t\t\tif (stage.canvas) {\n\t\t\t\tstage.canvas.removeEventListener(\"MSPointerDown\", f, false);\n\t\t\t}\n\t\t} else {\n\t\t\twindow.removeEventListener(\"pointermove\", f, false);\n\t\t\twindow.removeEventListener(\"pointerup\", f, false);\n\t\t\twindow.removeEventListener(\"pointercancel\", f, false);\n\t\t\tif (stage.canvas) {\n\t\t\t\tstage.canvas.removeEventListener(\"pointerdown\", f, false);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * @method _IE_handleEvent\n\t * @param {Stage} stage\n\t * @param {Object} e The event to handle.\n\t * @protected\n\t * @static\n\t **/\n\tTouch._IE_handleEvent = function(stage, e) {\n\t\tif (!stage) { return; }\n\t\tif (stage.__touch.preventDefault) { e.preventDefault && e.preventDefault(); }\n\t\tvar type = e.type;\n\t\tvar id = e.pointerId;\n\t\tvar ids = stage.__touch.activeIDs;\n\n\t\tif (type == \"MSPointerDown\" || type == \"pointerdown\") {\n\t\t\tif (e.srcElement != stage.canvas) { return; }\n\t\t\tids[id] = true;\n\t\t\tthis._handleStart(stage, id, e, e.pageX, e.pageY);\n\t\t} else if (ids[id]) { // it's an id we're watching\n\t\t\tif (type == \"MSPointerMove\" || type == \"pointermove\") {\n\t\t\t\tthis._handleMove(stage, id, e, e.pageX, e.pageY);\n\t\t\t} else if (type == \"MSPointerUp\" || type == \"MSPointerCancel\"\n\t\t\t\t\t|| type == \"pointerup\" || type == \"pointercancel\") {\n\t\t\t\tdelete(ids[id]);\n\t\t\t\tthis._handleEnd(stage, id, e);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * @method _handleStart\n\t * @param {Stage} stage\n\t * @param {String|Number} id\n\t * @param {Object} e\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @protected\n\t **/\n\tTouch._handleStart = function(stage, id, e, x, y) {\n\t\tvar props = stage.__touch;\n\t\tif (!props.multitouch && props.count) { return; }\n\t\tvar ids = props.pointers;\n\t\tif (ids[id]) { return; }\n\t\tids[id] = true;\n\t\tprops.count++;\n\t\tstage._handlePointerDown(id, e, x, y);\n\t};\n\n\t/**\n\t * @method _handleMove\n\t * @param {Stage} stage\n\t * @param {String|Number} id\n\t * @param {Object} e\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @protected\n\t **/\n\tTouch._handleMove = function(stage, id, e, x, y) {\n\t\tif (!stage.__touch.pointers[id]) { return; }\n\t\tstage._handlePointerMove(id, e, x, y);\n\t};\n\n\t/**\n\t * @method _handleEnd\n\t * @param {Stage} stage\n\t * @param {String|Number} id\n\t * @param {Object} e\n\t * @protected\n\t **/\n\tTouch._handleEnd = function(stage, id, e) {\n\t\t// TODO: cancel should be handled differently for proper UI (ex. an up would trigger a click, a cancel would more closely resemble an out).\n\t\tvar props = stage.__touch;\n\t\tvar ids = props.pointers;\n\t\tif (!ids[id]) { return; }\n\t\tprops.count--;\n\t\tstage._handlePointerUp(id, e, true);\n\t\tdelete(ids[id]);\n\t};\n\n\n\tcreatejs.Touch = Touch;\n}());\n\n//##############################################################################\n// version.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function() {\n\t\"use strict\";\n\n\t/**\n\t * Static class holding library specific information such as the version and buildDate of\n\t * the library.\n\t * @class EaselJS\n\t **/\n\tvar s = createjs.EaselJS = createjs.EaselJS || {};\n\n\t/**\n\t * The version string for this release.\n\t * @property version\n\t * @type String\n\t * @static\n\t **/\n\ts.version = /*=version*/\"1.0.0\"; // injected by build process\n\n\t/**\n\t * The build date for this release in UTC format.\n\t * @property buildDate\n\t * @type String\n\t * @static\n\t **/\n\ts.buildDate = /*=date*/\"Thu, 14 Sep 2017 19:47:53 GMT\"; // injected by build process\n\n})();\n"]},"metadata":{},"sourceType":"script"}