{"ast":null,"code":"var _jsxFileName = \"/home/luong/kobuki_web/src/components/Map/Map.js\";\nimport React, { Component } from \"react\";\nimport { Container, Card } from \"react-bootstrap\";\nimport ROSLIB from \"roslib\";\nimport Nav2d from \"react-nav2djs/lib\";\nimport \"./Map.css\";\nimport \"../CommonStyle.css\";\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onMapClick = event => {\n      // get the viewer\n      const viewer = this.viewer; // get the mouse click position\n\n      const offset = viewer.renderer.getOffset();\n      const pos = viewer.renderer.mouseToPixel(event.clientX - offset.x, event.clientY - offset.y); // get the position in the ROS coordinate system\n\n      const rosPos = viewer.scene.children[0].globalToLocal(pos);\n      const positionX = rosPos.x;\n      const positionY = rosPos.y;\n      console.log(`Clicked at (${positionX}, ${positionY})`);\n    };\n\n    this.ros = props.ros || null;\n    this.state = {\n      command: 'none',\n      message: 'Robot is ready !',\n      stationName: 'NoName',\n      enableCancel: false,\n      stations: []\n    };\n    this.stationListLoad = [];\n    this.actionClient = null;\n    this.cancelAssignmentService = null;\n    this.InsertStationService = null;\n    this.DeleteStationService = null;\n    this.GetStationService = null;\n  }\n\n  componentDidMount() {\n    if (this.props.ros != null) {\n      this.ros = this.props.ros;\n      var serverName = this.props.serverName || '/move_base';\n      var actionName = this.props.actionName || 'move_base_msgs/MoveBaseAction';\n      this.actionClient = new ROSLIB.ActionClient({\n        ros: this.ros,\n        actionName: actionName,\n        serverName: serverName\n      }); // this.cancelAssignmentService = new ROSLIB.Service({\n      //   ros: this.ros,\n      //   name: '/rtabmap/cancel_goal',\n      //   serviceType: 'std_srvs/Empty'\n      // });\n      // this.InsertStationService = new ROSLIB.Service({\n      //   ros: this.ros,\n      //   name: '/InsertStation',\n      //   serviceType: 'jarvis_web_server/InsertStation',\n      // });\n      // this.DeleteStationService = new ROSLIB.Service({\n      //   ros: this.ros,\n      //   name: '/DeleteStation',\n      //   serviceType: 'jarvis_web_server/DeleteStation',\n      // });\n      // this.GetStationService = new ROSLIB.Service({\n      //   ros: this.ros,\n      //   name: '/GetStation',\n      //   serviceType: 'jarvis_web_server/GetStation',\n      // });\n      // this.GetStationService.callService(null,(res) => {\n      //   // this.stationListLoad = res.stations;\n      //   this.setState({stations: res.stations});\n      // });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      className: \"box-margin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      border: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: {\n        fontSize: \"1.2rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 54\n      }\n    }, \"Map\")), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      className: \"map-container\",\n      id: \"map\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Nav2d, {\n      id: \"random\",\n      height: 480,\n      ros: this.ros,\n      serverName: \"/move_base/global_costmap/costmap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/home/luong/kobuki_web/src/components/Map/Map.js"],"names":["React","Component","Container","Card","ROSLIB","Nav2d","Map","constructor","props","onMapClick","event","viewer","offset","renderer","getOffset","pos","mouseToPixel","clientX","x","clientY","y","rosPos","scene","children","globalToLocal","positionX","positionY","console","log","ros","state","command","message","stationName","enableCancel","stations","stationListLoad","actionClient","cancelAssignmentService","InsertStationService","DeleteStationService","GetStationService","componentDidMount","serverName","actionName","ActionClient","render","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Container, Card } from \"react-bootstrap\";\nimport ROSLIB from \"roslib\";\nimport Nav2d from \"react-nav2djs/lib\";\nimport \"./Map.css\";\nimport \"../CommonStyle.css\";\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n    this.ros = props.ros || null;\n    this.state = {\n      command: 'none',\n      message: 'Robot is ready !',\n      stationName: 'NoName',\n      enableCancel: false,\n      stations: [],\n    }\n    this.stationListLoad = [];\n    this.actionClient = null;\n    this.cancelAssignmentService = null;\n    this.InsertStationService = null;\n    this.DeleteStationService = null;\n    this.GetStationService = null;\n  }\n\n  componentDidMount() {\n    if (this.props.ros != null) {\n      this.ros = this.props.ros;\n      var serverName = this.props.serverName || '/move_base';\n      var actionName = this.props.actionName || 'move_base_msgs/MoveBaseAction';\n      this.actionClient = new ROSLIB.ActionClient({\n        ros: this.ros,\n        actionName: actionName,\n        serverName: serverName\n      });\n      // this.cancelAssignmentService = new ROSLIB.Service({\n      //   ros: this.ros,\n      //   name: '/rtabmap/cancel_goal',\n      //   serviceType: 'std_srvs/Empty'\n      // });\n      // this.InsertStationService = new ROSLIB.Service({\n      //   ros: this.ros,\n      //   name: '/InsertStation',\n      //   serviceType: 'jarvis_web_server/InsertStation',\n      // });\n      // this.DeleteStationService = new ROSLIB.Service({\n      //   ros: this.ros,\n      //   name: '/DeleteStation',\n      //   serviceType: 'jarvis_web_server/DeleteStation',\n      // });\n      // this.GetStationService = new ROSLIB.Service({\n      //   ros: this.ros,\n      //   name: '/GetStation',\n      //   serviceType: 'jarvis_web_server/GetStation',\n      // });\n      // this.GetStationService.callService(null,(res) => {\n      //   // this.stationListLoad = res.stations;\n      //   this.setState({stations: res.stations});\n      // });\n    }\n  }\n\n  onMapClick = (event) => {\n    // get the viewer\n    const viewer = this.viewer;\n  \n    // get the mouse click position\n    const offset = viewer.renderer.getOffset();\n    const pos = viewer.renderer.mouseToPixel(event.clientX - offset.x, event.clientY - offset.y);\n  \n    // get the position in the ROS coordinate system\n    const rosPos = viewer.scene.children[0].globalToLocal(pos);\n    const positionX = rosPos.x;\n    const positionY = rosPos.y;\n  \n    console.log(`Clicked at (${positionX}, ${positionY})`);\n  };\n  \n\n  render() {\n    return (\n      <Container className=\"box-margin\">\n        <Card border=\"secondary\">\n          <Card.Header style={{fontSize: \"1.2rem\" }}><strong>Map</strong></Card.Header>\n          <Card.Body>\n            <Container className=\"map-container\" id=\"map\">\n              <Nav2d\n                id='random'\n                height={480}\n                ros={this.ros}\n                serverName='/move_base/global_costmap/costmap'\n              />\n            </Container>\n          </Card.Body>\n        </Card>\n      </Container>\n    )\n  }\n}\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}