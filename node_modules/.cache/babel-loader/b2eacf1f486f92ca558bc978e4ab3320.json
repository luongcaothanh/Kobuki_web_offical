{"ast":null,"code":"/*!\n* PreloadJS\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2010 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n//##############################################################################\n// version.js\n//##############################################################################\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n  /**\n   * Static class holding library specific information such as the version and buildDate of the library.\n   * @class PreloadJS\n   **/\n\n  var s = createjs.PreloadJS = createjs.PreloadJS || {};\n  /**\n   * The version string for this release.\n   * @property version\n   * @type {String}\n   * @static\n   **/\n\n  s.version =\n  /*=version*/\n  \"1.0.0\"; // injected by build process\n\n  /**\n   * The build date for this release in UTC format.\n   * @property buildDate\n   * @type {String}\n   * @static\n   **/\n\n  s.buildDate =\n  /*=date*/\n  \"Thu, 14 Sep 2017 19:47:47 GMT\"; // injected by build process\n})(); //##############################################################################\n// extend.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n/**\n * @class Utility Methods\n */\n\n/**\n * Sets up the prototype chain and constructor property for a new class.\n *\n * This should be called right after creating the class constructor.\n *\n * \tfunction MySubClass() {}\n * \tcreatejs.extend(MySubClass, MySuperClass);\n * \tMySubClass.prototype.doSomething = function() { }\n *\n * \tvar foo = new MySubClass();\n * \tconsole.log(foo instanceof MySuperClass); // true\n * \tconsole.log(foo.prototype.constructor === MySubClass); // true\n *\n * @method extend\n * @param {Function} subclass The subclass.\n * @param {Function} superclass The superclass to extend.\n * @return {Function} Returns the subclass's new prototype.\n */\n\ncreatejs.extend = function (subclass, superclass) {\n  \"use strict\";\n\n  function o() {\n    this.constructor = subclass;\n  }\n\n  o.prototype = superclass.prototype;\n  return subclass.prototype = new o();\n}; //##############################################################################\n// promote.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n/**\n * @class Utility Methods\n */\n\n/**\n * Promotes any methods on the super class that were overridden, by creating an alias in the format `prefix_methodName`.\n * It is recommended to use the super class's name as the prefix.\n * An alias to the super class's constructor is always added in the format `prefix_constructor`.\n * This allows the subclass to call super class methods without using `function.call`, providing better performance.\n *\n * For example, if `MySubClass` extends `MySuperClass`, and both define a `draw` method, then calling `promote(MySubClass, \"MySuperClass\")`\n * would add a `MySuperClass_constructor` method to MySubClass and promote the `draw` method on `MySuperClass` to the\n * prototype of `MySubClass` as `MySuperClass_draw`.\n *\n * This should be called after the class's prototype is fully defined.\n *\n * \tfunction ClassA(name) {\n * \t\tthis.name = name;\n * \t}\n * \tClassA.prototype.greet = function() {\n * \t\treturn \"Hello \"+this.name;\n * \t}\n *\n * \tfunction ClassB(name, punctuation) {\n * \t\tthis.ClassA_constructor(name);\n * \t\tthis.punctuation = punctuation;\n * \t}\n * \tcreatejs.extend(ClassB, ClassA);\n * \tClassB.prototype.greet = function() {\n * \t\treturn this.ClassA_greet()+this.punctuation;\n * \t}\n * \tcreatejs.promote(ClassB, \"ClassA\");\n *\n * \tvar foo = new ClassB(\"World\", \"!?!\");\n * \tconsole.log(foo.greet()); // Hello World!?!\n *\n * @method promote\n * @param {Function} subclass The class to promote super class methods on.\n * @param {String} prefix The prefix to add to the promoted method names. Usually the name of the superclass.\n * @return {Function} Returns the subclass.\n */\n\ncreatejs.promote = function (subclass, prefix) {\n  \"use strict\";\n\n  var subP = subclass.prototype,\n      supP = Object.getPrototypeOf && Object.getPrototypeOf(subP) || subP.__proto__;\n\n  if (supP) {\n    subP[(prefix += \"_\") + \"constructor\"] = supP.constructor; // constructor is not always innumerable\n\n    for (var n in supP) {\n      if (subP.hasOwnProperty(n) && typeof supP[n] == \"function\") {\n        subP[prefix + n] = supP[n];\n      }\n    }\n  }\n\n  return subclass;\n}; //##############################################################################\n// deprecate.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n/**\n * @class Utility Methods\n */\n\n/**\n * Wraps deprecated methods so they still be used, but throw warnings to developers.\n *\n *\tobj.deprecatedMethod = createjs.deprecate(\"Old Method Name\", obj._fallbackMethod);\n *\n * The recommended approach for deprecated properties is:\n *\n *\ttry {\n *\t\tObj\tect.defineProperties(object, {\n *\t\t\treadyOnlyProp: { get: createjs.deprecate(\"readOnlyProp\", function() { return this.alternateProp; }) },\n *\t\t\treadWriteProp: {\n *\t\t\t\tget: createjs.deprecate(\"readOnlyProp\", function() { return this.alternateProp; }),\n *\t\t\t\tset: createjs.deprecate(\"readOnlyProp\", function(val) { this.alternateProp = val; })\n *\t\t});\n *\t} catch (e) {}\n *\n * @method deprecate\n * @param {Function} [fallbackMethod=null] A method to call when the deprecated method is used. See the example for how\n * @param {String} [name=null] The name of the method or property to display in the console warning.\n * to deprecate properties.\n * @return {Function} If a fallbackMethod is supplied, returns a closure that will call the fallback method after\n * logging the warning in the console.\n */\n\ncreatejs.deprecate = function (fallbackMethod, name) {\n  \"use strict\";\n\n  return function () {\n    var msg = \"Deprecated property or method '\" + name + \"'. See docs for info.\";\n    console && (console.warn ? console.warn(msg) : console.log(msg));\n    return fallbackMethod && fallbackMethod.apply(this, arguments);\n  };\n}; //##############################################################################\n// proxy.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n/**\n * Various utilities that the CreateJS Suite uses. Utilities are created as separate files, and will be available on the\n * createjs namespace directly.\n *\n * <h4>Example</h4>\n *\n *      myObject.addEventListener(\"change\", createjs.proxy(myMethod, scope));\n *\n * @class Utility Methods\n * @main Utility Methods\n */\n\n(function () {\n  \"use strict\";\n  /**\n   * A function proxy for methods. By default, JavaScript methods do not maintain scope, so passing a method as a\n   * callback will result in the method getting called in the scope of the caller. Using a proxy ensures that the\n   * method gets called in the correct scope.\n   *\n   * Additional arguments can be passed that will be applied to the function when it is called.\n   *\n   * <h4>Example</h4>\n   *\n   *      myObject.addEventListener(\"event\", createjs.proxy(myHandler, this, arg1, arg2));\n   *\n   *      function myHandler(arg1, arg2) {\n   *           // This gets called when myObject.myCallback is executed.\n   *      }\n   *\n   * @method proxy\n   * @param {Function} method The function to call\n   * @param {Object} scope The scope to call the method name on\n   * @param {mixed} [arg] * Arguments that are appended to the callback for additional params.\n   * @public\n   * @static\n   */\n\n  createjs.proxy = function (method, scope) {\n    var aArgs = Array.prototype.slice.call(arguments, 2);\n    return function () {\n      return method.apply(scope, Array.prototype.slice.call(arguments, 0).concat(aArgs));\n    };\n  };\n})(); //##############################################################################\n// indexOf.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n/**\n * @class Utility Methods\n */\n\n/**\n * Finds the first occurrence of a specified value searchElement in the passed in array, and returns the index of\n * that value.  Returns -1 if value is not found.\n *\n *      var i = createjs.indexOf(myArray, myElementToFind);\n *\n * @method indexOf\n * @param {Array} array Array to search for searchElement\n * @param searchElement Element to find in array.\n * @return {Number} The first index of searchElement in array.\n */\n\ncreatejs.indexOf = function (array, searchElement) {\n  \"use strict\";\n\n  for (var i = 0, l = array.length; i < l; i++) {\n    if (searchElement === array[i]) {\n      return i;\n    }\n  }\n\n  return -1;\n}; //##############################################################################\n// Event.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor:\n\n  /**\n   * Contains properties and methods shared by all events for use with\n   * {{#crossLink \"EventDispatcher\"}}{{/crossLink}}.\n   * \n   * Note that Event objects are often reused, so you should never\n   * rely on an event object's state outside of the call stack it was received in.\n   * @class Event\n   * @param {String} type The event type.\n   * @param {Boolean} bubbles Indicates whether the event will bubble through the display list.\n   * @param {Boolean} cancelable Indicates whether the default behaviour of this event can be cancelled.\n   * @constructor\n   **/\n\n  function Event(type, bubbles, cancelable) {\n    // public properties:\n\n    /**\n     * The type of event.\n     * @property type\n     * @type String\n     **/\n    this.type = type;\n    /**\n     * The object that generated an event.\n     * @property target\n     * @type Object\n     * @default null\n     * @readonly\n    */\n\n    this.target = null;\n    /**\n     * The current target that a bubbling event is being dispatched from. For non-bubbling events, this will\n     * always be the same as target. For example, if childObj.parent = parentObj, and a bubbling event\n     * is generated from childObj, then a listener on parentObj would receive the event with\n     * target=childObj (the original target) and currentTarget=parentObj (where the listener was added).\n     * @property currentTarget\n     * @type Object\n     * @default null\n     * @readonly\n    */\n\n    this.currentTarget = null;\n    /**\n     * For bubbling events, this indicates the current event phase:<OL>\n     * \t<LI> capture phase: starting from the top parent to the target</LI>\n     * \t<LI> at target phase: currently being dispatched from the target</LI>\n     * \t<LI> bubbling phase: from the target to the top parent</LI>\n     * </OL>\n     * @property eventPhase\n     * @type Number\n     * @default 0\n     * @readonly\n    */\n\n    this.eventPhase = 0;\n    /**\n     * Indicates whether the event will bubble through the display list.\n     * @property bubbles\n     * @type Boolean\n     * @default false\n     * @readonly\n    */\n\n    this.bubbles = !!bubbles;\n    /**\n     * Indicates whether the default behaviour of this event can be cancelled via\n     * {{#crossLink \"Event/preventDefault\"}}{{/crossLink}}. This is set via the Event constructor.\n     * @property cancelable\n     * @type Boolean\n     * @default false\n     * @readonly\n    */\n\n    this.cancelable = !!cancelable;\n    /**\n     * The epoch time at which this event was created.\n     * @property timeStamp\n     * @type Number\n     * @default 0\n     * @readonly\n    */\n\n    this.timeStamp = new Date().getTime();\n    /**\n     * Indicates if {{#crossLink \"Event/preventDefault\"}}{{/crossLink}} has been called\n     * on this event.\n     * @property defaultPrevented\n     * @type Boolean\n     * @default false\n     * @readonly\n    */\n\n    this.defaultPrevented = false;\n    /**\n     * Indicates if {{#crossLink \"Event/stopPropagation\"}}{{/crossLink}} or\n     * {{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called on this event.\n     * @property propagationStopped\n     * @type Boolean\n     * @default false\n     * @readonly\n    */\n\n    this.propagationStopped = false;\n    /**\n     * Indicates if {{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called\n     * on this event.\n     * @property immediatePropagationStopped\n     * @type Boolean\n     * @default false\n     * @readonly\n    */\n\n    this.immediatePropagationStopped = false;\n    /**\n     * Indicates if {{#crossLink \"Event/remove\"}}{{/crossLink}} has been called on this event.\n     * @property removed\n     * @type Boolean\n     * @default false\n     * @readonly\n    */\n\n    this.removed = false;\n  }\n\n  var p = Event.prototype; // public methods:\n\n  /**\n   * Sets {{#crossLink \"Event/defaultPrevented\"}}{{/crossLink}} to true if the event is cancelable.\n   * Mirrors the DOM level 2 event standard. In general, cancelable events that have `preventDefault()` called will\n   * cancel the default behaviour associated with the event.\n   * @method preventDefault\n   **/\n\n  p.preventDefault = function () {\n    this.defaultPrevented = this.cancelable && true;\n  };\n  /**\n   * Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} to true.\n   * Mirrors the DOM event standard.\n   * @method stopPropagation\n   **/\n\n\n  p.stopPropagation = function () {\n    this.propagationStopped = true;\n  };\n  /**\n   * Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} and\n   * {{#crossLink \"Event/immediatePropagationStopped\"}}{{/crossLink}} to true.\n   * Mirrors the DOM event standard.\n   * @method stopImmediatePropagation\n   **/\n\n\n  p.stopImmediatePropagation = function () {\n    this.immediatePropagationStopped = this.propagationStopped = true;\n  };\n  /**\n   * Causes the active listener to be removed via removeEventListener();\n   * \n   * \t\tmyBtn.addEventListener(\"click\", function(evt) {\n   * \t\t\t// do stuff...\n   * \t\t\tevt.remove(); // removes this listener.\n   * \t\t});\n   * \n   * @method remove\n   **/\n\n\n  p.remove = function () {\n    this.removed = true;\n  };\n  /**\n   * Returns a clone of the Event instance.\n   * @method clone\n   * @return {Event} a clone of the Event instance.\n   **/\n\n\n  p.clone = function () {\n    return new Event(this.type, this.bubbles, this.cancelable);\n  };\n  /**\n   * Provides a chainable shortcut method for setting a number of properties on the instance.\n   *\n   * @method set\n   * @param {Object} props A generic object containing properties to copy to the instance.\n   * @return {Event} Returns the instance the method is called on (useful for chaining calls.)\n   * @chainable\n  */\n\n\n  p.set = function (props) {\n    for (var n in props) {\n      this[n] = props[n];\n    }\n\n    return this;\n  };\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n\n\n  p.toString = function () {\n    return \"[Event (type=\" + this.type + \")]\";\n  };\n\n  createjs.Event = Event;\n})(); //##############################################################################\n// ErrorEvent.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n  /**\n   * A general error {{#crossLink \"Event\"}}{{/crossLink}}, that describes an error that occurred, as well as any details.\n   * @class ErrorEvent\n   * @param {String} [title] The error title\n   * @param {String} [message] The error description\n   * @param {Object} [data] Additional error data\n   * @constructor\n   */\n\n  function ErrorEvent(title, message, data) {\n    this.Event_constructor(\"error\");\n    /**\n     * The short error title, which indicates the type of error that occurred.\n     * @property title\n     * @type String\n     */\n\n    this.title = title;\n    /**\n     * The verbose error message, containing details about the error.\n     * @property message\n     * @type String\n     */\n\n    this.message = message;\n    /**\n     * Additional data attached to an error.\n     * @property data\n     * @type {Object}\n     */\n\n    this.data = data;\n  }\n\n  var p = createjs.extend(ErrorEvent, createjs.Event);\n\n  p.clone = function () {\n    return new createjs.ErrorEvent(this.title, this.message, this.data);\n  };\n\n  createjs.ErrorEvent = createjs.promote(ErrorEvent, \"Event\");\n})(); //##############################################################################\n// EventDispatcher.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor:\n\n  /**\r\n   * EventDispatcher provides methods for managing queues of event listeners and dispatching events.\r\n   *\r\n   * You can either extend EventDispatcher or mix its methods into an existing prototype or instance by using the\r\n   * EventDispatcher {{#crossLink \"EventDispatcher/initialize\"}}{{/crossLink}} method.\r\n   * \r\n   * Together with the CreateJS Event class, EventDispatcher provides an extended event model that is based on the\r\n   * DOM Level 2 event model, including addEventListener, removeEventListener, and dispatchEvent. It supports\r\n   * bubbling / capture, preventDefault, stopPropagation, stopImmediatePropagation, and handleEvent.\r\n   * \r\n   * EventDispatcher also exposes a {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}} method, which makes it easier\r\n   * to create scoped listeners, listeners that only run once, and listeners with associated arbitrary data. The \r\n   * {{#crossLink \"EventDispatcher/off\"}}{{/crossLink}} method is merely an alias to\r\n   * {{#crossLink \"EventDispatcher/removeEventListener\"}}{{/crossLink}}.\r\n   * \r\n   * Another addition to the DOM Level 2 model is the {{#crossLink \"EventDispatcher/removeAllEventListeners\"}}{{/crossLink}}\r\n   * method, which can be used to listeners for all events, or listeners for a specific event. The Event object also \r\n   * includes a {{#crossLink \"Event/remove\"}}{{/crossLink}} method which removes the active listener.\r\n   *\r\n   * <h4>Example</h4>\r\n   * Add EventDispatcher capabilities to the \"MyClass\" class.\r\n   *\r\n   *      EventDispatcher.initialize(MyClass.prototype);\r\n   *\r\n   * Add an event (see {{#crossLink \"EventDispatcher/addEventListener\"}}{{/crossLink}}).\r\n   *\r\n   *      instance.addEventListener(\"eventName\", handlerMethod);\r\n   *      function handlerMethod(event) {\r\n   *          console.log(event.target + \" Was Clicked\");\r\n   *      }\r\n   *\r\n   * <b>Maintaining proper scope</b><br />\r\n   * Scope (ie. \"this\") can be be a challenge with events. Using the {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}}\r\n   * method to subscribe to events simplifies this.\r\n   *\r\n   *      instance.addEventListener(\"click\", function(event) {\r\n   *          console.log(instance == this); // false, scope is ambiguous.\r\n   *      });\r\n   *      \r\n   *      instance.on(\"click\", function(event) {\r\n   *          console.log(instance == this); // true, \"on\" uses dispatcher scope by default.\r\n   *      });\r\n   * \r\n   * If you want to use addEventListener instead, you may want to use function.bind() or a similar proxy to manage\r\n   * scope.\r\n   *\r\n   * <b>Browser support</b>\r\n   * The event model in CreateJS can be used separately from the suite in any project, however the inheritance model\r\n   * requires modern browsers (IE9+).\r\n   *      \r\n   *\r\n   * @class EventDispatcher\r\n   * @constructor\r\n   **/\n\n  function EventDispatcher() {\n    // private properties:\n\n    /**\r\n     * @protected\r\n     * @property _listeners\r\n     * @type Object\r\n     **/\n    this._listeners = null;\n    /**\r\n     * @protected\r\n     * @property _captureListeners\r\n     * @type Object\r\n     **/\n\n    this._captureListeners = null;\n  }\n\n  var p = EventDispatcher.prototype; // static public methods:\n\n  /**\r\n   * Static initializer to mix EventDispatcher methods into a target object or prototype.\r\n   * \r\n   * \t\tEventDispatcher.initialize(MyClass.prototype); // add to the prototype of the class\r\n   * \t\tEventDispatcher.initialize(myObject); // add to a specific instance\r\n   * \r\n   * @method initialize\r\n   * @static\r\n   * @param {Object} target The target object to inject EventDispatcher methods into. This can be an instance or a\r\n   * prototype.\r\n   **/\n\n  EventDispatcher.initialize = function (target) {\n    target.addEventListener = p.addEventListener;\n    target.on = p.on;\n    target.removeEventListener = target.off = p.removeEventListener;\n    target.removeAllEventListeners = p.removeAllEventListeners;\n    target.hasEventListener = p.hasEventListener;\n    target.dispatchEvent = p.dispatchEvent;\n    target._dispatchEvent = p._dispatchEvent;\n    target.willTrigger = p.willTrigger;\n  }; // public methods:\n\n  /**\r\n   * Adds the specified event listener. Note that adding multiple listeners to the same function will result in\r\n   * multiple callbacks getting fired.\r\n   *\r\n   * <h4>Example</h4>\r\n   *\r\n   *      displayObject.addEventListener(\"click\", handleClick);\r\n   *      function handleClick(event) {\r\n   *         // Click happened.\r\n   *      }\r\n   *\r\n   * @method addEventListener\r\n   * @param {String} type The string type of the event.\r\n   * @param {Function | Object} listener An object with a handleEvent method, or a function that will be called when\r\n   * the event is dispatched.\r\n   * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n   * @return {Function | Object} Returns the listener for chaining or assignment.\r\n   **/\n\n\n  p.addEventListener = function (type, listener, useCapture) {\n    var listeners;\n\n    if (useCapture) {\n      listeners = this._captureListeners = this._captureListeners || {};\n    } else {\n      listeners = this._listeners = this._listeners || {};\n    }\n\n    var arr = listeners[type];\n\n    if (arr) {\n      this.removeEventListener(type, listener, useCapture);\n    }\n\n    arr = listeners[type]; // remove may have deleted the array\n\n    if (!arr) {\n      listeners[type] = [listener];\n    } else {\n      arr.push(listener);\n    }\n\n    return listener;\n  };\n  /**\r\n   * A shortcut method for using addEventListener that makes it easier to specify an execution scope, have a listener\r\n   * only run once, associate arbitrary data with the listener, and remove the listener.\r\n   * \r\n   * This method works by creating an anonymous wrapper function and subscribing it with addEventListener.\r\n   * The wrapper function is returned for use with `removeEventListener` (or `off`).\r\n   * \r\n   * <b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener, or use\r\n   * {{#crossLink \"Event/remove\"}}{{/crossLink}}. Likewise, each time you call `on` a NEW wrapper function is subscribed, so multiple calls\r\n   * to `on` with the same params will create multiple listeners.\r\n   * \r\n   * <h4>Example</h4>\r\n   * \r\n   * \t\tvar listener = myBtn.on(\"click\", handleClick, null, false, {count:3});\r\n   * \t\tfunction handleClick(evt, data) {\r\n   * \t\t\tdata.count -= 1;\r\n   * \t\t\tconsole.log(this == myBtn); // true - scope defaults to the dispatcher\r\n   * \t\t\tif (data.count == 0) {\r\n   * \t\t\t\talert(\"clicked 3 times!\");\r\n   * \t\t\t\tmyBtn.off(\"click\", listener);\r\n   * \t\t\t\t// alternately: evt.remove();\r\n   * \t\t\t}\r\n   * \t\t}\r\n   * \r\n   * @method on\r\n   * @param {String} type The string type of the event.\r\n   * @param {Function | Object} listener An object with a handleEvent method, or a function that will be called when\r\n   * the event is dispatched.\r\n   * @param {Object} [scope] The scope to execute the listener in. Defaults to the dispatcher/currentTarget for function listeners, and to the listener itself for object listeners (ie. using handleEvent).\r\n   * @param {Boolean} [once=false] If true, the listener will remove itself after the first time it is triggered.\r\n   * @param {*} [data] Arbitrary data that will be included as the second parameter when the listener is called.\r\n   * @param {Boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n   * @return {Function} Returns the anonymous function that was created and assigned as the listener. This is needed to remove the listener later using .removeEventListener.\r\n   **/\n\n\n  p.on = function (type, listener, scope, once, data, useCapture) {\n    if (listener.handleEvent) {\n      scope = scope || listener;\n      listener = listener.handleEvent;\n    }\n\n    scope = scope || this;\n    return this.addEventListener(type, function (evt) {\n      listener.call(scope, evt, data);\n      once && evt.remove();\n    }, useCapture);\n  };\n  /**\r\n   * Removes the specified event listener.\r\n   *\r\n   * <b>Important Note:</b> that you must pass the exact function reference used when the event was added. If a proxy\r\n   * function, or function closure is used as the callback, the proxy/closure reference must be used - a new proxy or\r\n   * closure will not work.\r\n   *\r\n   * <h4>Example</h4>\r\n   *\r\n   *      displayObject.removeEventListener(\"click\", handleClick);\r\n   *\r\n   * @method removeEventListener\r\n   * @param {String} type The string type of the event.\r\n   * @param {Function | Object} listener The listener function or object.\r\n   * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n   **/\n\n\n  p.removeEventListener = function (type, listener, useCapture) {\n    var listeners = useCapture ? this._captureListeners : this._listeners;\n\n    if (!listeners) {\n      return;\n    }\n\n    var arr = listeners[type];\n\n    if (!arr) {\n      return;\n    }\n\n    for (var i = 0, l = arr.length; i < l; i++) {\n      if (arr[i] == listener) {\n        if (l == 1) {\n          delete listeners[type];\n        } // allows for faster checks.\n        else {\n            arr.splice(i, 1);\n          }\n\n        break;\n      }\n    }\n  };\n  /**\r\n   * A shortcut to the removeEventListener method, with the same parameters and return value. This is a companion to the\r\n   * .on method.\r\n   * \r\n   * <b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener. See \r\n   * {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}} for an example.\r\n   *\r\n   * @method off\r\n   * @param {String} type The string type of the event.\r\n   * @param {Function | Object} listener The listener function or object.\r\n   * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n   **/\n\n\n  p.off = p.removeEventListener;\n  /**\r\n   * Removes all listeners for the specified type, or all listeners of all types.\r\n   *\r\n   * <h4>Example</h4>\r\n   *\r\n   *      // Remove all listeners\r\n   *      displayObject.removeAllEventListeners();\r\n   *\r\n   *      // Remove all click listeners\r\n   *      displayObject.removeAllEventListeners(\"click\");\r\n   *\r\n   * @method removeAllEventListeners\r\n   * @param {String} [type] The string type of the event. If omitted, all listeners for all types will be removed.\r\n   **/\n\n  p.removeAllEventListeners = function (type) {\n    if (!type) {\n      this._listeners = this._captureListeners = null;\n    } else {\n      if (this._listeners) {\n        delete this._listeners[type];\n      }\n\n      if (this._captureListeners) {\n        delete this._captureListeners[type];\n      }\n    }\n  };\n  /**\r\n   * Dispatches the specified event to all listeners.\r\n   *\r\n   * <h4>Example</h4>\r\n   *\r\n   *      // Use a string event\r\n   *      this.dispatchEvent(\"complete\");\r\n   *\r\n   *      // Use an Event instance\r\n   *      var event = new createjs.Event(\"progress\");\r\n   *      this.dispatchEvent(event);\r\n   *\r\n   * @method dispatchEvent\r\n   * @param {Object | String | Event} eventObj An object with a \"type\" property, or a string type.\r\n   * While a generic object will work, it is recommended to use a CreateJS Event instance. If a string is used,\r\n   * dispatchEvent will construct an Event instance if necessary with the specified type. This latter approach can\r\n   * be used to avoid event object instantiation for non-bubbling events that may not have any listeners.\r\n   * @param {Boolean} [bubbles] Specifies the `bubbles` value when a string was passed to eventObj.\r\n   * @param {Boolean} [cancelable] Specifies the `cancelable` value when a string was passed to eventObj.\r\n   * @return {Boolean} Returns false if `preventDefault()` was called on a cancelable event, true otherwise.\r\n   **/\n\n\n  p.dispatchEvent = function (eventObj, bubbles, cancelable) {\n    if (typeof eventObj == \"string\") {\n      // skip everything if there's no listeners and it doesn't bubble:\n      var listeners = this._listeners;\n\n      if (!bubbles && (!listeners || !listeners[eventObj])) {\n        return true;\n      }\n\n      eventObj = new createjs.Event(eventObj, bubbles, cancelable);\n    } else if (eventObj.target && eventObj.clone) {\n      // redispatching an active event object, so clone it:\n      eventObj = eventObj.clone();\n    } // TODO: it would be nice to eliminate this. Maybe in favour of evtObj instanceof Event? Or !!evtObj.createEvent\n\n\n    try {\n      eventObj.target = this;\n    } catch (e) {} // try/catch allows redispatching of native events\n\n\n    if (!eventObj.bubbles || !this.parent) {\n      this._dispatchEvent(eventObj, 2);\n    } else {\n      var top = this,\n          list = [top];\n\n      while (top.parent) {\n        list.push(top = top.parent);\n      }\n\n      var i,\n          l = list.length; // capture & atTarget\n\n      for (i = l - 1; i >= 0 && !eventObj.propagationStopped; i--) {\n        list[i]._dispatchEvent(eventObj, 1 + (i == 0));\n      } // bubbling\n\n\n      for (i = 1; i < l && !eventObj.propagationStopped; i++) {\n        list[i]._dispatchEvent(eventObj, 3);\n      }\n    }\n\n    return !eventObj.defaultPrevented;\n  };\n  /**\r\n   * Indicates whether there is at least one listener for the specified event type.\r\n   * @method hasEventListener\r\n   * @param {String} type The string type of the event.\r\n   * @return {Boolean} Returns true if there is at least one listener for the specified event.\r\n   **/\n\n\n  p.hasEventListener = function (type) {\n    var listeners = this._listeners,\n        captureListeners = this._captureListeners;\n    return !!(listeners && listeners[type] || captureListeners && captureListeners[type]);\n  };\n  /**\r\n   * Indicates whether there is at least one listener for the specified event type on this object or any of its\r\n   * ancestors (parent, parent's parent, etc). A return value of true indicates that if a bubbling event of the\r\n   * specified type is dispatched from this object, it will trigger at least one listener.\r\n   * \r\n   * This is similar to {{#crossLink \"EventDispatcher/hasEventListener\"}}{{/crossLink}}, but it searches the entire\r\n   * event flow for a listener, not just this object.\r\n   * @method willTrigger\r\n   * @param {String} type The string type of the event.\r\n   * @return {Boolean} Returns `true` if there is at least one listener for the specified event.\r\n   **/\n\n\n  p.willTrigger = function (type) {\n    var o = this;\n\n    while (o) {\n      if (o.hasEventListener(type)) {\n        return true;\n      }\n\n      o = o.parent;\n    }\n\n    return false;\n  };\n  /**\r\n   * @method toString\r\n   * @return {String} a string representation of the instance.\r\n   **/\n\n\n  p.toString = function () {\n    return \"[EventDispatcher]\";\n  }; // private methods:\n\n  /**\r\n   * @method _dispatchEvent\r\n   * @param {Object | Event} eventObj\r\n   * @param {Object} eventPhase\r\n   * @protected\r\n   **/\n\n\n  p._dispatchEvent = function (eventObj, eventPhase) {\n    var l,\n        arr,\n        listeners = eventPhase <= 2 ? this._captureListeners : this._listeners;\n\n    if (eventObj && listeners && (arr = listeners[eventObj.type]) && (l = arr.length)) {\n      try {\n        eventObj.currentTarget = this;\n      } catch (e) {}\n\n      try {\n        eventObj.eventPhase = eventPhase | 0;\n      } catch (e) {}\n\n      eventObj.removed = false;\n      arr = arr.slice(); // to avoid issues with items being removed or added during the dispatch\n\n      for (var i = 0; i < l && !eventObj.immediatePropagationStopped; i++) {\n        var o = arr[i];\n\n        if (o.handleEvent) {\n          o.handleEvent(eventObj);\n        } else {\n          o(eventObj);\n        }\n\n        if (eventObj.removed) {\n          this.off(eventObj.type, o, eventPhase == 1);\n          eventObj.removed = false;\n        }\n      }\n    }\n\n    if (eventPhase === 2) {\n      this._dispatchEvent(eventObj, 2.1);\n    }\n  };\n\n  createjs.EventDispatcher = EventDispatcher;\n})(); //##############################################################################\n// ProgressEvent.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function (scope) {\n  \"use strict\"; // constructor\n\n  /**\n   * A CreateJS {{#crossLink \"Event\"}}{{/crossLink}} that is dispatched when progress changes.\n   * @class ProgressEvent\n   * @param {Number} loaded The amount that has been loaded. This can be any number relative to the total.\n   * @param {Number} [total=1] The total amount that will load. This will default to 1, so if the `loaded` value is\n   * a percentage (between 0 and 1), it can be omitted.\n   * @todo Consider having this event be a \"fileprogress\" event as well\n   * @constructor\n   */\n\n  function ProgressEvent(loaded, total) {\n    this.Event_constructor(\"progress\");\n    /**\n     * The amount that has been loaded (out of a total amount)\n     * @property loaded\n     * @type {Number}\n     */\n\n    this.loaded = loaded;\n    /**\n     * The total \"size\" of the load.\n     * @property total\n     * @type {Number}\n     * @default 1\n     */\n\n    this.total = total == null ? 1 : total;\n    /**\n     * The percentage (out of 1) that the load has been completed. This is calculated using `loaded/total`.\n     * @property progress\n     * @type {Number}\n     * @default 0\n     */\n\n    this.progress = total == 0 ? 0 : this.loaded / this.total;\n  }\n\n  ;\n  var p = createjs.extend(ProgressEvent, createjs.Event);\n  /**\n   * Returns a clone of the ProgressEvent instance.\n   * @method clone\n   * @return {ProgressEvent} a clone of the Event instance.\n   **/\n\n  p.clone = function () {\n    return new createjs.ProgressEvent(this.loaded, this.total);\n  };\n\n  createjs.ProgressEvent = createjs.promote(ProgressEvent, \"Event\");\n})(window); //##############################################################################\n// json3.js\n//##############################################################################\n\n/*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */\n\n\n;\n(function () {\n  // Detect the `define` function exposed by asynchronous module loaders. The\n  // strict `define` check is necessary for compatibility with `r.js`.\n  var isLoader = typeof define === \"function\" && define.amd; // A set of types used to distinguish objects from primitives.\n\n  var objectTypes = {\n    \"function\": true,\n    \"object\": true\n  }; // Detect the `exports` object exposed by CommonJS implementations.\n\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports; // Use the `global` object exposed by Node (including Browserify via\n  // `insert-module-globals`), Narwhal, and Ringo as the default context,\n  // and the `window` object in browsers. Rhino exports a `global` function\n  // instead.\n\n  var root = objectTypes[typeof window] && window || this,\n      freeGlobal = freeExports && objectTypes[typeof module] && module && !module.nodeType && typeof global == \"object\" && global;\n\n  if (freeGlobal && (freeGlobal[\"global\"] === freeGlobal || freeGlobal[\"window\"] === freeGlobal || freeGlobal[\"self\"] === freeGlobal)) {\n    root = freeGlobal;\n  } // Public: Initializes JSON 3 using the given `context` object, attaching the\n  // `stringify` and `parse` functions to the specified `exports` object.\n\n\n  function runInContext(context, exports) {\n    context || (context = root[\"Object\"]());\n    exports || (exports = root[\"Object\"]()); // Native constructor aliases.\n\n    var Number = context[\"Number\"] || root[\"Number\"],\n        String = context[\"String\"] || root[\"String\"],\n        Object = context[\"Object\"] || root[\"Object\"],\n        Date = context[\"Date\"] || root[\"Date\"],\n        SyntaxError = context[\"SyntaxError\"] || root[\"SyntaxError\"],\n        TypeError = context[\"TypeError\"] || root[\"TypeError\"],\n        Math = context[\"Math\"] || root[\"Math\"],\n        nativeJSON = context[\"JSON\"] || root[\"JSON\"]; // Delegate to the native `stringify` and `parse` implementations.\n\n    if (typeof nativeJSON == \"object\" && nativeJSON) {\n      exports.stringify = nativeJSON.stringify;\n      exports.parse = nativeJSON.parse;\n    } // Convenience aliases.\n\n\n    var objectProto = Object.prototype,\n        getClass = objectProto.toString,\n        isProperty,\n        forEach,\n        undef; // Test the `Date#getUTC*` methods. Based on work by @Yaffle.\n\n    var isExtended = new Date(-3509827334573292);\n\n    try {\n      // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical\n      // results for certain dates in Opera >= 10.53.\n      isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 && // Safari < 2.0.2 stores the internal millisecond time value correctly,\n      // but clips the values returned by the date methods to the range of\n      // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).\n      isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;\n    } catch (exception) {} // Internal: Determines whether the native `JSON.stringify` and `parse`\n    // implementations are spec-compliant. Based on work by Ken Snyder.\n\n\n    function has(name) {\n      if (has[name] !== undef) {\n        // Return cached feature test result.\n        return has[name];\n      }\n\n      var isSupported;\n\n      if (name == \"bug-string-char-index\") {\n        // IE <= 7 doesn't support accessing string characters using square\n        // bracket notation. IE 8 only supports this for primitives.\n        isSupported = \"a\"[0] != \"a\";\n      } else if (name == \"json\") {\n        // Indicates whether both `JSON.stringify` and `JSON.parse` are\n        // supported.\n        isSupported = has(\"json-stringify\") && has(\"json-parse\");\n      } else {\n        var value,\n            serialized = '{\"a\":[1,true,false,null,\"\\\\u0000\\\\b\\\\n\\\\f\\\\r\\\\t\"]}'; // Test `JSON.stringify`.\n\n        if (name == \"json-stringify\") {\n          var stringify = exports.stringify,\n              stringifySupported = typeof stringify == \"function\" && isExtended;\n\n          if (stringifySupported) {\n            // A test function object with a custom `toJSON` method.\n            (value = function () {\n              return 1;\n            }).toJSON = value;\n\n            try {\n              stringifySupported = // Firefox 3.1b1 and b2 serialize string, number, and boolean\n              // primitives as object literals.\n              stringify(0) === \"0\" && // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object\n              // literals.\n              stringify(new Number()) === \"0\" && stringify(new String()) == '\"\"' && // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or\n              // does not define a canonical JSON representation (this applies to\n              // objects with `toJSON` properties as well, *unless* they are nested\n              // within an object or array).\n              stringify(getClass) === undef && // IE 8 serializes `undefined` as `\"undefined\"`. Safari <= 5.1.7 and\n              // FF 3.1b3 pass this test.\n              stringify(undef) === undef && // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,\n              // respectively, if the value is omitted entirely.\n              stringify() === undef && // FF 3.1b1, 2 throw an error if the given value is not a number,\n              // string, array, object, Boolean, or `null` literal. This applies to\n              // objects with custom `toJSON` methods as well, unless they are nested\n              // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`\n              // methods entirely.\n              stringify(value) === \"1\" && stringify([value]) == \"[1]\" && // Prototype <= 1.6.1 serializes `[undefined]` as `\"[]\"` instead of\n              // `\"[null]\"`.\n              stringify([undef]) == \"[null]\" && // YUI 3.0.0b1 fails to serialize `null` literals.\n              stringify(null) == \"null\" && // FF 3.1b1, 2 halts serialization if an array contains a function:\n              // `[1, true, getClass, 1]` serializes as \"[1,true,],\". FF 3.1b3\n              // elides non-JSON values from objects and arrays, unless they\n              // define custom `toJSON` methods.\n              stringify([undef, getClass, null]) == \"[null,null,null]\" && // Simple serialization test. FF 3.1b1 uses Unicode escape sequences\n              // where character escape codes are expected (e.g., `\\b` => `\\u0008`).\n              stringify({\n                \"a\": [value, true, false, null, \"\\x00\\b\\n\\f\\r\\t\"]\n              }) == serialized && // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.\n              stringify(null, value) === \"1\" && stringify([1, 2], null, 1) == \"[\\n 1,\\n 2\\n]\" && // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly\n              // serialize extended years.\n              stringify(new Date(-8.64e15)) == '\"-271821-04-20T00:00:00.000Z\"' && // The milliseconds are optional in ES 5, but required in 5.1.\n              stringify(new Date(8.64e15)) == '\"+275760-09-13T00:00:00.000Z\"' && // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative\n              // four-digit years instead of six-digit years. Credits: @Yaffle.\n              stringify(new Date(-621987552e5)) == '\"-000001-01-01T00:00:00.000Z\"' && // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond\n              // values less than 1000. Credits: @Yaffle.\n              stringify(new Date(-1)) == '\"1969-12-31T23:59:59.999Z\"';\n            } catch (exception) {\n              stringifySupported = false;\n            }\n          }\n\n          isSupported = stringifySupported;\n        } // Test `JSON.parse`.\n\n\n        if (name == \"json-parse\") {\n          var parse = exports.parse;\n\n          if (typeof parse == \"function\") {\n            try {\n              // FF 3.1b1, b2 will throw an exception if a bare literal is provided.\n              // Conforming implementations should also coerce the initial argument to\n              // a string prior to parsing.\n              if (parse(\"0\") === 0 && !parse(false)) {\n                // Simple parsing test.\n                value = parse(serialized);\n                var parseSupported = value[\"a\"].length == 5 && value[\"a\"][0] === 1;\n\n                if (parseSupported) {\n                  try {\n                    // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.\n                    parseSupported = !parse('\"\\t\"');\n                  } catch (exception) {}\n\n                  if (parseSupported) {\n                    try {\n                      // FF 4.0 and 4.0.1 allow leading `+` signs and leading\n                      // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow\n                      // certain octal literals.\n                      parseSupported = parse(\"01\") !== 1;\n                    } catch (exception) {}\n                  }\n\n                  if (parseSupported) {\n                    try {\n                      // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal\n                      // points. These environments, along with FF 3.1b1 and 2,\n                      // also allow trailing commas in JSON objects and arrays.\n                      parseSupported = parse(\"1.\") !== 1;\n                    } catch (exception) {}\n                  }\n                }\n              }\n            } catch (exception) {\n              parseSupported = false;\n            }\n          }\n\n          isSupported = parseSupported;\n        }\n      }\n\n      return has[name] = !!isSupported;\n    }\n\n    if (!has(\"json\")) {\n      // Common `[[Class]]` name aliases.\n      var functionClass = \"[object Function]\",\n          dateClass = \"[object Date]\",\n          numberClass = \"[object Number]\",\n          stringClass = \"[object String]\",\n          arrayClass = \"[object Array]\",\n          booleanClass = \"[object Boolean]\"; // Detect incomplete support for accessing string characters by index.\n\n      var charIndexBuggy = has(\"bug-string-char-index\"); // Define additional utility methods if the `Date` methods are buggy.\n\n      if (!isExtended) {\n        var floor = Math.floor; // A mapping between the months of the year and the number of days between\n        // January 1st and the first of the respective month.\n\n        var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334]; // Internal: Calculates the number of days between the Unix epoch and the\n        // first day of the given month.\n\n        var getDay = function (year, month) {\n          return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);\n        };\n      } // Internal: Determines if a property is a direct property of the given\n      // object. Delegates to the native `Object#hasOwnProperty` method.\n\n\n      if (!(isProperty = objectProto.hasOwnProperty)) {\n        isProperty = function (property) {\n          var members = {},\n              constructor;\n\n          if ((members.__proto__ = null, members.__proto__ = {\n            // The *proto* property cannot be set multiple times in recent\n            // versions of Firefox and SeaMonkey.\n            \"toString\": 1\n          }, members).toString != getClass) {\n            // Safari <= 2.0.3 doesn't implement `Object#hasOwnProperty`, but\n            // supports the mutable *proto* property.\n            isProperty = function (property) {\n              // Capture and break the object's prototype chain (see section 8.6.2\n              // of the ES 5.1 spec). The parenthesized expression prevents an\n              // unsafe transformation by the Closure Compiler.\n              var original = this.__proto__,\n                  result = (property in (this.__proto__ = null, this)); // Restore the original prototype chain.\n\n              this.__proto__ = original;\n              return result;\n            };\n          } else {\n            // Capture a reference to the top-level `Object` constructor.\n            constructor = members.constructor; // Use the `constructor` property to simulate `Object#hasOwnProperty` in\n            // other environments.\n\n            isProperty = function (property) {\n              var parent = (this.constructor || constructor).prototype;\n              return property in this && !(property in parent && this[property] === parent[property]);\n            };\n          }\n\n          members = null;\n          return isProperty.call(this, property);\n        };\n      } // Internal: Normalizes the `for...in` iteration algorithm across\n      // environments. Each enumerated key is yielded to a `callback` function.\n\n\n      forEach = function (object, callback) {\n        var size = 0,\n            Properties,\n            members,\n            property; // Tests for bugs in the current environment's `for...in` algorithm. The\n        // `valueOf` property inherits the non-enumerable flag from\n        // `Object.prototype` in older versions of IE, Netscape, and Mozilla.\n\n        (Properties = function () {\n          this.valueOf = 0;\n        }).prototype.valueOf = 0; // Iterate over a new instance of the `Properties` class.\n\n        members = new Properties();\n\n        for (property in members) {\n          // Ignore all properties inherited from `Object.prototype`.\n          if (isProperty.call(members, property)) {\n            size++;\n          }\n        }\n\n        Properties = members = null; // Normalize the iteration algorithm.\n\n        if (!size) {\n          // A list of non-enumerable properties inherited from `Object.prototype`.\n          members = [\"valueOf\", \"toString\", \"toLocaleString\", \"propertyIsEnumerable\", \"isPrototypeOf\", \"hasOwnProperty\", \"constructor\"]; // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable\n          // properties.\n\n          forEach = function (object, callback) {\n            var isFunction = getClass.call(object) == functionClass,\n                property,\n                length;\n            var hasProperty = !isFunction && typeof object.constructor != \"function\" && objectTypes[typeof object.hasOwnProperty] && object.hasOwnProperty || isProperty;\n\n            for (property in object) {\n              // Gecko <= 1.0 enumerates the `prototype` property of functions under\n              // certain conditions; IE does not.\n              if (!(isFunction && property == \"prototype\") && hasProperty.call(object, property)) {\n                callback(property);\n              }\n            } // Manually invoke the callback for each non-enumerable property.\n\n\n            for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property));\n          };\n        } else if (size == 2) {\n          // Safari <= 2.0.4 enumerates shadowed properties twice.\n          forEach = function (object, callback) {\n            // Create a set of iterated properties.\n            var members = {},\n                isFunction = getClass.call(object) == functionClass,\n                property;\n\n            for (property in object) {\n              // Store each property name to prevent double enumeration. The\n              // `prototype` property of functions is not enumerated due to cross-\n              // environment inconsistencies.\n              if (!(isFunction && property == \"prototype\") && !isProperty.call(members, property) && (members[property] = 1) && isProperty.call(object, property)) {\n                callback(property);\n              }\n            }\n          };\n        } else {\n          // No bugs detected; use the standard `for...in` algorithm.\n          forEach = function (object, callback) {\n            var isFunction = getClass.call(object) == functionClass,\n                property,\n                isConstructor;\n\n            for (property in object) {\n              if (!(isFunction && property == \"prototype\") && isProperty.call(object, property) && !(isConstructor = property === \"constructor\")) {\n                callback(property);\n              }\n            } // Manually invoke the callback for the `constructor` property due to\n            // cross-environment inconsistencies.\n\n\n            if (isConstructor || isProperty.call(object, property = \"constructor\")) {\n              callback(property);\n            }\n          };\n        }\n\n        return forEach(object, callback);\n      }; // Public: Serializes a JavaScript `value` as a JSON string. The optional\n      // `filter` argument may specify either a function that alters how object and\n      // array members are serialized, or an array of strings and numbers that\n      // indicates which properties should be serialized. The optional `width`\n      // argument may be either a string or number that specifies the indentation\n      // level of the output.\n\n\n      if (!has(\"json-stringify\")) {\n        // Internal: A map of control characters and their escaped equivalents.\n        var Escapes = {\n          92: \"\\\\\\\\\",\n          34: '\\\\\"',\n          8: \"\\\\b\",\n          12: \"\\\\f\",\n          10: \"\\\\n\",\n          13: \"\\\\r\",\n          9: \"\\\\t\"\n        }; // Internal: Converts `value` into a zero-padded string such that its\n        // length is at least equal to `width`. The `width` must be <= 6.\n\n        var leadingZeroes = \"000000\";\n\n        var toPaddedString = function (width, value) {\n          // The `|| 0` expression is necessary to work around a bug in\n          // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== \"0\"`.\n          return (leadingZeroes + (value || 0)).slice(-width);\n        }; // Internal: Double-quotes a string `value`, replacing all ASCII control\n        // characters (characters with code unit values between 0 and 31) with\n        // their escaped equivalents. This is an implementation of the\n        // `Quote(value)` operation defined in ES 5.1 section 15.12.3.\n\n\n        var unicodePrefix = \"\\\\u00\";\n\n        var quote = function (value) {\n          var result = '\"',\n              index = 0,\n              length = value.length,\n              useCharIndex = !charIndexBuggy || length > 10;\n          var symbols = useCharIndex && (charIndexBuggy ? value.split(\"\") : value);\n\n          for (; index < length; index++) {\n            var charCode = value.charCodeAt(index); // If the character is a control character, append its Unicode or\n            // shorthand escape sequence; otherwise, append the character as-is.\n\n            switch (charCode) {\n              case 8:\n              case 9:\n              case 10:\n              case 12:\n              case 13:\n              case 34:\n              case 92:\n                result += Escapes[charCode];\n                break;\n\n              default:\n                if (charCode < 32) {\n                  result += unicodePrefix + toPaddedString(2, charCode.toString(16));\n                  break;\n                }\n\n                result += useCharIndex ? symbols[index] : value.charAt(index);\n            }\n          }\n\n          return result + '\"';\n        }; // Internal: Recursively serializes an object. Implements the\n        // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.\n\n\n        var serialize = function (property, object, callback, properties, whitespace, indentation, stack) {\n          var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;\n\n          try {\n            // Necessary for host object support.\n            value = object[property];\n          } catch (exception) {}\n\n          if (typeof value == \"object\" && value) {\n            className = getClass.call(value);\n\n            if (className == dateClass && !isProperty.call(value, \"toJSON\")) {\n              if (value > -1 / 0 && value < 1 / 0) {\n                // Dates are serialized according to the `Date#toJSON` method\n                // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15\n                // for the ISO 8601 date time string format.\n                if (getDay) {\n                  // Manually compute the year, month, date, hours, minutes,\n                  // seconds, and milliseconds if the `getUTC*` methods are\n                  // buggy. Adapted from @Yaffle's `date-shim` project.\n                  date = floor(value / 864e5);\n\n                  for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++);\n\n                  for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++);\n\n                  date = 1 + date - getDay(year, month); // The `time` value specifies the time within the day (see ES\n                  // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used\n                  // to compute `A modulo B`, as the `%` operator does not\n                  // correspond to the `modulo` operation for negative numbers.\n\n                  time = (value % 864e5 + 864e5) % 864e5; // The hours, minutes, seconds, and milliseconds are obtained by\n                  // decomposing the time within the day. See section 15.9.1.10.\n\n                  hours = floor(time / 36e5) % 24;\n                  minutes = floor(time / 6e4) % 60;\n                  seconds = floor(time / 1e3) % 60;\n                  milliseconds = time % 1e3;\n                } else {\n                  year = value.getUTCFullYear();\n                  month = value.getUTCMonth();\n                  date = value.getUTCDate();\n                  hours = value.getUTCHours();\n                  minutes = value.getUTCMinutes();\n                  seconds = value.getUTCSeconds();\n                  milliseconds = value.getUTCMilliseconds();\n                } // Serialize extended years correctly.\n\n\n                value = (year <= 0 || year >= 1e4 ? (year < 0 ? \"-\" : \"+\") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) + \"-\" + toPaddedString(2, month + 1) + \"-\" + toPaddedString(2, date) + // Months, dates, hours, minutes, and seconds should have two\n                // digits; milliseconds should have three.\n                \"T\" + toPaddedString(2, hours) + \":\" + toPaddedString(2, minutes) + \":\" + toPaddedString(2, seconds) + // Milliseconds are optional in ES 5.0, but required in 5.1.\n                \".\" + toPaddedString(3, milliseconds) + \"Z\";\n              } else {\n                value = null;\n              }\n            } else if (typeof value.toJSON == \"function\" && (className != numberClass && className != stringClass && className != arrayClass || isProperty.call(value, \"toJSON\"))) {\n              // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the\n              // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3\n              // ignores all `toJSON` methods on these objects unless they are\n              // defined directly on an instance.\n              value = value.toJSON(property);\n            }\n          }\n\n          if (callback) {\n            // If a replacement function was provided, call it to obtain the value\n            // for serialization.\n            value = callback.call(object, property, value);\n          }\n\n          if (value === null) {\n            return \"null\";\n          }\n\n          className = getClass.call(value);\n\n          if (className == booleanClass) {\n            // Booleans are represented literally.\n            return \"\" + value;\n          } else if (className == numberClass) {\n            // JSON numbers must be finite. `Infinity` and `NaN` are serialized as\n            // `\"null\"`.\n            return value > -1 / 0 && value < 1 / 0 ? \"\" + value : \"null\";\n          } else if (className == stringClass) {\n            // Strings are double-quoted and escaped.\n            return quote(\"\" + value);\n          } // Recursively serialize objects and arrays.\n\n\n          if (typeof value == \"object\") {\n            // Check for cyclic structures. This is a linear search; performance\n            // is inversely proportional to the number of unique nested objects.\n            for (length = stack.length; length--;) {\n              if (stack[length] === value) {\n                // Cyclic structures cannot be serialized by `JSON.stringify`.\n                throw TypeError();\n              }\n            } // Add the object to the stack of traversed objects.\n\n\n            stack.push(value);\n            results = []; // Save the current indentation level and indent one additional level.\n\n            prefix = indentation;\n            indentation += whitespace;\n\n            if (className == arrayClass) {\n              // Recursively serialize array elements.\n              for (index = 0, length = value.length; index < length; index++) {\n                element = serialize(index, value, callback, properties, whitespace, indentation, stack);\n                results.push(element === undef ? \"null\" : element);\n              }\n\n              result = results.length ? whitespace ? \"[\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"]\" : \"[\" + results.join(\",\") + \"]\" : \"[]\";\n            } else {\n              // Recursively serialize object members. Members are selected from\n              // either a user-specified list of property names, or the object\n              // itself.\n              forEach(properties || value, function (property) {\n                var element = serialize(property, value, callback, properties, whitespace, indentation, stack);\n\n                if (element !== undef) {\n                  // According to ES 5.1 section 15.12.3: \"If `gap` {whitespace}\n                  // is not the empty string, let `member` {quote(property) + \":\"}\n                  // be the concatenation of `member` and the `space` character.\"\n                  // The \"`space` character\" refers to the literal space\n                  // character, not the `space` {width} argument provided to\n                  // `JSON.stringify`.\n                  results.push(quote(property) + \":\" + (whitespace ? \" \" : \"\") + element);\n                }\n              });\n              result = results.length ? whitespace ? \"{\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"}\" : \"{\" + results.join(\",\") + \"}\" : \"{}\";\n            } // Remove the object from the traversed object stack.\n\n\n            stack.pop();\n            return result;\n          }\n        }; // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.\n\n\n        exports.stringify = function (source, filter, width) {\n          var whitespace, callback, properties, className;\n\n          if (objectTypes[typeof filter] && filter) {\n            if ((className = getClass.call(filter)) == functionClass) {\n              callback = filter;\n            } else if (className == arrayClass) {\n              // Convert the property names array into a makeshift set.\n              properties = {};\n\n              for (var index = 0, length = filter.length, value; index < length; value = filter[index++], (className = getClass.call(value), className == stringClass || className == numberClass) && (properties[value] = 1));\n            }\n          }\n\n          if (width) {\n            if ((className = getClass.call(width)) == numberClass) {\n              // Convert the `width` to an integer and create a string containing\n              // `width` number of space characters.\n              if ((width -= width % 1) > 0) {\n                for (whitespace = \"\", width > 10 && (width = 10); whitespace.length < width; whitespace += \" \");\n              }\n            } else if (className == stringClass) {\n              whitespace = width.length <= 10 ? width : width.slice(0, 10);\n            }\n          } // Opera <= 7.54u2 discards the values associated with empty string keys\n          // (`\"\"`) only if they are used directly within an object member list\n          // (e.g., `!(\"\" in { \"\": 1})`).\n\n\n          return serialize(\"\", (value = {}, value[\"\"] = source, value), callback, properties, whitespace, \"\", []);\n        };\n      } // Public: Parses a JSON source string.\n\n\n      if (!has(\"json-parse\")) {\n        var fromCharCode = String.fromCharCode; // Internal: A map of escaped control characters and their unescaped\n        // equivalents.\n\n        var Unescapes = {\n          92: \"\\\\\",\n          34: '\"',\n          47: \"/\",\n          98: \"\\b\",\n          116: \"\\t\",\n          110: \"\\n\",\n          102: \"\\f\",\n          114: \"\\r\"\n        }; // Internal: Stores the parser state.\n\n        var Index, Source; // Internal: Resets the parser state and throws a `SyntaxError`.\n\n        var abort = function () {\n          Index = Source = null;\n          throw SyntaxError();\n        }; // Internal: Returns the next token, or `\"$\"` if the parser has reached\n        // the end of the source string. A token may be a string, number, `null`\n        // literal, or Boolean literal.\n\n\n        var lex = function () {\n          var source = Source,\n              length = source.length,\n              value,\n              begin,\n              position,\n              isSigned,\n              charCode;\n\n          while (Index < length) {\n            charCode = source.charCodeAt(Index);\n\n            switch (charCode) {\n              case 9:\n              case 10:\n              case 13:\n              case 32:\n                // Skip whitespace tokens, including tabs, carriage returns, line\n                // feeds, and space characters.\n                Index++;\n                break;\n\n              case 123:\n              case 125:\n              case 91:\n              case 93:\n              case 58:\n              case 44:\n                // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at\n                // the current position.\n                value = charIndexBuggy ? source.charAt(Index) : source[Index];\n                Index++;\n                return value;\n\n              case 34:\n                // `\"` delimits a JSON string; advance to the next character and\n                // begin parsing the string. String tokens are prefixed with the\n                // sentinel `@` character to distinguish them from punctuators and\n                // end-of-string tokens.\n                for (value = \"@\", Index++; Index < length;) {\n                  charCode = source.charCodeAt(Index);\n\n                  if (charCode < 32) {\n                    // Unescaped ASCII control characters (those with a code unit\n                    // less than the space character) are not permitted.\n                    abort();\n                  } else if (charCode == 92) {\n                    // A reverse solidus (`\\`) marks the beginning of an escaped\n                    // control character (including `\"`, `\\`, and `/`) or Unicode\n                    // escape sequence.\n                    charCode = source.charCodeAt(++Index);\n\n                    switch (charCode) {\n                      case 92:\n                      case 34:\n                      case 47:\n                      case 98:\n                      case 116:\n                      case 110:\n                      case 102:\n                      case 114:\n                        // Revive escaped control characters.\n                        value += Unescapes[charCode];\n                        Index++;\n                        break;\n\n                      case 117:\n                        // `\\u` marks the beginning of a Unicode escape sequence.\n                        // Advance to the first character and validate the\n                        // four-digit code point.\n                        begin = ++Index;\n\n                        for (position = Index + 4; Index < position; Index++) {\n                          charCode = source.charCodeAt(Index); // A valid sequence comprises four hexdigits (case-\n                          // insensitive) that form a single hexadecimal value.\n\n                          if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {\n                            // Invalid Unicode escape sequence.\n                            abort();\n                          }\n                        } // Revive the escaped character.\n\n\n                        value += fromCharCode(\"0x\" + source.slice(begin, Index));\n                        break;\n\n                      default:\n                        // Invalid escape sequence.\n                        abort();\n                    }\n                  } else {\n                    if (charCode == 34) {\n                      // An unescaped double-quote character marks the end of the\n                      // string.\n                      break;\n                    }\n\n                    charCode = source.charCodeAt(Index);\n                    begin = Index; // Optimize for the common case where a string is valid.\n\n                    while (charCode >= 32 && charCode != 92 && charCode != 34) {\n                      charCode = source.charCodeAt(++Index);\n                    } // Append the string as-is.\n\n\n                    value += source.slice(begin, Index);\n                  }\n                }\n\n                if (source.charCodeAt(Index) == 34) {\n                  // Advance to the next character and return the revived string.\n                  Index++;\n                  return value;\n                } // Unterminated string.\n\n\n                abort();\n\n              default:\n                // Parse numbers and literals.\n                begin = Index; // Advance past the negative sign, if one is specified.\n\n                if (charCode == 45) {\n                  isSigned = true;\n                  charCode = source.charCodeAt(++Index);\n                } // Parse an integer or floating-point value.\n\n\n                if (charCode >= 48 && charCode <= 57) {\n                  // Leading zeroes are interpreted as octal literals.\n                  if (charCode == 48 && (charCode = source.charCodeAt(Index + 1), charCode >= 48 && charCode <= 57)) {\n                    // Illegal octal literal.\n                    abort();\n                  }\n\n                  isSigned = false; // Parse the integer component.\n\n                  for (; Index < length && (charCode = source.charCodeAt(Index), charCode >= 48 && charCode <= 57); Index++); // Floats cannot contain a leading decimal point; however, this\n                  // case is already accounted for by the parser.\n\n\n                  if (source.charCodeAt(Index) == 46) {\n                    position = ++Index; // Parse the decimal component.\n\n                    for (; position < length && (charCode = source.charCodeAt(position), charCode >= 48 && charCode <= 57); position++);\n\n                    if (position == Index) {\n                      // Illegal trailing decimal.\n                      abort();\n                    }\n\n                    Index = position;\n                  } // Parse exponents. The `e` denoting the exponent is\n                  // case-insensitive.\n\n\n                  charCode = source.charCodeAt(Index);\n\n                  if (charCode == 101 || charCode == 69) {\n                    charCode = source.charCodeAt(++Index); // Skip past the sign following the exponent, if one is\n                    // specified.\n\n                    if (charCode == 43 || charCode == 45) {\n                      Index++;\n                    } // Parse the exponential component.\n\n\n                    for (position = Index; position < length && (charCode = source.charCodeAt(position), charCode >= 48 && charCode <= 57); position++);\n\n                    if (position == Index) {\n                      // Illegal empty exponent.\n                      abort();\n                    }\n\n                    Index = position;\n                  } // Coerce the parsed value to a JavaScript number.\n\n\n                  return +source.slice(begin, Index);\n                } // A negative sign may only precede numbers.\n\n\n                if (isSigned) {\n                  abort();\n                } // `true`, `false`, and `null` literals.\n\n\n                if (source.slice(Index, Index + 4) == \"true\") {\n                  Index += 4;\n                  return true;\n                } else if (source.slice(Index, Index + 5) == \"false\") {\n                  Index += 5;\n                  return false;\n                } else if (source.slice(Index, Index + 4) == \"null\") {\n                  Index += 4;\n                  return null;\n                } // Unrecognized token.\n\n\n                abort();\n            }\n          } // Return the sentinel `$` character if the parser has reached the end\n          // of the source string.\n\n\n          return \"$\";\n        }; // Internal: Parses a JSON `value` token.\n\n\n        var get = function (value) {\n          var results, hasMembers;\n\n          if (value == \"$\") {\n            // Unexpected end of input.\n            abort();\n          }\n\n          if (typeof value == \"string\") {\n            if ((charIndexBuggy ? value.charAt(0) : value[0]) == \"@\") {\n              // Remove the sentinel `@` character.\n              return value.slice(1);\n            } // Parse object and array literals.\n\n\n            if (value == \"[\") {\n              // Parses a JSON array, returning a new JavaScript array.\n              results = [];\n\n              for (;; hasMembers || (hasMembers = true)) {\n                value = lex(); // A closing square bracket marks the end of the array literal.\n\n                if (value == \"]\") {\n                  break;\n                } // If the array literal contains elements, the current token\n                // should be a comma separating the previous element from the\n                // next.\n\n\n                if (hasMembers) {\n                  if (value == \",\") {\n                    value = lex();\n\n                    if (value == \"]\") {\n                      // Unexpected trailing `,` in array literal.\n                      abort();\n                    }\n                  } else {\n                    // A `,` must separate each array element.\n                    abort();\n                  }\n                } // Elisions and leading commas are not permitted.\n\n\n                if (value == \",\") {\n                  abort();\n                }\n\n                results.push(get(value));\n              }\n\n              return results;\n            } else if (value == \"{\") {\n              // Parses a JSON object, returning a new JavaScript object.\n              results = {};\n\n              for (;; hasMembers || (hasMembers = true)) {\n                value = lex(); // A closing curly brace marks the end of the object literal.\n\n                if (value == \"}\") {\n                  break;\n                } // If the object literal contains members, the current token\n                // should be a comma separator.\n\n\n                if (hasMembers) {\n                  if (value == \",\") {\n                    value = lex();\n\n                    if (value == \"}\") {\n                      // Unexpected trailing `,` in object literal.\n                      abort();\n                    }\n                  } else {\n                    // A `,` must separate each object member.\n                    abort();\n                  }\n                } // Leading commas are not permitted, object property names must be\n                // double-quoted strings, and a `:` must separate each property\n                // name and value.\n\n\n                if (value == \",\" || typeof value != \"string\" || (charIndexBuggy ? value.charAt(0) : value[0]) != \"@\" || lex() != \":\") {\n                  abort();\n                }\n\n                results[value.slice(1)] = get(lex());\n              }\n\n              return results;\n            } // Unexpected token encountered.\n\n\n            abort();\n          }\n\n          return value;\n        }; // Internal: Updates a traversed object member.\n\n\n        var update = function (source, property, callback) {\n          var element = walk(source, property, callback);\n\n          if (element === undef) {\n            delete source[property];\n          } else {\n            source[property] = element;\n          }\n        }; // Internal: Recursively traverses a parsed JSON object, invoking the\n        // `callback` function for each value. This is an implementation of the\n        // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.\n\n\n        var walk = function (source, property, callback) {\n          var value = source[property],\n              length;\n\n          if (typeof value == \"object\" && value) {\n            // `forEach` can't be used to traverse an array in Opera <= 8.54\n            // because its `Object#hasOwnProperty` implementation returns `false`\n            // for array indices (e.g., `![1, 2, 3].hasOwnProperty(\"0\")`).\n            if (getClass.call(value) == arrayClass) {\n              for (length = value.length; length--;) {\n                update(value, length, callback);\n              }\n            } else {\n              forEach(value, function (property) {\n                update(value, property, callback);\n              });\n            }\n          }\n\n          return callback.call(source, property, value);\n        }; // Public: `JSON.parse`. See ES 5.1 section 15.12.2.\n\n\n        exports.parse = function (source, callback) {\n          var result, value;\n          Index = 0;\n          Source = \"\" + source;\n          result = get(lex()); // If a JSON string contains multiple tokens, it is invalid.\n\n          if (lex() != \"$\") {\n            abort();\n          } // Reset the parser state.\n\n\n          Index = Source = null;\n          return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[\"\"] = result, value), \"\", callback) : result;\n        };\n      }\n    }\n\n    exports[\"runInContext\"] = runInContext;\n    return exports;\n  }\n\n  if (freeExports && !isLoader) {\n    // Export for CommonJS environments.\n    runInContext(root, freeExports);\n  } else {\n    // Export for web browsers and JavaScript engines.\n    var nativeJSON = root.JSON,\n        previousJSON = root[\"JSON3\"],\n        isRestored = false;\n    var JSON3 = runInContext(root, root[\"JSON3\"] = {\n      // Public: Restores the original value of the global `JSON` object and\n      // returns a reference to the `JSON3` object.\n      \"noConflict\": function () {\n        if (!isRestored) {\n          isRestored = true;\n          root.JSON = nativeJSON;\n          root[\"JSON3\"] = previousJSON;\n          nativeJSON = previousJSON = null;\n        }\n\n        return JSON3;\n      }\n    });\n    root.JSON = {\n      \"parse\": JSON3.parse,\n      \"stringify\": JSON3.stringify\n    };\n  } // Export for asynchronous module loaders.\n\n\n  if (isLoader) {\n    define(function () {\n      return JSON3;\n    });\n  }\n}).call(this); //##############################################################################\n// Elements.js\n//##############################################################################\n\n(function () {\n  /**\n   * Convenience methods for creating various elements used by PrelaodJS.\n   *\n   * @class DomUtils\n   */\n  var s = {};\n\n  s.a = function () {\n    return s.el(\"a\");\n  };\n\n  s.svg = function () {\n    return s.el(\"svg\");\n  };\n\n  s.object = function () {\n    return s.el(\"object\");\n  };\n\n  s.image = function () {\n    return s.el(\"image\");\n  };\n\n  s.img = function () {\n    return s.el(\"img\");\n  };\n\n  s.style = function () {\n    return s.el(\"style\");\n  };\n\n  s.link = function () {\n    return s.el(\"link\");\n  };\n\n  s.script = function () {\n    return s.el(\"script\");\n  };\n\n  s.audio = function () {\n    return s.el(\"audio\");\n  };\n\n  s.video = function () {\n    return s.el(\"video\");\n  };\n\n  s.text = function (value) {\n    return document.createTextNode(value);\n  };\n\n  s.el = function (name) {\n    return document.createElement(name);\n  };\n\n  createjs.Elements = s;\n})(); //##############################################################################\n// URLUtils.js\n//##############################################################################\n\n\n(function () {\n  /**\n   * Utilities that assist with parsing load items, and determining file types, etc.\n   * @class URLUtils\n   */\n  var s = {};\n  /**\n   * The Regular Expression used to test file URLS for an absolute path.\n   * @property ABSOLUTE_PATH\n   * @type {RegExp}\n   * @static\n   */\n\n  s.ABSOLUTE_PATT = /^(?:\\w+:)?\\/{2}/i;\n  /**\n   * The Regular Expression used to test file URLS for a relative path.\n   * @property RELATIVE_PATH\n   * @type {RegExp}\n   * @static\n   */\n\n  s.RELATIVE_PATT = /^[./]*?\\//i;\n  /**\n   * The Regular Expression used to test file URLS for an extension. Note that URIs must already have the query string\n   * removed.\n   * @property EXTENSION_PATT\n   * @type {RegExp}\n   * @static\n   */\n\n  s.EXTENSION_PATT = /\\/?[^/]+\\.(\\w{1,5})$/i;\n  /**\n   * Parse a file path to determine the information we need to work with it. Currently, PreloadJS needs to know:\n   * <ul>\n   *     <li>If the path is absolute. Absolute paths start with a protocol (such as `http://`, `file://`, or\n   *     `//networkPath`)</li>\n   *     <li>If the path is relative. Relative paths start with `../` or `/path` (or similar)</li>\n   *     <li>The file extension. This is determined by the filename with an extension. Query strings are dropped, and\n   *     the file path is expected to follow the format `name.ext`.</li>\n   * </ul>\n   *\n   * @method parseURI\n   * @param {String} path\n   * @returns {Object} An Object with an `absolute` and `relative` Boolean values,\n   * \tthe pieces of the path (protocol, hostname, port, pathname, search, hash, host)\n   * \tas well as an optional 'extension` property, which is the lowercase extension.\n   *\n   * @static\n   */\n\n  s.parseURI = function (path) {\n    var info = {\n      absolute: false,\n      relative: false,\n      protocol: null,\n      hostname: null,\n      port: null,\n      pathname: null,\n      search: null,\n      hash: null,\n      host: null\n    };\n\n    if (path == null) {\n      return info;\n    } // Inject the path parts.\n\n\n    var parser = createjs.Elements.a();\n    parser.href = path;\n\n    for (var n in info) {\n      if (n in parser) {\n        info[n] = parser[n];\n      }\n    } // Drop the query string\n\n\n    var queryIndex = path.indexOf(\"?\");\n\n    if (queryIndex > -1) {\n      path = path.substr(0, queryIndex);\n    } // Absolute\n\n\n    var match;\n\n    if (s.ABSOLUTE_PATT.test(path)) {\n      info.absolute = true; // Relative\n    } else if (s.RELATIVE_PATT.test(path)) {\n      info.relative = true;\n    } // Extension\n\n\n    if (match = path.match(s.EXTENSION_PATT)) {\n      info.extension = match[1].toLowerCase();\n    }\n\n    return info;\n  };\n  /**\n   * Formats an object into a query string for either a POST or GET request.\n   * @method formatQueryString\n   * @param {Object} data The data to convert to a query string.\n   * @param {Array} [query] Existing name/value pairs to append on to this query.\n   * @static\n   */\n\n\n  s.formatQueryString = function (data, query) {\n    if (data == null) {\n      throw new Error(\"You must specify data.\");\n    }\n\n    var params = [];\n\n    for (var n in data) {\n      params.push(n + \"=\" + escape(data[n]));\n    }\n\n    if (query) {\n      params = params.concat(query);\n    }\n\n    return params.join(\"&\");\n  };\n  /**\n   * A utility method that builds a file path using a source and a data object, and formats it into a new path.\n   * @method buildURI\n   * @param {String} src The source path to add values to.\n   * @param {Object} [data] Object used to append values to this request as a query string. Existing parameters on the\n   * path will be preserved.\n   * @returns {string} A formatted string that contains the path and the supplied parameters.\n   * @static\n   */\n\n\n  s.buildURI = function (src, data) {\n    if (data == null) {\n      return src;\n    }\n\n    var query = [];\n    var idx = src.indexOf(\"?\");\n\n    if (idx != -1) {\n      var q = src.slice(idx + 1);\n      query = query.concat(q.split(\"&\"));\n    }\n\n    if (idx != -1) {\n      return src.slice(0, idx) + \"?\" + this.formatQueryString(data, query);\n    } else {\n      return src + \"?\" + this.formatQueryString(data, query);\n    }\n  };\n  /**\n   * @method isCrossDomain\n   * @param {LoadItem|Object} item A load item with a `src` property.\n   * @return {Boolean} If the load item is loading from a different domain than the current location.\n   * @static\n   */\n\n\n  s.isCrossDomain = function (item) {\n    var target = createjs.Elements.a();\n    target.href = item.src;\n    var host = createjs.Elements.a();\n    host.href = location.href;\n    var crossdomain = target.hostname != \"\" && (target.port != host.port || target.protocol != host.protocol || target.hostname != host.hostname);\n    return crossdomain;\n  };\n  /**\n   * @method isLocal\n   * @param {LoadItem|Object} item A load item with a `src` property\n   * @return {Boolean} If the load item is loading from the \"file:\" protocol. Assume that the host must be local as\n   * well.\n   * @static\n   */\n\n\n  s.isLocal = function (item) {\n    var target = createjs.Elements.a();\n    target.href = item.src;\n    return target.hostname == \"\" && target.protocol == \"file:\";\n  };\n\n  createjs.URLUtils = s;\n})(); //##############################################################################\n// DomUtils.js\n//##############################################################################\n\n\n(function () {\n  /**\n   * A few utilities for interacting with the dom.\n   * @class DomUtils\n   */\n  var s = {\n    container: null\n  };\n\n  s.appendToHead = function (el) {\n    s.getHead().appendChild(el);\n  };\n\n  s.appendToBody = function (el) {\n    if (s.container == null) {\n      s.container = document.createElement(\"div\");\n      s.container.id = \"preloadjs-container\";\n      var style = s.container.style;\n      style.visibility = \"hidden\";\n      style.position = \"absolute\";\n      style.width = s.container.style.height = \"10px\";\n      style.overflow = \"hidden\";\n      style.transform = style.msTransform = style.webkitTransform = style.oTransform = \"translate(-10px, -10px)\"; //LM: Not working\n\n      s.getBody().appendChild(s.container);\n    }\n\n    s.container.appendChild(el);\n  };\n\n  s.getHead = function () {\n    return document.head || document.getElementsByTagName(\"head\")[0];\n  };\n\n  s.getBody = function () {\n    return document.body || document.getElementsByTagName(\"body\")[0];\n  };\n\n  s.removeChild = function (el) {\n    if (el.parent) {\n      el.parent.removeChild(el);\n    }\n  };\n  /**\n   * Check if item is a valid HTMLImageElement\n   * @method isImageTag\n   * @param {Object} item\n   * @returns {Boolean}\n   * @static\n   */\n\n\n  s.isImageTag = function (item) {\n    return item instanceof HTMLImageElement;\n  };\n  /**\n   * Check if item is a valid HTMLAudioElement\n   * @method isAudioTag\n   * @param {Object} item\n   * @returns {Boolean}\n   * @static\n   */\n\n\n  s.isAudioTag = function (item) {\n    if (window.HTMLAudioElement) {\n      return item instanceof HTMLAudioElement;\n    } else {\n      return false;\n    }\n  };\n  /**\n   * Check if item is a valid HTMLVideoElement\n   * @method isVideoTag\n   * @param {Object} item\n   * @returns {Boolean}\n   * @static\n   */\n\n\n  s.isVideoTag = function (item) {\n    if (window.HTMLVideoElement) {\n      return item instanceof HTMLVideoElement;\n    } else {\n      return false;\n    }\n  };\n\n  createjs.DomUtils = s;\n})(); //##############################################################################\n// DataUtils.js\n//##############################################################################\n\n\n(function () {\n  /**\n   * A few data utilities for formatting different data types.\n   * @class DataUtils\n   */\n  var s = {}; // static methods\n\n  /**\n   * Parse XML using the DOM. This is required when preloading XML or SVG.\n   * @method parseXML\n   * @param {String} text The raw text or XML that is loaded by XHR.\n   * @return {XML} An XML document\n   * @static\n   */\n\n  s.parseXML = function (text) {\n    var xml = null; // CocoonJS does not support XML parsing with either method.\n    // Most browsers will use DOMParser\n    // IE fails on certain SVG files, so we have a fallback below.\n\n    try {\n      if (window.DOMParser) {\n        var parser = new DOMParser();\n        xml = parser.parseFromString(text, \"text/xml\");\n      }\n    } catch (e) {} // Fallback for IE support.\n\n\n    if (!xml) {\n      try {\n        xml = new ActiveXObject(\"Microsoft.XMLDOM\");\n        xml.async = false;\n        xml.loadXML(text);\n      } catch (e) {\n        xml = null;\n      }\n    }\n\n    return xml;\n  };\n  /**\n   * Parse a string into an Object.\n   * @method parseJSON\n   * @param {String} value The loaded JSON string\n   * @returns {Object} A JavaScript object.\n   */\n\n\n  s.parseJSON = function (value) {\n    if (value == null) {\n      return null;\n    }\n\n    try {\n      return JSON.parse(value);\n    } catch (e) {\n      // TODO; Handle this with a custom error?\n      throw e;\n    }\n  };\n\n  createjs.DataUtils = s;\n})(); //##############################################################################\n// Types.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  var s = {};\n  /**\n   * The preload type for generic binary types. Note that images are loaded as binary files when using XHR.\n   * @property BINARY\n   * @type {String}\n   * @default binary\n   * @static\n   * @since 0.6.0\n   */\n\n  s.BINARY = \"binary\";\n  /**\n   * The preload type for css files. CSS files are loaded using a &lt;link&gt; when loaded with XHR, or a\n   * &lt;style&gt; tag when loaded with tags.\n   * @property CSS\n   * @type {String}\n   * @default css\n   * @static\n   * @since 0.6.0\n   */\n\n  s.CSS = \"css\";\n  /**\n   * The preload type for font files.\n   * @property FONT\n   * @type {String}\n   * @default font\n   * @static\n   * @since 0.9.0\n   */\n\n  s.FONT = \"font\";\n  /**\n   * The preload type for fonts specified with CSS (such as Google fonts)\n   * @property FONTCSS\n   * @type {String}\n   * @default fontcss\n   * @static\n   * @since 0.9.0\n   */\n\n  s.FONTCSS = \"fontcss\";\n  /**\n   * The preload type for image files, usually png, gif, or jpg/jpeg. Images are loaded into an &lt;image&gt; tag.\n   * @property IMAGE\n   * @type {String}\n   * @default image\n   * @static\n   * @since 0.6.0\n   */\n\n  s.IMAGE = \"image\";\n  /**\n   * The preload type for javascript files, usually with the \"js\" file extension. JavaScript files are loaded into a\n   * &lt;script&gt; tag.\n   *\n   * Since version 0.4.1+, due to how tag-loaded scripts work, all JavaScript files are automatically injected into\n   * the body of the document to maintain parity between XHR and tag-loaded scripts. In version 0.4.0 and earlier,\n   * only tag-loaded scripts are injected.\n   * @property JAVASCRIPT\n   * @type {String}\n   * @default javascript\n   * @static\n   * @since 0.6.0\n   */\n\n  s.JAVASCRIPT = \"javascript\";\n  /**\n   * The preload type for json files, usually with the \"json\" file extension. JSON data is loaded and parsed into a\n   * JavaScript object. Note that if a `callback` is present on the load item, the file will be loaded with JSONP,\n   * no matter what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}} property is set to, and the JSON\n   * must contain a matching wrapper function.\n   * @property JSON\n   * @type {String}\n   * @default json\n   * @static\n   * @since 0.6.0\n   */\n\n  s.JSON = \"json\";\n  /**\n   * The preload type for jsonp files, usually with the \"json\" file extension. JSON data is loaded and parsed into a\n   * JavaScript object. You are required to pass a callback parameter that matches the function wrapper in the JSON.\n   * Note that JSONP will always be used if there is a callback present, no matter what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}}\n   * property is set to.\n   * @property JSONP\n   * @type {String}\n   * @default jsonp\n   * @static\n   * @since 0.6.0\n   */\n\n  s.JSONP = \"jsonp\";\n  /**\n   * The preload type for json-based manifest files, usually with the \"json\" file extension. The JSON data is loaded\n   * and parsed into a JavaScript object. PreloadJS will then look for a \"manifest\" property in the JSON, which is an\n   * Array of files to load, following the same format as the {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}\n   * method. If a \"callback\" is specified on the manifest object, then it will be loaded using JSONP instead,\n   * regardless of what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}} property is set to.\n   * @property MANIFEST\n   * @type {String}\n   * @default manifest\n   * @static\n   * @since 0.6.0\n   */\n\n  s.MANIFEST = \"manifest\";\n  /**\n   * The preload type for sound files, usually mp3, ogg, or wav. When loading via tags, audio is loaded into an\n   * &lt;audio&gt; tag.\n   * @property SOUND\n   * @type {String}\n   * @default sound\n   * @static\n   * @since 0.6.0\n   */\n\n  s.SOUND = \"sound\";\n  /**\n   * The preload type for video files, usually mp4, ts, or ogg. When loading via tags, video is loaded into an\n   * &lt;video&gt; tag.\n   * @property VIDEO\n   * @type {String}\n   * @default video\n   * @static\n   * @since 0.6.0\n   */\n\n  s.VIDEO = \"video\";\n  /**\n   * The preload type for SpriteSheet files. SpriteSheet files are JSON files that contain string image paths.\n   * @property SPRITESHEET\n   * @type {String}\n   * @default spritesheet\n   * @static\n   * @since 0.6.0\n   */\n\n  s.SPRITESHEET = \"spritesheet\";\n  /**\n   * The preload type for SVG files.\n   * @property SVG\n   * @type {String}\n   * @default svg\n   * @static\n   * @since 0.6.0\n   */\n\n  s.SVG = \"svg\";\n  /**\n   * The preload type for text files, which is also the default file type if the type can not be determined. Text is\n   * loaded as raw text.\n   * @property TEXT\n   * @type {String}\n   * @default text\n   * @static\n   * @since 0.6.0\n   */\n\n  s.TEXT = \"text\";\n  /**\n   * The preload type for xml files. XML is loaded into an XML document.\n   * @property XML\n   * @type {String}\n   * @default xml\n   * @static\n   * @since 0.6.0\n   */\n\n  s.XML = \"xml\";\n  createjs.Types = s;\n})(); //##############################################################################\n// Methods.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  var s = {};\n  /**\n   * Defines a POST request, use for a method value when loading data.\n   * @property POST\n   * @type {string}\n   * @default post\n   * @static\n   */\n\n  s.POST = \"POST\";\n  /**\n   * Defines a GET request, use for a method value when loading data.\n   * @property GET\n   * @type {string}\n   * @default get\n   * @static\n   */\n\n  s.GET = \"GET\";\n  createjs.Methods = s;\n})(); //##############################################################################\n// LoadItem.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n  /**\n   * All loaders accept an item containing the properties defined in this class. If a raw object is passed instead,\n   * it will not be affected, but it must contain at least a {{#crossLink \"src:property\"}}{{/crossLink}} property. A\n   * string path or HTML tag is also acceptable, but it will be automatically converted to a LoadItem using the\n   * {{#crossLink \"create\"}}{{/crossLink}} method by {{#crossLink \"AbstractLoader\"}}{{/crossLink}}\n   * @class LoadItem\n   * @constructor\n   * @since 0.6.0\n   */\n\n  function LoadItem() {\n    /**\n     * The source of the file that is being loaded. This property is <b>required</b>. The source can either be a\n     * string (recommended), or an HTML tag.\n     * This can also be an object, but in that case it has to include a type and be handled by a plugin.\n     * @property src\n     * @type {String}\n     * @default null\n     */\n    this.src = null;\n    /**\n     * The type file that is being loaded. The type of the file is usually inferred by the extension, but can also\n     * be set manually. This is helpful in cases where a file does not have an extension.\n     * @property type\n     * @type {String}\n     * @default null\n     */\n\n    this.type = null;\n    /**\n     * A string identifier which can be used to reference the loaded object. If none is provided, this will be\n     * automatically set to the {{#crossLink \"src:property\"}}{{/crossLink}}.\n     * @property id\n     * @type {String}\n     * @default null\n     */\n\n    this.id = null;\n    /**\n     * Determines if a manifest will maintain the order of this item, in relation to other items in the manifest\n     * that have also set the `maintainOrder` property to `true`. This only applies when the max connections has\n     * been set above 1 (using {{#crossLink \"LoadQueue/setMaxConnections\"}}{{/crossLink}}). Everything with this\n     * property set to `false` will finish as it is loaded. Ordered items are combined with script tags loading in\n     * order when {{#crossLink \"LoadQueue/maintainScriptOrder:property\"}}{{/crossLink}} is set to `true`.\n     * @property maintainOrder\n     * @type {Boolean}\n     * @default false\n     */\n\n    this.maintainOrder = false;\n    /**\n     * A callback used by JSONP requests that defines what global method to call when the JSONP content is loaded.\n     * @property callback\n     * @type {String}\n     * @default null\n     */\n\n    this.callback = null;\n    /**\n     * An arbitrary data object, which is included with the loaded object.\n     * @property data\n     * @type {Object}\n     * @default null\n     */\n\n    this.data = null;\n    /**\n     * The request method used for HTTP calls. Both {{#crossLink \"Methods/GET:property\"}}{{/crossLink}} or\n     * {{#crossLink \"Methods/POST:property\"}}{{/crossLink}} request types are supported, and are defined as\n     * constants on {{#crossLink \"AbstractLoader\"}}{{/crossLink}}.\n     * @property method\n     * @type {String}\n     * @default GET\n     */\n\n    this.method = createjs.Methods.GET;\n    /**\n     * An object hash of name/value pairs to send to the server.\n     * @property values\n     * @type {Object}\n     * @default null\n     */\n\n    this.values = null;\n    /**\n     * An object hash of headers to attach to an XHR request. PreloadJS will automatically attach some default\n     * headers when required, including \"Origin\", \"Content-Type\", and \"X-Requested-With\". You may override the\n     * default headers by including them in your headers object.\n     * @property headers\n     * @type {Object}\n     * @default null\n     */\n\n    this.headers = null;\n    /**\n     * Enable credentials for XHR requests.\n     * @property withCredentials\n     * @type {Boolean}\n     * @default false\n     */\n\n    this.withCredentials = false;\n    /**\n     * Set the mime type of XHR-based requests. This is automatically set to \"text/plain; charset=utf-8\" for text\n     * based files (json, xml, text, css, js).\n     * @property mimeType\n     * @type {String}\n     * @default null\n     */\n\n    this.mimeType = null;\n    /**\n     * Sets the crossOrigin attribute for CORS-enabled images loading cross-domain.\n     * @property crossOrigin\n     * @type {boolean}\n     * @default Anonymous\n     */\n\n    this.crossOrigin = null;\n    /**\n     * The duration in milliseconds to wait before a request times out. This only applies to tag-based and and XHR\n     * (level one) loading, as XHR (level 2) provides its own timeout event.\n     * @property loadTimeout\n     * @type {Number}\n     * @default 8000 (8 seconds)\n     */\n\n    this.loadTimeout = s.LOAD_TIMEOUT_DEFAULT;\n  }\n\n  ;\n  var p = LoadItem.prototype = {};\n  var s = LoadItem;\n  /**\n   * Default duration in milliseconds to wait before a request times out. This only applies to tag-based and and XHR\n   * (level one) loading, as XHR (level 2) provides its own timeout event.\n   * @property LOAD_TIMEOUT_DEFAULT\n   * @type {number}\n   * @static\n   */\n\n  s.LOAD_TIMEOUT_DEFAULT = 8000;\n  /**\n   * Create a LoadItem.\n   * <ul>\n   *     <li>String-based items are converted to a LoadItem with a populated {{#crossLink \"src:property\"}}{{/crossLink}}.</li>\n   *     <li>LoadItem instances are returned as-is</li>\n   *     <li>Objects are returned with any needed properties added</li>\n   * </ul>\n   * @method create\n   * @param {LoadItem|String|Object} value The load item value\n   * @returns {LoadItem|Object}\n   * @static\n   */\n\n  s.create = function (value) {\n    if (typeof value == \"string\") {\n      var item = new LoadItem();\n      item.src = value;\n      return item;\n    } else if (value instanceof s) {\n      return value;\n    } else if (value instanceof Object && value.src) {\n      if (value.loadTimeout == null) {\n        value.loadTimeout = s.LOAD_TIMEOUT_DEFAULT;\n      }\n\n      return value;\n    } else {\n      throw new Error(\"Type not recognized.\");\n    }\n  };\n  /**\n   * Provides a chainable shortcut method for setting a number of properties on the instance.\n   *\n   * <h4>Example</h4>\n   *\n   *      var loadItem = new createjs.LoadItem().set({src:\"image.png\", maintainOrder:true});\n   *\n   * @method set\n   * @param {Object} props A generic object containing properties to copy to the LoadItem instance.\n   * @return {LoadItem} Returns the instance the method is called on (useful for chaining calls.)\n  */\n\n\n  p.set = function (props) {\n    for (var n in props) {\n      this[n] = props[n];\n    }\n\n    return this;\n  };\n\n  createjs.LoadItem = s;\n})(); //##############################################################################\n// RequestUtils.js\n//##############################################################################\n\n\n(function () {\n  /**\n   * Utilities that assist with parsing load items, and determining file types, etc.\n   * @class RequestUtils\n   */\n  var s = {};\n  /**\n   * Determine if a specific type should be loaded as a binary file. Currently, only images and items marked\n   * specifically as \"binary\" are loaded as binary. Note that audio is <b>not</b> a binary type, as we can not play\n   * back using an audio tag if it is loaded as binary. Plugins can change the item type to binary to ensure they get\n   * a binary result to work with. Binary files are loaded using XHR2. Types are defined as static constants on\n   * {{#crossLink \"AbstractLoader\"}}{{/crossLink}}.\n   * @method isBinary\n   * @param {String} type The item type.\n   * @return {Boolean} If the specified type is binary.\n   * @static\n   */\n\n  s.isBinary = function (type) {\n    switch (type) {\n      case createjs.Types.IMAGE:\n      case createjs.Types.BINARY:\n        return true;\n\n      default:\n        return false;\n    }\n  };\n  /**\n   * Determine if a specific type is a text-based asset, and should be loaded as UTF-8.\n   * @method isText\n   * @param {String} type The item type.\n   * @return {Boolean} If the specified type is text.\n   * @static\n   */\n\n\n  s.isText = function (type) {\n    switch (type) {\n      case createjs.Types.TEXT:\n      case createjs.Types.JSON:\n      case createjs.Types.MANIFEST:\n      case createjs.Types.XML:\n      case createjs.Types.CSS:\n      case createjs.Types.SVG:\n      case createjs.Types.JAVASCRIPT:\n      case createjs.Types.SPRITESHEET:\n        return true;\n\n      default:\n        return false;\n    }\n  };\n  /**\n   * Determine the type of the object using common extensions. Note that the type can be passed in with the load item\n   * if it is an unusual extension.\n   * @method getTypeByExtension\n   * @param {String} extension The file extension to use to determine the load type.\n   * @return {String} The determined load type (for example, `createjs.Types.IMAGE`). Will return `null` if\n   * the type can not be determined by the extension.\n   * @static\n   */\n\n\n  s.getTypeByExtension = function (extension) {\n    if (extension == null) {\n      return createjs.Types.TEXT;\n    }\n\n    switch (extension.toLowerCase()) {\n      case \"jpeg\":\n      case \"jpg\":\n      case \"gif\":\n      case \"png\":\n      case \"webp\":\n      case \"bmp\":\n        return createjs.Types.IMAGE;\n\n      case \"ogg\":\n      case \"mp3\":\n      case \"webm\":\n        return createjs.Types.SOUND;\n\n      case \"mp4\":\n      case \"webm\":\n      case \"ts\":\n        return createjs.Types.VIDEO;\n\n      case \"json\":\n        return createjs.Types.JSON;\n\n      case \"xml\":\n        return createjs.Types.XML;\n\n      case \"css\":\n        return createjs.Types.CSS;\n\n      case \"js\":\n        return createjs.Types.JAVASCRIPT;\n\n      case 'svg':\n        return createjs.Types.SVG;\n\n      default:\n        return createjs.Types.TEXT;\n    }\n  };\n\n  createjs.RequestUtils = s;\n})(); //##############################################################################\n// AbstractLoader.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor\n\n  /**\n   * The base loader, which defines all the generic methods, properties, and events. All loaders extend this class,\n   * including the {{#crossLink \"LoadQueue\"}}{{/crossLink}}.\n   * @class AbstractLoader\n   * @param {LoadItem|object|string} loadItem The item to be loaded.\n   * @param {Boolean} [preferXHR] Determines if the LoadItem should <em>try</em> and load using XHR, or take a\n   * tag-based approach, which can be better in cross-domain situations. Not all loaders can load using one or the\n   * other, so this is a suggested directive.\n   * @param {String} [type] The type of loader. Loader types are defined as constants on the AbstractLoader class,\n   * such as {{#crossLink \"IMAGE:property\"}}{{/crossLink}}, {{#crossLink \"CSS:property\"}}{{/crossLink}}, etc.\n   * @extends EventDispatcher\n   */\n\n  function AbstractLoader(loadItem, preferXHR, type) {\n    this.EventDispatcher_constructor(); // public properties\n\n    /**\n     * If the loader has completed loading. This provides a quick check, but also ensures that the different approaches\n     * used for loading do not pile up resulting in more than one `complete` {{#crossLink \"Event\"}}{{/crossLink}}.\n     * @property loaded\n     * @type {Boolean}\n     * @default false\n     */\n\n    this.loaded = false;\n    /**\n     * Determine if the loader was canceled. Canceled loads will not fire complete events. Note that this property\n     * is readonly, so {{#crossLink \"LoadQueue\"}}{{/crossLink}} queues should be closed using {{#crossLink \"LoadQueue/close\"}}{{/crossLink}}\n     * instead.\n     * @property canceled\n     * @type {Boolean}\n     * @default false\n     * @readonly\n     */\n\n    this.canceled = false;\n    /**\n     * The current load progress (percentage) for this item. This will be a number between 0 and 1.\n     *\n     * <h4>Example</h4>\n     *\n     *     var queue = new createjs.LoadQueue();\n     *     queue.loadFile(\"largeImage.png\");\n     *     queue.on(\"progress\", function() {\n     *         console.log(\"Progress:\", queue.progress, event.progress);\n     *     });\n     *\n     * @property progress\n     * @type {Number}\n     * @default 0\n     */\n\n    this.progress = 0;\n    /**\n     * The type of item this loader will load. See {{#crossLink \"AbstractLoader\"}}{{/crossLink}} for a full list of\n     * supported types.\n     * @property type\n     * @type {String}\n     */\n\n    this.type = type;\n    /**\n     * A formatter function that converts the loaded raw result into the final result. For example, the JSONLoader\n     * converts a string of text into a JavaScript object. Not all loaders have a resultFormatter, and this property\n     * can be overridden to provide custom formatting.\n     *\n     * Optionally, a resultFormatter can return a callback function in cases where the formatting needs to be\n     * asynchronous, such as creating a new image. The callback function is passed 2 parameters, which are callbacks\n     * to handle success and error conditions in the resultFormatter. Note that the resultFormatter method is\n     * called in the current scope, as well as the success and error callbacks.\n     *\n     * <h4>Example asynchronous resultFormatter</h4>\n     *\n     * \tfunction _formatResult(loader) {\n     * \t\treturn function(success, error) {\n     * \t\t\tif (errorCondition) { error(errorDetailEvent); }\n     * \t\t\tsuccess(result);\n     * \t\t}\n     * \t}\n     * @property resultFormatter\n     * @type {Function}\n     * @default null\n     */\n\n    this.resultFormatter = null; // protected properties\n\n    /**\n     * The {{#crossLink \"LoadItem\"}}{{/crossLink}} this loader represents. Note that this is null in a {{#crossLink \"LoadQueue\"}}{{/crossLink}},\n     * but will be available on loaders such as {{#crossLink \"XMLLoader\"}}{{/crossLink}} and {{#crossLink \"ImageLoader\"}}{{/crossLink}}.\n     * @property _item\n     * @type {LoadItem|Object}\n     * @private\n     */\n\n    if (loadItem) {\n      this._item = createjs.LoadItem.create(loadItem);\n    } else {\n      this._item = null;\n    }\n    /**\n     * Whether the loader will try and load content using XHR (true) or HTML tags (false).\n     * @property _preferXHR\n     * @type {Boolean}\n     * @private\n     */\n\n\n    this._preferXHR = preferXHR;\n    /**\n     * The loaded result after it is formatted by an optional {{#crossLink \"resultFormatter\"}}{{/crossLink}}. For\n     * items that are not formatted, this will be the same as the {{#crossLink \"_rawResult:property\"}}{{/crossLink}}.\n     * The result is accessed using the {{#crossLink \"getResult\"}}{{/crossLink}} method.\n     * @property _result\n     * @type {Object|String}\n     * @private\n     */\n\n    this._result = null;\n    /**\n     * The loaded result before it is formatted. The rawResult is accessed using the {{#crossLink \"getResult\"}}{{/crossLink}}\n     * method, and passing `true`.\n     * @property _rawResult\n     * @type {Object|String}\n     * @private\n     */\n\n    this._rawResult = null;\n    /**\n     * A list of items that loaders load behind the scenes. This does not include the main item the loader is\n     * responsible for loading. Examples of loaders that have sub-items include the {{#crossLink \"SpriteSheetLoader\"}}{{/crossLink}} and\n     * {{#crossLink \"ManifestLoader\"}}{{/crossLink}}.\n     * @property _loadItems\n     * @type {null}\n     * @protected\n     */\n\n    this._loadedItems = null;\n    /**\n     * The attribute the items loaded using tags use for the source.\n     * @type {string}\n     * @default null\n     * @private\n     */\n\n    this._tagSrcAttribute = null;\n    /**\n     * An HTML tag (or similar) that a loader may use to load HTML content, such as images, scripts, etc.\n     * @property _tag\n     * @type {Object}\n     * @private\n     */\n\n    this._tag = null;\n  }\n\n  ;\n  var p = createjs.extend(AbstractLoader, createjs.EventDispatcher);\n  var s = AbstractLoader; // Remove these @deprecated properties after 1.0\n\n  try {\n    Object.defineProperties(s, {\n      POST: {\n        get: createjs.deprecate(function () {\n          return createjs.Methods.POST;\n        }, \"AbstractLoader.POST\")\n      },\n      GET: {\n        get: createjs.deprecate(function () {\n          return createjs.Methods.GET;\n        }, \"AbstractLoader.GET\")\n      },\n      BINARY: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.BINARY;\n        }, \"AbstractLoader.BINARY\")\n      },\n      CSS: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.CSS;\n        }, \"AbstractLoader.CSS\")\n      },\n      FONT: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.FONT;\n        }, \"AbstractLoader.FONT\")\n      },\n      FONTCSS: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.FONTCSS;\n        }, \"AbstractLoader.FONTCSS\")\n      },\n      IMAGE: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.IMAGE;\n        }, \"AbstractLoader.IMAGE\")\n      },\n      JAVASCRIPT: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.JAVASCRIPT;\n        }, \"AbstractLoader.JAVASCRIPT\")\n      },\n      JSON: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.JSON;\n        }, \"AbstractLoader.JSON\")\n      },\n      JSONP: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.JSONP;\n        }, \"AbstractLoader.JSONP\")\n      },\n      MANIFEST: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.MANIFEST;\n        }, \"AbstractLoader.MANIFEST\")\n      },\n      SOUND: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.SOUND;\n        }, \"AbstractLoader.SOUND\")\n      },\n      VIDEO: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.VIDEO;\n        }, \"AbstractLoader.VIDEO\")\n      },\n      SPRITESHEET: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.SPRITESHEET;\n        }, \"AbstractLoader.SPRITESHEET\")\n      },\n      SVG: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.SVG;\n        }, \"AbstractLoader.SVG\")\n      },\n      TEXT: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.TEXT;\n        }, \"AbstractLoader.TEXT\")\n      },\n      XML: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.XML;\n        }, \"AbstractLoader.XML\")\n      }\n    });\n  } catch (e) {} // Events\n\n  /**\n   * The {{#crossLink \"ProgressEvent\"}}{{/crossLink}} that is fired when the overall progress changes. Prior to\n   * version 0.6.0, this was just a regular {{#crossLink \"Event\"}}{{/crossLink}}.\n   * @event progress\n   * @since 0.3.0\n   */\n\n  /**\n   * The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when a load starts.\n   * @event loadstart\n   * @param {Object} target The object that dispatched the event.\n   * @param {String} type The event type.\n   * @since 0.3.1\n   */\n\n  /**\n   * The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when the entire queue has been loaded.\n   * @event complete\n   * @param {Object} target The object that dispatched the event.\n   * @param {String} type The event type.\n   * @since 0.3.0\n   */\n\n  /**\n   * The {{#crossLink \"ErrorEvent\"}}{{/crossLink}} that is fired when the loader encounters an error. If the error was\n   * encountered by a file, the event will contain the item that caused the error. Prior to version 0.6.0, this was\n   * just a regular {{#crossLink \"Event\"}}{{/crossLink}}.\n   * @event error\n   * @since 0.3.0\n   */\n\n  /**\n   * The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when the loader encounters an internal file load error.\n   * This enables loaders to maintain internal queues, and surface file load errors.\n   * @event fileerror\n   * @param {Object} target The object that dispatched the event.\n   * @param {String} type The event type (\"fileerror\")\n   * @param {LoadItem|object} The item that encountered the error\n   * @since 0.6.0\n   */\n\n  /**\n   * The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when a loader internally loads a file. This enables\n   * loaders such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}} to maintain internal {{#crossLink \"LoadQueue\"}}{{/crossLink}}s\n   * and notify when they have loaded a file. The {{#crossLink \"LoadQueue\"}}{{/crossLink}} class dispatches a\n   * slightly different {{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}} event.\n   * @event fileload\n   * @param {Object} target The object that dispatched the event.\n   * @param {String} type The event type (\"fileload\")\n   * @param {Object} item The file item which was specified in the {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}}\n   * or {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}} call. If only a string path or tag was specified, the\n   * object will contain that value as a `src` property.\n   * @param {Object} result The HTML tag or parsed result of the loaded item.\n   * @param {Object} rawResult The unprocessed result, usually the raw text or binary data before it is converted\n   * to a usable object.\n   * @since 0.6.0\n   */\n\n  /**\n   * The {{#crossLink \"Event\"}}{{/crossLink}} that is fired after the internal request is created, but before a load.\n   * This allows updates to the loader for specific loading needs, such as binary or XHR image loading.\n   * @event initialize\n   * @param {Object} target The object that dispatched the event.\n   * @param {String} type The event type (\"initialize\")\n   * @param {AbstractLoader} loader The loader that has been initialized.\n   */\n\n  /**\n   * Get a reference to the manifest item that is loaded by this loader. In some cases this will be the value that was\n   * passed into {{#crossLink \"LoadQueue\"}}{{/crossLink}} using {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}} or\n   * {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}. However if only a String path was passed in, then it will\n   * be a {{#crossLink \"LoadItem\"}}{{/crossLink}}.\n   * @method getItem\n   * @return {Object} The manifest item that this loader is responsible for loading.\n   * @since 0.6.0\n   */\n\n\n  p.getItem = function () {\n    return this._item;\n  };\n  /**\n   * Get a reference to the content that was loaded by the loader (only available after the {{#crossLink \"complete:event\"}}{{/crossLink}}\n   * event is dispatched.\n   * @method getResult\n   * @param {Boolean} [raw=false] Determines if the returned result will be the formatted content, or the raw loaded\n   * data (if it exists).\n   * @return {Object}\n   * @since 0.6.0\n   */\n\n\n  p.getResult = function (raw) {\n    return raw ? this._rawResult : this._result;\n  };\n  /**\n   * Return the `tag` this object creates or uses for loading.\n   * @method getTag\n   * @return {Object} The tag instance\n   * @since 0.6.0\n   */\n\n\n  p.getTag = function () {\n    return this._tag;\n  };\n  /**\n   * Set the `tag` this item uses for loading.\n   * @method setTag\n   * @param {Object} tag The tag instance\n   * @since 0.6.0\n   */\n\n\n  p.setTag = function (tag) {\n    this._tag = tag;\n  };\n  /**\n   * Begin loading the item. This method is required when using a loader by itself.\n   *\n   * <h4>Example</h4>\n   *\n   *      var queue = new createjs.LoadQueue();\n   *      queue.on(\"complete\", handleComplete);\n   *      queue.loadManifest(fileArray, false); // Note the 2nd argument that tells the queue not to start loading yet\n   *      queue.load();\n   *\n   * @method load\n   */\n\n\n  p.load = function () {\n    this._createRequest();\n\n    this._request.on(\"complete\", this, this);\n\n    this._request.on(\"progress\", this, this);\n\n    this._request.on(\"loadStart\", this, this);\n\n    this._request.on(\"abort\", this, this);\n\n    this._request.on(\"timeout\", this, this);\n\n    this._request.on(\"error\", this, this);\n\n    var evt = new createjs.Event(\"initialize\");\n    evt.loader = this._request;\n    this.dispatchEvent(evt);\n\n    this._request.load();\n  };\n  /**\n   * Close the the item. This will stop any open requests (although downloads using HTML tags may still continue in\n   * the background), but events will not longer be dispatched.\n   * @method cancel\n   */\n\n\n  p.cancel = function () {\n    this.canceled = true;\n    this.destroy();\n  };\n  /**\n   * Clean up the loader.\n   * @method destroy\n   */\n\n\n  p.destroy = function () {\n    if (this._request) {\n      this._request.removeAllEventListeners();\n\n      this._request.destroy();\n    }\n\n    this._request = null;\n    this._item = null;\n    this._rawResult = null;\n    this._result = null;\n    this._loadItems = null;\n    this.removeAllEventListeners();\n  };\n  /**\n   * Get any items loaded internally by the loader. The enables loaders such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}}\n   * to expose items it loads internally.\n   * @method getLoadedItems\n   * @return {Array} A list of the items loaded by the loader.\n   * @since 0.6.0\n   */\n\n\n  p.getLoadedItems = function () {\n    return this._loadedItems;\n  }; // Private methods\n\n  /**\n   * Create an internal request used for loading. By default, an {{#crossLink \"XHRRequest\"}}{{/crossLink}} or\n   * {{#crossLink \"TagRequest\"}}{{/crossLink}} is created, depending on the value of {{#crossLink \"preferXHR:property\"}}{{/crossLink}}.\n   * Other loaders may override this to use different request types, such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}},\n   * which uses {{#crossLink \"JSONLoader\"}}{{/crossLink}} or {{#crossLink \"JSONPLoader\"}}{{/crossLink}} under the hood.\n   * @method _createRequest\n   * @protected\n   */\n\n\n  p._createRequest = function () {\n    if (!this._preferXHR) {\n      this._request = new createjs.TagRequest(this._item, this._tag || this._createTag(), this._tagSrcAttribute);\n    } else {\n      this._request = new createjs.XHRRequest(this._item);\n    }\n  };\n  /**\n   * Create the HTML tag used for loading. This method does nothing by default, and needs to be implemented\n   * by loaders that require tag loading.\n   * @method _createTag\n   * @param {String} src The tag source\n   * @return {HTMLElement} The tag that was created\n   * @protected\n   */\n\n\n  p._createTag = function (src) {\n    return null;\n  };\n  /**\n   * Dispatch a loadstart {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"AbstractLoader/loadstart:event\"}}{{/crossLink}}\n   * event for details on the event payload.\n   * @method _sendLoadStart\n   * @protected\n   */\n\n\n  p._sendLoadStart = function () {\n    if (this._isCanceled()) {\n      return;\n    }\n\n    this.dispatchEvent(\"loadstart\");\n  };\n  /**\n   * Dispatch a {{#crossLink \"ProgressEvent\"}}{{/crossLink}}.\n   * @method _sendProgress\n   * @param {Number | Object} value The progress of the loaded item, or an object containing <code>loaded</code>\n   * and <code>total</code> properties.\n   * @protected\n   */\n\n\n  p._sendProgress = function (value) {\n    if (this._isCanceled()) {\n      return;\n    }\n\n    var event = null;\n\n    if (typeof value == \"number\") {\n      this.progress = value;\n      event = new createjs.ProgressEvent(this.progress);\n    } else {\n      event = value;\n      this.progress = value.loaded / value.total;\n      event.progress = this.progress;\n\n      if (isNaN(this.progress) || this.progress == Infinity) {\n        this.progress = 0;\n      }\n    }\n\n    this.hasEventListener(\"progress\") && this.dispatchEvent(event);\n  };\n  /**\n   * Dispatch a complete {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"AbstractLoader/complete:event\"}}{{/crossLink}} event\n   * @method _sendComplete\n   * @protected\n   */\n\n\n  p._sendComplete = function () {\n    if (this._isCanceled()) {\n      return;\n    }\n\n    this.loaded = true;\n    var event = new createjs.Event(\"complete\");\n    event.rawResult = this._rawResult;\n\n    if (this._result != null) {\n      event.result = this._result;\n    }\n\n    this.dispatchEvent(event);\n  };\n  /**\n   * Dispatch an error {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"AbstractLoader/error:event\"}}{{/crossLink}}\n   * event for details on the event payload.\n   * @method _sendError\n   * @param {ErrorEvent} event The event object containing specific error properties.\n   * @protected\n   */\n\n\n  p._sendError = function (event) {\n    if (this._isCanceled() || !this.hasEventListener(\"error\")) {\n      return;\n    }\n\n    if (event == null) {\n      event = new createjs.ErrorEvent(\"PRELOAD_ERROR_EMPTY\"); // TODO: Populate error\n    }\n\n    this.dispatchEvent(event);\n  };\n  /**\n   * Determine if the load has been canceled. This is important to ensure that method calls or asynchronous events\n   * do not cause issues after the queue has been cleaned up.\n   * @method _isCanceled\n   * @return {Boolean} If the loader has been canceled.\n   * @protected\n   */\n\n\n  p._isCanceled = function () {\n    if (window.createjs == null || this.canceled) {\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * A custom result formatter function, which is called just before a request dispatches its complete event. Most\n   * loader types already have an internal formatter, but this can be user-overridden for custom formatting. The\n   * formatted result will be available on Loaders using {{#crossLink \"getResult\"}}{{/crossLink}}, and passing `true`.\n   * @property resultFormatter\n   * @type Function\n   * @return {Object} The formatted result\n   * @since 0.6.0\n   */\n\n\n  p.resultFormatter = null;\n  /**\n   * Handle events from internal requests. By default, loaders will handle, and redispatch the necessary events, but\n   * this method can be overridden for custom behaviours.\n   * @method handleEvent\n   * @param {Event} event The event that the internal request dispatches.\n   * @protected\n   * @since 0.6.0\n   */\n\n  p.handleEvent = function (event) {\n    switch (event.type) {\n      case \"complete\":\n        this._rawResult = event.target._response;\n        var result = this.resultFormatter && this.resultFormatter(this); // The resultFormatter is asynchronous\n\n        if (result instanceof Function) {\n          result.call(this, createjs.proxy(this._resultFormatSuccess, this), createjs.proxy(this._resultFormatFailed, this)); // The result formatter is synchronous\n        } else {\n          this._result = result || this._rawResult;\n\n          this._sendComplete();\n        }\n\n        break;\n\n      case \"progress\":\n        this._sendProgress(event);\n\n        break;\n\n      case \"error\":\n        this._sendError(event);\n\n        break;\n\n      case \"loadstart\":\n        this._sendLoadStart();\n\n        break;\n\n      case \"abort\":\n      case \"timeout\":\n        if (!this._isCanceled()) {\n          this.dispatchEvent(new createjs.ErrorEvent(\"PRELOAD_\" + event.type.toUpperCase() + \"_ERROR\"));\n        }\n\n        break;\n    }\n  };\n  /**\n   * The \"success\" callback passed to {{#crossLink \"AbstractLoader/resultFormatter\"}}{{/crossLink}} asynchronous\n   * functions.\n   * @method _resultFormatSuccess\n   * @param {Object} result The formatted result\n   * @private\n   */\n\n\n  p._resultFormatSuccess = function (result) {\n    this._result = result;\n\n    this._sendComplete();\n  };\n  /**\n   * The \"error\" callback passed to {{#crossLink \"AbstractLoader/resultFormatter\"}}{{/crossLink}} asynchronous\n   * functions.\n   * @method _resultFormatSuccess\n   * @param {Object} error The error event\n   * @private\n   */\n\n\n  p._resultFormatFailed = function (event) {\n    this._sendError(event);\n  };\n  /**\n   * @method toString\n   * @return {String} a string representation of the instance.\n   */\n\n\n  p.toString = function () {\n    return \"[PreloadJS AbstractLoader]\";\n  };\n\n  createjs.AbstractLoader = createjs.promote(AbstractLoader, \"EventDispatcher\");\n})(); //##############################################################################\n// AbstractMediaLoader.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor\n\n  /**\n   * The AbstractMediaLoader is a base class that handles some of the shared methods and properties of loaders that\n   * handle HTML media elements, such as Video and Audio.\n   * @class AbstractMediaLoader\n   * @param {LoadItem|Object} loadItem\n   * @param {Boolean} preferXHR\n   * @param {String} type The type of media to load. Usually \"video\" or \"audio\".\n   * @extends AbstractLoader\n   * @constructor\n   */\n\n  function AbstractMediaLoader(loadItem, preferXHR, type) {\n    this.AbstractLoader_constructor(loadItem, preferXHR, type); // public properties\n\n    this.resultFormatter = this._formatResult; // protected properties\n\n    this._tagSrcAttribute = \"src\";\n    this.on(\"initialize\", this._updateXHR, this);\n  }\n\n  ;\n  var p = createjs.extend(AbstractMediaLoader, createjs.AbstractLoader); // static properties\n  // public methods\n\n  p.load = function () {\n    // TagRequest will handle most of this, but Sound / Video need a few custom properties, so just handle them here.\n    if (!this._tag) {\n      this._tag = this._createTag(this._item.src);\n    }\n\n    this._tag.preload = \"auto\";\n\n    this._tag.load();\n\n    this.AbstractLoader_load();\n  }; // protected methods\n\n  /**\n   * Creates a new tag for loading if it doesn't exist yet.\n   * @method _createTag\n   * @private\n   */\n\n\n  p._createTag = function () {};\n\n  p._createRequest = function () {\n    if (!this._preferXHR) {\n      this._request = new createjs.MediaTagRequest(this._item, this._tag || this._createTag(), this._tagSrcAttribute);\n    } else {\n      this._request = new createjs.XHRRequest(this._item);\n    }\n  }; // protected methods\n\n  /**\n   * Before the item loads, set its mimeType and responseType.\n   * @property _updateXHR\n   * @param {Event} event\n   * @private\n   */\n\n\n  p._updateXHR = function (event) {\n    // Only exists for XHR\n    if (event.loader.setResponseType) {\n      event.loader.setResponseType(\"blob\");\n    }\n  };\n  /**\n   * The result formatter for media files.\n   * @method _formatResult\n   * @param {AbstractLoader} loader\n   * @returns {HTMLVideoElement|HTMLAudioElement}\n   * @private\n   */\n\n\n  p._formatResult = function (loader) {\n    this._tag.removeEventListener && this._tag.removeEventListener(\"canplaythrough\", this._loadedHandler);\n    this._tag.onstalled = null;\n\n    if (this._preferXHR) {\n      var URL = window.URL || window.webkitURL;\n      var result = loader.getResult(true);\n      loader.getTag().src = URL.createObjectURL(result);\n    }\n\n    return loader.getTag();\n  };\n\n  createjs.AbstractMediaLoader = createjs.promote(AbstractMediaLoader, \"AbstractLoader\");\n})(); //##############################################################################\n// AbstractRequest.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n  /**\n   * A base class for actual data requests, such as {{#crossLink \"XHRRequest\"}}{{/crossLink}}, {{#crossLink \"TagRequest\"}}{{/crossLink}},\n   * and {{#crossLink \"MediaRequest\"}}{{/crossLink}}. PreloadJS loaders will typically use a data loader under the\n   * hood to get data.\n   * @class AbstractRequest\n   * @param {LoadItem} item\n   * @constructor\n   */\n\n  var AbstractRequest = function (item) {\n    this._item = item;\n  };\n\n  var p = createjs.extend(AbstractRequest, createjs.EventDispatcher); // public methods\n\n  /**\n   * Begin a load.\n   * @method load\n   */\n\n  p.load = function () {};\n  /**\n   * Clean up a request.\n   * @method destroy\n   */\n\n\n  p.destroy = function () {};\n  /**\n   * Cancel an in-progress request.\n   * @method cancel\n   */\n\n\n  p.cancel = function () {};\n\n  createjs.AbstractRequest = createjs.promote(AbstractRequest, \"EventDispatcher\");\n})(); //##############################################################################\n// TagRequest.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor\n\n  /**\n   * An {{#crossLink \"AbstractRequest\"}}{{/crossLink}} that loads HTML tags, such as images and scripts.\n   * @class TagRequest\n   * @param {LoadItem} loadItem\n   * @param {HTMLElement} tag\n   * @param {String} srcAttribute The tag attribute that specifies the source, such as \"src\", \"href\", etc.\n   */\n\n  function TagRequest(loadItem, tag, srcAttribute) {\n    this.AbstractRequest_constructor(loadItem); // protected properties\n\n    /**\n     * The HTML tag instance that is used to load.\n     * @property _tag\n     * @type {HTMLElement}\n     * @protected\n     */\n\n    this._tag = tag;\n    /**\n     * The tag attribute that specifies the source, such as \"src\", \"href\", etc.\n     * @property _tagSrcAttribute\n     * @type {String}\n     * @protected\n     */\n\n    this._tagSrcAttribute = srcAttribute;\n    /**\n     * A method closure used for handling the tag load event.\n     * @property _loadedHandler\n     * @type {Function}\n     * @private\n     */\n\n    this._loadedHandler = createjs.proxy(this._handleTagComplete, this);\n    /**\n     * Determines if the element was added to the DOM automatically by PreloadJS, so it can be cleaned up after.\n     * @property _addedToDOM\n     * @type {Boolean}\n     * @private\n     */\n\n    this._addedToDOM = false;\n  }\n\n  ;\n  var p = createjs.extend(TagRequest, createjs.AbstractRequest); // public methods\n\n  p.load = function () {\n    this._tag.onload = createjs.proxy(this._handleTagComplete, this);\n    this._tag.onreadystatechange = createjs.proxy(this._handleReadyStateChange, this);\n    this._tag.onerror = createjs.proxy(this._handleError, this);\n    var evt = new createjs.Event(\"initialize\");\n    evt.loader = this._tag;\n    this.dispatchEvent(evt);\n    this._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), this._item.loadTimeout);\n    this._tag[this._tagSrcAttribute] = this._item.src; // wdg:: Append the tag AFTER setting the src, or SVG loading on iOS will fail.\n\n    if (this._tag.parentNode == null) {\n      createjs.DomUtils.appendToBody(this._tag);\n      this._addedToDOM = true;\n    }\n  };\n\n  p.destroy = function () {\n    this._clean();\n\n    this._tag = null;\n    this.AbstractRequest_destroy();\n  }; // private methods\n\n  /**\n   * Handle the readyStateChange event from a tag. We need this in place of the `onload` callback (mainly SCRIPT\n   * and LINK tags), but other cases may exist.\n   * @method _handleReadyStateChange\n   * @private\n   */\n\n\n  p._handleReadyStateChange = function () {\n    clearTimeout(this._loadTimeout); // This is strictly for tags in browsers that do not support onload.\n\n    var tag = this._tag; // Complete is for old IE support.\n\n    if (tag.readyState == \"loaded\" || tag.readyState == \"complete\") {\n      this._handleTagComplete();\n    }\n  };\n  /**\n   * Handle any error events from the tag.\n   * @method _handleError\n   * @protected\n   */\n\n\n  p._handleError = function () {\n    this._clean();\n\n    this.dispatchEvent(\"error\");\n  };\n  /**\n   * Handle the tag's onload callback.\n   * @method _handleTagComplete\n   * @private\n   */\n\n\n  p._handleTagComplete = function () {\n    this._rawResult = this._tag;\n    this._result = this.resultFormatter && this.resultFormatter(this) || this._rawResult;\n\n    this._clean();\n\n    this.dispatchEvent(\"complete\");\n  };\n  /**\n   * The tag request has not loaded within the time specified in loadTimeout.\n   * @method _handleError\n   * @param {Object} event The XHR error event.\n   * @private\n   */\n\n\n  p._handleTimeout = function () {\n    this._clean();\n\n    this.dispatchEvent(new createjs.Event(\"timeout\"));\n  };\n  /**\n   * Remove event listeners, but don't destroy the request object\n   * @method _clean\n   * @private\n   */\n\n\n  p._clean = function () {\n    this._tag.onload = null;\n    this._tag.onreadystatechange = null;\n    this._tag.onerror = null;\n\n    if (this._addedToDOM && this._tag.parentNode != null) {\n      this._tag.parentNode.removeChild(this._tag);\n    }\n\n    clearTimeout(this._loadTimeout);\n  };\n  /**\n   * Handle a stalled audio event. The main place this happens is with HTMLAudio in Chrome when playing back audio\n   * that is already in a load, but not complete.\n   * @method _handleStalled\n   * @private\n   */\n\n\n  p._handleStalled = function () {//Ignore, let the timeout take care of it. Sometimes its not really stopped.\n  };\n\n  createjs.TagRequest = createjs.promote(TagRequest, \"AbstractRequest\");\n})(); //##############################################################################\n// MediaTagRequest.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor\n\n  /**\n   * An {{#crossLink \"TagRequest\"}}{{/crossLink}} that loads HTML tags for video and audio.\n   * @class MediaTagRequest\n   * @param {LoadItem} loadItem\n   * @param {HTMLAudioElement|HTMLVideoElement} tag\n   * @param {String} srcAttribute The tag attribute that specifies the source, such as \"src\", \"href\", etc.\n   * @constructor\n   */\n\n  function MediaTagRequest(loadItem, tag, srcAttribute) {\n    this.AbstractRequest_constructor(loadItem); // protected properties\n\n    this._tag = tag;\n    this._tagSrcAttribute = srcAttribute;\n    this._loadedHandler = createjs.proxy(this._handleTagComplete, this);\n  }\n\n  ;\n  var p = createjs.extend(MediaTagRequest, createjs.TagRequest);\n  var s = MediaTagRequest; // public methods\n\n  p.load = function () {\n    var sc = createjs.proxy(this._handleStalled, this);\n    this._stalledCallback = sc;\n    var pc = createjs.proxy(this._handleProgress, this);\n    this._handleProgress = pc;\n\n    this._tag.addEventListener(\"stalled\", sc);\n\n    this._tag.addEventListener(\"progress\", pc); // This will tell us when audio is buffered enough to play through, but not when its loaded.\n    // The tag doesn't keep loading in Chrome once enough has buffered, and we have decided that behaviour is sufficient.\n\n\n    this._tag.addEventListener && this._tag.addEventListener(\"canplaythrough\", this._loadedHandler, false); // canplaythrough callback doesn't work in Chrome, so we use an event.\n\n    this.TagRequest_load();\n  }; // private methods\n\n\n  p._handleReadyStateChange = function () {\n    clearTimeout(this._loadTimeout); // This is strictly for tags in browsers that do not support onload.\n\n    var tag = this._tag; // Complete is for old IE support.\n\n    if (tag.readyState == \"loaded\" || tag.readyState == \"complete\") {\n      this._handleTagComplete();\n    }\n  };\n\n  p._handleStalled = function () {//Ignore, let the timeout take care of it. Sometimes its not really stopped.\n  };\n  /**\n   * An XHR request has reported progress.\n   * @method _handleProgress\n   * @param {Object} event The XHR progress event.\n   * @private\n   */\n\n\n  p._handleProgress = function (event) {\n    if (!event || event.loaded > 0 && event.total == 0) {\n      return; // Sometimes we get no \"total\", so just ignore the progress event.\n    }\n\n    var newEvent = new createjs.ProgressEvent(event.loaded, event.total);\n    this.dispatchEvent(newEvent);\n  }; // protected methods\n\n\n  p._clean = function () {\n    this._tag.removeEventListener && this._tag.removeEventListener(\"canplaythrough\", this._loadedHandler);\n\n    this._tag.removeEventListener(\"stalled\", this._stalledCallback);\n\n    this._tag.removeEventListener(\"progress\", this._progressCallback);\n\n    this.TagRequest__clean();\n  };\n\n  createjs.MediaTagRequest = createjs.promote(MediaTagRequest, \"TagRequest\");\n})(); //##############################################################################\n// XHRRequest.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor\n\n  /**\n   * A preloader that loads items using XHR requests, usually XMLHttpRequest. However XDomainRequests will be used\n   * for cross-domain requests if possible, and older versions of IE fall back on to ActiveX objects when necessary.\n   * XHR requests load the content as text or binary data, provide progress and consistent completion events, and\n   * can be canceled during load. Note that XHR is not supported in IE 6 or earlier, and is not recommended for\n   * cross-domain loading.\n   * @class XHRRequest\n   * @constructor\n   * @param {Object} item The object that defines the file to load. Please see the {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}}\n   * for an overview of supported file properties.\n   * @extends AbstractLoader\n   */\n\n  function XHRRequest(item) {\n    this.AbstractRequest_constructor(item); // protected properties\n\n    /**\n     * A reference to the XHR request used to load the content.\n     * @property _request\n     * @type {XMLHttpRequest | XDomainRequest | ActiveX.XMLHTTP}\n     * @private\n     */\n\n    this._request = null;\n    /**\n     * A manual load timeout that is used for browsers that do not support the onTimeout event on XHR (XHR level 1,\n     * typically IE9).\n     * @property _loadTimeout\n     * @type {Number}\n     * @private\n     */\n\n    this._loadTimeout = null;\n    /**\n     * The browser's XHR (XMLHTTPRequest) version. Supported versions are 1 and 2. There is no official way to detect\n     * the version, so we use capabilities to make a best guess.\n     * @property _xhrLevel\n     * @type {Number}\n     * @default 1\n     * @private\n     */\n\n    this._xhrLevel = 1;\n    /**\n     * The response of a loaded file. This is set because it is expensive to look up constantly. This property will be\n     * null until the file is loaded.\n     * @property _response\n     * @type {mixed}\n     * @private\n     */\n\n    this._response = null;\n    /**\n     * The response of the loaded file before it is modified. In most cases, content is converted from raw text to\n     * an HTML tag or a formatted object which is set to the <code>result</code> property, but the developer may still\n     * want to access the raw content as it was loaded.\n     * @property _rawResponse\n     * @type {String|Object}\n     * @private\n     */\n\n    this._rawResponse = null;\n    this._canceled = false; // Setup our event handlers now.\n\n    this._handleLoadStartProxy = createjs.proxy(this._handleLoadStart, this);\n    this._handleProgressProxy = createjs.proxy(this._handleProgress, this);\n    this._handleAbortProxy = createjs.proxy(this._handleAbort, this);\n    this._handleErrorProxy = createjs.proxy(this._handleError, this);\n    this._handleTimeoutProxy = createjs.proxy(this._handleTimeout, this);\n    this._handleLoadProxy = createjs.proxy(this._handleLoad, this);\n    this._handleReadyStateChangeProxy = createjs.proxy(this._handleReadyStateChange, this);\n\n    if (!this._createXHR(item)) {//TODO: Throw error?\n    }\n  }\n\n  ;\n  var p = createjs.extend(XHRRequest, createjs.AbstractRequest); // static properties\n\n  /**\n   * A list of XMLHTTP object IDs to try when building an ActiveX object for XHR requests in earlier versions of IE.\n   * @property ACTIVEX_VERSIONS\n   * @type {Array}\n   * @since 0.4.2\n   * @private\n   */\n\n  XHRRequest.ACTIVEX_VERSIONS = [\"Msxml2.XMLHTTP.6.0\", \"Msxml2.XMLHTTP.5.0\", \"Msxml2.XMLHTTP.4.0\", \"MSXML2.XMLHTTP.3.0\", \"MSXML2.XMLHTTP\", \"Microsoft.XMLHTTP\"]; // Public methods\n\n  /**\n   * Look up the loaded result.\n   * @method getResult\n   * @param {Boolean} [raw=false] Return a raw result instead of a formatted result. This applies to content\n   * loaded via XHR such as scripts, XML, CSS, and Images. If there is no raw result, the formatted result will be\n   * returned instead.\n   * @return {Object} A result object containing the content that was loaded, such as:\n   * <ul>\n   *      <li>An image tag (&lt;image /&gt;) for images</li>\n   *      <li>A script tag for JavaScript (&lt;script /&gt;). Note that scripts loaded with tags may be added to the\n   *      HTML head.</li>\n   *      <li>A style tag for CSS (&lt;style /&gt;)</li>\n   *      <li>Raw text for TEXT</li>\n   *      <li>A formatted JavaScript object defined by JSON</li>\n   *      <li>An XML document</li>\n   *      <li>An binary arraybuffer loaded by XHR</li>\n   * </ul>\n   * Note that if a raw result is requested, but not found, the result will be returned instead.\n   */\n\n  p.getResult = function (raw) {\n    if (raw && this._rawResponse) {\n      return this._rawResponse;\n    }\n\n    return this._response;\n  }; // Overrides abstract method in AbstractRequest\n\n\n  p.cancel = function () {\n    this.canceled = true;\n\n    this._clean();\n\n    this._request.abort();\n  }; // Overrides abstract method in AbstractLoader\n\n\n  p.load = function () {\n    if (this._request == null) {\n      this._handleError();\n\n      return;\n    } //Events\n\n\n    if (this._request.addEventListener != null) {\n      this._request.addEventListener(\"loadstart\", this._handleLoadStartProxy, false);\n\n      this._request.addEventListener(\"progress\", this._handleProgressProxy, false);\n\n      this._request.addEventListener(\"abort\", this._handleAbortProxy, false);\n\n      this._request.addEventListener(\"error\", this._handleErrorProxy, false);\n\n      this._request.addEventListener(\"timeout\", this._handleTimeoutProxy, false); // Note: We don't get onload in all browsers (earlier FF and IE). onReadyStateChange handles these.\n\n\n      this._request.addEventListener(\"load\", this._handleLoadProxy, false);\n\n      this._request.addEventListener(\"readystatechange\", this._handleReadyStateChangeProxy, false);\n    } else {\n      // IE9 support\n      this._request.onloadstart = this._handleLoadStartProxy;\n      this._request.onprogress = this._handleProgressProxy;\n      this._request.onabort = this._handleAbortProxy;\n      this._request.onerror = this._handleErrorProxy;\n      this._request.ontimeout = this._handleTimeoutProxy; // Note: We don't get onload in all browsers (earlier FF and IE). onReadyStateChange handles these.\n\n      this._request.onload = this._handleLoadProxy;\n      this._request.onreadystatechange = this._handleReadyStateChangeProxy;\n    } // Set up a timeout if we don't have XHR2\n\n\n    if (this._xhrLevel == 1) {\n      this._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), this._item.loadTimeout);\n    } // Sometimes we get back 404s immediately, particularly when there is a cross origin request.  // note this does not catch in Chrome\n\n\n    try {\n      if (!this._item.values) {\n        this._request.send();\n      } else {\n        this._request.send(createjs.URLUtils.formatQueryString(this._item.values));\n      }\n    } catch (error) {\n      this.dispatchEvent(new createjs.ErrorEvent(\"XHR_SEND\", null, error));\n    }\n  };\n\n  p.setResponseType = function (type) {\n    // Some old browsers doesn't support blob, so we convert arraybuffer to blob after response is downloaded\n    if (type === 'blob') {\n      type = window.URL ? 'blob' : 'arraybuffer';\n      this._responseType = type;\n    }\n\n    this._request.responseType = type;\n  };\n  /**\n   * Get all the response headers from the XmlHttpRequest.\n   *\n   * <strong>From the docs:</strong> Return all the HTTP headers, excluding headers that are a case-insensitive match\n   * for Set-Cookie or Set-Cookie2, as a single string, with each header line separated by a U+000D CR U+000A LF pair,\n   * excluding the status line, and with each header name and header value separated by a U+003A COLON U+0020 SPACE\n   * pair.\n   * @method getAllResponseHeaders\n   * @return {String}\n   * @since 0.4.1\n   */\n\n\n  p.getAllResponseHeaders = function () {\n    if (this._request.getAllResponseHeaders instanceof Function) {\n      return this._request.getAllResponseHeaders();\n    } else {\n      return null;\n    }\n  };\n  /**\n   * Get a specific response header from the XmlHttpRequest.\n   *\n   * <strong>From the docs:</strong> Returns the header field value from the response of which the field name matches\n   * header, unless the field name is Set-Cookie or Set-Cookie2.\n   * @method getResponseHeader\n   * @param {String} header The header name to retrieve.\n   * @return {String}\n   * @since 0.4.1\n   */\n\n\n  p.getResponseHeader = function (header) {\n    if (this._request.getResponseHeader instanceof Function) {\n      return this._request.getResponseHeader(header);\n    } else {\n      return null;\n    }\n  }; // protected methods\n\n  /**\n   * The XHR request has reported progress.\n   * @method _handleProgress\n   * @param {Object} event The XHR progress event.\n   * @private\n   */\n\n\n  p._handleProgress = function (event) {\n    if (!event || event.loaded > 0 && event.total == 0) {\n      return; // Sometimes we get no \"total\", so just ignore the progress event.\n    }\n\n    var newEvent = new createjs.ProgressEvent(event.loaded, event.total);\n    this.dispatchEvent(newEvent);\n  };\n  /**\n   * The XHR request has reported a load start.\n   * @method _handleLoadStart\n   * @param {Object} event The XHR loadStart event.\n   * @private\n   */\n\n\n  p._handleLoadStart = function (event) {\n    clearTimeout(this._loadTimeout);\n    this.dispatchEvent(\"loadstart\");\n  };\n  /**\n   * The XHR request has reported an abort event.\n   * @method handleAbort\n   * @param {Object} event The XHR abort event.\n   * @private\n   */\n\n\n  p._handleAbort = function (event) {\n    this._clean();\n\n    this.dispatchEvent(new createjs.ErrorEvent(\"XHR_ABORTED\", null, event));\n  };\n  /**\n   * The XHR request has reported an error event.\n   * @method _handleError\n   * @param {Object} event The XHR error event.\n   * @private\n   */\n\n\n  p._handleError = function (event) {\n    this._clean();\n\n    this.dispatchEvent(new createjs.ErrorEvent(event.message));\n  };\n  /**\n   * The XHR request has reported a readyState change. Note that older browsers (IE 7 & 8) do not provide an onload\n   * event, so we must monitor the readyStateChange to determine if the file is loaded.\n   * @method _handleReadyStateChange\n   * @param {Object} event The XHR readyStateChange event.\n   * @private\n   */\n\n\n  p._handleReadyStateChange = function (event) {\n    if (this._request.readyState == 4) {\n      this._handleLoad();\n    }\n  };\n  /**\n   * The XHR request has completed. This is called by the XHR request directly, or by a readyStateChange that has\n   * <code>request.readyState == 4</code>. Only the first call to this method will be processed.\n   *\n   * Note that This method uses {{#crossLink \"_checkError\"}}{{/crossLink}} to determine if the server has returned an\n   * error code.\n   * @method _handleLoad\n   * @param {Object} event The XHR load event.\n   * @private\n   */\n\n\n  p._handleLoad = function (event) {\n    if (this.loaded) {\n      return;\n    }\n\n    this.loaded = true;\n\n    var error = this._checkError();\n\n    if (error) {\n      this._handleError(error);\n\n      return;\n    }\n\n    this._response = this._getResponse(); // Convert arraybuffer back to blob\n\n    if (this._responseType === 'arraybuffer') {\n      try {\n        this._response = new Blob([this._response]);\n      } catch (e) {\n        // Fallback to use BlobBuilder if Blob constructor is not supported\n        // Tested on Android 2.3 ~ 4.2 and iOS5 safari\n        window.BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n\n        if (e.name === 'TypeError' && window.BlobBuilder) {\n          var builder = new BlobBuilder();\n          builder.append(this._response);\n          this._response = builder.getBlob();\n        }\n      }\n    }\n\n    this._clean();\n\n    this.dispatchEvent(new createjs.Event(\"complete\"));\n  };\n  /**\n   * The XHR request has timed out. This is called by the XHR request directly, or via a <code>setTimeout</code>\n   * callback.\n   * @method _handleTimeout\n   * @param {Object} [event] The XHR timeout event. This is occasionally null when called by the backup setTimeout.\n   * @private\n   */\n\n\n  p._handleTimeout = function (event) {\n    this._clean();\n\n    this.dispatchEvent(new createjs.ErrorEvent(\"PRELOAD_TIMEOUT\", null, event));\n  }; // Protected\n\n  /**\n   * Determine if there is an error in the current load.\n   * Currently this checks the status of the request for problem codes, and not actual response content:\n   * <ul>\n   *     <li>Status codes between 400 and 599 (HTTP error range)</li>\n   *     <li>A status of 0, but *only when the application is running on a server*. If the application is running\n   *     on `file:`, then it may incorrectly treat an error on local (or embedded applications) as a successful\n   *     load.</li>\n   * </ul>\n   * @method _checkError\n   * @return {Error} An error with the status code in the `message` argument.\n   * @private\n   */\n\n\n  p._checkError = function () {\n    var status = parseInt(this._request.status);\n\n    if (status >= 400 && status <= 599) {\n      return new Error(status);\n    } else if (status == 0) {\n      if (/^https?:/.test(location.protocol)) {\n        return new Error(0);\n      }\n\n      return null; // Likely an embedded app.\n    } else {\n      return null;\n    }\n  };\n  /**\n   * Validate the response. Different browsers have different approaches, some of which throw errors when accessed\n   * in other browsers. If there is no response, the <code>_response</code> property will remain null.\n   * @method _getResponse\n   * @private\n   */\n\n\n  p._getResponse = function () {\n    if (this._response != null) {\n      return this._response;\n    }\n\n    if (this._request.response != null) {\n      return this._request.response;\n    } // Android 2.2 uses .responseText\n\n\n    try {\n      if (this._request.responseText != null) {\n        return this._request.responseText;\n      }\n    } catch (e) {} // When loading XML, IE9 does not return .response, instead it returns responseXML.xml\n\n\n    try {\n      if (this._request.responseXML != null) {\n        return this._request.responseXML;\n      }\n    } catch (e) {}\n\n    return null;\n  };\n  /**\n   * Create an XHR request. Depending on a number of factors, we get totally different results.\n   * <ol><li>Some browsers get an <code>XDomainRequest</code> when loading cross-domain.</li>\n   *      <li>XMLHttpRequest are created when available.</li>\n   *      <li>ActiveX.XMLHTTP objects are used in older IE browsers.</li>\n   *      <li>Text requests override the mime type if possible</li>\n   *      <li>Origin headers are sent for crossdomain requests in some browsers.</li>\n   *      <li>Binary loads set the response type to \"arraybuffer\"</li></ol>\n   * @method _createXHR\n   * @param {Object} item The requested item that is being loaded.\n   * @return {Boolean} If an XHR request or equivalent was successfully created.\n   * @private\n   */\n\n\n  p._createXHR = function (item) {\n    // Check for cross-domain loads. We can't fully support them, but we can try.\n    var crossdomain = createjs.URLUtils.isCrossDomain(item);\n    var headers = {}; // Create the request. Fallback to whatever support we have.\n\n    var req = null;\n\n    if (window.XMLHttpRequest) {\n      req = new XMLHttpRequest(); // This is 8 or 9, so use XDomainRequest instead.\n\n      if (crossdomain && req.withCredentials === undefined && window.XDomainRequest) {\n        req = new XDomainRequest();\n      }\n    } else {\n      // Old IE versions use a different approach\n      for (var i = 0, l = s.ACTIVEX_VERSIONS.length; i < l; i++) {\n        var axVersion = s.ACTIVEX_VERSIONS[i];\n\n        try {\n          req = new ActiveXObject(axVersion);\n          break;\n        } catch (e) {}\n      }\n\n      if (req == null) {\n        return false;\n      }\n    } // Default to utf-8 for Text requests.\n\n\n    if (item.mimeType == null && createjs.RequestUtils.isText(item.type)) {\n      item.mimeType = \"text/plain; charset=utf-8\";\n    } // IE9 doesn't support overrideMimeType(), so we need to check for it.\n\n\n    if (item.mimeType && req.overrideMimeType) {\n      req.overrideMimeType(item.mimeType);\n    } // Determine the XHR level\n\n\n    this._xhrLevel = typeof req.responseType === \"string\" ? 2 : 1;\n    var src = null;\n\n    if (item.method == createjs.Methods.GET) {\n      src = createjs.URLUtils.buildURI(item.src, item.values);\n    } else {\n      src = item.src;\n    } // Open the request.  Set cross-domain flags if it is supported (XHR level 1 only)\n\n\n    req.open(item.method || createjs.Methods.GET, src, true);\n\n    if (crossdomain && req instanceof XMLHttpRequest && this._xhrLevel == 1) {\n      headers[\"Origin\"] = location.origin;\n    } // To send data we need to set the Content-type header)\n\n\n    if (item.values && item.method == createjs.Methods.POST) {\n      headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    }\n\n    if (!crossdomain && !headers[\"X-Requested-With\"]) {\n      headers[\"X-Requested-With\"] = \"XMLHttpRequest\";\n    }\n\n    if (item.headers) {\n      for (var n in item.headers) {\n        headers[n] = item.headers[n];\n      }\n    }\n\n    for (n in headers) {\n      req.setRequestHeader(n, headers[n]);\n    }\n\n    if (req instanceof XMLHttpRequest && item.withCredentials !== undefined) {\n      req.withCredentials = item.withCredentials;\n    }\n\n    this._request = req;\n    return true;\n  };\n  /**\n   * A request has completed (or failed or canceled), and needs to be disposed.\n   * @method _clean\n   * @private\n   */\n\n\n  p._clean = function () {\n    clearTimeout(this._loadTimeout);\n\n    if (this._request.removeEventListener != null) {\n      this._request.removeEventListener(\"loadstart\", this._handleLoadStartProxy);\n\n      this._request.removeEventListener(\"progress\", this._handleProgressProxy);\n\n      this._request.removeEventListener(\"abort\", this._handleAbortProxy);\n\n      this._request.removeEventListener(\"error\", this._handleErrorProxy);\n\n      this._request.removeEventListener(\"timeout\", this._handleTimeoutProxy);\n\n      this._request.removeEventListener(\"load\", this._handleLoadProxy);\n\n      this._request.removeEventListener(\"readystatechange\", this._handleReadyStateChangeProxy);\n    } else {\n      this._request.onloadstart = null;\n      this._request.onprogress = null;\n      this._request.onabort = null;\n      this._request.onerror = null;\n      this._request.ontimeout = null;\n      this._request.onload = null;\n      this._request.onreadystatechange = null;\n    }\n  };\n\n  p.toString = function () {\n    return \"[PreloadJS XHRRequest]\";\n  };\n\n  createjs.XHRRequest = createjs.promote(XHRRequest, \"AbstractRequest\");\n})(); //##############################################################################\n// LoadQueue.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n/*\n TODO: WINDOWS ISSUES\n * No error for HTML audio in IE 678\n * SVG no failure error in IE 67 (maybe 8) TAGS AND XHR\n * No script complete handler in IE 67 TAGS (XHR is fine)\n * No XML/JSON in IE6 TAGS\n * Need to hide loading SVG in Opera TAGS\n * No CSS onload/readystatechange in Safari or Android TAGS (requires rule checking)\n * SVG no load or failure in Opera XHR\n * Reported issues with IE7/8\n */\n\n(function () {\n  \"use strict\"; // constructor\n\n  /**\n   * The LoadQueue class is the main API for preloading content. LoadQueue is a load manager, which can preload either\n   * a single file, or queue of files.\n   *\n   * <b>Creating a Queue</b><br />\n   * To use LoadQueue, create a LoadQueue instance. If you want to force tag loading where possible, set the preferXHR\n   * argument to false.\n   *\n   *      var queue = new createjs.LoadQueue(true);\n   *\n   * <b>Listening for Events</b><br />\n   * Add any listeners you want to the queue. Since PreloadJS 0.3.0, the {{#crossLink \"EventDispatcher\"}}{{/crossLink}}\n   * lets you add as many listeners as you want for events. You can subscribe to the following events:<ul>\n   *     <li>{{#crossLink \"AbstractLoader/complete:event\"}}{{/crossLink}}: fired when a queue completes loading all\n   *     files</li>\n   *     <li>{{#crossLink \"AbstractLoader/error:event\"}}{{/crossLink}}: fired when the queue encounters an error with\n   *     any file.</li>\n   *     <li>{{#crossLink \"AbstractLoader/progress:event\"}}{{/crossLink}}: Progress for the entire queue has\n   *     changed.</li>\n   *     <li>{{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}}: A single file has completed loading.</li>\n   *     <li>{{#crossLink \"LoadQueue/fileprogress:event\"}}{{/crossLink}}: Progress for a single file has changes. Note\n   *     that only files loaded with XHR (or possibly by plugins) will fire progress events other than 0 or 100%.</li>\n   * </ul>\n   *\n   *      queue.on(\"fileload\", handleFileLoad, this);\n   *      queue.on(\"complete\", handleComplete, this);\n   *\n   * <b>Adding files and manifests</b><br />\n   * Add files you want to load using {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}} or add multiple files at a\n   * time using a list or a manifest definition using {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}. Files are\n   * appended to the end of the active queue, so you can use these methods as many times as you like, whenever you\n   * like.\n   *\n   *      queue.loadFile(\"filePath/file.jpg\");\n   *      queue.loadFile({id:\"image\", src:\"filePath/file.jpg\"});\n   *      queue.loadManifest([\"filePath/file.jpg\", {id:\"image\", src:\"filePath/file.jpg\"}]);\n   *\n   *      // Use an external manifest\n   *      queue.loadManifest(\"path/to/manifest.json\");\n   *      queue.loadManifest({src:\"manifest.json\", type:\"manifest\"});\n   *\n   * If you pass `false` as the `loadNow` parameter, the queue will not kick of the load of the files, but it will not\n   * stop if it has already been started. Call the {{#crossLink \"AbstractLoader/load\"}}{{/crossLink}} method to begin\n   * a paused queue. Note that a paused queue will automatically resume when new files are added to it with a\n   * `loadNow` argument of `true`.\n   *\n   *      queue.load();\n   *\n   * <b>File Types</b><br />\n   * The file type of a manifest item is auto-determined by the file extension. The pattern matching in PreloadJS\n   * should handle the majority of standard file and url formats, and works with common file extensions. If you have\n   * either a non-standard file extension, or are serving the file using a proxy script, then you can pass in a\n   * <code>type</code> property with any manifest item.\n   *\n   *      queue.loadFile({src:\"path/to/myFile.mp3x\", type:createjs.Types.SOUND});\n   *\n   *      // Note that PreloadJS will not read a file extension from the query string\n   *      queue.loadFile({src:\"http://server.com/proxy?file=image.jpg\", type:createjs.Types.IMAGE});\n   *\n   * Supported types are defined on the {{#crossLink \"AbstractLoader\"}}{{/crossLink}} class, and include:\n   * <ul>\n   *     <li>{{#crossLink \"Types/BINARY:property\"}}{{/crossLink}}: Raw binary data via XHR</li>\n   *     <li>{{#crossLink \"Types/CSS:property\"}}{{/crossLink}}: CSS files</li>\n   *     <li>{{#crossLink \"Types/IMAGE:property\"}}{{/crossLink}}: Common image formats</li>\n   *     <li>{{#crossLink \"Types/JAVASCRIPT:property\"}}{{/crossLink}}: JavaScript files</li>\n   *     <li>{{#crossLink \"Types/JSON:property\"}}{{/crossLink}}: JSON data</li>\n   *     <li>{{#crossLink \"Types/JSONP:property\"}}{{/crossLink}}: JSON files cross-domain</li>\n   *     <li>{{#crossLink \"Types/MANIFEST:property\"}}{{/crossLink}}: A list of files to load in JSON format, see\n   *     {{#crossLink \"AbstractLoader/loadManifest\"}}{{/crossLink}}</li>\n   *     <li>{{#crossLink \"Types/SOUND:property\"}}{{/crossLink}}: Audio file formats</li>\n   *     <li>{{#crossLink \"Types/SPRITESHEET:property\"}}{{/crossLink}}: JSON SpriteSheet definitions. This\n   *     will also load sub-images, and provide a {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instance.</li>\n   *     <li>{{#crossLink \"Types/SVG:property\"}}{{/crossLink}}: SVG files</li>\n   *     <li>{{#crossLink \"Types/TEXT:property\"}}{{/crossLink}}: Text files - XHR only</li>\n      *     <li>{{#crossLink \"Types/VIDEO:property\"}}{{/crossLink}}: Video objects</li>\n   *     <li>{{#crossLink \"Types/XML:property\"}}{{/crossLink}}: XML data</li>\n   * </ul>\n   *\n   * <em>Note: Loader types used to be defined on LoadQueue, but have been moved to the Types class</em>\n   *\n   * <b>Handling Results</b><br />\n   * When a file is finished downloading, a {{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}} event is\n   * dispatched. In an example above, there is an event listener snippet for fileload. Loaded files are usually a\n   * formatted object that can be used immediately, including:\n   * <ul>\n   *     <li>Binary: The binary loaded result</li>\n   *     <li>CSS: A &lt;link /&gt; tag</li>\n   *     <li>Image: An &lt;img /&gt; tag</li>\n   *     <li>JavaScript: A &lt;script /&gt; tag</li>\n   *     <li>JSON/JSONP: A formatted JavaScript Object</li>\n   *     <li>Manifest: A JavaScript object.\n   *     <li>Sound: An &lt;audio /&gt; tag</a>\n   *     <li>SpriteSheet: A {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instance, containing loaded images.\n   *     <li>SVG: An &lt;object /&gt; tag</li>\n   *     <li>Text: Raw text</li>\n      *     <li>Video: A Video DOM node</li>\n   *     <li>XML: An XML DOM node</li>\n   * </ul>\n   *\n   *      function handleFileLoad(event) {\n   *          var item = event.item; // A reference to the item that was passed in to the LoadQueue\n   *          var type = item.type;\n   *\n   *          // Add any images to the page body.\n   *          if (type == createjs.Types.IMAGE) {\n   *              document.body.appendChild(event.result);\n   *          }\n   *      }\n   *\n   * At any time after the file has been loaded (usually after the queue has completed), any result can be looked up\n   * via its \"id\" using {{#crossLink \"LoadQueue/getResult\"}}{{/crossLink}}. If no id was provided, then the\n   * \"src\" or file path can be used instead, including the `path` defined by a manifest, but <strong>not including</strong>\n   * a base path defined on the LoadQueue. It is recommended to always pass an id if you want to look up content.\n   *\n   *      var image = queue.getResult(\"image\");\n   *      document.body.appendChild(image);\n   *\n   * Raw loaded content can be accessed using the <code>rawResult</code> property of the {{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}}\n   * event, or can be looked up using {{#crossLink \"LoadQueue/getResult\"}}{{/crossLink}}, passing `true` as the 2nd\n   * argument. This is only applicable for content that has been parsed for the browser, specifically: JavaScript,\n   * CSS, XML, SVG, and JSON objects, or anything loaded with XHR.\n   *\n   *      var image = queue.getResult(\"image\", true); // load the binary image data loaded with XHR.\n   *\n   * <b>Plugins</b><br />\n   * LoadQueue has a simple plugin architecture to help process and preload content. For example, to preload audio,\n   * make sure to install the <a href=\"http://soundjs.com\">SoundJS</a> Sound class, which will help load HTML audio,\n   * Flash audio, and WebAudio files. This should be installed <strong>before</strong> loading any audio files.\n   *\n   *      queue.installPlugin(createjs.Sound);\n   *\n   * <h4>Known Browser Issues</h4>\n   * <ul>\n   *     <li>Browsers without audio support can not load audio files.</li>\n   *     <li>Safari on Mac OS X can only play HTML audio if QuickTime is installed</li>\n   *     <li>HTML Audio tags will only download until their <code>canPlayThrough</code> event is fired. Browsers other\n   *     than Chrome will continue to download in the background.</li>\n   *     <li>When loading scripts using tags, they are automatically added to the document.</li>\n   *     <li>Scripts loaded via XHR may not be properly inspectable with browser tools.</li>\n   *     <li>IE6 and IE7 (and some other browsers) may not be able to load XML, Text, or JSON, since they require\n   *     XHR to work.</li>\n   *     <li>Content loaded via tags will not show progress, and will continue to download in the background when\n   *     canceled, although no events will be dispatched.</li>\n   * </ul>\n   *\n   * @class LoadQueue\n   * @param {Boolean} [preferXHR=true] Determines whether the preload instance will favor loading with XHR (XML HTTP\n   * Requests), or HTML tags. When this is `false`, the queue will use tag loading when possible, and fall back on XHR\n   * when necessary.\n   * @param {String} [basePath=\"\"] A path that will be prepended on to the source parameter of all items in the queue\n   * before they are loaded.  Sources beginning with a protocol such as `http://` or a relative path such as `../`\n   * will not receive a base path.\n   * @param {String|Boolean} [crossOrigin=\"\"] An optional flag to support images loaded from a CORS-enabled server. To\n   * use it, set this value to `true`, which will default the crossOrigin property on images to \"Anonymous\". Any\n   * string value will be passed through, but only \"\" and \"Anonymous\" are recommended. <strong>Note: The crossOrigin\n   * parameter is deprecated. Use LoadItem.crossOrigin instead</strong>\n   *\n   * @constructor\n   * @extends AbstractLoader\n   */\n\n  function LoadQueue(preferXHR, basePath, crossOrigin) {\n    this.AbstractLoader_constructor();\n    /**\n     * An array of the plugins registered using {{#crossLink \"LoadQueue/installPlugin\"}}{{/crossLink}}.\n     * @property _plugins\n     * @type {Array}\n     * @private\n     * @since 0.6.1\n     */\n\n    this._plugins = [];\n    /**\n     * An object hash of callbacks that are fired for each file type before the file is loaded, giving plugins the\n     * ability to override properties of the load. Please see the {{#crossLink \"LoadQueue/installPlugin\"}}{{/crossLink}}\n     * method for more information.\n     * @property _typeCallbacks\n     * @type {Object}\n     * @private\n     */\n\n    this._typeCallbacks = {};\n    /**\n     * An object hash of callbacks that are fired for each file extension before the file is loaded, giving plugins the\n     * ability to override properties of the load. Please see the {{#crossLink \"LoadQueue/installPlugin\"}}{{/crossLink}}\n     * method for more information.\n     * @property _extensionCallbacks\n     * @type {null}\n     * @private\n     */\n\n    this._extensionCallbacks = {};\n    /**\n     * The next preload queue to process when this one is complete. If an error is thrown in the current queue, and\n     * {{#crossLink \"LoadQueue/stopOnError:property\"}}{{/crossLink}} is `true`, the next queue will not be processed.\n     * @property next\n     * @type {LoadQueue}\n     * @default null\n     */\n\n    this.next = null;\n    /**\n     * Ensure loaded scripts \"complete\" in the order they are specified. Loaded scripts are added to the document head\n     * once they are loaded. Scripts loaded via tags will load one-at-a-time when this property is `true`, whereas\n     * scripts loaded using XHR can load in any order, but will \"finish\" and be added to the document in the order\n     * specified.\n     *\n     * Any items can be set to load in order by setting the {{#crossLink \"maintainOrder:property\"}}{{/crossLink}}\n     * property on the load item, or by ensuring that only one connection can be open at a time using\n     * {{#crossLink \"LoadQueue/setMaxConnections\"}}{{/crossLink}}. Note that when the `maintainScriptOrder` property\n     * is set to `true`, scripts items are automatically set to `maintainOrder=true`, and changing the\n     * `maintainScriptOrder` to `false` during a load will not change items already in a queue.\n     *\n     * <h4>Example</h4>\n     *\n     *      var queue = new createjs.LoadQueue();\n     *      queue.setMaxConnections(3); // Set a higher number to load multiple items at once\n     *      queue.maintainScriptOrder = true; // Ensure scripts are loaded in order\n     *      queue.loadManifest([\n     *          \"script1.js\",\n     *          \"script2.js\",\n     *          \"image.png\", // Load any time\n     *          {src: \"image2.png\", maintainOrder: true} // Will wait for script2.js\n     *          \"image3.png\",\n     *          \"script3.js\" // Will wait for image2.png before loading (or completing when loading with XHR)\n     *      ]);\n     *\n     * @property maintainScriptOrder\n     * @type {Boolean}\n     * @default true\n     */\n\n    this.maintainScriptOrder = true;\n    /**\n     * Determines if the LoadQueue will stop processing the current queue when an error is encountered.\n     * @property stopOnError\n     * @type {Boolean}\n     * @default false\n     */\n\n    this.stopOnError = false;\n    /**\n     * The number of maximum open connections that a loadQueue tries to maintain. Please see\n     * {{#crossLink \"LoadQueue/setMaxConnections\"}}{{/crossLink}} for more information.\n     * @property _maxConnections\n     * @type {Number}\n     * @default 1\n     * @private\n     */\n\n    this._maxConnections = 1;\n    /**\n     * An internal list of all the default Loaders that are included with PreloadJS. Before an item is loaded, the\n     * available loader list is iterated, in the order they are included, and as soon as a loader indicates it can\n     * handle the content, it will be selected. The default loader, ({{#crossLink \"TextLoader\"}}{{/crossLink}} is\n     * last in the list, so it will be used if no other match is found. Typically, loaders will match based on the\n     * {{#crossLink \"LoadItem/type\"}}{{/crossLink}}, which is automatically determined using the file extension of\n     * the {{#crossLink \"LoadItem/src:property\"}}{{/crossLink}}.\n     *\n     * Loaders can be removed from PreloadJS by simply not including them.\n     *\n     * Custom loaders installed using {{#crossLink \"registerLoader\"}}{{/crossLink}} will be prepended to this list\n     * so that they are checked first.\n     * @property _availableLoaders\n     * @type {Array}\n     * @private\n     * @since 0.6.0\n     */\n\n    this._availableLoaders = [createjs.FontLoader, createjs.ImageLoader, createjs.JavaScriptLoader, createjs.CSSLoader, createjs.JSONLoader, createjs.JSONPLoader, createjs.SoundLoader, createjs.ManifestLoader, createjs.SpriteSheetLoader, createjs.XMLLoader, createjs.SVGLoader, createjs.BinaryLoader, createjs.VideoLoader, createjs.TextLoader];\n    /**\n     * The number of built in loaders, so they can't be removed by {{#crossLink \"unregisterLoader\"}}{{/crossLink}.\n    \t\t * @property _defaultLoaderLength\n     * @type {Number}\n     * @private\n     * @since 0.6.0\n     */\n\n    this._defaultLoaderLength = this._availableLoaders.length;\n    this.init(preferXHR, basePath, crossOrigin);\n  }\n\n  var p = createjs.extend(LoadQueue, createjs.AbstractLoader);\n  var s = LoadQueue; // Remove these @deprecated properties after 1.0\n\n  try {\n    Object.defineProperties(s, {\n      POST: {\n        get: createjs.deprecate(function () {\n          return createjs.Methods.POST;\n        }, \"AbstractLoader.POST\")\n      },\n      GET: {\n        get: createjs.deprecate(function () {\n          return createjs.Methods.GET;\n        }, \"AbstractLoader.GET\")\n      },\n      BINARY: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.BINARY;\n        }, \"AbstractLoader.BINARY\")\n      },\n      CSS: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.CSS;\n        }, \"AbstractLoader.CSS\")\n      },\n      FONT: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.FONT;\n        }, \"AbstractLoader.FONT\")\n      },\n      FONTCSS: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.FONTCSS;\n        }, \"AbstractLoader.FONTCSS\")\n      },\n      IMAGE: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.IMAGE;\n        }, \"AbstractLoader.IMAGE\")\n      },\n      JAVASCRIPT: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.JAVASCRIPT;\n        }, \"AbstractLoader.JAVASCRIPT\")\n      },\n      JSON: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.JSON;\n        }, \"AbstractLoader.JSON\")\n      },\n      JSONP: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.JSONP;\n        }, \"AbstractLoader.JSONP\")\n      },\n      MANIFEST: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.MANIFEST;\n        }, \"AbstractLoader.MANIFEST\")\n      },\n      SOUND: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.SOUND;\n        }, \"AbstractLoader.SOUND\")\n      },\n      VIDEO: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.VIDEO;\n        }, \"AbstractLoader.VIDEO\")\n      },\n      SPRITESHEET: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.SPRITESHEET;\n        }, \"AbstractLoader.SPRITESHEET\")\n      },\n      SVG: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.SVG;\n        }, \"AbstractLoader.SVG\")\n      },\n      TEXT: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.TEXT;\n        }, \"AbstractLoader.TEXT\")\n      },\n      XML: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.XML;\n        }, \"AbstractLoader.XML\")\n      }\n    });\n  } catch (e) {}\n  /**\n   * An internal initialization method, which is used for initial set up, but also to reset the LoadQueue.\n   * @method init\n   * @param preferXHR\n   * @param basePath\n   * @param crossOrigin\n   * @private\n   */\n\n\n  p.init = function (preferXHR, basePath, crossOrigin) {\n    // public properties\n\n    /**\n     * Try and use XMLHttpRequest (XHR) when possible. Note that LoadQueue will default to tag loading or XHR\n     * loading depending on the requirements for a media type. For example, HTML audio can not be loaded with XHR,\n     * and plain text can not be loaded with tags, so it will default the the correct type instead of using the\n     * user-defined type.\n     * @type {Boolean}\n     * @default true\n     * @since 0.6.0\n     */\n    this.preferXHR = true; //TODO: Get/Set\n\n    this._preferXHR = true;\n    this.setPreferXHR(preferXHR); // protected properties\n\n    /**\n     * Whether the queue is currently paused or not.\n     * @property _paused\n     * @type {boolean}\n     * @private\n     */\n\n    this._paused = false;\n    /**\n     * A path that will be prepended on to the item's {{#crossLink \"LoadItem/src:property\"}}{{/crossLink}}. The\n     * `_basePath` property will only be used if an item's source is relative, and does not include a protocol such\n     * as `http://`, or a relative path such as `../`.\n     * @property _basePath\n     * @type {String}\n     * @private\n     * @since 0.3.1\n     */\n\n    this._basePath = basePath;\n    /**\n     * An optional flag to set on images that are loaded using PreloadJS, which enables CORS support. Images loaded\n     * cross-domain by servers that support CORS require the crossOrigin flag to be loaded and interacted with by\n     * a canvas. When loading locally, or with a server with no CORS support, this flag can cause other security issues,\n     * so it is recommended to only set it if you are sure the server supports it. Currently, supported values are \"\"\n     * and \"Anonymous\".\n     * @property _crossOrigin\n     * @type {String}\n     * @default \"\"\n     * @private\n     * @since 0.4.1\n     */\n\n    this._crossOrigin = crossOrigin;\n    /**\n     * Determines if the loadStart event was dispatched already. This event is only fired one time, when the first\n     * file is requested.\n     * @property _loadStartWasDispatched\n     * @type {Boolean}\n     * @default false\n     * @private\n     */\n\n    this._loadStartWasDispatched = false;\n    /**\n     * Determines if there is currently a script loading. This helps ensure that only a single script loads at once when\n     * using a script tag to do preloading.\n     * @property _currentlyLoadingScript\n     * @type {Boolean}\n     * @private\n     */\n\n    this._currentlyLoadingScript = null;\n    /**\n     * An array containing the currently downloading files.\n     * @property _currentLoads\n     * @type {Array}\n     * @private\n     */\n\n    this._currentLoads = [];\n    /**\n     * An array containing the queued items that have not yet started downloading.\n     * @property _loadQueue\n     * @type {Array}\n     * @private\n     */\n\n    this._loadQueue = [];\n    /**\n     * An array containing downloads that have not completed, so that the LoadQueue can be properly reset.\n     * @property _loadQueueBackup\n     * @type {Array}\n     * @private\n     */\n\n    this._loadQueueBackup = [];\n    /**\n     * An object hash of items that have finished downloading, indexed by the {{#crossLink \"LoadItem\"}}{{/crossLink}}\n     * id.\n     * @property _loadItemsById\n     * @type {Object}\n     * @private\n     */\n\n    this._loadItemsById = {};\n    /**\n     * An object hash of items that have finished downloading, indexed by {{#crossLink \"LoadItem\"}}{{/crossLink}}\n     * source.\n     * @property _loadItemsBySrc\n     * @type {Object}\n     * @private\n     */\n\n    this._loadItemsBySrc = {};\n    /**\n     * An object hash of loaded items, indexed by the ID of the {{#crossLink \"LoadItem\"}}{{/crossLink}}.\n     * @property _loadedResults\n     * @type {Object}\n     * @private\n     */\n\n    this._loadedResults = {};\n    /**\n     * An object hash of un-parsed loaded items, indexed by the ID of the {{#crossLink \"LoadItem\"}}{{/crossLink}}.\n     * @property _loadedRawResults\n     * @type {Object}\n     * @private\n     */\n\n    this._loadedRawResults = {};\n    /**\n     * The number of items that have been requested. This helps manage an overall progress without knowing how large\n     * the files are before they are downloaded. This does not include items inside of loaders such as the\n     * {{#crossLink \"ManifestLoader\"}}{{/crossLink}}.\n     * @property _numItems\n     * @type {Number}\n     * @default 0\n     * @private\n     */\n\n    this._numItems = 0;\n    /**\n     * The number of items that have completed loaded. This helps manage an overall progress without knowing how large\n     * the files are before they are downloaded.\n     * @property _numItemsLoaded\n     * @type {Number}\n     * @default 0\n     * @private\n     */\n\n    this._numItemsLoaded = 0;\n    /**\n     * A list of scripts in the order they were requested. This helps ensure that scripts are \"completed\" in the right\n     * order.\n     * @property _scriptOrder\n     * @type {Array}\n     * @private\n     */\n\n    this._scriptOrder = [];\n    /**\n     * A list of scripts that have been loaded. Items are added to this list as <code>null</code> when they are\n     * requested, contain the loaded item if it has completed, but not been dispatched to the user, and <code>true</true>\n     * once they are complete and have been dispatched.\n     * @property _loadedScripts\n     * @type {Array}\n     * @private\n     */\n\n    this._loadedScripts = [];\n    /**\n     * The last progress amount. This is used to suppress duplicate progress events.\n     * @property _lastProgress\n     * @type {Number}\n     * @private\n     * @since 0.6.0\n     */\n\n    this._lastProgress = NaN;\n  }; // static properties\n  // events\n\n  /**\n   * This event is fired when an individual file has loaded, and been processed.\n   * @event fileload\n   * @param {Object} target The object that dispatched the event.\n   * @param {String} type The event type.\n   * @param {Object} item The file item which was specified in the {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}}\n   * or {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}} call. If only a string path or tag was specified, the\n   * object will contain that value as a `src` property.\n   * @param {Object} result The HTML tag or parsed result of the loaded item.\n   * @param {Object} rawResult The unprocessed result, usually the raw text or binary data before it is converted\n   * to a usable object.\n   * @since 0.3.0\n   */\n\n  /**\n   * This {{#crossLink \"ProgressEvent\"}}{{/crossLink}} that is fired when an an individual file's progress changes.\n   * @event fileprogress\n   * @since 0.3.0\n   */\n\n  /**\n   * This event is fired when an individual file starts to load.\n   * @event filestart\n   * @param {Object} target The object that dispatched the event.\n   * @param {String} type The event type.\n   * @param {Object} item The file item which was specified in the {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}}\n   * or {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}} call. If only a string path or tag was specified, the\n   * object will contain that value as a property.\n   */\n\n  /**\n   * Although it extends {{#crossLink \"AbstractLoader\"}}{{/crossLink}}, the `initialize` event is never fired from\n   * a LoadQueue instance.\n   * @event initialize\n   * @private\n   */\n  // public methods\n\n  /**\n   * Register a custom loaders class. New loaders are given precedence over loaders added earlier and default loaders.\n   * It is recommended that loaders extend {{#crossLink \"AbstractLoader\"}}{{/crossLink}}. Loaders can only be added\n   * once, and will be prepended to the list of available loaders.\n   * @method registerLoader\n   * @param {Function|AbstractLoader} loader The AbstractLoader class to add.\n   * @since 0.6.0\n   */\n\n\n  p.registerLoader = function (loader) {\n    if (!loader || !loader.canLoadItem) {\n      throw new Error(\"loader is of an incorrect type.\");\n    } else if (this._availableLoaders.indexOf(loader) != -1) {\n      throw new Error(\"loader already exists.\"); //LM: Maybe just silently fail here\n    }\n\n    this._availableLoaders.unshift(loader);\n  };\n  /**\n   * Remove a custom loader added using {{#crossLink \"registerLoader\"}}{{/crossLink}}. Only custom loaders can be\n   * unregistered, the default loaders will always be available.\n   * @method unregisterLoader\n   * @param {Function|AbstractLoader} loader The AbstractLoader class to remove\n   */\n\n\n  p.unregisterLoader = function (loader) {\n    var idx = this._availableLoaders.indexOf(loader);\n\n    if (idx != -1 && idx < this._defaultLoaderLength - 1) {\n      this._availableLoaders.splice(idx, 1);\n    }\n  };\n  /**\n   * Change the {{#crossLink \"preferXHR:property\"}}{{/crossLink}} value. Note that if this is set to `true`, it may\n   * fail, or be ignored depending on the browser's capabilities and the load type.\n   * @method setPreferXHR\n   * @param {Boolean} value\n   * @returns {Boolean} The value of {{#crossLink \"preferXHR\"}}{{/crossLink}} that was successfully set.\n   * @since 0.6.0\n   */\n\n\n  p.setPreferXHR = function (value) {\n    // Determine if we can use XHR. XHR defaults to TRUE, but the browser may not support it.\n    //TODO: Should we be checking for the other XHR types? Might have to do a try/catch on the different types similar to createXHR.\n    this.preferXHR = value != false && window.XMLHttpRequest != null;\n    return this.preferXHR;\n  };\n  /**\n   * Stops all queued and loading items, and clears the queue. This also removes all internal references to loaded\n   * content, and allows the queue to be used again.\n   * @method removeAll\n   * @since 0.3.0\n   */\n\n\n  p.removeAll = function () {\n    this.remove();\n  };\n  /**\n   * Stops an item from being loaded, and removes it from the queue. If nothing is passed, all items are removed.\n   * This also removes internal references to loaded item(s).\n   *\n   * <h4>Example</h4>\n   *\n   *      queue.loadManifest([\n   *          {src:\"test.png\", id:\"png\"},\n   *          {src:\"test.jpg\", id:\"jpg\"},\n   *          {src:\"test.mp3\", id:\"mp3\"}\n   *      ]);\n   *      queue.remove(\"png\"); // Single item by ID\n   *      queue.remove(\"png\", \"test.jpg\"); // Items as arguments. Mixed id and src.\n   *      queue.remove([\"test.png\", \"jpg\"]); // Items in an Array. Mixed id and src.\n   *\n   * @method remove\n   * @param {String | Array} idsOrUrls* The id or ids to remove from this queue. You can pass an item, an array of\n   * items, or multiple items as arguments.\n   * @since 0.3.0\n   */\n\n\n  p.remove = function (idsOrUrls) {\n    var args = null;\n\n    if (idsOrUrls && !Array.isArray(idsOrUrls)) {\n      args = [idsOrUrls];\n    } else if (idsOrUrls) {\n      args = idsOrUrls;\n    } else if (arguments.length > 0) {\n      return;\n    }\n\n    var itemsWereRemoved = false; // Destroy everything\n\n    if (!args) {\n      this.close();\n\n      for (var n in this._loadItemsById) {\n        this._disposeItem(this._loadItemsById[n]);\n      }\n\n      this.init(this.preferXHR, this._basePath); // Remove specific items\n    } else {\n      while (args.length) {\n        var item = args.pop();\n        var r = this.getResult(item); //Remove from the main load Queue\n\n        for (i = this._loadQueue.length - 1; i >= 0; i--) {\n          loadItem = this._loadQueue[i].getItem();\n\n          if (loadItem.id == item || loadItem.src == item) {\n            this._loadQueue.splice(i, 1)[0].cancel();\n\n            break;\n          }\n        } //Remove from the backup queue\n\n\n        for (i = this._loadQueueBackup.length - 1; i >= 0; i--) {\n          loadItem = this._loadQueueBackup[i].getItem();\n\n          if (loadItem.id == item || loadItem.src == item) {\n            this._loadQueueBackup.splice(i, 1)[0].cancel();\n\n            break;\n          }\n        }\n\n        if (r) {\n          this._disposeItem(this.getItem(item));\n        } else {\n          for (var i = this._currentLoads.length - 1; i >= 0; i--) {\n            var loadItem = this._currentLoads[i].getItem();\n\n            if (loadItem.id == item || loadItem.src == item) {\n              this._currentLoads.splice(i, 1)[0].cancel();\n\n              itemsWereRemoved = true;\n              break;\n            }\n          }\n        }\n      } // If this was called during a load, try to load the next item.\n\n\n      if (itemsWereRemoved) {\n        this._loadNext();\n      }\n    }\n  };\n  /**\n   * Stops all open loads, destroys any loaded items, and resets the queue, so all items can\n   * be reloaded again by calling {{#crossLink \"AbstractLoader/load\"}}{{/crossLink}}. Items are not removed from the\n   * queue. To remove items use the {{#crossLink \"LoadQueue/remove\"}}{{/crossLink}} or\n   * {{#crossLink \"LoadQueue/removeAll\"}}{{/crossLink}} method.\n   * @method reset\n   * @since 0.3.0\n   */\n\n\n  p.reset = function () {\n    this.close();\n\n    for (var n in this._loadItemsById) {\n      this._disposeItem(this._loadItemsById[n]);\n    } //Reset the queue to its start state\n\n\n    var a = [];\n\n    for (var i = 0, l = this._loadQueueBackup.length; i < l; i++) {\n      a.push(this._loadQueueBackup[i].getItem());\n    }\n\n    this.loadManifest(a, false);\n  };\n  /**\n   * Register a plugin. Plugins can map to load types (sound, image, etc), or specific extensions (png, mp3, etc).\n   * Currently, only one plugin can exist per type/extension.\n   *\n   * When a plugin is installed, a <code>getPreloadHandlers()</code> method will be called on it. For more information\n   * on this method, check out the {{#crossLink \"SamplePlugin/getPreloadHandlers\"}}{{/crossLink}} method in the\n   * {{#crossLink \"SamplePlugin\"}}{{/crossLink}} class.\n   *\n   * Before a file is loaded, a matching plugin has an opportunity to modify the load. If a `callback` is returned\n   * from the {{#crossLink \"SamplePlugin/getPreloadHandlers\"}}{{/crossLink}} method, it will be invoked first, and its\n   * result may cancel or modify the item. The callback method can also return a `completeHandler` to be fired when\n   * the file is loaded, or a `tag` object, which will manage the actual download. For more information on these\n   * methods, check out the {{#crossLink \"SamplePlugin/preloadHandler\"}}{{/crossLink}} and {{#crossLink \"SamplePlugin/fileLoadHandler\"}}{{/crossLink}}\n   * methods on the {{#crossLink \"SamplePlugin\"}}{{/crossLink}}.\n   *\n   * @method installPlugin\n   * @param {Function} plugin The plugin class to install.\n   */\n\n\n  p.installPlugin = function (plugin) {\n    if (plugin == null) {\n      return;\n    }\n\n    if (plugin.getPreloadHandlers != null) {\n      this._plugins.push(plugin);\n\n      var map = plugin.getPreloadHandlers();\n      map.scope = plugin;\n\n      if (map.types != null) {\n        for (var i = 0, l = map.types.length; i < l; i++) {\n          this._typeCallbacks[map.types[i]] = map;\n        }\n      }\n\n      if (map.extensions != null) {\n        for (i = 0, l = map.extensions.length; i < l; i++) {\n          this._extensionCallbacks[map.extensions[i]] = map;\n        }\n      }\n    }\n  };\n  /**\n   * Set the maximum number of concurrent connections. Note that browsers and servers may have a built-in maximum\n   * number of open connections, so any additional connections may remain in a pending state until the browser\n   * opens the connection. When loading scripts using tags, and when {{#crossLink \"LoadQueue/maintainScriptOrder:property\"}}{{/crossLink}}\n   * is `true`, only one script is loaded at a time due to browser limitations.\n   *\n   * <h4>Example</h4>\n   *\n   *      var queue = new createjs.LoadQueue();\n   *      queue.setMaxConnections(10); // Allow 10 concurrent loads\n   *\n   * @method setMaxConnections\n   * @param {Number} value The number of concurrent loads to allow. By default, only a single connection per LoadQueue\n   * is open at any time.\n   */\n\n\n  p.setMaxConnections = function (value) {\n    this._maxConnections = value;\n\n    if (!this._paused && this._loadQueue.length > 0) {\n      this._loadNext();\n    }\n  };\n  /**\n   * Load a single file. To add multiple files at once, use the {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}\n   * method.\n   *\n   * Files are always appended to the current queue, so this method can be used multiple times to add files.\n   * To clear the queue first, use the {{#crossLink \"AbstractLoader/close\"}}{{/crossLink}} method.\n   * @method loadFile\n   * @param {LoadItem|Object|String} file The file object or path to load. A file can be either\n   * <ul>\n   *     <li>A {{#crossLink \"LoadItem\"}}{{/crossLink}} instance</li>\n   *     <li>An object containing properties defined by {{#crossLink \"LoadItem\"}}{{/crossLink}}</li>\n   *     <li>OR A string path to a resource. Note that this kind of load item will be converted to a {{#crossLink \"LoadItem\"}}{{/crossLink}}\n   *     in the background.</li>\n   * </ul>\n   * @param {Boolean} [loadNow=true] Kick off an immediate load (true) or wait for a load call (false). The default\n   * value is true. If the queue is paused using {{#crossLink \"LoadQueue/setPaused\"}}{{/crossLink}}, and the value is\n   * `true`, the queue will resume automatically.\n   * @param {String} [basePath] A base path that will be prepended to each file. The basePath argument overrides the\n   * path specified in the constructor. Note that if you load a manifest using a file of type {{#crossLink \"Types/MANIFEST:property\"}}{{/crossLink}},\n   * its files will <strong>NOT</strong> use the basePath parameter. <strong>The basePath parameter is deprecated.</strong>\n   * This parameter will be removed in a future version. Please either use the `basePath` parameter in the LoadQueue\n   * constructor, or a `path` property in a manifest definition.\n   */\n\n\n  p.loadFile = function (file, loadNow, basePath) {\n    if (file == null) {\n      var event = new createjs.ErrorEvent(\"PRELOAD_NO_FILE\");\n\n      this._sendError(event);\n\n      return;\n    }\n\n    this._addItem(file, null, basePath);\n\n    if (loadNow !== false) {\n      this.setPaused(false);\n    } else {\n      this.setPaused(true);\n    }\n  };\n  /**\n   * Load an array of files. To load a single file, use the {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}} method.\n   * The files in the manifest are requested in the same order, but may complete in a different order if the max\n   * connections are set above 1 using {{#crossLink \"LoadQueue/setMaxConnections\"}}{{/crossLink}}. Scripts will load\n   * in the right order as long as {{#crossLink \"LoadQueue/maintainScriptOrder\"}}{{/crossLink}} is true (which is\n   * default).\n   *\n   * Files are always appended to the current queue, so this method can be used multiple times to add files.\n   * To clear the queue first, use the {{#crossLink \"AbstractLoader/close\"}}{{/crossLink}} method.\n   * @method loadManifest\n   * @param {Array|String|Object} manifest An list of files to load. The loadManifest call supports four types of\n   * manifests:\n   * <ol>\n   *     <li>A string path, which points to a manifest file, which is a JSON file that contains a \"manifest\" property,\n   *     which defines the list of files to load, and can optionally contain a \"path\" property, which will be\n   *     prepended to each file in the list.</li>\n   *     <li>An object which defines a \"src\", which is a JSON or JSONP file. A \"callback\" can be defined for JSONP\n   *     file. The JSON/JSONP file should contain a \"manifest\" property, which defines the list of files to load,\n   *     and can optionally contain a \"path\" property, which will be prepended to each file in the list.</li>\n   *     <li>An object which contains a \"manifest\" property, which defines the list of files to load, and can\n   *     optionally contain a \"path\" property, which will be prepended to each file in the list.</li>\n   *     <li>An Array of files to load.</li>\n   * </ol>\n   *\n   * Each \"file\" in a manifest can be either:\n   * <ul>\n   *     <li>A {{#crossLink \"LoadItem\"}}{{/crossLink}} instance</li>\n   *     <li>An object containing properties defined by {{#crossLink \"LoadItem\"}}{{/crossLink}}</li>\n   *     <li>OR A string path to a resource. Note that this kind of load item will be converted to a {{#crossLink \"LoadItem\"}}{{/crossLink}}\n   *     in the background.</li>\n   * </ul>\n   *\n   * @param {Boolean} [loadNow=true] Kick off an immediate load (true) or wait for a load call (false). The default\n   * value is true. If the queue is paused using {{#crossLink \"LoadQueue/setPaused\"}}{{/crossLink}} and this value is\n   * `true`, the queue will resume automatically.\n   * @param {String} [basePath] A base path that will be prepended to each file. The basePath argument overrides the\n   * path specified in the constructor. Note that if you load a manifest using a file of type {{#crossLink \"LoadQueue/MANIFEST:property\"}}{{/crossLink}},\n   * its files will <strong>NOT</strong> use the basePath parameter. <strong>The basePath parameter is deprecated.</strong>\n   * This parameter will be removed in a future version. Please either use the `basePath` parameter in the LoadQueue\n   * constructor, or a `path` property in a manifest definition.\n   */\n\n\n  p.loadManifest = function (manifest, loadNow, basePath) {\n    var fileList = null;\n    var path = null; // Array-based list of items\n\n    if (Array.isArray(manifest)) {\n      if (manifest.length == 0) {\n        var event = new createjs.ErrorEvent(\"PRELOAD_MANIFEST_EMPTY\");\n\n        this._sendError(event);\n\n        return;\n      }\n\n      fileList = manifest; // String-based. Only file manifests can be specified this way. Any other types will cause an error when loaded.\n    } else if (typeof manifest === \"string\") {\n      fileList = [{\n        src: manifest,\n        type: s.MANIFEST\n      }];\n    } else if (typeof manifest == \"object\") {\n      // An object that defines a manifest path\n      if (manifest.src !== undefined) {\n        if (manifest.type == null) {\n          manifest.type = s.MANIFEST;\n        } else if (manifest.type != s.MANIFEST) {\n          var event = new createjs.ErrorEvent(\"PRELOAD_MANIFEST_TYPE\");\n\n          this._sendError(event);\n        }\n\n        fileList = [manifest]; // An object that defines a manifest\n      } else if (manifest.manifest !== undefined) {\n        fileList = manifest.manifest;\n        path = manifest.path;\n      } // Unsupported. This will throw an error.\n\n    } else {\n      var event = new createjs.ErrorEvent(\"PRELOAD_MANIFEST_NULL\");\n\n      this._sendError(event);\n\n      return;\n    }\n\n    for (var i = 0, l = fileList.length; i < l; i++) {\n      this._addItem(fileList[i], path, basePath);\n    }\n\n    if (loadNow !== false) {\n      this.setPaused(false);\n    } else {\n      this.setPaused(true);\n    }\n  };\n  /**\n   * Start a LoadQueue that was created, but not automatically started.\n   * @method load\n   */\n\n\n  p.load = function () {\n    this.setPaused(false);\n  };\n  /**\n   * Look up a {{#crossLink \"LoadItem\"}}{{/crossLink}} using either the \"id\" or \"src\" that was specified when loading it. Note that if no \"id\" was\n   * supplied with the load item, the ID will be the \"src\", including a `path` property defined by a manifest. The\n   * `basePath` will not be part of the ID.\n   * @method getItem\n   * @param {String} value The <code>id</code> or <code>src</code> of the load item.\n   * @return {Object} The load item that was initially requested using {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}}\n   * or {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}. This object is also returned via the {{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}}\n   * event as the `item` parameter.\n   */\n\n\n  p.getItem = function (value) {\n    return this._loadItemsById[value] || this._loadItemsBySrc[value];\n  };\n  /**\n   * Look up a loaded result using either the \"id\" or \"src\" that was specified when loading it. Note that if no \"id\"\n   * was supplied with the load item, the ID will be the \"src\", including a `path` property defined by a manifest. The\n   * `basePath` will not be part of the ID.\n   * @method getResult\n   * @param {String} value The <code>id</code> or <code>src</code> of the load item.\n   * @param {Boolean} [rawResult=false] Return a raw result instead of a formatted result. This applies to content\n   * loaded via XHR such as scripts, XML, CSS, and Images. If there is no raw result, the formatted result will be\n   * returned instead.\n   * @return {Object} A result object containing the content that was loaded, such as:\n   * <ul>\n   *      <li>An image tag (&lt;image /&gt;) for images</li>\n   *      <li>A script tag for JavaScript (&lt;script /&gt;). Note that scripts are automatically added to the HTML\n   *      DOM.</li>\n   *      <li>A style tag for CSS (&lt;style /&gt; or &lt;link &gt;)</li>\n   *      <li>Raw text for TEXT</li>\n   *      <li>A formatted JavaScript object defined by JSON</li>\n   *      <li>An XML document</li>\n   *      <li>A binary arraybuffer loaded by XHR</li>\n   *      <li>An audio tag (&lt;audio &gt;) for HTML audio. Note that it is recommended to use SoundJS APIs to play\n   *      loaded audio. Specifically, audio loaded by Flash and WebAudio will return a loader object using this method\n   *      which can not be used to play audio back.</li>\n   * </ul>\n   * This object is also returned via the {{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}} event as the 'item`\n   * parameter. Note that if a raw result is requested, but not found, the result will be returned instead.\n   */\n\n\n  p.getResult = function (value, rawResult) {\n    var item = this._loadItemsById[value] || this._loadItemsBySrc[value];\n\n    if (item == null) {\n      return null;\n    }\n\n    var id = item.id;\n\n    if (rawResult && this._loadedRawResults[id]) {\n      return this._loadedRawResults[id];\n    }\n\n    return this._loadedResults[id];\n  };\n  /**\n   * Generate an list of items loaded by this queue.\n   * @method getItems\n   * @param {Boolean} loaded Determines if only items that have been loaded should be returned. If false, in-progress\n   * and failed load items will also be included.\n   * @returns {Array} A list of objects that have been loaded. Each item includes the {{#crossLink \"LoadItem\"}}{{/crossLink}},\n   * result, and rawResult.\n   * @since 0.6.0\n   */\n\n\n  p.getItems = function (loaded) {\n    var arr = [];\n\n    for (var n in this._loadItemsById) {\n      var item = this._loadItemsById[n];\n      var result = this.getResult(n);\n\n      if (loaded === true && result == null) {\n        continue;\n      }\n\n      arr.push({\n        item: item,\n        result: result,\n        rawResult: this.getResult(n, true)\n      });\n    }\n\n    return arr;\n  };\n  /**\n   * Pause or resume the current load. Active loads will not be cancelled, but the next items in the queue will not\n   * be processed when active loads complete. LoadQueues are not paused by default.\n   *\n   * Note that if new items are added to the queue using {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}} or\n   * {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}, a paused queue will be resumed, unless the `loadNow`\n   * argument is `false`.\n   * @method setPaused\n   * @param {Boolean} value Whether the queue should be paused or not.\n   */\n\n\n  p.setPaused = function (value) {\n    this._paused = value;\n\n    if (!this._paused) {\n      this._loadNext();\n    }\n  };\n  /**\n   * Close the active queue. Closing a queue completely empties the queue, and prevents any remaining items from\n   * starting to download. Note that currently any active loads will remain open, and events may be processed.\n   *\n   * To stop and restart a queue, use the {{#crossLink \"LoadQueue/setPaused\"}}{{/crossLink}} method instead.\n   * @method close\n   */\n\n\n  p.close = function () {\n    while (this._currentLoads.length) {\n      this._currentLoads.pop().cancel();\n    }\n\n    this._scriptOrder.length = 0;\n    this._loadedScripts.length = 0;\n    this.loadStartWasDispatched = false;\n    this._itemCount = 0;\n    this._lastProgress = NaN;\n  }; // protected methods\n\n  /**\n   * Add an item to the queue. Items are formatted into a usable object containing all the properties necessary to\n   * load the content. The load queue is populated with the loader instance that handles preloading, and not the load\n   * item that was passed in by the user. To look up the load item by id or src, use the {{#crossLink \"LoadQueue.getItem\"}}{{/crossLink}}\n   * method.\n   * @method _addItem\n   * @param {String|Object} value The item to add to the queue.\n   * @param {String} [path] An optional path prepended to the `src`. The path will only be prepended if the src is\n   * relative, and does not start with a protocol such as `http://`, or a path like `../`. If the LoadQueue was\n   * provided a {{#crossLink \"_basePath\"}}{{/crossLink}}, then it will optionally be prepended after.\n   * @param {String} [basePath] <strong>Deprecated</strong>An optional basePath passed into a {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}\n   * or {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}} call. This parameter will be removed in a future tagged\n   * version.\n   * @private\n   */\n\n\n  p._addItem = function (value, path, basePath) {\n    var item = this._createLoadItem(value, path, basePath); // basePath and manifest path are added to the src.\n\n\n    if (item == null) {\n      return;\n    } // Sometimes plugins or types should be skipped.\n\n\n    var loader = this._createLoader(item);\n\n    if (loader != null) {\n      if (\"plugins\" in loader) {\n        loader.plugins = this._plugins;\n      }\n\n      item._loader = loader;\n\n      this._loadQueue.push(loader);\n\n      this._loadQueueBackup.push(loader);\n\n      this._numItems++;\n\n      this._updateProgress(); // Only worry about script order when using XHR to load scripts. Tags are only loading one at a time.\n\n\n      if (this.maintainScriptOrder && item.type == createjs.Types.JAVASCRIPT //&& loader instanceof createjs.XHRLoader //NOTE: Have to track all JS files this way\n      || item.maintainOrder === true) {\n        this._scriptOrder.push(item);\n\n        this._loadedScripts.push(null);\n      }\n    }\n  };\n  /**\n   * Create a refined {{#crossLink \"LoadItem\"}}{{/crossLink}}, which contains all the required properties. The type of\n   * item is determined by browser support, requirements based on the file type, and developer settings. For example,\n   * XHR is only used for file types that support it in new browsers.\n   *\n   * Before the item is returned, any plugins registered to handle the type or extension will be fired, which may\n   * alter the load item.\n   * @method _createLoadItem\n   * @param {String | Object | HTMLAudioElement | HTMLImageElement} value The item that needs to be preloaded.\n   * @param {String} [path] A path to prepend to the item's source. Sources beginning with http:// or similar will\n   * not receive a path. Since PreloadJS 0.4.1, the src will be modified to include the `path` and {{#crossLink \"LoadQueue/_basePath:property\"}}{{/crossLink}}\n   * when it is added.\n   * @param {String} [basePath] <strong>Deprectated</strong> A base path to prepend to the items source in addition to\n   * the path argument.\n   * @return {Object} The loader instance that will be used.\n   * @private\n   */\n\n\n  p._createLoadItem = function (value, path, basePath) {\n    var item = createjs.LoadItem.create(value);\n\n    if (item == null) {\n      return null;\n    }\n\n    var bp = \"\"; // Store the generated basePath\n\n    var useBasePath = basePath || this._basePath;\n\n    if (item.src instanceof Object) {\n      if (!item.type) {\n        return null;\n      } // the the src is an object, type is required to pass off to plugin\n\n\n      if (path) {\n        bp = path;\n        var pathMatch = createjs.URLUtils.parseURI(path); // Also append basePath\n\n        if (useBasePath != null && !pathMatch.absolute && !pathMatch.relative) {\n          bp = useBasePath + bp;\n        }\n      } else if (useBasePath != null) {\n        bp = useBasePath;\n      }\n    } else {\n      // Determine Extension, etc.\n      var match = createjs.URLUtils.parseURI(item.src);\n\n      if (match.extension) {\n        item.ext = match.extension;\n      }\n\n      if (item.type == null) {\n        item.type = createjs.RequestUtils.getTypeByExtension(item.ext);\n      } // Inject path & basePath\n\n\n      var autoId = item.src;\n\n      if (!match.absolute && !match.relative) {\n        if (path) {\n          bp = path;\n          var pathMatch = createjs.URLUtils.parseURI(path);\n          autoId = path + autoId; // Also append basePath\n\n          if (useBasePath != null && !pathMatch.absolute && !pathMatch.relative) {\n            bp = useBasePath + bp;\n          }\n        } else if (useBasePath != null) {\n          bp = useBasePath;\n        }\n      }\n\n      item.src = bp + item.src;\n    }\n\n    item.path = bp; // If there's no id, set one now.\n\n    if (item.id === undefined || item.id === null || item.id === \"\") {\n      item.id = autoId;\n    } // Give plugins a chance to modify the loadItem:\n\n\n    var customHandler = this._typeCallbacks[item.type] || this._extensionCallbacks[item.ext];\n\n    if (customHandler) {\n      // Plugins are now passed both the full source, as well as a combined path+basePath (appropriately)\n      var result = customHandler.callback.call(customHandler.scope, item, this); // The plugin will handle the load, or has canceled it. Ignore it.\n\n      if (result === false) {\n        return null; // Load as normal:\n      } else if (result === true) {// Do Nothing\n        // Result is a loader class:\n      } else if (result != null) {\n        item._loader = result;\n      } // Update the extension in case the type changed:\n\n\n      match = createjs.URLUtils.parseURI(item.src);\n\n      if (match.extension != null) {\n        item.ext = match.extension;\n      }\n    } // Store the item for lookup. This also helps clean-up later.\n\n\n    this._loadItemsById[item.id] = item;\n    this._loadItemsBySrc[item.src] = item;\n\n    if (item.crossOrigin == null) {\n      item.crossOrigin = this._crossOrigin;\n    }\n\n    return item;\n  };\n  /**\n   * Create a loader for a load item.\n   * @method _createLoader\n   * @param {Object} item A formatted load item that can be used to generate a loader.\n   * @return {AbstractLoader} A loader that can be used to load content.\n   * @private\n   */\n\n\n  p._createLoader = function (item) {\n    if (item._loader != null) {\n      // A plugin already specified a loader\n      return item._loader;\n    } // Initially, try and use the provided/supported XHR mode:\n\n\n    var preferXHR = this.preferXHR;\n\n    for (var i = 0; i < this._availableLoaders.length; i++) {\n      var loader = this._availableLoaders[i];\n\n      if (loader && loader.canLoadItem(item)) {\n        return new loader(item, preferXHR);\n      }\n    } // TODO: Log error (requires createjs.log)\n\n\n    return null;\n  };\n  /**\n   * Load the next item in the queue. If the queue is empty (all items have been loaded), then the complete event\n   * is processed. The queue will \"fill up\" any empty slots, up to the max connection specified using\n   * {{#crossLink \"LoadQueue.setMaxConnections\"}}{{/crossLink}} method. The only exception is scripts that are loaded\n   * using tags, which have to be loaded one at a time to maintain load order.\n   * @method _loadNext\n   * @private\n   */\n\n\n  p._loadNext = function () {\n    if (this._paused) {\n      return;\n    } // Only dispatch loadstart event when the first file is loaded.\n\n\n    if (!this._loadStartWasDispatched) {\n      this._sendLoadStart();\n\n      this._loadStartWasDispatched = true;\n    } // The queue has completed.\n\n\n    if (this._numItems == this._numItemsLoaded) {\n      this.loaded = true;\n\n      this._sendComplete(); // Load the next queue, if it has been defined.\n\n\n      if (this.next && this.next.load) {\n        this.next.load();\n      }\n    } else {\n      this.loaded = false;\n    } // Must iterate forwards to load in the right order.\n\n\n    for (var i = 0; i < this._loadQueue.length; i++) {\n      if (this._currentLoads.length >= this._maxConnections) {\n        break;\n      }\n\n      var loader = this._loadQueue[i]; // Determine if we should be only loading one tag-script at a time:\n      // Note: maintainOrder items don't do anything here because we can hold onto their loaded value\n\n      if (!this._canStartLoad(loader)) {\n        continue;\n      }\n\n      this._loadQueue.splice(i, 1);\n\n      i--;\n\n      this._loadItem(loader);\n    }\n  };\n  /**\n   * Begin loading an item. Event listeners are not added to the loaders until the load starts.\n   * @method _loadItem\n   * @param {AbstractLoader} loader The loader instance to start. Currently, this will be an XHRLoader or TagLoader.\n   * @private\n   */\n\n\n  p._loadItem = function (loader) {\n    loader.on(\"fileload\", this._handleFileLoad, this);\n    loader.on(\"progress\", this._handleProgress, this);\n    loader.on(\"complete\", this._handleFileComplete, this);\n    loader.on(\"error\", this._handleError, this);\n    loader.on(\"fileerror\", this._handleFileError, this);\n\n    this._currentLoads.push(loader);\n\n    this._sendFileStart(loader.getItem());\n\n    loader.load();\n  };\n  /**\n   * The callback that is fired when a loader loads a file. This enables loaders like {{#crossLink \"ManifestLoader\"}}{{/crossLink}}\n   * to maintain internal queues, but for this queue to dispatch the {{#crossLink \"fileload:event\"}}{{/crossLink}}\n   * events.\n   * @param {Event} event The {{#crossLink \"AbstractLoader/fileload:event\"}}{{/crossLink}} event from the loader.\n   * @private\n   * @since 0.6.0\n   */\n\n\n  p._handleFileLoad = function (event) {\n    event.target = null;\n    this.dispatchEvent(event);\n  };\n  /**\n   * The callback that is fired when a loader encounters an error from an internal file load operation. This enables\n   * loaders like M\n   * @param event\n   * @private\n   */\n\n\n  p._handleFileError = function (event) {\n    var newEvent = new createjs.ErrorEvent(\"FILE_LOAD_ERROR\", null, event.item);\n\n    this._sendError(newEvent);\n  };\n  /**\n   * The callback that is fired when a loader encounters an error. The queue will continue loading unless {{#crossLink \"LoadQueue/stopOnError:property\"}}{{/crossLink}}\n   * is set to `true`.\n   * @method _handleError\n   * @param {ErrorEvent} event The error event, containing relevant error information.\n   * @private\n   */\n\n\n  p._handleError = function (event) {\n    var loader = event.target;\n    this._numItemsLoaded++;\n\n    this._finishOrderedItem(loader, true);\n\n    this._updateProgress();\n\n    var newEvent = new createjs.ErrorEvent(\"FILE_LOAD_ERROR\", null, loader.getItem()); // TODO: Propagate actual error message.\n\n    this._sendError(newEvent);\n\n    if (!this.stopOnError) {\n      this._removeLoadItem(loader);\n\n      this._cleanLoadItem(loader);\n\n      this._loadNext();\n    } else {\n      this.setPaused(true);\n    }\n  };\n  /**\n   * An item has finished loading. We can assume that it is totally loaded, has been parsed for immediate use, and\n   * is available as the \"result\" property on the load item. The raw text result for a parsed item (such as JSON, XML,\n   * CSS, JavaScript, etc) is available as the \"rawResult\" property, and can also be looked up using {{#crossLink \"LoadQueue/getResult\"}}{{/crossLink}}.\n   * @method _handleFileComplete\n   * @param {Event} event The event object from the loader.\n   * @private\n   */\n\n\n  p._handleFileComplete = function (event) {\n    var loader = event.target;\n    var item = loader.getItem();\n    var result = loader.getResult();\n    this._loadedResults[item.id] = result;\n    var rawResult = loader.getResult(true);\n\n    if (rawResult != null && rawResult !== result) {\n      this._loadedRawResults[item.id] = rawResult;\n    }\n\n    this._saveLoadedItems(loader); // Remove the load item\n\n\n    this._removeLoadItem(loader);\n\n    if (!this._finishOrderedItem(loader)) {\n      // The item was NOT managed, so process it now\n      this._processFinishedLoad(item, loader);\n    } // Clean up the load item\n\n\n    this._cleanLoadItem(loader);\n  };\n  /**\n   * Some loaders might load additional content, other than the item they were passed (such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}}).\n   * Any items exposed by the loader using {{#crossLink \"AbstractLoader/getLoadItems\"}}{{/crossLink}} are added to the\n   * LoadQueue's look-ups, including {{#crossLink \"getItem\"}}{{/crossLink}} and {{#crossLink \"getResult\"}}{{/crossLink}}\n   * methods.\n   * @method _saveLoadedItems\n   * @param {AbstractLoader} loader\n   * @protected\n   * @since 0.6.0\n   */\n\n\n  p._saveLoadedItems = function (loader) {\n    // TODO: Not sure how to handle this. Would be nice to expose the items.\n    // Loaders may load sub-items. This adds them to this queue\n    var list = loader.getLoadedItems();\n\n    if (list === null) {\n      return;\n    }\n\n    for (var i = 0; i < list.length; i++) {\n      var item = list[i].item; // Store item lookups\n\n      this._loadItemsBySrc[item.src] = item;\n      this._loadItemsById[item.id] = item; // Store loaded content\n\n      this._loadedResults[item.id] = list[i].result;\n      this._loadedRawResults[item.id] = list[i].rawResult;\n    }\n  };\n  /**\n   * Flag an item as finished. If the item's order is being managed, then ensure that it is allowed to finish, and if\n   * so, trigger prior items to trigger as well.\n   * @method _finishOrderedItem\n   * @param {AbstractLoader} loader\n   * @param {Boolean} loadFailed\n   * @return {Boolean} If the item's order is being managed. This allows the caller to take an alternate\n   * behaviour if it is.\n   * @private\n   */\n\n\n  p._finishOrderedItem = function (loader, loadFailed) {\n    var item = loader.getItem();\n\n    if (this.maintainScriptOrder && item.type == createjs.Types.JAVASCRIPT || item.maintainOrder) {\n      //TODO: Evaluate removal of the _currentlyLoadingScript\n      if (loader instanceof createjs.JavaScriptLoader) {\n        this._currentlyLoadingScript = false;\n      }\n\n      var index = createjs.indexOf(this._scriptOrder, item);\n\n      if (index == -1) {\n        return false;\n      } // This loader no longer exists\n\n\n      this._loadedScripts[index] = loadFailed === true ? true : item;\n\n      this._checkScriptLoadOrder();\n\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * Ensure the scripts load and dispatch in the correct order. When using XHR, scripts are stored in an array in the\n   * order they were added, but with a \"null\" value. When they are completed, the value is set to the load item,\n   * and then when they are processed and dispatched, the value is set to `true`. This method simply\n   * iterates the array, and ensures that any loaded items that are not preceded by a `null` value are\n   * dispatched.\n   * @method _checkScriptLoadOrder\n   * @private\n   */\n\n\n  p._checkScriptLoadOrder = function () {\n    var l = this._loadedScripts.length;\n\n    for (var i = 0; i < l; i++) {\n      var item = this._loadedScripts[i];\n\n      if (item === null) {\n        break;\n      } // This is still loading. Do not process further.\n\n\n      if (item === true) {\n        continue;\n      } // This has completed, and been processed. Move on.\n\n\n      var loadItem = this._loadedResults[item.id];\n\n      if (item.type == createjs.Types.JAVASCRIPT) {\n        // Append script tags to the head automatically.\n        createjs.DomUtils.appendToHead(loadItem);\n      }\n\n      var loader = item._loader;\n\n      this._processFinishedLoad(item, loader);\n\n      this._loadedScripts[i] = true;\n    }\n  };\n  /**\n   * A file has completed loading, and the LoadQueue can move on. This triggers the complete event, and kick-starts\n   * the next item.\n   * @method _processFinishedLoad\n   * @param {LoadItem|Object} item\n   * @param {AbstractLoader} loader\n   * @protected\n   */\n\n\n  p._processFinishedLoad = function (item, loader) {\n    this._numItemsLoaded++; // Since LoadQueue needs maintain order, we can't append scripts in the loader.\n    // So we do it here instead. Or in _checkScriptLoadOrder();\n\n    if (!this.maintainScriptOrder && item.type == createjs.Types.JAVASCRIPT) {\n      var tag = loader.getTag();\n      createjs.DomUtils.appendToHead(tag);\n    }\n\n    this._updateProgress();\n\n    this._sendFileComplete(item, loader);\n\n    this._loadNext();\n  };\n  /**\n   * Ensure items with `maintainOrder=true` that are before the specified item have loaded. This only applies to\n   * JavaScript items that are being loaded with a TagLoader, since they have to be loaded and completed <strong>before</strong>\n   * the script can even be started, since it exist in the DOM while loading.\n   * @method _canStartLoad\n   * @param {AbstractLoader} loader The loader for the item\n   * @return {Boolean} Whether the item can start a load or not.\n   * @private\n   */\n\n\n  p._canStartLoad = function (loader) {\n    if (!this.maintainScriptOrder || loader.preferXHR) {\n      return true;\n    }\n\n    var item = loader.getItem();\n\n    if (item.type != createjs.Types.JAVASCRIPT) {\n      return true;\n    }\n\n    if (this._currentlyLoadingScript) {\n      return false;\n    }\n\n    var index = this._scriptOrder.indexOf(item);\n\n    var i = 0;\n\n    while (i < index) {\n      var checkItem = this._loadedScripts[i];\n\n      if (checkItem == null) {\n        return false;\n      }\n\n      i++;\n    }\n\n    this._currentlyLoadingScript = true;\n    return true;\n  };\n  /**\n   * A load item is completed or was canceled, and needs to be removed from the LoadQueue.\n   * @method _removeLoadItem\n   * @param {AbstractLoader} loader A loader instance to remove.\n   * @private\n   */\n\n\n  p._removeLoadItem = function (loader) {\n    var l = this._currentLoads.length;\n\n    for (var i = 0; i < l; i++) {\n      if (this._currentLoads[i] == loader) {\n        this._currentLoads.splice(i, 1);\n\n        break;\n      }\n    }\n  };\n  /**\n   * Remove unneeded references from a loader.\n   *\n   * @param loader\n   * @private\n   */\n\n\n  p._cleanLoadItem = function (loader) {\n    var item = loader.getItem();\n\n    if (item) {\n      delete item._loader;\n    }\n  };\n  /**\n   * An item has dispatched progress. Propagate that progress, and update the LoadQueue's overall progress.\n   * @method _handleProgress\n   * @param {ProgressEvent} event The progress event from the item.\n   * @private\n   */\n\n\n  p._handleProgress = function (event) {\n    var loader = event.target;\n\n    this._sendFileProgress(loader.getItem(), loader.progress);\n\n    this._updateProgress();\n  };\n  /**\n   * Overall progress has changed, so determine the new progress amount and dispatch it. This changes any time an\n   * item dispatches progress or completes. Note that since we don't always know the actual filesize of items before\n   * they are loaded. In this case, we define a \"slot\" for each item (1 item in 10 would get 10%), and then append\n   * loaded progress on top of the already-loaded items.\n   *\n   * For example, if 5/10 items have loaded, and item 6 is 20% loaded, the total progress would be:\n   * <ul>\n   *      <li>5/10 of the items in the queue (50%)</li>\n   *      <li>plus 20% of item 6's slot (2%)</li>\n   *      <li>equals 52%</li>\n   * </ul>\n   * @method _updateProgress\n   * @private\n   */\n\n\n  p._updateProgress = function () {\n    var loaded = this._numItemsLoaded / this._numItems; // Fully Loaded Progress\n\n    var remaining = this._numItems - this._numItemsLoaded;\n\n    if (remaining > 0) {\n      var chunk = 0;\n\n      for (var i = 0, l = this._currentLoads.length; i < l; i++) {\n        chunk += this._currentLoads[i].progress;\n      }\n\n      loaded += chunk / remaining * (remaining / this._numItems);\n    }\n\n    if (this._lastProgress != loaded) {\n      this._sendProgress(loaded);\n\n      this._lastProgress = loaded;\n    }\n  };\n  /**\n   * Clean out item results, to free them from memory. Mainly, the loaded item and results are cleared from internal\n   * hashes.\n   * @method _disposeItem\n   * @param {LoadItem|Object} item The item that was passed in for preloading.\n   * @private\n   */\n\n\n  p._disposeItem = function (item) {\n    delete this._loadedResults[item.id];\n    delete this._loadedRawResults[item.id];\n    delete this._loadItemsById[item.id];\n    delete this._loadItemsBySrc[item.src];\n  };\n  /**\n   * Dispatch a \"fileprogress\" {{#crossLink \"Event\"}}{{/crossLink}}. Please see the LoadQueue {{#crossLink \"LoadQueue/fileprogress:event\"}}{{/crossLink}}\n   * event for details on the event payload.\n   * @method _sendFileProgress\n   * @param {LoadItem|Object} item The item that is being loaded.\n   * @param {Number} progress The amount the item has been loaded (between 0 and 1).\n   * @protected\n   */\n\n\n  p._sendFileProgress = function (item, progress) {\n    if (this._isCanceled() || this._paused) {\n      return;\n    }\n\n    if (!this.hasEventListener(\"fileprogress\")) {\n      return;\n    } //LM: Rework ProgressEvent to support this?\n\n\n    var event = new createjs.Event(\"fileprogress\");\n    event.progress = progress;\n    event.loaded = progress;\n    event.total = 1;\n    event.item = item;\n    this.dispatchEvent(event);\n  };\n  /**\n   * Dispatch a fileload {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}} event for\n   * details on the event payload.\n   * @method _sendFileComplete\n   * @param {LoadItemObject} item The item that is being loaded.\n   * @param {AbstractLoader} loader\n   * @protected\n   */\n\n\n  p._sendFileComplete = function (item, loader) {\n    if (this._isCanceled() || this._paused) {\n      return;\n    }\n\n    var event = new createjs.Event(\"fileload\");\n    event.loader = loader;\n    event.item = item;\n    event.result = this._loadedResults[item.id];\n    event.rawResult = this._loadedRawResults[item.id]; // This calls a handler specified on the actual load item. Currently, the SoundJS plugin uses this.\n\n    if (item.completeHandler) {\n      item.completeHandler(event);\n    }\n\n    this.hasEventListener(\"fileload\") && this.dispatchEvent(event);\n  };\n  /**\n   * Dispatch a filestart {{#crossLink \"Event\"}}{{/crossLink}} immediately before a file starts to load. Please see\n   * the {{#crossLink \"LoadQueue/filestart:event\"}}{{/crossLink}} event for details on the event payload.\n   * @method _sendFileStart\n   * @param {LoadItem|Object} item The item that is being loaded.\n   * @protected\n   */\n\n\n  p._sendFileStart = function (item) {\n    var event = new createjs.Event(\"filestart\");\n    event.item = item;\n    this.hasEventListener(\"filestart\") && this.dispatchEvent(event);\n  };\n\n  p.toString = function () {\n    return \"[PreloadJS LoadQueue]\";\n  };\n\n  createjs.LoadQueue = createjs.promote(LoadQueue, \"AbstractLoader\");\n})(); //##############################################################################\n// TextLoader.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor\n\n  /**\n   * A loader for Text files.\n   * @class TextLoader\n   * @param {LoadItem|Object} loadItem\n   * @extends AbstractLoader\n   * @constructor\n   */\n\n  function TextLoader(loadItem) {\n    this.AbstractLoader_constructor(loadItem, true, createjs.Types.TEXT);\n  }\n\n  ;\n  var p = createjs.extend(TextLoader, createjs.AbstractLoader);\n  var s = TextLoader; // static methods\n\n  /**\n   * Determines if the loader can load a specific item. This loader loads items that are of type {{#crossLink \"Types/TEXT:property\"}}{{/crossLink}},\n   * but is also the default loader if a file type can not be determined.\n   * @method canLoadItem\n   * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n   * @returns {Boolean} Whether the loader can load the item.\n   * @static\n   */\n\n  s.canLoadItem = function (item) {\n    return item.type == createjs.Types.TEXT;\n  };\n\n  createjs.TextLoader = createjs.promote(TextLoader, \"AbstractLoader\");\n})(); //##############################################################################\n// BinaryLoader.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor\n\n  /**\n   * A loader for binary files. This is useful for loading web audio, or content that requires an ArrayBuffer.\n   * @class BinaryLoader\n   * @param {LoadItem|Object} loadItem\n   * @extends AbstractLoader\n   * @constructor\n   */\n\n  function BinaryLoader(loadItem) {\n    this.AbstractLoader_constructor(loadItem, true, createjs.Types.BINARY);\n    this.on(\"initialize\", this._updateXHR, this);\n  }\n\n  ;\n  var p = createjs.extend(BinaryLoader, createjs.AbstractLoader);\n  var s = BinaryLoader; // static methods\n\n  /**\n   * Determines if the loader can load a specific item. This loader can only load items that are of type\n   * {{#crossLink \"Types/BINARY:property\"}}{{/crossLink}}\n   * @method canLoadItem\n   * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n   * @returns {Boolean} Whether the loader can load the item.\n   * @static\n   */\n\n  s.canLoadItem = function (item) {\n    return item.type == createjs.Types.BINARY;\n  }; // private methods\n\n  /**\n   * Before the item loads, set the response type to \"arraybuffer\"\n   * @property _updateXHR\n   * @param {Event} event\n   * @private\n   */\n\n\n  p._updateXHR = function (event) {\n    event.loader.setResponseType(\"arraybuffer\");\n  };\n\n  createjs.BinaryLoader = createjs.promote(BinaryLoader, \"AbstractLoader\");\n})(); //##############################################################################\n// CSSLoader.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor\n\n  /**\n   * A loader for CSS files.\n   * @class CSSLoader\n   * @param {LoadItem|Object} loadItem\n   * @param {Boolean} preferXHR\n   * @extends AbstractLoader\n   * @constructor\n   */\n\n  function CSSLoader(loadItem, preferXHR) {\n    this.AbstractLoader_constructor(loadItem, preferXHR, createjs.Types.CSS); // public properties\n\n    this.resultFormatter = this._formatResult; // protected properties\n\n    this._tagSrcAttribute = \"href\";\n\n    if (preferXHR) {\n      this._tag = createjs.Elements.style();\n    } else {\n      this._tag = createjs.Elements.link();\n    }\n\n    this._tag.rel = \"stylesheet\";\n    this._tag.type = \"text/css\";\n  }\n\n  ;\n  var p = createjs.extend(CSSLoader, createjs.AbstractLoader);\n  var s = CSSLoader; // static methods\n\n  /**\n   * Determines if the loader can load a specific item. This loader can only load items that are of type\n   * {{#crossLink \"Types/CSS:property\"}}{{/crossLink}}.\n   * @method canLoadItem\n   * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n   * @returns {Boolean} Whether the loader can load the item.\n   * @static\n   */\n\n  s.canLoadItem = function (item) {\n    return item.type == createjs.Types.CSS;\n  }; // protected methods\n\n  /**\n   * The result formatter for CSS files.\n   * @method _formatResult\n   * @param {AbstractLoader} loader\n   * @returns {HTMLLinkElement|HTMLStyleElement}\n   * @private\n   */\n\n\n  p._formatResult = function (loader) {\n    if (this._preferXHR) {\n      var tag = loader.getTag();\n\n      if (tag.styleSheet) {\n        // IE\n        tag.styleSheet.cssText = loader.getResult(true);\n      } else {\n        var textNode = createjs.Elements.text(loader.getResult(true));\n        tag.appendChild(textNode);\n      }\n    } else {\n      tag = this._tag;\n    }\n\n    createjs.DomUtils.appendToHead(tag);\n    return tag;\n  };\n\n  createjs.CSSLoader = createjs.promote(CSSLoader, \"AbstractLoader\");\n})(); //##############################################################################\n// FontLoader.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor:\n\n  /**\n   * A loader that handles font files, CSS definitions, and CSS paths. FontLoader doesn't actually preload fonts\n   * themselves, but rather generates CSS definitions, and then tests the size changes on an HTML5 Canvas element.\n   *\n   * Note that FontLoader does not support tag-based loading due to the requirement that CSS be read to determine the\n   * font definitions to test for.\n   * @class FontLoader\n   * @param {LoadItem|object|string} loadItem The item to be loaded.\n   * @extends AbstractLoader\n   * @constructor\n   **/\n\n  function FontLoader(loadItem, preferXHR) {\n    this.AbstractLoader_constructor(loadItem, preferXHR, loadItem.type); // private properties:\n\n    /**\n     * A lookup of font faces to load.\n     * @property _faces\n     * @protected\n     * @type Object\n     **/\n\n    this._faces = {};\n    /**\n     * A list of font faces currently being \"watched\". Watched fonts will be tested on a regular interval, and be\n     * removed from this list when they are complete.\n     * @oroperty _watched\n     * @type {Array}\n     * @protected\n     */\n\n    this._watched = [];\n    /**\n     * A count of the total font faces to load.\n     * @property _count\n     * @type {number}\n     * @protected\n     * @default 0\n     */\n\n    this._count = 0;\n    /**\n     * The interval for checking if fonts have been loaded.\n     * @property _watchInterval\n     * @type {Number}\n     * @protected\n     */\n\n    this._watchInterval = null;\n    /**\n     * The timeout for determining if a font can't be loaded. Uses the LoadItem {{#crossLink \"LoadImte/timeout:property\"}}{{/crossLink}}\n     * value.\n     * @property _loadTimeout\n     * @type {Number}\n     * @protected\n     */\n\n    this._loadTimeout = null;\n    /**\n     * Determines if generated CSS should be injected into the document.\n     * @property _injectCSS\n     * @type {boolean}\n     * @protected\n     */\n\n    this._injectCSS = loadItem.injectCSS === undefined ? true : loadItem.injectCSS;\n    this.dispatchEvent(\"initialize\");\n  }\n\n  var p = createjs.extend(FontLoader, createjs.AbstractLoader);\n  /**\n   * Determines if the loader can load a specific item. This loader can only load items that are of type\n   * {{#crossLink \"Types/FONT:property\"}}{{/crossLink}}.\n   * @method canLoadItem\n   * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n   * @returns {Boolean} Whether the loader can load the item.\n   * @static\n   */\n\n  FontLoader.canLoadItem = function (item) {\n    return item.type == createjs.Types.FONT || item.type == createjs.Types.FONTCSS;\n  }; // static properties:\n\n  /**\n   * Sample text used by the FontLoader to determine if the font has been loaded. The sample text size is compared\n   * to the loaded font size, and a change indicates that the font has completed.\n   * @property sampleText\n   * @type {String}\n   * @default abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ\n   * @static\n   * @private\n   */\n\n\n  FontLoader.sampleText = \"abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n  /**\n   * The canvas context used to test the font size. Note that this currently requires an HTML DOM.\n   * @property _ctx\n   * @type {CanvasRenderingContext2D}\n   * @static\n   * @private\n   */\n\n  FontLoader._ctx = document.createElement(\"canvas\").getContext(\"2d\"); // TODO: Consider a method to do this like EaselJS Stage has.\n\n  /**\n   * A list of reference fonts to test. Multiple faces are tested to address the rare case of a loaded font being the\n   * exact same dimensions as the test font.\n   * @property _referenceFonts\n   * @type {Array}\n   * @default [\"serif\", \"monospace\"]\n   * @private\n   */\n\n  FontLoader._referenceFonts = [\"serif\", \"monospace\"];\n  /**\n   * A regular expression that pulls out possible style values from the font name.\n   * <ul>\n   *     <li>This includes font names that include thin, normal, book, regular, medium, black, and heavy (such as\n   *     \"Arial Black\")</li>\n   *     <li>Weight modifiers including extra, ultra, semi, demi, light, and bold (such as \"WorkSans SemiBold\")</li>\n   * </ul>\n   *\n   * Weight descriptions map to font weight values by default using the following (from\n   * http://www.w3.org/TR/css3-fonts/#font-weight-numeric-values):\n   * <ul>\n   *     <li>100 - Thin</li>\n   * \t   <li>200 - Extra Light, Ultra Light</li>\n   *     <li>300 - Light, Semi Light, Demi Light</li>\n   *     <li>400 - Normal, Book, Regular</li>\n   *     <li>500 - Medium</li>\n   *     <li>600 - Semi Bold, Demi Bold</li>\n   *     <li>700 - Bold</li>\n   *     <li>800 - Extra Bold, Ultra Bold</li>\n   *     <li>900 - Black, Heavy</li>\n   * </ul>\n   * @property WEIGHT_REGEX\n   * @type {RegExp}\n   * @static\n   */\n\n  FontLoader.WEIGHT_REGEX = /[- ._]*(thin|normal|book|regular|medium|black|heavy|[1-9]00|(?:extra|ultra|semi|demi)?[- ._]*(?:light|bold))[- ._]*/ig;\n  /**\n   * A regular expression that pulls out possible style values from the font name. These include \"italic\"\n   * and \"oblique\".\n   * @property STYLE_REGEX\n   * @type {RegExp}\n   * @static\n   */\n\n  FontLoader.STYLE_REGEX = /[- ._]*(italic|oblique)[- ._]*/ig;\n  /**\n   * A lookup of font types for generating a CSS definition. For example, TTF fonts requires a \"truetype\" type.\n   * @property FONT_FORMAT\n   * @type {Object}\n   * @static\n   */\n\n  FontLoader.FONT_FORMAT = {\n    woff2: \"woff2\",\n    woff: \"woff\",\n    ttf: \"truetype\",\n    otf: \"truetype\"\n  };\n  /**\n   * A lookup of font weights based on a name. These values are from http://www.w3.org/TR/css3-fonts/#font-weight-numeric-values.\n   * @property FONT_WEIGHT\n   * @type {Object}\n   * @static\n   */\n\n  FontLoader.FONT_WEIGHT = {\n    thin: 100,\n    extralight: 200,\n    ultralight: 200,\n    light: 300,\n    semilight: 300,\n    demilight: 300,\n    book: \"normal\",\n    regular: \"normal\",\n    semibold: 600,\n    demibold: 600,\n    extrabold: 800,\n    ultrabold: 800,\n    black: 900,\n    heavy: 900\n  };\n  /**\n   * The frequency in milliseconds to check for loaded fonts.\n   * @property WATCH_DURATION\n   * @type {number}\n   * @default 10\n   * @static\n   */\n\n  FontLoader.WATCH_DURATION = 10; // public methods:\n\n  p.load = function () {\n    if (this.type == createjs.Types.FONTCSS) {\n      var loaded = this._watchCSS(); // If the CSS is not ready, it will create a request, which AbstractLoader can handle.\n\n\n      if (!loaded) {\n        this.AbstractLoader_load();\n        return;\n      }\n    } else if (this._item.src instanceof Array) {\n      this._watchFontArray();\n    } else {\n      var def = this._defFromSrc(this._item.src);\n\n      this._watchFont(def);\n\n      this._injectStyleTag(this._cssFromDef(def));\n    }\n\n    this._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), this._item.loadTimeout);\n    this.dispatchEvent(\"loadstart\");\n  };\n  /**\n   * The font load has timed out. This is called via a <code>setTimeout</code>.\n   * callback.\n   * @method _handleTimeout\n   * @protected\n   */\n\n\n  p._handleTimeout = function () {\n    this._stopWatching();\n\n    this.dispatchEvent(new createjs.ErrorEvent(\"PRELOAD_TIMEOUT\"));\n  }; // WatchCSS does the work for us, and provides a modified src.\n\n\n  p._createRequest = function () {\n    return this._request;\n  }; // Events come from the internal XHR loader.\n\n\n  p.handleEvent = function (event) {\n    switch (event.type) {\n      case \"complete\":\n        this._rawResult = event.target._response;\n        this._result = true;\n\n        this._parseCSS(this._rawResult);\n\n        break;\n\n      case \"error\":\n        this._stopWatching();\n\n        this.AbstractLoader_handleEvent(event);\n        break;\n    }\n  }; // private methods:\n\n  /**\n   * Determine if the provided CSS is a string definition, CSS HTML element, or a CSS file URI. Depending on the\n   * format, the CSS will be parsed, or loaded.\n   * @method _watchCSS\n   * @returns {boolean} Whether or not the CSS is ready\n   * @protected\n   */\n\n\n  p._watchCSS = function () {\n    var src = this._item.src; // An HTMLElement was passed in. Just use it.\n\n    if (src instanceof HTMLStyleElement) {\n      if (this._injectCSS && !src.parentNode) {\n        (document.head || document.getElementsByTagName('head')[0]).appendChild(src);\n      }\n\n      this._injectCSS = false;\n      src = \"\\n\" + src.textContent;\n    } // A CSS string was passed in. Parse and use it\n\n\n    if (src.search(/\\n|\\r|@font-face/i) !== -1) {\n      // css string.\n      this._parseCSS(src);\n\n      return true;\n    } // Load a CSS Path. Note that we CAN NOT load it without XHR because we need to read the CSS definition\n\n\n    this._request = new createjs.XHRRequest(this._item);\n    return false;\n  };\n  /**\n   * Parse a CSS string to determine the fonts to load.\n   * @method _parseCSS\n   * @param {String} css The CSS string to parse\n   * @protected\n   */\n\n\n  p._parseCSS = function (css) {\n    var regex = /@font-face\\s*\\{([^}]+)}/g;\n\n    while (true) {\n      var result = regex.exec(css);\n\n      if (!result) {\n        break;\n      }\n\n      this._watchFont(this._parseFontFace(result[1]));\n    }\n\n    this._injectStyleTag(css);\n  };\n  /**\n   * The provided fonts were an array of object or string definitions. Parse them, and inject any that are ready.\n   * @method _watchFontArray\n   * @protected\n   */\n\n\n  p._watchFontArray = function () {\n    var arr = this._item.src,\n        css = \"\",\n        def;\n\n    for (var i = arr.length - 1; i >= 0; i--) {\n      var o = arr[i];\n\n      if (typeof o === \"string\") {\n        def = this._defFromSrc(o);\n      } else {\n        def = this._defFromObj(o);\n      }\n\n      this._watchFont(def);\n\n      css += this._cssFromDef(def) + \"\\n\";\n    }\n\n    this._injectStyleTag(css);\n  };\n  /**\n   * Inject any style definitions into the document head. This is necessary when the definition is just a string or\n   * object definition in order for the styles to be applied to the document. If the loaded fonts are already HTML CSS\n   * elements, they don't need to be appended again.\n   * @method _injectStyleTag\n   * @param {String} css The CSS string content to be appended to the\n   * @protected\n   */\n\n\n  p._injectStyleTag = function (css) {\n    if (!this._injectCSS) {\n      return;\n    }\n\n    var head = document.head || document.getElementsByTagName('head')[0];\n    var styleTag = document.createElement(\"style\");\n    styleTag.type = \"text/css\";\n\n    if (styleTag.styleSheet) {\n      styleTag.styleSheet.cssText = css;\n    } else {\n      styleTag.appendChild(document.createTextNode(css));\n    }\n\n    head.appendChild(styleTag);\n  };\n  /**\n   * Determine the font face from a CSS definition.\n   * @method _parseFontFace\n   * @param {String} str The CSS string definition\n   * @protected\n   * @return {String} A modified CSS object containing family name, src, style, and weight\n   */\n\n\n  p._parseFontFace = function (str) {\n    var family = this._getCSSValue(str, \"font-family\"),\n        src = this._getCSSValue(str, \"src\");\n\n    if (!family || !src) {\n      return null;\n    }\n\n    return this._defFromObj({\n      family: family,\n      src: src,\n      style: this._getCSSValue(str, \"font-style\"),\n      weight: this._getCSSValue(str, \"font-weight\")\n    });\n  };\n  /**\n   * Add a font to the list of fonts currently being watched. If the font is already watched or loaded, it won't be\n   * added again.\n   * @method _watchFont\n   * @param {Object} def The font definition\n   * @protected\n   */\n\n\n  p._watchFont = function (def) {\n    if (!def || this._faces[def.id]) {\n      return;\n    }\n\n    this._faces[def.id] = def;\n\n    this._watched.push(def);\n\n    this._count++;\n\n    this._calculateReferenceSizes(def);\n\n    this._startWatching();\n  };\n  /**\n   * Create a interval to check for loaded fonts. Only one interval is used for all fonts. The fonts are checked based\n   * on the {{#crossLink \"FontLoader/WATCH_DURATION:property\"}}{{/crossLink}}.\n   * @method _startWatching\n   * @protected\n   */\n\n\n  p._startWatching = function () {\n    if (this._watchInterval != null) {\n      return;\n    }\n\n    this._watchInterval = setInterval(createjs.proxy(this._watch, this), FontLoader.WATCH_DURATION);\n  };\n  /**\n   * Clear the interval used to check fonts. This happens when all fonts are loaded, or an error occurs, such as a\n   * CSS file error, or a load timeout.\n   * @method _stopWatching\n   * @protected\n   */\n\n\n  p._stopWatching = function () {\n    clearInterval(this._watchInterval);\n    clearTimeout(this._loadTimeout);\n    this._watchInterval = null;\n  };\n  /**\n   * Check all the fonts that have not been loaded. The fonts are drawn to a canvas in memory, and if their font size\n   * varies from the default text size, then the font is considered loaded.\n   *\n   * A {{#crossLink \"AbstractLoader/fileload\"}}{{/crossLink}} event will be dispatched when each file is loaded, along\n   * with the font family name as the `item` value. A {{#crossLink \"ProgressEvent\"}}{{/crossLink}} is dispatched a\n   * maximum of one time per check when any fonts are loaded, with the {{#crossLink \"ProgressEvent/progress:property\"}}{{/crossLink}}\n   * value showing the percentage of fonts that have loaded.\n   * @method _watch\n   * @protected\n   */\n\n\n  p._watch = function () {\n    var defs = this._watched,\n        refFonts = FontLoader._referenceFonts,\n        l = defs.length;\n\n    for (var i = l - 1; i >= 0; i--) {\n      var def = defs[i],\n          refs = def.refs;\n\n      for (var j = refs.length - 1; j >= 0; j--) {\n        var w = this._getTextWidth(def.family + \",\" + refFonts[j], def.weight, def.style);\n\n        if (w != refs[j]) {\n          var event = new createjs.Event(\"fileload\");\n          def.type = \"font-family\";\n          event.item = def;\n          this.dispatchEvent(event);\n          defs.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    if (l !== defs.length) {\n      var event = new createjs.ProgressEvent(this._count - defs.length, this._count);\n      this.dispatchEvent(event);\n    }\n\n    if (l === 0) {\n      this._stopWatching();\n\n      this._sendComplete();\n    }\n  };\n  /**\n   * Determine the default size of the reference fonts used to compare against loaded fonts.\n   * @method _calculateReferenceSizes\n   * @param {Object} def The font definition to get the size of.\n   * @protected\n   */\n\n\n  p._calculateReferenceSizes = function (def) {\n    var refFonts = FontLoader._referenceFonts;\n    var refs = def.refs = [];\n\n    for (var i = 0; i < refFonts.length; i++) {\n      refs[i] = this._getTextWidth(refFonts[i], def.weight, def.style);\n    }\n  };\n  /**\n   * Get a CSS definition from a font source and name.\n   * @method _defFromSrc\n   * @param {String} src The font source\n   * @protected\n   */\n\n\n  p._defFromSrc = function (src) {\n    var re = /[- ._]+/g,\n        name = src,\n        ext = null,\n        index;\n    index = name.search(/[?#]/);\n\n    if (index !== -1) {\n      name = name.substr(0, index);\n    }\n\n    index = name.lastIndexOf(\".\");\n\n    if (index !== -1) {\n      ext = name.substr(index + 1);\n      name = name.substr(0, index);\n    }\n\n    index = name.lastIndexOf(\"/\");\n\n    if (index !== -1) {\n      name = name.substr(index + 1);\n    }\n\n    var family = name,\n        weight = family.match(FontLoader.WEIGHT_REGEX);\n\n    if (weight) {\n      weight = weight[0];\n      family = family.replace(weight, \"\");\n      weight = weight.replace(re, \"\").toLowerCase();\n    }\n\n    var style = name.match(FontLoader.STYLE_REGEX);\n\n    if (style) {\n      family = family.replace(style[0], \"\");\n      style = \"italic\";\n    }\n\n    family = family.replace(re, \"\");\n    var cssSrc = \"local('\" + name.replace(re, \" \") + \"'), url('\" + src + \"')\";\n    var format = FontLoader.FONT_FORMAT[ext];\n\n    if (format) {\n      cssSrc += \" format('\" + format + \"')\";\n    }\n\n    return this._defFromObj({\n      family: family,\n      weight: FontLoader.FONT_WEIGHT[weight] || weight,\n      style: style,\n      src: cssSrc\n    });\n  };\n  /**\n   * Get a font definition from a raw font object.\n   * @method _defFromObj\n   * @param {Object} o A raw object provided to the FontLoader\n   * @returns {Object} A standard font object that the FontLoader understands\n   * @protected\n   */\n\n\n  p._defFromObj = function (o) {\n    var def = {\n      family: o.family,\n      src: o.src,\n      style: o.style || \"normal\",\n      weight: o.weight || \"normal\"\n    };\n    def.id = def.family + \";\" + def.style + \";\" + def.weight;\n    return def;\n  };\n  /**\n   * Get CSS from a font definition.\n   * @method _cssFromDef\n   * @param {Object} def A font definition\n   * @returns {string} A CSS string representing the object\n   * @protected\n   */\n\n\n  p._cssFromDef = function (def) {\n    return \"@font-face {\\n\" + \"\\tfont-family: '\" + def.family + \"';\\n\" + \"\\tfont-style: \" + def.style + \";\\n\" + \"\\tfont-weight: \" + def.weight + \";\\n\" + \"\\tsrc: \" + def.src + \";\\n\" + \"}\";\n  };\n  /**\n   * Get the text width of text using the family, weight, and style\n   * @method _getTextWidth\n   * @param {String} family The font family\n   * @param {String} weight The font weight\n   * @param {String} style The font style\n   * @returns {Number} The pixel measurement of the font.\n   * @protected\n   */\n\n\n  p._getTextWidth = function (family, weight, style) {\n    var ctx = FontLoader._ctx;\n    ctx.font = style + \" \" + weight + \" 72px \" + family;\n    return ctx.measureText(FontLoader.sampleText).width;\n  };\n  /**\n   * Get the value of a property from a CSS string. For example, searches a CSS string for the value of the\n   * \"font-family\" property.\n   * @method _getCSSValue\n   * @param {String} str The CSS string to search\n   * @param {String} propName The property name to get the value for\n   * @returns {String} The value in the CSS for the provided property name\n   * @protected\n   */\n\n\n  p._getCSSValue = function (str, propName) {\n    var regex = new RegExp(propName + \":\\s*([^;}]+?)\\s*[;}]\");\n    var result = regex.exec(str);\n\n    if (!result || !result[1]) {\n      return null;\n    }\n\n    return result[1];\n  };\n\n  createjs.FontLoader = createjs.promote(FontLoader, \"AbstractLoader\");\n})(); //##############################################################################\n// ImageLoader.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor\n\n  /**\n   * A loader for image files.\n   * @class ImageLoader\n   * @param {LoadItem|Object} loadItem\n   * @param {Boolean} preferXHR\n   * @extends AbstractLoader\n   * @constructor\n   */\n\n  function ImageLoader(loadItem, preferXHR) {\n    this.AbstractLoader_constructor(loadItem, preferXHR, createjs.Types.IMAGE); // public properties\n\n    this.resultFormatter = this._formatResult; // protected properties\n\n    this._tagSrcAttribute = \"src\"; // Check if the preload item is already a tag.\n\n    if (createjs.DomUtils.isImageTag(loadItem)) {\n      this._tag = loadItem;\n    } else if (createjs.DomUtils.isImageTag(loadItem.src)) {\n      this._tag = loadItem.src;\n    } else if (createjs.DomUtils.isImageTag(loadItem.tag)) {\n      this._tag = loadItem.tag;\n    }\n\n    if (this._tag != null) {\n      this._preferXHR = false;\n    } else {\n      this._tag = createjs.Elements.img();\n    }\n\n    this.on(\"initialize\", this._updateXHR, this);\n  }\n\n  ;\n  var p = createjs.extend(ImageLoader, createjs.AbstractLoader);\n  var s = ImageLoader; // static methods\n\n  /**\n   * Determines if the loader can load a specific item. This loader can only load items that are of type\n   * {{#crossLink \"Types/IMAGE:property\"}}{{/crossLink}}.\n   * @method canLoadItem\n   * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n   * @returns {Boolean} Whether the loader can load the item.\n   * @static\n   */\n\n  s.canLoadItem = function (item) {\n    return item.type == createjs.Types.IMAGE;\n  }; // public methods\n\n\n  p.load = function () {\n    if (this._tag.src != \"\" && this._tag.complete) {\n      this._sendComplete();\n\n      return;\n    }\n\n    var crossOrigin = this._item.crossOrigin;\n\n    if (crossOrigin == true) {\n      crossOrigin = \"Anonymous\";\n    }\n\n    if (crossOrigin != null && !createjs.URLUtils.isLocal(this._item)) {\n      this._tag.crossOrigin = crossOrigin;\n    }\n\n    this.AbstractLoader_load();\n  }; // protected methods\n\n  /**\n   * Before the item loads, set its mimeType and responseType.\n   * @property _updateXHR\n   * @param {Event} event\n   * @private\n   */\n\n\n  p._updateXHR = function (event) {\n    event.loader.mimeType = 'text/plain; charset=x-user-defined-binary'; // Only exists for XHR\n\n    if (event.loader.setResponseType) {\n      event.loader.setResponseType(\"blob\");\n    }\n  };\n  /**\n   * The result formatter for Image files.\n   * @method _formatResult\n   * @param {AbstractLoader} loader\n   * @returns {HTMLImageElement}\n   * @private\n   */\n\n\n  p._formatResult = function (loader) {\n    return this._formatImage;\n  };\n  /**\n   * The asynchronous image formatter function. This is required because images have\n   * a short delay before they are ready.\n   * @method _formatImage\n   * @param {Function} successCallback The method to call when the result has finished formatting\n   * @param {Function} errorCallback The method to call if an error occurs during formatting\n   * @private\n   */\n\n\n  p._formatImage = function (successCallback, errorCallback) {\n    var tag = this._tag;\n    var URL = window.URL || window.webkitURL;\n\n    if (!this._preferXHR) {//document.body.removeChild(tag);\n    } else if (URL) {\n      var objURL = URL.createObjectURL(this.getResult(true));\n      tag.src = objURL;\n      tag.addEventListener(\"load\", this._cleanUpURL, false);\n      tag.addEventListener(\"error\", this._cleanUpURL, false);\n    } else {\n      tag.src = this._item.src;\n    }\n\n    if (tag.complete) {\n      successCallback(tag);\n    } else {\n      tag.onload = createjs.proxy(function () {\n        successCallback(this._tag);\n        tag.onload = tag.onerror = null;\n      }, this);\n      tag.onerror = createjs.proxy(function (event) {\n        errorCallback(new createjs.ErrorEvent('IMAGE_FORMAT', null, event));\n        tag.onload = tag.onerror = null;\n      }, this);\n    }\n  };\n  /**\n   * Clean up the ObjectURL, the tag is done with it. Note that this function is run\n   * as an event listener without a proxy/closure, as it doesn't require it - so do not\n   * include any functionality that requires scope without changing it.\n   * @method _cleanUpURL\n   * @param event\n   * @private\n   */\n\n\n  p._cleanUpURL = function (event) {\n    var URL = window.URL || window.webkitURL;\n    URL.revokeObjectURL(event.target.src);\n  };\n\n  createjs.ImageLoader = createjs.promote(ImageLoader, \"AbstractLoader\");\n})(); //##############################################################################\n// JavaScriptLoader.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor\n\n  /**\n   * A loader for JavaScript files.\n   * @class JavaScriptLoader\n   * @param {LoadItem|Object} loadItem\n   * @param {Boolean} preferXHR\n   * @extends AbstractLoader\n   * @constructor\n   */\n\n  function JavaScriptLoader(loadItem, preferXHR) {\n    this.AbstractLoader_constructor(loadItem, preferXHR, createjs.Types.JAVASCRIPT); // public properties\n\n    this.resultFormatter = this._formatResult; // protected properties\n\n    this._tagSrcAttribute = \"src\";\n    this.setTag(createjs.Elements.script());\n  }\n\n  ;\n  var p = createjs.extend(JavaScriptLoader, createjs.AbstractLoader);\n  var s = JavaScriptLoader; // static methods\n\n  /**\n   * Determines if the loader can load a specific item. This loader can only load items that are of type\n   * {{#crossLink \"Types/JAVASCRIPT:property\"}}{{/crossLink}}\n   * @method canLoadItem\n   * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n   * @returns {Boolean} Whether the loader can load the item.\n   * @static\n   */\n\n  s.canLoadItem = function (item) {\n    return item.type == createjs.Types.JAVASCRIPT;\n  }; // protected methods\n\n  /**\n   * The result formatter for JavaScript files.\n   * @method _formatResult\n   * @param {AbstractLoader} loader\n   * @returns {HTMLLinkElement|HTMLStyleElement}\n   * @private\n   */\n\n\n  p._formatResult = function (loader) {\n    var tag = loader.getTag();\n\n    if (this._preferXHR) {\n      tag.text = loader.getResult(true);\n    }\n\n    return tag;\n  };\n\n  createjs.JavaScriptLoader = createjs.promote(JavaScriptLoader, \"AbstractLoader\");\n})(); //##############################################################################\n// JSONLoader.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor\n\n  /**\n   * A loader for JSON files. To load JSON cross-domain, use JSONP and the {{#crossLink \"JSONPLoader\"}}{{/crossLink}}\n   * instead. To load JSON-formatted manifests, use {{#crossLink \"ManifestLoader\"}}{{/crossLink}}, and to\n   * load EaselJS SpriteSheets, use {{#crossLink \"SpriteSheetLoader\"}}{{/crossLink}}.\n   * @class JSONLoader\n   * @param {LoadItem|Object} loadItem\n   * @extends AbstractLoader\n   * @constructor\n   */\n\n  function JSONLoader(loadItem) {\n    this.AbstractLoader_constructor(loadItem, true, createjs.Types.JSON); // public properties\n\n    this.resultFormatter = this._formatResult;\n  }\n\n  ;\n  var p = createjs.extend(JSONLoader, createjs.AbstractLoader);\n  var s = JSONLoader; // static methods\n\n  /**\n   * Determines if the loader can load a specific item. This loader can only load items that are of type\n   * {{#crossLink \"Types/JSON:property\"}}{{/crossLink}}.\n   * @method canLoadItem\n   * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n   * @returns {Boolean} Whether the loader can load the item.\n   * @static\n   */\n\n  s.canLoadItem = function (item) {\n    return item.type == createjs.Types.JSON;\n  }; // protected methods\n\n  /**\n   * The result formatter for JSON files.\n   * @method _formatResult\n   * @param {AbstractLoader} loader\n   * @returns {HTMLLinkElement|HTMLStyleElement}\n   * @private\n   */\n\n\n  p._formatResult = function (loader) {\n    var json = null;\n\n    try {\n      json = createjs.DataUtils.parseJSON(loader.getResult(true));\n    } catch (e) {\n      var event = new createjs.ErrorEvent(\"JSON_FORMAT\", null, e);\n\n      this._sendError(event);\n\n      return e;\n    }\n\n    return json;\n  };\n\n  createjs.JSONLoader = createjs.promote(JSONLoader, \"AbstractLoader\");\n})(); //##############################################################################\n// JSONPLoader.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor\n\n  /**\n   * A loader for JSONP files, which are JSON-formatted text files, wrapped in a callback. To load regular JSON\n   * without a callback use the {{#crossLink \"JSONLoader\"}}{{/crossLink}} instead. To load JSON-formatted manifests,\n   * use {{#crossLink \"ManifestLoader\"}}{{/crossLink}}, and to load EaselJS SpriteSheets, use\n   * {{#crossLink \"SpriteSheetLoader\"}}{{/crossLink}}.\n   *\n   * JSONP is a format that provides a solution for loading JSON files cross-domain <em>without</em> requiring CORS.\n   * JSONP files are loaded as JavaScript, and the \"callback\" is executed once they are loaded. The callback in the\n   * JSONP must match the callback passed to the loadItem.\n   *\n   * <h4>Example JSONP</h4>\n   *\n   * \t\tcallbackName({\n   * \t\t\t\"name\": \"value\",\n   *\t \t\t\"num\": 3,\n   *\t\t\t\"obj\": { \"bool\":true }\n   * \t\t});\n   *\n   * <h4>Example</h4>\n   *\n   * \t\tvar loadItem = {id:\"json\", type:\"jsonp\", src:\"http://server.com/text.json\", callback:\"callbackName\"}\n   * \t\tvar queue = new createjs.LoadQueue();\n   * \t\tqueue.on(\"complete\", handleComplete);\n   * \t\tqueue.loadItem(loadItem);\n   *\n   * \t\tfunction handleComplete(event) }\n   * \t\t\tvar json = queue.getResult(\"json\");\n   * \t\t\tconsole.log(json.obj.bool); // true\n   * \t\t}\n   *\n   * JSONP files loaded concurrently require a <em>unique</em> callback. To ensure JSONP files are loaded in order,\n   * either use the {{#crossLink \"LoadQueue/setMaxConnections\"}}{{/crossLink}} method (set to 1), or set\n   * {{#crossLink \"LoadItem/maintainOrder:property\"}}{{/crossLink}} on items with the same callback.\n   *\n   * Important note: Some browsers will prevent JSONP from firing the callback if the file was loaded as JSON, and not\n   * JavaScript. You may have to have your server give you a JavaScript mime-type for this to work.\n   *\n   * @class JSONPLoader\n   * @param {LoadItem|Object} loadItem\n   * @extends AbstractLoader\n   * @constructor\n   */\n\n  function JSONPLoader(loadItem) {\n    this.AbstractLoader_constructor(loadItem, false, createjs.Types.JSONP);\n    this.setTag(createjs.Elements.script());\n    this.getTag().type = \"text/javascript\";\n  }\n\n  ;\n  var p = createjs.extend(JSONPLoader, createjs.AbstractLoader);\n  var s = JSONPLoader; // static methods\n\n  /**\n   * Determines if the loader can load a specific item. This loader can only load items that are of type\n   * {{#crossLink \"Types/JSONP:property\"}}{{/crossLink}}.\n   * @method canLoadItem\n   * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n   * @returns {Boolean} Whether the loader can load the item.\n   * @static\n   */\n\n  s.canLoadItem = function (item) {\n    return item.type == createjs.Types.JSONP;\n  }; // public methods\n\n\n  p.cancel = function () {\n    this.AbstractLoader_cancel();\n\n    this._dispose();\n  };\n  /**\n   * Loads the JSONp file.  Because of the unique loading needs of JSONp\n   * we don't use the AbstractLoader.load() method.\n   *\n   * @method load\n   *\n   */\n\n\n  p.load = function () {\n    if (this._item.callback == null) {\n      throw new Error('callback is required for loading JSONP requests.');\n    } // TODO: Look into creating our own iFrame to handle the load\n    // In the first attempt, FF did not get the result\n    //   result instanceof Object did not work either\n    //   so we would need to clone the result.\n\n\n    if (window[this._item.callback] != null) {\n      throw new Error(\"JSONP callback '\" + this._item.callback + \"' already exists on window. You need to specify a different callback or re-name the current one.\");\n    }\n\n    window[this._item.callback] = createjs.proxy(this._handleLoad, this);\n    createjs.DomUtils.appendToBody(this._tag);\n    this._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), this._item.loadTimeout); // Load the tag\n\n    this._tag.src = this._item.src;\n  }; // private methods\n\n  /**\n   * Handle the JSONP callback, which is a public method defined on `window`.\n   * @method _handleLoad\n   * @param {Object} data The formatted JSON data.\n   * @private\n   */\n\n\n  p._handleLoad = function (data) {\n    this._result = this._rawResult = data;\n\n    this._sendComplete();\n\n    this._dispose();\n  };\n  /**\n   * The tag request has not loaded within the time specfied in loadTimeout.\n   * @method _handleError\n   * @param {Object} event The XHR error event.\n   * @private\n   */\n\n\n  p._handleTimeout = function () {\n    this._dispose();\n\n    this.dispatchEvent(new createjs.ErrorEvent(\"timeout\"));\n  };\n  /**\n   * Clean up the JSONP load. This clears out the callback and script tag that this loader creates.\n   * @method _dispose\n   * @private\n   */\n\n\n  p._dispose = function () {\n    createjs.DomUtils.removeChild(this._tag);\n    delete window[this._item.callback];\n    clearTimeout(this._loadTimeout);\n  };\n\n  createjs.JSONPLoader = createjs.promote(JSONPLoader, \"AbstractLoader\");\n})(); //##############################################################################\n// ManifestLoader.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor\n\n  /**\n   * A loader for JSON manifests. Items inside the manifest are loaded before the loader completes. To load manifests\n   * using JSONP, specify a {{#crossLink \"LoadItem/callback:property\"}}{{/crossLink}} as part of the\n   * {{#crossLink \"LoadItem\"}}{{/crossLink}}.\n   *\n   * The list of files in the manifest must be defined on the top-level JSON object in a `manifest` property. This\n   * example shows a sample manifest definition, as well as how to to include a sub-manifest.\n   *\n   * \t\t{\n   * \t\t\t\"path\": \"assets/\",\n   *\t \t    \"manifest\": [\n   *\t\t\t\t\"image.png\",\n   *\t\t\t\t{\"src\": \"image2.png\", \"id\":\"image2\"},\n   *\t\t\t\t{\"src\": \"sub-manifest.json\", \"type\":\"manifest\", \"callback\":\"jsonCallback\"}\n   *\t \t    ]\n   *\t \t}\n   *\n   * When a ManifestLoader has completed loading, the parent loader (usually a {{#crossLink \"LoadQueue\"}}{{/crossLink}},\n   * but could also be another ManifestLoader) will inherit all the loaded items, so you can access them directly.\n   *\n   * Note that the {{#crossLink \"JSONLoader\"}}{{/crossLink}} and {{#crossLink \"JSONPLoader\"}}{{/crossLink}} are\n   * higher priority loaders, so manifests <strong>must</strong> set the {{#crossLink \"LoadItem\"}}{{/crossLink}}\n   * {{#crossLink \"LoadItem/type:property\"}}{{/crossLink}} property to {{#crossLink \"Types/MANIFEST:property\"}}{{/crossLink}}.\n   *\n   * Additionally, some browsers require the server to serve a JavaScript mime-type for JSONP, so it may not work in\n   * some conditions.\n   * @class ManifestLoader\n   * @param {LoadItem|Object} loadItem\n   * @extends AbstractLoader\n   * @constructor\n   */\n\n  function ManifestLoader(loadItem, preferXHR) {\n    this.AbstractLoader_constructor(loadItem, preferXHR, createjs.Types.MANIFEST); // Public Properties\n\n    /**\n     * An array of the plugins registered using {{#crossLink \"LoadQueue/installPlugin\"}}{{/crossLink}},\n     * used to pass plugins to new LoadQueues that may be created.\n     * @property _plugins\n     * @type {Array}\n     * @private\n     * @since 0.6.1\n     */\n\n    this.plugins = null; // Protected Properties\n\n    /**\n     * An internal {{#crossLink \"LoadQueue\"}}{{/crossLink}} that loads the contents of the manifest.\n     * @property _manifestQueue\n     * @type {LoadQueue}\n     * @private\n     */\n\n    this._manifestQueue = null;\n  }\n\n  ;\n  var p = createjs.extend(ManifestLoader, createjs.AbstractLoader);\n  var s = ManifestLoader; // static properties\n\n  /**\n   * The amount of progress that the manifest itself takes up.\n   * @property MANIFEST_PROGRESS\n   * @type {number}\n   * @default 0.25 (25%)\n   * @private\n   * @static\n   */\n\n  s.MANIFEST_PROGRESS = 0.25; // static methods\n\n  /**\n   * Determines if the loader can load a specific item. This loader can only load items that are of type\n   * {{#crossLink \"Types/MANIFEST:property\"}}{{/crossLink}}\n   * @method canLoadItem\n   * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n   * @returns {Boolean} Whether the loader can load the item.\n   * @static\n   */\n\n  s.canLoadItem = function (item) {\n    return item.type == createjs.Types.MANIFEST;\n  }; // public methods\n\n\n  p.load = function () {\n    this.AbstractLoader_load();\n  }; // protected methods\n\n\n  p._createRequest = function () {\n    var callback = this._item.callback;\n\n    if (callback != null) {\n      this._request = new createjs.JSONPLoader(this._item);\n    } else {\n      this._request = new createjs.JSONLoader(this._item);\n    }\n  };\n\n  p.handleEvent = function (event) {\n    switch (event.type) {\n      case \"complete\":\n        this._rawResult = event.target.getResult(true);\n        this._result = event.target.getResult();\n\n        this._sendProgress(s.MANIFEST_PROGRESS);\n\n        this._loadManifest(this._result);\n\n        return;\n\n      case \"progress\":\n        event.loaded *= s.MANIFEST_PROGRESS;\n        this.progress = event.loaded / event.total;\n\n        if (isNaN(this.progress) || this.progress == Infinity) {\n          this.progress = 0;\n        }\n\n        this._sendProgress(event);\n\n        return;\n    }\n\n    this.AbstractLoader_handleEvent(event);\n  };\n\n  p.destroy = function () {\n    this.AbstractLoader_destroy();\n\n    this._manifestQueue.close();\n  };\n  /**\n   * Create and load the manifest items once the actual manifest has been loaded.\n   * @method _loadManifest\n   * @param {Object} json\n   * @private\n   */\n\n\n  p._loadManifest = function (json) {\n    if (json && json.manifest) {\n      var queue = this._manifestQueue = new createjs.LoadQueue(this._preferXHR);\n      queue.on(\"fileload\", this._handleManifestFileLoad, this);\n      queue.on(\"progress\", this._handleManifestProgress, this);\n      queue.on(\"complete\", this._handleManifestComplete, this, true);\n      queue.on(\"error\", this._handleManifestError, this, true);\n\n      for (var i = 0, l = this.plugins.length; i < l; i++) {\n        // conserve order of plugins\n        queue.installPlugin(this.plugins[i]);\n      }\n\n      queue.loadManifest(json);\n    } else {\n      this._sendComplete();\n    }\n  };\n  /**\n   * An item from the {{#crossLink \"_manifestQueue:property\"}}{{/crossLink}} has completed.\n   * @method _handleManifestFileLoad\n   * @param {Event} event\n   * @private\n   */\n\n\n  p._handleManifestFileLoad = function (event) {\n    event.target = null;\n    this.dispatchEvent(event);\n  };\n  /**\n   * The manifest has completed loading. This triggers the {{#crossLink \"AbstractLoader/complete:event\"}}{{/crossLink}}\n   * {{#crossLink \"Event\"}}{{/crossLink}} from the ManifestLoader.\n   * @method _handleManifestComplete\n   * @param {Event} event\n   * @private\n   */\n\n\n  p._handleManifestComplete = function (event) {\n    this._loadedItems = this._manifestQueue.getItems(true);\n\n    this._sendComplete();\n  };\n  /**\n   * The manifest has reported progress.\n   * @method _handleManifestProgress\n   * @param {ProgressEvent} event\n   * @private\n   */\n\n\n  p._handleManifestProgress = function (event) {\n    this.progress = event.progress * (1 - s.MANIFEST_PROGRESS) + s.MANIFEST_PROGRESS;\n\n    this._sendProgress(this.progress);\n  };\n  /**\n   * The manifest has reported an error with one of the files.\n   * @method _handleManifestError\n   * @param {ErrorEvent} event\n   * @private\n   */\n\n\n  p._handleManifestError = function (event) {\n    var newEvent = new createjs.Event(\"fileerror\");\n    newEvent.item = event.data;\n    this.dispatchEvent(newEvent);\n  };\n\n  createjs.ManifestLoader = createjs.promote(ManifestLoader, \"AbstractLoader\");\n})(); //##############################################################################\n// SoundLoader.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor\n\n  /**\n   * A loader for HTML audio files. PreloadJS can not load WebAudio files, as a WebAudio context is required, which\n   * should be created by either a library playing the sound (such as <a href=\"http://soundjs.com\">SoundJS</a>, or an\n   * external framework that handles audio playback. To load content that can be played by WebAudio, use the\n   * {{#crossLink \"BinaryLoader\"}}{{/crossLink}}, and handle the audio context decoding manually.\n   * @class SoundLoader\n   * @param {LoadItem|Object} loadItem\n   * @param {Boolean} preferXHR\n   * @extends AbstractMediaLoader\n   * @constructor\n   */\n\n  function SoundLoader(loadItem, preferXHR) {\n    this.AbstractMediaLoader_constructor(loadItem, preferXHR, createjs.Types.SOUND); // protected properties\n\n    if (createjs.DomUtils.isAudioTag(loadItem)) {\n      this._tag = loadItem;\n    } else if (createjs.DomUtils.isAudioTag(loadItem.src)) {\n      this._tag = loadItem;\n    } else if (createjs.DomUtils.isAudioTag(loadItem.tag)) {\n      this._tag = createjs.DomUtils.isAudioTag(loadItem) ? loadItem : loadItem.src;\n    }\n\n    if (this._tag != null) {\n      this._preferXHR = false;\n    }\n  }\n\n  ;\n  var p = createjs.extend(SoundLoader, createjs.AbstractMediaLoader);\n  var s = SoundLoader; // static methods\n\n  /**\n   * Determines if the loader can load a specific item. This loader can only load items that are of type\n   * {{#crossLink \"Types/SOUND:property\"}}{{/crossLink}}.\n   * @method canLoadItem\n   * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n   * @returns {Boolean} Whether the loader can load the item.\n   * @static\n   */\n\n  s.canLoadItem = function (item) {\n    return item.type == createjs.Types.SOUND;\n  }; // protected methods\n\n\n  p._createTag = function (src) {\n    var tag = createjs.Elements.audio();\n    tag.autoplay = false;\n    tag.preload = \"none\"; //LM: Firefox fails when this the preload=\"none\" for other tags, but it needs to be \"none\" to ensure PreloadJS works.\n\n    tag.src = src;\n    return tag;\n  };\n\n  createjs.SoundLoader = createjs.promote(SoundLoader, \"AbstractMediaLoader\");\n})(); //##############################################################################\n// VideoLoader.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor\n\n  /**\n   * A loader for video files.\n   * @class VideoLoader\n   * @param {LoadItem|Object} loadItem\n   * @param {Boolean} preferXHR\n   * @extends AbstractMediaLoader\n   * @constructor\n   */\n\n  function VideoLoader(loadItem, preferXHR) {\n    this.AbstractMediaLoader_constructor(loadItem, preferXHR, createjs.Types.VIDEO);\n\n    if (createjs.DomUtils.isVideoTag(loadItem) || createjs.DomUtils.isVideoTag(loadItem.src)) {\n      this.setTag(createjs.DomUtils.isVideoTag(loadItem) ? loadItem : loadItem.src); // We can't use XHR for a tag that's passed in.\n\n      this._preferXHR = false;\n    } else {\n      this.setTag(this._createTag());\n    }\n  }\n\n  ;\n  var p = createjs.extend(VideoLoader, createjs.AbstractMediaLoader);\n  var s = VideoLoader;\n  /**\n   * Create a new video tag\n   *\n   * @returns {HTMLElement}\n   * @private\n   */\n\n  p._createTag = function () {\n    return createjs.Elements.video();\n  }; // static methods\n\n  /**\n   * Determines if the loader can load a specific item. This loader can only load items that are of type\n   * {{#crossLink \"Types/VIDEO:property\"}}{{/crossLink}}.\n   * @method canLoadItem\n   * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n   * @returns {Boolean} Whether the loader can load the item.\n   * @static\n   */\n\n\n  s.canLoadItem = function (item) {\n    return item.type == createjs.Types.VIDEO;\n  };\n\n  createjs.VideoLoader = createjs.promote(VideoLoader, \"AbstractMediaLoader\");\n})(); //##############################################################################\n// SpriteSheetLoader.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor\n\n  /**\n   * A loader for EaselJS SpriteSheets. Images inside the spritesheet definition are loaded before the loader\n   * completes. To load SpriteSheets using JSONP, specify a {{#crossLink \"LoadItem/callback:property\"}}{{/crossLink}}\n   * as part of the {{#crossLink \"LoadItem\"}}{{/crossLink}}. Note that the {{#crossLink \"JSONLoader\"}}{{/crossLink}}\n   * and {{#crossLink \"JSONPLoader\"}}{{/crossLink}} are higher priority loaders, so SpriteSheets <strong>must</strong>\n   * set the {{#crossLink \"LoadItem\"}}{{/crossLink}} {{#crossLink \"LoadItem/type:property\"}}{{/crossLink}} property\n   * to {{#crossLink \"Types/SPRITESHEET:property\"}}{{/crossLink}}.\n   *\n   * The {{#crossLink \"LoadItem\"}}{{/crossLink}} {{#crossLink \"LoadItem/crossOrigin:property\"}}{{/crossLink}} as well\n   * as the {{#crossLink \"LoadQueue's\"}}{{/crossLink}} `basePath` argument and {{#crossLink \"LoadQueue/_preferXHR\"}}{{/crossLink}}\n   * property supplied to the {{#crossLink \"LoadQueue\"}}{{/crossLink}} are passed on to the sub-manifest that loads\n   * the SpriteSheet images.\n   *\n   * Note that the SpriteSheet JSON does not respect the {{#crossLink \"LoadQueue/_preferXHR:property\"}}{{/crossLink}}\n   * property, which should instead be determined by the presence of a {{#crossLink \"LoadItem/callback:property\"}}{{/crossLink}}\n   * property on the SpriteSheet load item. This is because the JSON loaded will have a different format depending on\n   * if it is loaded as JSON, so just changing `preferXHR` is not enough to change how it is loaded.\n   * @class SpriteSheetLoader\n   * @param {LoadItem|Object} loadItem\n   * @extends AbstractLoader\n   * @constructor\n   */\n\n  function SpriteSheetLoader(loadItem, preferXHR) {\n    this.AbstractLoader_constructor(loadItem, preferXHR, createjs.Types.SPRITESHEET); // protected properties\n\n    /**\n     * An internal queue which loads the SpriteSheet's images.\n     * @method _manifestQueue\n     * @type {LoadQueue}\n     * @private\n     */\n\n    this._manifestQueue = null;\n  }\n\n  var p = createjs.extend(SpriteSheetLoader, createjs.AbstractLoader);\n  var s = SpriteSheetLoader; // static properties\n\n  /**\n   * The amount of progress that the manifest itself takes up.\n   * @property SPRITESHEET_PROGRESS\n   * @type {number}\n   * @default 0.25 (25%)\n   * @private\n   * @static\n   */\n\n  s.SPRITESHEET_PROGRESS = 0.25; // static methods\n\n  /**\n   * Determines if the loader can load a specific item. This loader can only load items that are of type\n   * {{#crossLink \"Types/SPRITESHEET:property\"}}{{/crossLink}}\n   * @method canLoadItem\n   * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n   * @returns {Boolean} Whether the loader can load the item.\n   * @static\n   */\n\n  s.canLoadItem = function (item) {\n    return item.type == createjs.Types.SPRITESHEET;\n  }; // public methods\n\n\n  p.destroy = function () {\n    this.AbstractLoader_destroy();\n\n    this._manifestQueue.close();\n  }; // protected methods\n\n\n  p._createRequest = function () {\n    var callback = this._item.callback;\n\n    if (callback != null) {\n      this._request = new createjs.JSONPLoader(this._item);\n    } else {\n      this._request = new createjs.JSONLoader(this._item);\n    }\n  };\n\n  p.handleEvent = function (event) {\n    switch (event.type) {\n      case \"complete\":\n        this._rawResult = event.target.getResult(true);\n        this._result = event.target.getResult();\n\n        this._sendProgress(s.SPRITESHEET_PROGRESS);\n\n        this._loadManifest(this._result);\n\n        return;\n\n      case \"progress\":\n        event.loaded *= s.SPRITESHEET_PROGRESS;\n        this.progress = event.loaded / event.total;\n\n        if (isNaN(this.progress) || this.progress == Infinity) {\n          this.progress = 0;\n        }\n\n        this._sendProgress(event);\n\n        return;\n    }\n\n    this.AbstractLoader_handleEvent(event);\n  };\n  /**\n   * Create and load the images once the SpriteSheet JSON has been loaded.\n   * @method _loadManifest\n   * @param {Object} json\n   * @private\n   */\n\n\n  p._loadManifest = function (json) {\n    if (json && json.images) {\n      var queue = this._manifestQueue = new createjs.LoadQueue(this._preferXHR, this._item.path, this._item.crossOrigin);\n      queue.on(\"complete\", this._handleManifestComplete, this, true);\n      queue.on(\"fileload\", this._handleManifestFileLoad, this);\n      queue.on(\"progress\", this._handleManifestProgress, this);\n      queue.on(\"error\", this._handleManifestError, this, true);\n      queue.loadManifest(json.images);\n    }\n  };\n  /**\n   * An item from the {{#crossLink \"_manifestQueue:property\"}}{{/crossLink}} has completed.\n   * @method _handleManifestFileLoad\n   * @param {Event} event\n   * @private\n   */\n\n\n  p._handleManifestFileLoad = function (event) {\n    var image = event.result;\n\n    if (image != null) {\n      var images = this.getResult().images;\n      var pos = images.indexOf(event.item.src);\n      images[pos] = image;\n    }\n  };\n  /**\n   * The images have completed loading. This triggers the {{#crossLink \"AbstractLoader/complete:event\"}}{{/crossLink}}\n   * {{#crossLink \"Event\"}}{{/crossLink}} from the SpriteSheetLoader.\n   * @method _handleManifestComplete\n   * @param {Event} event\n   * @private\n   */\n\n\n  p._handleManifestComplete = function (event) {\n    this._result = new createjs.SpriteSheet(this._result);\n    this._loadedItems = this._manifestQueue.getItems(true);\n\n    this._sendComplete();\n  };\n  /**\n   * The images {{#crossLink \"LoadQueue\"}}{{/crossLink}} has reported progress.\n   * @method _handleManifestProgress\n   * @param {ProgressEvent} event\n   * @private\n   */\n\n\n  p._handleManifestProgress = function (event) {\n    this.progress = event.progress * (1 - s.SPRITESHEET_PROGRESS) + s.SPRITESHEET_PROGRESS;\n\n    this._sendProgress(this.progress);\n  };\n  /**\n   * An image has reported an error.\n   * @method _handleManifestError\n   * @param {ErrorEvent} event\n   * @private\n   */\n\n\n  p._handleManifestError = function (event) {\n    var newEvent = new createjs.Event(\"fileerror\");\n    newEvent.item = event.data;\n    this.dispatchEvent(newEvent);\n  };\n\n  createjs.SpriteSheetLoader = createjs.promote(SpriteSheetLoader, \"AbstractLoader\");\n})(); //##############################################################################\n// SVGLoader.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor\n\n  /**\n   * A loader for SVG files.\n   * @class SVGLoader\n   * @param {LoadItem|Object} loadItem\n   * @param {Boolean} preferXHR\n   * @extends AbstractLoader\n   * @constructor\n   */\n\n  function SVGLoader(loadItem, preferXHR) {\n    this.AbstractLoader_constructor(loadItem, preferXHR, createjs.Types.SVG); // public properties\n\n    this.resultFormatter = this._formatResult; // protected properties\n\n    this._tagSrcAttribute = \"data\";\n\n    if (preferXHR) {\n      this.setTag(createjs.Elements.svg());\n    } else {\n      this.setTag(createjs.Elements.object());\n      this.getTag().type = \"image/svg+xml\";\n    }\n  }\n\n  ;\n  var p = createjs.extend(SVGLoader, createjs.AbstractLoader);\n  var s = SVGLoader; // static methods\n\n  /**\n   * Determines if the loader can load a specific item. This loader can only load items that are of type\n   * {{#crossLink \"Types/SVG:property\"}}{{/crossLink}}\n   * @method canLoadItem\n   * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n   * @returns {Boolean} Whether the loader can load the item.\n   * @static\n   */\n\n  s.canLoadItem = function (item) {\n    return item.type == createjs.Types.SVG;\n  }; // protected methods\n\n  /**\n   * The result formatter for SVG files.\n   * @method _formatResult\n   * @param {AbstractLoader} loader\n   * @returns {Object}\n   * @private\n   */\n\n\n  p._formatResult = function (loader) {\n    // mime should be image/svg+xml, but Opera requires text/xml\n    var xml = createjs.DataUtils.parseXML(loader.getResult(true));\n    var tag = loader.getTag();\n\n    if (!this._preferXHR && document.body.contains(tag)) {\n      document.body.removeChild(tag);\n    }\n\n    if (xml.documentElement != null) {\n      var element = xml.documentElement; // Support loading an SVG from a different domain in ID\n\n      if (document.importNode) {\n        element = document.importNode(element, true);\n      }\n\n      tag.appendChild(element);\n      return tag;\n    } else {\n      // For browsers that don't support SVG, just give them the XML. (IE 9-8)\n      return xml;\n    }\n  };\n\n  createjs.SVGLoader = createjs.promote(SVGLoader, \"AbstractLoader\");\n})(); //##############################################################################\n// XMLLoader.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor\n\n  /**\n   * A loader for CSS files.\n   * @class XMLLoader\n   * @param {LoadItem|Object} loadItem\n   * @extends AbstractLoader\n   * @constructor\n   */\n\n  function XMLLoader(loadItem) {\n    this.AbstractLoader_constructor(loadItem, true, createjs.Types.XML); // public properties\n\n    this.resultFormatter = this._formatResult;\n  }\n\n  ;\n  var p = createjs.extend(XMLLoader, createjs.AbstractLoader);\n  var s = XMLLoader; // static methods\n\n  /**\n   * Determines if the loader can load a specific item. This loader can only load items that are of type\n   * {{#crossLink \"Types/XML:property\"}}{{/crossLink}}.\n   * @method canLoadItem\n   * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n   * @returns {Boolean} Whether the loader can load the item.\n   * @static\n   */\n\n  s.canLoadItem = function (item) {\n    return item.type == createjs.Types.XML;\n  }; // protected methods\n\n  /**\n   * The result formatter for XML files.\n   * @method _formatResult\n   * @param {AbstractLoader} loader\n   * @returns {XMLDocument}\n   * @private\n   */\n\n\n  p._formatResult = function (loader) {\n    return createjs.DataUtils.parseXML(loader.getResult(true));\n  };\n\n  createjs.XMLLoader = createjs.promote(XMLLoader, \"AbstractLoader\");\n})();","map":{"version":3,"sources":["/home/luong/kobuki_web/node_modules/latest-createjs/lib/preloadjs/preloadjs.js"],"names":["window","createjs","s","PreloadJS","version","buildDate","extend","subclass","superclass","o","constructor","prototype","promote","prefix","subP","supP","Object","getPrototypeOf","__proto__","n","hasOwnProperty","deprecate","fallbackMethod","name","msg","console","warn","log","apply","arguments","proxy","method","scope","aArgs","Array","slice","call","concat","indexOf","array","searchElement","i","l","length","Event","type","bubbles","cancelable","target","currentTarget","eventPhase","timeStamp","Date","getTime","defaultPrevented","propagationStopped","immediatePropagationStopped","removed","p","preventDefault","stopPropagation","stopImmediatePropagation","remove","clone","set","props","toString","ErrorEvent","title","message","data","Event_constructor","EventDispatcher","_listeners","_captureListeners","initialize","addEventListener","on","removeEventListener","off","removeAllEventListeners","hasEventListener","dispatchEvent","_dispatchEvent","willTrigger","listener","useCapture","listeners","arr","push","once","handleEvent","evt","splice","eventObj","e","parent","top","list","captureListeners","ProgressEvent","loaded","total","progress","isLoader","define","amd","objectTypes","freeExports","exports","nodeType","root","freeGlobal","module","global","runInContext","context","Number","String","SyntaxError","TypeError","Math","nativeJSON","stringify","parse","objectProto","getClass","isProperty","forEach","undef","isExtended","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","exception","has","isSupported","value","serialized","stringifySupported","toJSON","parseSupported","functionClass","dateClass","numberClass","stringClass","arrayClass","booleanClass","charIndexBuggy","floor","Months","getDay","year","month","property","members","original","result","object","callback","size","Properties","valueOf","isFunction","hasProperty","isConstructor","Escapes","leadingZeroes","toPaddedString","width","unicodePrefix","quote","index","useCharIndex","symbols","split","charCode","charCodeAt","charAt","serialize","properties","whitespace","indentation","stack","className","date","time","hours","minutes","seconds","milliseconds","results","element","join","pop","source","filter","fromCharCode","Unescapes","Index","Source","abort","lex","begin","position","isSigned","get","hasMembers","update","walk","JSON","previousJSON","isRestored","JSON3","a","el","svg","image","img","style","link","script","audio","video","text","document","createTextNode","createElement","Elements","ABSOLUTE_PATT","RELATIVE_PATT","EXTENSION_PATT","parseURI","path","info","absolute","relative","protocol","hostname","port","pathname","search","hash","host","parser","href","queryIndex","substr","match","test","extension","toLowerCase","formatQueryString","query","Error","params","escape","buildURI","src","idx","q","isCrossDomain","item","location","crossdomain","isLocal","URLUtils","container","appendToHead","getHead","appendChild","appendToBody","id","visibility","height","overflow","transform","msTransform","webkitTransform","oTransform","getBody","head","getElementsByTagName","body","removeChild","isImageTag","HTMLImageElement","isAudioTag","HTMLAudioElement","isVideoTag","HTMLVideoElement","DomUtils","parseXML","xml","DOMParser","parseFromString","ActiveXObject","async","loadXML","parseJSON","DataUtils","BINARY","CSS","FONT","FONTCSS","IMAGE","JAVASCRIPT","JSONP","MANIFEST","SOUND","VIDEO","SPRITESHEET","SVG","TEXT","XML","Types","POST","GET","Methods","LoadItem","maintainOrder","values","headers","withCredentials","mimeType","crossOrigin","loadTimeout","LOAD_TIMEOUT_DEFAULT","create","isBinary","isText","getTypeByExtension","RequestUtils","AbstractLoader","loadItem","preferXHR","EventDispatcher_constructor","canceled","resultFormatter","_item","_preferXHR","_result","_rawResult","_loadedItems","_tagSrcAttribute","_tag","defineProperties","getItem","getResult","raw","getTag","setTag","tag","load","_createRequest","_request","loader","cancel","destroy","_loadItems","getLoadedItems","TagRequest","_createTag","XHRRequest","_sendLoadStart","_isCanceled","_sendProgress","event","isNaN","Infinity","_sendComplete","rawResult","_sendError","_response","Function","_resultFormatSuccess","_resultFormatFailed","toUpperCase","AbstractMediaLoader","AbstractLoader_constructor","_formatResult","_updateXHR","preload","AbstractLoader_load","MediaTagRequest","setResponseType","_loadedHandler","onstalled","URL","webkitURL","createObjectURL","AbstractRequest","srcAttribute","AbstractRequest_constructor","_handleTagComplete","_addedToDOM","onload","onreadystatechange","_handleReadyStateChange","onerror","_handleError","_loadTimeout","setTimeout","_handleTimeout","parentNode","_clean","AbstractRequest_destroy","clearTimeout","readyState","_handleStalled","sc","_stalledCallback","pc","_handleProgress","TagRequest_load","newEvent","_progressCallback","TagRequest__clean","_xhrLevel","_rawResponse","_canceled","_handleLoadStartProxy","_handleLoadStart","_handleProgressProxy","_handleAbortProxy","_handleAbort","_handleErrorProxy","_handleTimeoutProxy","_handleLoadProxy","_handleLoad","_handleReadyStateChangeProxy","_createXHR","ACTIVEX_VERSIONS","onloadstart","onprogress","onabort","ontimeout","send","error","_responseType","responseType","getAllResponseHeaders","getResponseHeader","header","_checkError","_getResponse","Blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","builder","append","getBlob","status","parseInt","response","responseText","responseXML","req","XMLHttpRequest","undefined","XDomainRequest","axVersion","overrideMimeType","open","origin","setRequestHeader","LoadQueue","basePath","_plugins","_typeCallbacks","_extensionCallbacks","next","maintainScriptOrder","stopOnError","_maxConnections","_availableLoaders","FontLoader","ImageLoader","JavaScriptLoader","CSSLoader","JSONLoader","JSONPLoader","SoundLoader","ManifestLoader","SpriteSheetLoader","XMLLoader","SVGLoader","BinaryLoader","VideoLoader","TextLoader","_defaultLoaderLength","init","setPreferXHR","_paused","_basePath","_crossOrigin","_loadStartWasDispatched","_currentlyLoadingScript","_currentLoads","_loadQueue","_loadQueueBackup","_loadItemsById","_loadItemsBySrc","_loadedResults","_loadedRawResults","_numItems","_numItemsLoaded","_scriptOrder","_loadedScripts","_lastProgress","NaN","registerLoader","canLoadItem","unshift","unregisterLoader","removeAll","idsOrUrls","args","isArray","itemsWereRemoved","close","_disposeItem","r","_loadNext","reset","loadManifest","installPlugin","plugin","getPreloadHandlers","map","types","extensions","setMaxConnections","loadFile","file","loadNow","_addItem","setPaused","manifest","fileList","getItems","loadStartWasDispatched","_itemCount","_createLoadItem","_createLoader","plugins","_loader","_updateProgress","bp","useBasePath","pathMatch","ext","autoId","customHandler","_canStartLoad","_loadItem","_handleFileLoad","_handleFileComplete","_handleFileError","_sendFileStart","_finishOrderedItem","_removeLoadItem","_cleanLoadItem","_saveLoadedItems","_processFinishedLoad","loadFailed","_checkScriptLoadOrder","_sendFileComplete","checkItem","_sendFileProgress","remaining","chunk","completeHandler","rel","styleSheet","cssText","textNode","_faces","_watched","_count","_watchInterval","_injectCSS","injectCSS","sampleText","_ctx","getContext","_referenceFonts","WEIGHT_REGEX","STYLE_REGEX","FONT_FORMAT","woff2","woff","ttf","otf","FONT_WEIGHT","thin","extralight","ultralight","light","semilight","demilight","book","regular","semibold","demibold","extrabold","ultrabold","black","heavy","WATCH_DURATION","_watchCSS","_watchFontArray","def","_defFromSrc","_watchFont","_injectStyleTag","_cssFromDef","_stopWatching","_parseCSS","AbstractLoader_handleEvent","HTMLStyleElement","textContent","css","regex","exec","_parseFontFace","_defFromObj","styleTag","str","family","_getCSSValue","weight","_calculateReferenceSizes","_startWatching","setInterval","_watch","clearInterval","defs","refFonts","refs","j","w","_getTextWidth","re","lastIndexOf","replace","cssSrc","format","ctx","font","measureText","propName","RegExp","complete","_formatImage","successCallback","errorCallback","objURL","_cleanUpURL","revokeObjectURL","json","AbstractLoader_cancel","_dispose","_manifestQueue","MANIFEST_PROGRESS","_loadManifest","AbstractLoader_destroy","queue","_handleManifestFileLoad","_handleManifestProgress","_handleManifestComplete","_handleManifestError","AbstractMediaLoader_constructor","autoplay","SPRITESHEET_PROGRESS","images","pos","SpriteSheet","contains","documentElement","importNode"],"mappings":"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","sourcesContent":["/*!\n* PreloadJS\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2010 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n\n//##############################################################################\n// version.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\t/**\n\t * Static class holding library specific information such as the version and buildDate of the library.\n\t * @class PreloadJS\n\t **/\n\tvar s = createjs.PreloadJS = createjs.PreloadJS || {};\n\n\t/**\n\t * The version string for this release.\n\t * @property version\n\t * @type {String}\n\t * @static\n\t **/\n\ts.version = /*=version*/\"1.0.0\"; // injected by build process\n\n\t/**\n\t * The build date for this release in UTC format.\n\t * @property buildDate\n\t * @type {String}\n\t * @static\n\t **/\n\ts.buildDate = /*=date*/\"Thu, 14 Sep 2017 19:47:47 GMT\"; // injected by build process\n\n})();\n\n//##############################################################################\n// extend.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n/**\n * @class Utility Methods\n */\n\n/**\n * Sets up the prototype chain and constructor property for a new class.\n *\n * This should be called right after creating the class constructor.\n *\n * \tfunction MySubClass() {}\n * \tcreatejs.extend(MySubClass, MySuperClass);\n * \tMySubClass.prototype.doSomething = function() { }\n *\n * \tvar foo = new MySubClass();\n * \tconsole.log(foo instanceof MySuperClass); // true\n * \tconsole.log(foo.prototype.constructor === MySubClass); // true\n *\n * @method extend\n * @param {Function} subclass The subclass.\n * @param {Function} superclass The superclass to extend.\n * @return {Function} Returns the subclass's new prototype.\n */\ncreatejs.extend = function(subclass, superclass) {\n\t\"use strict\";\n\n\tfunction o() { this.constructor = subclass; }\n\to.prototype = superclass.prototype;\n\treturn (subclass.prototype = new o());\n};\n\n//##############################################################################\n// promote.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n/**\n * @class Utility Methods\n */\n\n/**\n * Promotes any methods on the super class that were overridden, by creating an alias in the format `prefix_methodName`.\n * It is recommended to use the super class's name as the prefix.\n * An alias to the super class's constructor is always added in the format `prefix_constructor`.\n * This allows the subclass to call super class methods without using `function.call`, providing better performance.\n *\n * For example, if `MySubClass` extends `MySuperClass`, and both define a `draw` method, then calling `promote(MySubClass, \"MySuperClass\")`\n * would add a `MySuperClass_constructor` method to MySubClass and promote the `draw` method on `MySuperClass` to the\n * prototype of `MySubClass` as `MySuperClass_draw`.\n *\n * This should be called after the class's prototype is fully defined.\n *\n * \tfunction ClassA(name) {\n * \t\tthis.name = name;\n * \t}\n * \tClassA.prototype.greet = function() {\n * \t\treturn \"Hello \"+this.name;\n * \t}\n *\n * \tfunction ClassB(name, punctuation) {\n * \t\tthis.ClassA_constructor(name);\n * \t\tthis.punctuation = punctuation;\n * \t}\n * \tcreatejs.extend(ClassB, ClassA);\n * \tClassB.prototype.greet = function() {\n * \t\treturn this.ClassA_greet()+this.punctuation;\n * \t}\n * \tcreatejs.promote(ClassB, \"ClassA\");\n *\n * \tvar foo = new ClassB(\"World\", \"!?!\");\n * \tconsole.log(foo.greet()); // Hello World!?!\n *\n * @method promote\n * @param {Function} subclass The class to promote super class methods on.\n * @param {String} prefix The prefix to add to the promoted method names. Usually the name of the superclass.\n * @return {Function} Returns the subclass.\n */\ncreatejs.promote = function(subclass, prefix) {\n\t\"use strict\";\n\n\tvar subP = subclass.prototype, supP = (Object.getPrototypeOf&&Object.getPrototypeOf(subP))||subP.__proto__;\n\tif (supP) {\n\t\tsubP[(prefix+=\"_\") + \"constructor\"] = supP.constructor; // constructor is not always innumerable\n\t\tfor (var n in supP) {\n\t\t\tif (subP.hasOwnProperty(n) && (typeof supP[n] == \"function\")) { subP[prefix + n] = supP[n]; }\n\t\t}\n\t}\n\treturn subclass;\n};\n\n//##############################################################################\n// deprecate.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n/**\n * @class Utility Methods\n */\n\n/**\n * Wraps deprecated methods so they still be used, but throw warnings to developers.\n *\n *\tobj.deprecatedMethod = createjs.deprecate(\"Old Method Name\", obj._fallbackMethod);\n *\n * The recommended approach for deprecated properties is:\n *\n *\ttry {\n *\t\tObj\tect.defineProperties(object, {\n *\t\t\treadyOnlyProp: { get: createjs.deprecate(\"readOnlyProp\", function() { return this.alternateProp; }) },\n *\t\t\treadWriteProp: {\n *\t\t\t\tget: createjs.deprecate(\"readOnlyProp\", function() { return this.alternateProp; }),\n *\t\t\t\tset: createjs.deprecate(\"readOnlyProp\", function(val) { this.alternateProp = val; })\n *\t\t});\n *\t} catch (e) {}\n *\n * @method deprecate\n * @param {Function} [fallbackMethod=null] A method to call when the deprecated method is used. See the example for how\n * @param {String} [name=null] The name of the method or property to display in the console warning.\n * to deprecate properties.\n * @return {Function} If a fallbackMethod is supplied, returns a closure that will call the fallback method after\n * logging the warning in the console.\n */\ncreatejs.deprecate = function(fallbackMethod, name) {\n\t\"use strict\";\n\treturn function() {\n\t\tvar msg = \"Deprecated property or method '\"+name+\"'. See docs for info.\";\n\t\tconsole && (console.warn ? console.warn(msg) : console.log(msg));\n\t\treturn fallbackMethod && fallbackMethod.apply(this, arguments);\n\t}\n};\n\n//##############################################################################\n// proxy.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n/**\n * Various utilities that the CreateJS Suite uses. Utilities are created as separate files, and will be available on the\n * createjs namespace directly.\n *\n * <h4>Example</h4>\n *\n *      myObject.addEventListener(\"change\", createjs.proxy(myMethod, scope));\n *\n * @class Utility Methods\n * @main Utility Methods\n */\n\n(function() {\n\t\"use strict\";\n\n\t/**\n\t * A function proxy for methods. By default, JavaScript methods do not maintain scope, so passing a method as a\n\t * callback will result in the method getting called in the scope of the caller. Using a proxy ensures that the\n\t * method gets called in the correct scope.\n\t *\n\t * Additional arguments can be passed that will be applied to the function when it is called.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      myObject.addEventListener(\"event\", createjs.proxy(myHandler, this, arg1, arg2));\n\t *\n\t *      function myHandler(arg1, arg2) {\n\t *           // This gets called when myObject.myCallback is executed.\n\t *      }\n\t *\n\t * @method proxy\n\t * @param {Function} method The function to call\n\t * @param {Object} scope The scope to call the method name on\n\t * @param {mixed} [arg] * Arguments that are appended to the callback for additional params.\n\t * @public\n\t * @static\n\t */\n\tcreatejs.proxy = function (method, scope) {\n\t\tvar aArgs = Array.prototype.slice.call(arguments, 2);\n\t\treturn function () {\n\t\t\treturn method.apply(scope, Array.prototype.slice.call(arguments, 0).concat(aArgs));\n\t\t};\n\t}\n\n}());\n\n//##############################################################################\n// indexOf.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n/**\n * @class Utility Methods\n */\n\n/**\n * Finds the first occurrence of a specified value searchElement in the passed in array, and returns the index of\n * that value.  Returns -1 if value is not found.\n *\n *      var i = createjs.indexOf(myArray, myElementToFind);\n *\n * @method indexOf\n * @param {Array} array Array to search for searchElement\n * @param searchElement Element to find in array.\n * @return {Number} The first index of searchElement in array.\n */\ncreatejs.indexOf = function (array, searchElement){\n\t\"use strict\";\n\n\tfor (var i = 0,l=array.length; i < l; i++) {\n\t\tif (searchElement === array[i]) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\n\n//##############################################################################\n// Event.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n// constructor:\n\t/**\n\t * Contains properties and methods shared by all events for use with\n\t * {{#crossLink \"EventDispatcher\"}}{{/crossLink}}.\n\t * \n\t * Note that Event objects are often reused, so you should never\n\t * rely on an event object's state outside of the call stack it was received in.\n\t * @class Event\n\t * @param {String} type The event type.\n\t * @param {Boolean} bubbles Indicates whether the event will bubble through the display list.\n\t * @param {Boolean} cancelable Indicates whether the default behaviour of this event can be cancelled.\n\t * @constructor\n\t **/\n\tfunction Event(type, bubbles, cancelable) {\n\t\t\n\t\n\t// public properties:\n\t\t/**\n\t\t * The type of event.\n\t\t * @property type\n\t\t * @type String\n\t\t **/\n\t\tthis.type = type;\n\t\n\t\t/**\n\t\t * The object that generated an event.\n\t\t * @property target\n\t\t * @type Object\n\t\t * @default null\n\t\t * @readonly\n\t\t*/\n\t\tthis.target = null;\n\t\n\t\t/**\n\t\t * The current target that a bubbling event is being dispatched from. For non-bubbling events, this will\n\t\t * always be the same as target. For example, if childObj.parent = parentObj, and a bubbling event\n\t\t * is generated from childObj, then a listener on parentObj would receive the event with\n\t\t * target=childObj (the original target) and currentTarget=parentObj (where the listener was added).\n\t\t * @property currentTarget\n\t\t * @type Object\n\t\t * @default null\n\t\t * @readonly\n\t\t*/\n\t\tthis.currentTarget = null;\n\t\n\t\t/**\n\t\t * For bubbling events, this indicates the current event phase:<OL>\n\t\t * \t<LI> capture phase: starting from the top parent to the target</LI>\n\t\t * \t<LI> at target phase: currently being dispatched from the target</LI>\n\t\t * \t<LI> bubbling phase: from the target to the top parent</LI>\n\t\t * </OL>\n\t\t * @property eventPhase\n\t\t * @type Number\n\t\t * @default 0\n\t\t * @readonly\n\t\t*/\n\t\tthis.eventPhase = 0;\n\t\n\t\t/**\n\t\t * Indicates whether the event will bubble through the display list.\n\t\t * @property bubbles\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n\t\tthis.bubbles = !!bubbles;\n\t\n\t\t/**\n\t\t * Indicates whether the default behaviour of this event can be cancelled via\n\t\t * {{#crossLink \"Event/preventDefault\"}}{{/crossLink}}. This is set via the Event constructor.\n\t\t * @property cancelable\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n\t\tthis.cancelable = !!cancelable;\n\t\n\t\t/**\n\t\t * The epoch time at which this event was created.\n\t\t * @property timeStamp\n\t\t * @type Number\n\t\t * @default 0\n\t\t * @readonly\n\t\t*/\n\t\tthis.timeStamp = (new Date()).getTime();\n\t\n\t\t/**\n\t\t * Indicates if {{#crossLink \"Event/preventDefault\"}}{{/crossLink}} has been called\n\t\t * on this event.\n\t\t * @property defaultPrevented\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n\t\tthis.defaultPrevented = false;\n\t\n\t\t/**\n\t\t * Indicates if {{#crossLink \"Event/stopPropagation\"}}{{/crossLink}} or\n\t\t * {{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called on this event.\n\t\t * @property propagationStopped\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n\t\tthis.propagationStopped = false;\n\t\n\t\t/**\n\t\t * Indicates if {{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called\n\t\t * on this event.\n\t\t * @property immediatePropagationStopped\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n\t\tthis.immediatePropagationStopped = false;\n\t\t\n\t\t/**\n\t\t * Indicates if {{#crossLink \"Event/remove\"}}{{/crossLink}} has been called on this event.\n\t\t * @property removed\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n\t\tthis.removed = false;\n\t}\n\tvar p = Event.prototype;\n\n// public methods:\n\t/**\n\t * Sets {{#crossLink \"Event/defaultPrevented\"}}{{/crossLink}} to true if the event is cancelable.\n\t * Mirrors the DOM level 2 event standard. In general, cancelable events that have `preventDefault()` called will\n\t * cancel the default behaviour associated with the event.\n\t * @method preventDefault\n\t **/\n\tp.preventDefault = function() {\n\t\tthis.defaultPrevented = this.cancelable&&true;\n\t};\n\n\t/**\n\t * Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} to true.\n\t * Mirrors the DOM event standard.\n\t * @method stopPropagation\n\t **/\n\tp.stopPropagation = function() {\n\t\tthis.propagationStopped = true;\n\t};\n\n\t/**\n\t * Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} and\n\t * {{#crossLink \"Event/immediatePropagationStopped\"}}{{/crossLink}} to true.\n\t * Mirrors the DOM event standard.\n\t * @method stopImmediatePropagation\n\t **/\n\tp.stopImmediatePropagation = function() {\n\t\tthis.immediatePropagationStopped = this.propagationStopped = true;\n\t};\n\t\n\t/**\n\t * Causes the active listener to be removed via removeEventListener();\n\t * \n\t * \t\tmyBtn.addEventListener(\"click\", function(evt) {\n\t * \t\t\t// do stuff...\n\t * \t\t\tevt.remove(); // removes this listener.\n\t * \t\t});\n\t * \n\t * @method remove\n\t **/\n\tp.remove = function() {\n\t\tthis.removed = true;\n\t};\n\t\n\t/**\n\t * Returns a clone of the Event instance.\n\t * @method clone\n\t * @return {Event} a clone of the Event instance.\n\t **/\n\tp.clone = function() {\n\t\treturn new Event(this.type, this.bubbles, this.cancelable);\n\t};\n\t\n\t/**\n\t * Provides a chainable shortcut method for setting a number of properties on the instance.\n\t *\n\t * @method set\n\t * @param {Object} props A generic object containing properties to copy to the instance.\n\t * @return {Event} Returns the instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t*/\n\tp.set = function(props) {\n\t\tfor (var n in props) { this[n] = props[n]; }\n\t\treturn this;\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[Event (type=\"+this.type+\")]\";\n\t};\n\n\tcreatejs.Event = Event;\n}());\n\n//##############################################################################\n// ErrorEvent.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\t/**\n\t * A general error {{#crossLink \"Event\"}}{{/crossLink}}, that describes an error that occurred, as well as any details.\n\t * @class ErrorEvent\n\t * @param {String} [title] The error title\n\t * @param {String} [message] The error description\n\t * @param {Object} [data] Additional error data\n\t * @constructor\n\t */\n\tfunction ErrorEvent(title, message, data) {\n\t\tthis.Event_constructor(\"error\");\n\n\t\t/**\n\t\t * The short error title, which indicates the type of error that occurred.\n\t\t * @property title\n\t\t * @type String\n\t\t */\n\t\tthis.title = title;\n\n\t\t/**\n\t\t * The verbose error message, containing details about the error.\n\t\t * @property message\n\t\t * @type String\n\t\t */\n\t\tthis.message = message;\n\n\t\t/**\n\t\t * Additional data attached to an error.\n\t\t * @property data\n\t\t * @type {Object}\n\t\t */\n\t\tthis.data = data;\n\t}\n\n\tvar p = createjs.extend(ErrorEvent, createjs.Event);\n\n\tp.clone = function() {\n\t\treturn new createjs.ErrorEvent(this.title, this.message, this.data);\n\t};\n\n\tcreatejs.ErrorEvent = createjs.promote(ErrorEvent, \"Event\");\n\n}());\n\n//##############################################################################\n// EventDispatcher.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\r\n\r\n(function() {\r\n\t\"use strict\";\r\n\r\n\r\n// constructor:\r\n\t/**\r\n\t * EventDispatcher provides methods for managing queues of event listeners and dispatching events.\r\n\t *\r\n\t * You can either extend EventDispatcher or mix its methods into an existing prototype or instance by using the\r\n\t * EventDispatcher {{#crossLink \"EventDispatcher/initialize\"}}{{/crossLink}} method.\r\n\t * \r\n\t * Together with the CreateJS Event class, EventDispatcher provides an extended event model that is based on the\r\n\t * DOM Level 2 event model, including addEventListener, removeEventListener, and dispatchEvent. It supports\r\n\t * bubbling / capture, preventDefault, stopPropagation, stopImmediatePropagation, and handleEvent.\r\n\t * \r\n\t * EventDispatcher also exposes a {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}} method, which makes it easier\r\n\t * to create scoped listeners, listeners that only run once, and listeners with associated arbitrary data. The \r\n\t * {{#crossLink \"EventDispatcher/off\"}}{{/crossLink}} method is merely an alias to\r\n\t * {{#crossLink \"EventDispatcher/removeEventListener\"}}{{/crossLink}}.\r\n\t * \r\n\t * Another addition to the DOM Level 2 model is the {{#crossLink \"EventDispatcher/removeAllEventListeners\"}}{{/crossLink}}\r\n\t * method, which can be used to listeners for all events, or listeners for a specific event. The Event object also \r\n\t * includes a {{#crossLink \"Event/remove\"}}{{/crossLink}} method which removes the active listener.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t * Add EventDispatcher capabilities to the \"MyClass\" class.\r\n\t *\r\n\t *      EventDispatcher.initialize(MyClass.prototype);\r\n\t *\r\n\t * Add an event (see {{#crossLink \"EventDispatcher/addEventListener\"}}{{/crossLink}}).\r\n\t *\r\n\t *      instance.addEventListener(\"eventName\", handlerMethod);\r\n\t *      function handlerMethod(event) {\r\n\t *          console.log(event.target + \" Was Clicked\");\r\n\t *      }\r\n\t *\r\n\t * <b>Maintaining proper scope</b><br />\r\n\t * Scope (ie. \"this\") can be be a challenge with events. Using the {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}}\r\n\t * method to subscribe to events simplifies this.\r\n\t *\r\n\t *      instance.addEventListener(\"click\", function(event) {\r\n\t *          console.log(instance == this); // false, scope is ambiguous.\r\n\t *      });\r\n\t *      \r\n\t *      instance.on(\"click\", function(event) {\r\n\t *          console.log(instance == this); // true, \"on\" uses dispatcher scope by default.\r\n\t *      });\r\n\t * \r\n\t * If you want to use addEventListener instead, you may want to use function.bind() or a similar proxy to manage\r\n\t * scope.\r\n\t *\r\n\t * <b>Browser support</b>\r\n\t * The event model in CreateJS can be used separately from the suite in any project, however the inheritance model\r\n\t * requires modern browsers (IE9+).\r\n\t *      \r\n\t *\r\n\t * @class EventDispatcher\r\n\t * @constructor\r\n\t **/\r\n\tfunction EventDispatcher() {\r\n\t\r\n\t\r\n\t// private properties:\r\n\t\t/**\r\n\t\t * @protected\r\n\t\t * @property _listeners\r\n\t\t * @type Object\r\n\t\t **/\r\n\t\tthis._listeners = null;\r\n\t\t\r\n\t\t/**\r\n\t\t * @protected\r\n\t\t * @property _captureListeners\r\n\t\t * @type Object\r\n\t\t **/\r\n\t\tthis._captureListeners = null;\r\n\t}\r\n\tvar p = EventDispatcher.prototype;\r\n\r\n// static public methods:\r\n\t/**\r\n\t * Static initializer to mix EventDispatcher methods into a target object or prototype.\r\n\t * \r\n\t * \t\tEventDispatcher.initialize(MyClass.prototype); // add to the prototype of the class\r\n\t * \t\tEventDispatcher.initialize(myObject); // add to a specific instance\r\n\t * \r\n\t * @method initialize\r\n\t * @static\r\n\t * @param {Object} target The target object to inject EventDispatcher methods into. This can be an instance or a\r\n\t * prototype.\r\n\t **/\r\n\tEventDispatcher.initialize = function(target) {\r\n\t\ttarget.addEventListener = p.addEventListener;\r\n\t\ttarget.on = p.on;\r\n\t\ttarget.removeEventListener = target.off =  p.removeEventListener;\r\n\t\ttarget.removeAllEventListeners = p.removeAllEventListeners;\r\n\t\ttarget.hasEventListener = p.hasEventListener;\r\n\t\ttarget.dispatchEvent = p.dispatchEvent;\r\n\t\ttarget._dispatchEvent = p._dispatchEvent;\r\n\t\ttarget.willTrigger = p.willTrigger;\r\n\t};\r\n\t\r\n\r\n// public methods:\r\n\t/**\r\n\t * Adds the specified event listener. Note that adding multiple listeners to the same function will result in\r\n\t * multiple callbacks getting fired.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      displayObject.addEventListener(\"click\", handleClick);\r\n\t *      function handleClick(event) {\r\n\t *         // Click happened.\r\n\t *      }\r\n\t *\r\n\t * @method addEventListener\r\n\t * @param {String} type The string type of the event.\r\n\t * @param {Function | Object} listener An object with a handleEvent method, or a function that will be called when\r\n\t * the event is dispatched.\r\n\t * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n\t * @return {Function | Object} Returns the listener for chaining or assignment.\r\n\t **/\r\n\tp.addEventListener = function(type, listener, useCapture) {\r\n\t\tvar listeners;\r\n\t\tif (useCapture) {\r\n\t\t\tlisteners = this._captureListeners = this._captureListeners||{};\r\n\t\t} else {\r\n\t\t\tlisteners = this._listeners = this._listeners||{};\r\n\t\t}\r\n\t\tvar arr = listeners[type];\r\n\t\tif (arr) { this.removeEventListener(type, listener, useCapture); }\r\n\t\tarr = listeners[type]; // remove may have deleted the array\r\n\t\tif (!arr) { listeners[type] = [listener];  }\r\n\t\telse { arr.push(listener); }\r\n\t\treturn listener;\r\n\t};\r\n\t\r\n\t/**\r\n\t * A shortcut method for using addEventListener that makes it easier to specify an execution scope, have a listener\r\n\t * only run once, associate arbitrary data with the listener, and remove the listener.\r\n\t * \r\n\t * This method works by creating an anonymous wrapper function and subscribing it with addEventListener.\r\n\t * The wrapper function is returned for use with `removeEventListener` (or `off`).\r\n\t * \r\n\t * <b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener, or use\r\n\t * {{#crossLink \"Event/remove\"}}{{/crossLink}}. Likewise, each time you call `on` a NEW wrapper function is subscribed, so multiple calls\r\n\t * to `on` with the same params will create multiple listeners.\r\n\t * \r\n\t * <h4>Example</h4>\r\n\t * \r\n\t * \t\tvar listener = myBtn.on(\"click\", handleClick, null, false, {count:3});\r\n\t * \t\tfunction handleClick(evt, data) {\r\n\t * \t\t\tdata.count -= 1;\r\n\t * \t\t\tconsole.log(this == myBtn); // true - scope defaults to the dispatcher\r\n\t * \t\t\tif (data.count == 0) {\r\n\t * \t\t\t\talert(\"clicked 3 times!\");\r\n\t * \t\t\t\tmyBtn.off(\"click\", listener);\r\n\t * \t\t\t\t// alternately: evt.remove();\r\n\t * \t\t\t}\r\n\t * \t\t}\r\n\t * \r\n\t * @method on\r\n\t * @param {String} type The string type of the event.\r\n\t * @param {Function | Object} listener An object with a handleEvent method, or a function that will be called when\r\n\t * the event is dispatched.\r\n\t * @param {Object} [scope] The scope to execute the listener in. Defaults to the dispatcher/currentTarget for function listeners, and to the listener itself for object listeners (ie. using handleEvent).\r\n\t * @param {Boolean} [once=false] If true, the listener will remove itself after the first time it is triggered.\r\n\t * @param {*} [data] Arbitrary data that will be included as the second parameter when the listener is called.\r\n\t * @param {Boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n\t * @return {Function} Returns the anonymous function that was created and assigned as the listener. This is needed to remove the listener later using .removeEventListener.\r\n\t **/\r\n\tp.on = function(type, listener, scope, once, data, useCapture) {\r\n\t\tif (listener.handleEvent) {\r\n\t\t\tscope = scope||listener;\r\n\t\t\tlistener = listener.handleEvent;\r\n\t\t}\r\n\t\tscope = scope||this;\r\n\t\treturn this.addEventListener(type, function(evt) {\r\n\t\t\t\tlistener.call(scope, evt, data);\r\n\t\t\t\tonce&&evt.remove();\r\n\t\t\t}, useCapture);\r\n\t};\r\n\r\n\t/**\r\n\t * Removes the specified event listener.\r\n\t *\r\n\t * <b>Important Note:</b> that you must pass the exact function reference used when the event was added. If a proxy\r\n\t * function, or function closure is used as the callback, the proxy/closure reference must be used - a new proxy or\r\n\t * closure will not work.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      displayObject.removeEventListener(\"click\", handleClick);\r\n\t *\r\n\t * @method removeEventListener\r\n\t * @param {String} type The string type of the event.\r\n\t * @param {Function | Object} listener The listener function or object.\r\n\t * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n\t **/\r\n\tp.removeEventListener = function(type, listener, useCapture) {\r\n\t\tvar listeners = useCapture ? this._captureListeners : this._listeners;\r\n\t\tif (!listeners) { return; }\r\n\t\tvar arr = listeners[type];\r\n\t\tif (!arr) { return; }\r\n\t\tfor (var i=0,l=arr.length; i<l; i++) {\r\n\t\t\tif (arr[i] == listener) {\r\n\t\t\t\tif (l==1) { delete(listeners[type]); } // allows for faster checks.\r\n\t\t\t\telse { arr.splice(i,1); }\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t\r\n\t/**\r\n\t * A shortcut to the removeEventListener method, with the same parameters and return value. This is a companion to the\r\n\t * .on method.\r\n\t * \r\n\t * <b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener. See \r\n\t * {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}} for an example.\r\n\t *\r\n\t * @method off\r\n\t * @param {String} type The string type of the event.\r\n\t * @param {Function | Object} listener The listener function or object.\r\n\t * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n\t **/\r\n\tp.off = p.removeEventListener;\r\n\r\n\t/**\r\n\t * Removes all listeners for the specified type, or all listeners of all types.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      // Remove all listeners\r\n\t *      displayObject.removeAllEventListeners();\r\n\t *\r\n\t *      // Remove all click listeners\r\n\t *      displayObject.removeAllEventListeners(\"click\");\r\n\t *\r\n\t * @method removeAllEventListeners\r\n\t * @param {String} [type] The string type of the event. If omitted, all listeners for all types will be removed.\r\n\t **/\r\n\tp.removeAllEventListeners = function(type) {\r\n\t\tif (!type) { this._listeners = this._captureListeners = null; }\r\n\t\telse {\r\n\t\t\tif (this._listeners) { delete(this._listeners[type]); }\r\n\t\t\tif (this._captureListeners) { delete(this._captureListeners[type]); }\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Dispatches the specified event to all listeners.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      // Use a string event\r\n\t *      this.dispatchEvent(\"complete\");\r\n\t *\r\n\t *      // Use an Event instance\r\n\t *      var event = new createjs.Event(\"progress\");\r\n\t *      this.dispatchEvent(event);\r\n\t *\r\n\t * @method dispatchEvent\r\n\t * @param {Object | String | Event} eventObj An object with a \"type\" property, or a string type.\r\n\t * While a generic object will work, it is recommended to use a CreateJS Event instance. If a string is used,\r\n\t * dispatchEvent will construct an Event instance if necessary with the specified type. This latter approach can\r\n\t * be used to avoid event object instantiation for non-bubbling events that may not have any listeners.\r\n\t * @param {Boolean} [bubbles] Specifies the `bubbles` value when a string was passed to eventObj.\r\n\t * @param {Boolean} [cancelable] Specifies the `cancelable` value when a string was passed to eventObj.\r\n\t * @return {Boolean} Returns false if `preventDefault()` was called on a cancelable event, true otherwise.\r\n\t **/\r\n\tp.dispatchEvent = function(eventObj, bubbles, cancelable) {\r\n\t\tif (typeof eventObj == \"string\") {\r\n\t\t\t// skip everything if there's no listeners and it doesn't bubble:\r\n\t\t\tvar listeners = this._listeners;\r\n\t\t\tif (!bubbles && (!listeners || !listeners[eventObj])) { return true; }\r\n\t\t\teventObj = new createjs.Event(eventObj, bubbles, cancelable);\r\n\t\t} else if (eventObj.target && eventObj.clone) {\r\n\t\t\t// redispatching an active event object, so clone it:\r\n\t\t\teventObj = eventObj.clone();\r\n\t\t}\r\n\t\t\r\n\t\t// TODO: it would be nice to eliminate this. Maybe in favour of evtObj instanceof Event? Or !!evtObj.createEvent\r\n\t\ttry { eventObj.target = this; } catch (e) {} // try/catch allows redispatching of native events\r\n\r\n\t\tif (!eventObj.bubbles || !this.parent) {\r\n\t\t\tthis._dispatchEvent(eventObj, 2);\r\n\t\t} else {\r\n\t\t\tvar top=this, list=[top];\r\n\t\t\twhile (top.parent) { list.push(top = top.parent); }\r\n\t\t\tvar i, l=list.length;\r\n\r\n\t\t\t// capture & atTarget\r\n\t\t\tfor (i=l-1; i>=0 && !eventObj.propagationStopped; i--) {\r\n\t\t\t\tlist[i]._dispatchEvent(eventObj, 1+(i==0));\r\n\t\t\t}\r\n\t\t\t// bubbling\r\n\t\t\tfor (i=1; i<l && !eventObj.propagationStopped; i++) {\r\n\t\t\t\tlist[i]._dispatchEvent(eventObj, 3);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn !eventObj.defaultPrevented;\r\n\t};\r\n\r\n\t/**\r\n\t * Indicates whether there is at least one listener for the specified event type.\r\n\t * @method hasEventListener\r\n\t * @param {String} type The string type of the event.\r\n\t * @return {Boolean} Returns true if there is at least one listener for the specified event.\r\n\t **/\r\n\tp.hasEventListener = function(type) {\r\n\t\tvar listeners = this._listeners, captureListeners = this._captureListeners;\r\n\t\treturn !!((listeners && listeners[type]) || (captureListeners && captureListeners[type]));\r\n\t};\r\n\t\r\n\t/**\r\n\t * Indicates whether there is at least one listener for the specified event type on this object or any of its\r\n\t * ancestors (parent, parent's parent, etc). A return value of true indicates that if a bubbling event of the\r\n\t * specified type is dispatched from this object, it will trigger at least one listener.\r\n\t * \r\n\t * This is similar to {{#crossLink \"EventDispatcher/hasEventListener\"}}{{/crossLink}}, but it searches the entire\r\n\t * event flow for a listener, not just this object.\r\n\t * @method willTrigger\r\n\t * @param {String} type The string type of the event.\r\n\t * @return {Boolean} Returns `true` if there is at least one listener for the specified event.\r\n\t **/\r\n\tp.willTrigger = function(type) {\r\n\t\tvar o = this;\r\n\t\twhile (o) {\r\n\t\t\tif (o.hasEventListener(type)) { return true; }\r\n\t\t\to = o.parent;\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\r\n\t/**\r\n\t * @method toString\r\n\t * @return {String} a string representation of the instance.\r\n\t **/\r\n\tp.toString = function() {\r\n\t\treturn \"[EventDispatcher]\";\r\n\t};\r\n\r\n\r\n// private methods:\r\n\t/**\r\n\t * @method _dispatchEvent\r\n\t * @param {Object | Event} eventObj\r\n\t * @param {Object} eventPhase\r\n\t * @protected\r\n\t **/\r\n\tp._dispatchEvent = function(eventObj, eventPhase) {\r\n\t\tvar l, arr, listeners = (eventPhase <= 2) ? this._captureListeners : this._listeners;\r\n\t\tif (eventObj && listeners && (arr = listeners[eventObj.type]) && (l=arr.length)) {\r\n\t\t\ttry { eventObj.currentTarget = this; } catch (e) {}\r\n\t\t\ttry { eventObj.eventPhase = eventPhase|0; } catch (e) {}\r\n\t\t\teventObj.removed = false;\r\n\t\t\t\r\n\t\t\tarr = arr.slice(); // to avoid issues with items being removed or added during the dispatch\r\n\t\t\tfor (var i=0; i<l && !eventObj.immediatePropagationStopped; i++) {\r\n\t\t\t\tvar o = arr[i];\r\n\t\t\t\tif (o.handleEvent) { o.handleEvent(eventObj); }\r\n\t\t\t\telse { o(eventObj); }\r\n\t\t\t\tif (eventObj.removed) {\r\n\t\t\t\t\tthis.off(eventObj.type, o, eventPhase==1);\r\n\t\t\t\t\teventObj.removed = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (eventPhase === 2) { this._dispatchEvent(eventObj, 2.1); }\r\n\t};\r\n\r\n\r\n\tcreatejs.EventDispatcher = EventDispatcher;\r\n}());\n\n//##############################################################################\n// ProgressEvent.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function (scope) {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * A CreateJS {{#crossLink \"Event\"}}{{/crossLink}} that is dispatched when progress changes.\n\t * @class ProgressEvent\n\t * @param {Number} loaded The amount that has been loaded. This can be any number relative to the total.\n\t * @param {Number} [total=1] The total amount that will load. This will default to 1, so if the `loaded` value is\n\t * a percentage (between 0 and 1), it can be omitted.\n\t * @todo Consider having this event be a \"fileprogress\" event as well\n\t * @constructor\n\t */\n\tfunction ProgressEvent(loaded, total) {\n\t\tthis.Event_constructor(\"progress\");\n\n\t\t/**\n\t\t * The amount that has been loaded (out of a total amount)\n\t\t * @property loaded\n\t\t * @type {Number}\n\t\t */\n\t\tthis.loaded = loaded;\n\n\t\t/**\n\t\t * The total \"size\" of the load.\n\t\t * @property total\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t */\n\t\tthis.total = (total == null) ? 1 : total;\n\n\t\t/**\n\t\t * The percentage (out of 1) that the load has been completed. This is calculated using `loaded/total`.\n\t\t * @property progress\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.progress = (total == 0) ? 0 : this.loaded / this.total;\n\t};\n\n\tvar p = createjs.extend(ProgressEvent, createjs.Event);\n\n\t/**\n\t * Returns a clone of the ProgressEvent instance.\n\t * @method clone\n\t * @return {ProgressEvent} a clone of the Event instance.\n\t **/\n\tp.clone = function() {\n\t\treturn new createjs.ProgressEvent(this.loaded, this.total);\n\t};\n\n\tcreatejs.ProgressEvent = createjs.promote(ProgressEvent, \"Event\");\n\n}(window));\n\n//##############################################################################\n// json3.js\n//##############################################################################\n\n/*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */\n;(function () {\n  // Detect the `define` function exposed by asynchronous module loaders. The\n  // strict `define` check is necessary for compatibility with `r.js`.\n  var isLoader = typeof define === \"function\" && define.amd;\n\n  // A set of types used to distinguish objects from primitives.\n  var objectTypes = {\n    \"function\": true,\n    \"object\": true\n  };\n\n  // Detect the `exports` object exposed by CommonJS implementations.\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  // Use the `global` object exposed by Node (including Browserify via\n  // `insert-module-globals`), Narwhal, and Ringo as the default context,\n  // and the `window` object in browsers. Rhino exports a `global` function\n  // instead.\n  var root = objectTypes[typeof window] && window || this,\n      freeGlobal = freeExports && objectTypes[typeof module] && module && !module.nodeType && typeof global == \"object\" && global;\n\n  if (freeGlobal && (freeGlobal[\"global\"] === freeGlobal || freeGlobal[\"window\"] === freeGlobal || freeGlobal[\"self\"] === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  // Public: Initializes JSON 3 using the given `context` object, attaching the\n  // `stringify` and `parse` functions to the specified `exports` object.\n  function runInContext(context, exports) {\n    context || (context = root[\"Object\"]());\n    exports || (exports = root[\"Object\"]());\n\n    // Native constructor aliases.\n    var Number = context[\"Number\"] || root[\"Number\"],\n        String = context[\"String\"] || root[\"String\"],\n        Object = context[\"Object\"] || root[\"Object\"],\n        Date = context[\"Date\"] || root[\"Date\"],\n        SyntaxError = context[\"SyntaxError\"] || root[\"SyntaxError\"],\n        TypeError = context[\"TypeError\"] || root[\"TypeError\"],\n        Math = context[\"Math\"] || root[\"Math\"],\n        nativeJSON = context[\"JSON\"] || root[\"JSON\"];\n\n    // Delegate to the native `stringify` and `parse` implementations.\n    if (typeof nativeJSON == \"object\" && nativeJSON) {\n      exports.stringify = nativeJSON.stringify;\n      exports.parse = nativeJSON.parse;\n    }\n\n    // Convenience aliases.\n    var objectProto = Object.prototype,\n        getClass = objectProto.toString,\n        isProperty, forEach, undef;\n\n    // Test the `Date#getUTC*` methods. Based on work by @Yaffle.\n    var isExtended = new Date(-3509827334573292);\n    try {\n      // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical\n      // results for certain dates in Opera >= 10.53.\n      isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 &&\n        // Safari < 2.0.2 stores the internal millisecond time value correctly,\n        // but clips the values returned by the date methods to the range of\n        // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).\n        isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;\n    } catch (exception) {}\n\n    // Internal: Determines whether the native `JSON.stringify` and `parse`\n    // implementations are spec-compliant. Based on work by Ken Snyder.\n    function has(name) {\n      if (has[name] !== undef) {\n        // Return cached feature test result.\n        return has[name];\n      }\n      var isSupported;\n      if (name == \"bug-string-char-index\") {\n        // IE <= 7 doesn't support accessing string characters using square\n        // bracket notation. IE 8 only supports this for primitives.\n        isSupported = \"a\"[0] != \"a\";\n      } else if (name == \"json\") {\n        // Indicates whether both `JSON.stringify` and `JSON.parse` are\n        // supported.\n        isSupported = has(\"json-stringify\") && has(\"json-parse\");\n      } else {\n        var value, serialized = '{\"a\":[1,true,false,null,\"\\\\u0000\\\\b\\\\n\\\\f\\\\r\\\\t\"]}';\n        // Test `JSON.stringify`.\n        if (name == \"json-stringify\") {\n          var stringify = exports.stringify, stringifySupported = typeof stringify == \"function\" && isExtended;\n          if (stringifySupported) {\n            // A test function object with a custom `toJSON` method.\n            (value = function () {\n              return 1;\n            }).toJSON = value;\n            try {\n              stringifySupported =\n                // Firefox 3.1b1 and b2 serialize string, number, and boolean\n                // primitives as object literals.\n                stringify(0) === \"0\" &&\n                // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object\n                // literals.\n                stringify(new Number()) === \"0\" &&\n                stringify(new String()) == '\"\"' &&\n                // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or\n                // does not define a canonical JSON representation (this applies to\n                // objects with `toJSON` properties as well, *unless* they are nested\n                // within an object or array).\n                stringify(getClass) === undef &&\n                // IE 8 serializes `undefined` as `\"undefined\"`. Safari <= 5.1.7 and\n                // FF 3.1b3 pass this test.\n                stringify(undef) === undef &&\n                // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,\n                // respectively, if the value is omitted entirely.\n                stringify() === undef &&\n                // FF 3.1b1, 2 throw an error if the given value is not a number,\n                // string, array, object, Boolean, or `null` literal. This applies to\n                // objects with custom `toJSON` methods as well, unless they are nested\n                // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`\n                // methods entirely.\n                stringify(value) === \"1\" &&\n                stringify([value]) == \"[1]\" &&\n                // Prototype <= 1.6.1 serializes `[undefined]` as `\"[]\"` instead of\n                // `\"[null]\"`.\n                stringify([undef]) == \"[null]\" &&\n                // YUI 3.0.0b1 fails to serialize `null` literals.\n                stringify(null) == \"null\" &&\n                // FF 3.1b1, 2 halts serialization if an array contains a function:\n                // `[1, true, getClass, 1]` serializes as \"[1,true,],\". FF 3.1b3\n                // elides non-JSON values from objects and arrays, unless they\n                // define custom `toJSON` methods.\n                stringify([undef, getClass, null]) == \"[null,null,null]\" &&\n                // Simple serialization test. FF 3.1b1 uses Unicode escape sequences\n                // where character escape codes are expected (e.g., `\\b` => `\\u0008`).\n                stringify({ \"a\": [value, true, false, null, \"\\x00\\b\\n\\f\\r\\t\"] }) == serialized &&\n                // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.\n                stringify(null, value) === \"1\" &&\n                stringify([1, 2], null, 1) == \"[\\n 1,\\n 2\\n]\" &&\n                // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly\n                // serialize extended years.\n                stringify(new Date(-8.64e15)) == '\"-271821-04-20T00:00:00.000Z\"' &&\n                // The milliseconds are optional in ES 5, but required in 5.1.\n                stringify(new Date(8.64e15)) == '\"+275760-09-13T00:00:00.000Z\"' &&\n                // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative\n                // four-digit years instead of six-digit years. Credits: @Yaffle.\n                stringify(new Date(-621987552e5)) == '\"-000001-01-01T00:00:00.000Z\"' &&\n                // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond\n                // values less than 1000. Credits: @Yaffle.\n                stringify(new Date(-1)) == '\"1969-12-31T23:59:59.999Z\"';\n            } catch (exception) {\n              stringifySupported = false;\n            }\n          }\n          isSupported = stringifySupported;\n        }\n        // Test `JSON.parse`.\n        if (name == \"json-parse\") {\n          var parse = exports.parse;\n          if (typeof parse == \"function\") {\n            try {\n              // FF 3.1b1, b2 will throw an exception if a bare literal is provided.\n              // Conforming implementations should also coerce the initial argument to\n              // a string prior to parsing.\n              if (parse(\"0\") === 0 && !parse(false)) {\n                // Simple parsing test.\n                value = parse(serialized);\n                var parseSupported = value[\"a\"].length == 5 && value[\"a\"][0] === 1;\n                if (parseSupported) {\n                  try {\n                    // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.\n                    parseSupported = !parse('\"\\t\"');\n                  } catch (exception) {}\n                  if (parseSupported) {\n                    try {\n                      // FF 4.0 and 4.0.1 allow leading `+` signs and leading\n                      // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow\n                      // certain octal literals.\n                      parseSupported = parse(\"01\") !== 1;\n                    } catch (exception) {}\n                  }\n                  if (parseSupported) {\n                    try {\n                      // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal\n                      // points. These environments, along with FF 3.1b1 and 2,\n                      // also allow trailing commas in JSON objects and arrays.\n                      parseSupported = parse(\"1.\") !== 1;\n                    } catch (exception) {}\n                  }\n                }\n              }\n            } catch (exception) {\n              parseSupported = false;\n            }\n          }\n          isSupported = parseSupported;\n        }\n      }\n      return has[name] = !!isSupported;\n    }\n\n    if (!has(\"json\")) {\n      // Common `[[Class]]` name aliases.\n      var functionClass = \"[object Function]\",\n          dateClass = \"[object Date]\",\n          numberClass = \"[object Number]\",\n          stringClass = \"[object String]\",\n          arrayClass = \"[object Array]\",\n          booleanClass = \"[object Boolean]\";\n\n      // Detect incomplete support for accessing string characters by index.\n      var charIndexBuggy = has(\"bug-string-char-index\");\n\n      // Define additional utility methods if the `Date` methods are buggy.\n      if (!isExtended) {\n        var floor = Math.floor;\n        // A mapping between the months of the year and the number of days between\n        // January 1st and the first of the respective month.\n        var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n        // Internal: Calculates the number of days between the Unix epoch and the\n        // first day of the given month.\n        var getDay = function (year, month) {\n          return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);\n        };\n      }\n\n      // Internal: Determines if a property is a direct property of the given\n      // object. Delegates to the native `Object#hasOwnProperty` method.\n      if (!(isProperty = objectProto.hasOwnProperty)) {\n        isProperty = function (property) {\n          var members = {}, constructor;\n          if ((members.__proto__ = null, members.__proto__ = {\n            // The *proto* property cannot be set multiple times in recent\n            // versions of Firefox and SeaMonkey.\n            \"toString\": 1\n          }, members).toString != getClass) {\n            // Safari <= 2.0.3 doesn't implement `Object#hasOwnProperty`, but\n            // supports the mutable *proto* property.\n            isProperty = function (property) {\n              // Capture and break the object's prototype chain (see section 8.6.2\n              // of the ES 5.1 spec). The parenthesized expression prevents an\n              // unsafe transformation by the Closure Compiler.\n              var original = this.__proto__, result = property in (this.__proto__ = null, this);\n              // Restore the original prototype chain.\n              this.__proto__ = original;\n              return result;\n            };\n          } else {\n            // Capture a reference to the top-level `Object` constructor.\n            constructor = members.constructor;\n            // Use the `constructor` property to simulate `Object#hasOwnProperty` in\n            // other environments.\n            isProperty = function (property) {\n              var parent = (this.constructor || constructor).prototype;\n              return property in this && !(property in parent && this[property] === parent[property]);\n            };\n          }\n          members = null;\n          return isProperty.call(this, property);\n        };\n      }\n\n      // Internal: Normalizes the `for...in` iteration algorithm across\n      // environments. Each enumerated key is yielded to a `callback` function.\n      forEach = function (object, callback) {\n        var size = 0, Properties, members, property;\n\n        // Tests for bugs in the current environment's `for...in` algorithm. The\n        // `valueOf` property inherits the non-enumerable flag from\n        // `Object.prototype` in older versions of IE, Netscape, and Mozilla.\n        (Properties = function () {\n          this.valueOf = 0;\n        }).prototype.valueOf = 0;\n\n        // Iterate over a new instance of the `Properties` class.\n        members = new Properties();\n        for (property in members) {\n          // Ignore all properties inherited from `Object.prototype`.\n          if (isProperty.call(members, property)) {\n            size++;\n          }\n        }\n        Properties = members = null;\n\n        // Normalize the iteration algorithm.\n        if (!size) {\n          // A list of non-enumerable properties inherited from `Object.prototype`.\n          members = [\"valueOf\", \"toString\", \"toLocaleString\", \"propertyIsEnumerable\", \"isPrototypeOf\", \"hasOwnProperty\", \"constructor\"];\n          // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable\n          // properties.\n          forEach = function (object, callback) {\n            var isFunction = getClass.call(object) == functionClass, property, length;\n            var hasProperty = !isFunction && typeof object.constructor != \"function\" && objectTypes[typeof object.hasOwnProperty] && object.hasOwnProperty || isProperty;\n            for (property in object) {\n              // Gecko <= 1.0 enumerates the `prototype` property of functions under\n              // certain conditions; IE does not.\n              if (!(isFunction && property == \"prototype\") && hasProperty.call(object, property)) {\n                callback(property);\n              }\n            }\n            // Manually invoke the callback for each non-enumerable property.\n            for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property));\n          };\n        } else if (size == 2) {\n          // Safari <= 2.0.4 enumerates shadowed properties twice.\n          forEach = function (object, callback) {\n            // Create a set of iterated properties.\n            var members = {}, isFunction = getClass.call(object) == functionClass, property;\n            for (property in object) {\n              // Store each property name to prevent double enumeration. The\n              // `prototype` property of functions is not enumerated due to cross-\n              // environment inconsistencies.\n              if (!(isFunction && property == \"prototype\") && !isProperty.call(members, property) && (members[property] = 1) && isProperty.call(object, property)) {\n                callback(property);\n              }\n            }\n          };\n        } else {\n          // No bugs detected; use the standard `for...in` algorithm.\n          forEach = function (object, callback) {\n            var isFunction = getClass.call(object) == functionClass, property, isConstructor;\n            for (property in object) {\n              if (!(isFunction && property == \"prototype\") && isProperty.call(object, property) && !(isConstructor = property === \"constructor\")) {\n                callback(property);\n              }\n            }\n            // Manually invoke the callback for the `constructor` property due to\n            // cross-environment inconsistencies.\n            if (isConstructor || isProperty.call(object, (property = \"constructor\"))) {\n              callback(property);\n            }\n          };\n        }\n        return forEach(object, callback);\n      };\n\n      // Public: Serializes a JavaScript `value` as a JSON string. The optional\n      // `filter` argument may specify either a function that alters how object and\n      // array members are serialized, or an array of strings and numbers that\n      // indicates which properties should be serialized. The optional `width`\n      // argument may be either a string or number that specifies the indentation\n      // level of the output.\n      if (!has(\"json-stringify\")) {\n        // Internal: A map of control characters and their escaped equivalents.\n        var Escapes = {\n          92: \"\\\\\\\\\",\n          34: '\\\\\"',\n          8: \"\\\\b\",\n          12: \"\\\\f\",\n          10: \"\\\\n\",\n          13: \"\\\\r\",\n          9: \"\\\\t\"\n        };\n\n        // Internal: Converts `value` into a zero-padded string such that its\n        // length is at least equal to `width`. The `width` must be <= 6.\n        var leadingZeroes = \"000000\";\n        var toPaddedString = function (width, value) {\n          // The `|| 0` expression is necessary to work around a bug in\n          // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== \"0\"`.\n          return (leadingZeroes + (value || 0)).slice(-width);\n        };\n\n        // Internal: Double-quotes a string `value`, replacing all ASCII control\n        // characters (characters with code unit values between 0 and 31) with\n        // their escaped equivalents. This is an implementation of the\n        // `Quote(value)` operation defined in ES 5.1 section 15.12.3.\n        var unicodePrefix = \"\\\\u00\";\n        var quote = function (value) {\n          var result = '\"', index = 0, length = value.length, useCharIndex = !charIndexBuggy || length > 10;\n          var symbols = useCharIndex && (charIndexBuggy ? value.split(\"\") : value);\n          for (; index < length; index++) {\n            var charCode = value.charCodeAt(index);\n            // If the character is a control character, append its Unicode or\n            // shorthand escape sequence; otherwise, append the character as-is.\n            switch (charCode) {\n              case 8: case 9: case 10: case 12: case 13: case 34: case 92:\n                result += Escapes[charCode];\n                break;\n              default:\n                if (charCode < 32) {\n                  result += unicodePrefix + toPaddedString(2, charCode.toString(16));\n                  break;\n                }\n                result += useCharIndex ? symbols[index] : value.charAt(index);\n            }\n          }\n          return result + '\"';\n        };\n\n        // Internal: Recursively serializes an object. Implements the\n        // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.\n        var serialize = function (property, object, callback, properties, whitespace, indentation, stack) {\n          var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;\n          try {\n            // Necessary for host object support.\n            value = object[property];\n          } catch (exception) {}\n          if (typeof value == \"object\" && value) {\n            className = getClass.call(value);\n            if (className == dateClass && !isProperty.call(value, \"toJSON\")) {\n              if (value > -1 / 0 && value < 1 / 0) {\n                // Dates are serialized according to the `Date#toJSON` method\n                // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15\n                // for the ISO 8601 date time string format.\n                if (getDay) {\n                  // Manually compute the year, month, date, hours, minutes,\n                  // seconds, and milliseconds if the `getUTC*` methods are\n                  // buggy. Adapted from @Yaffle's `date-shim` project.\n                  date = floor(value / 864e5);\n                  for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++);\n                  for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++);\n                  date = 1 + date - getDay(year, month);\n                  // The `time` value specifies the time within the day (see ES\n                  // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used\n                  // to compute `A modulo B`, as the `%` operator does not\n                  // correspond to the `modulo` operation for negative numbers.\n                  time = (value % 864e5 + 864e5) % 864e5;\n                  // The hours, minutes, seconds, and milliseconds are obtained by\n                  // decomposing the time within the day. See section 15.9.1.10.\n                  hours = floor(time / 36e5) % 24;\n                  minutes = floor(time / 6e4) % 60;\n                  seconds = floor(time / 1e3) % 60;\n                  milliseconds = time % 1e3;\n                } else {\n                  year = value.getUTCFullYear();\n                  month = value.getUTCMonth();\n                  date = value.getUTCDate();\n                  hours = value.getUTCHours();\n                  minutes = value.getUTCMinutes();\n                  seconds = value.getUTCSeconds();\n                  milliseconds = value.getUTCMilliseconds();\n                }\n                // Serialize extended years correctly.\n                value = (year <= 0 || year >= 1e4 ? (year < 0 ? \"-\" : \"+\") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) +\n                  \"-\" + toPaddedString(2, month + 1) + \"-\" + toPaddedString(2, date) +\n                  // Months, dates, hours, minutes, and seconds should have two\n                  // digits; milliseconds should have three.\n                  \"T\" + toPaddedString(2, hours) + \":\" + toPaddedString(2, minutes) + \":\" + toPaddedString(2, seconds) +\n                  // Milliseconds are optional in ES 5.0, but required in 5.1.\n                  \".\" + toPaddedString(3, milliseconds) + \"Z\";\n              } else {\n                value = null;\n              }\n            } else if (typeof value.toJSON == \"function\" && ((className != numberClass && className != stringClass && className != arrayClass) || isProperty.call(value, \"toJSON\"))) {\n              // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the\n              // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3\n              // ignores all `toJSON` methods on these objects unless they are\n              // defined directly on an instance.\n              value = value.toJSON(property);\n            }\n          }\n          if (callback) {\n            // If a replacement function was provided, call it to obtain the value\n            // for serialization.\n            value = callback.call(object, property, value);\n          }\n          if (value === null) {\n            return \"null\";\n          }\n          className = getClass.call(value);\n          if (className == booleanClass) {\n            // Booleans are represented literally.\n            return \"\" + value;\n          } else if (className == numberClass) {\n            // JSON numbers must be finite. `Infinity` and `NaN` are serialized as\n            // `\"null\"`.\n            return value > -1 / 0 && value < 1 / 0 ? \"\" + value : \"null\";\n          } else if (className == stringClass) {\n            // Strings are double-quoted and escaped.\n            return quote(\"\" + value);\n          }\n          // Recursively serialize objects and arrays.\n          if (typeof value == \"object\") {\n            // Check for cyclic structures. This is a linear search; performance\n            // is inversely proportional to the number of unique nested objects.\n            for (length = stack.length; length--;) {\n              if (stack[length] === value) {\n                // Cyclic structures cannot be serialized by `JSON.stringify`.\n                throw TypeError();\n              }\n            }\n            // Add the object to the stack of traversed objects.\n            stack.push(value);\n            results = [];\n            // Save the current indentation level and indent one additional level.\n            prefix = indentation;\n            indentation += whitespace;\n            if (className == arrayClass) {\n              // Recursively serialize array elements.\n              for (index = 0, length = value.length; index < length; index++) {\n                element = serialize(index, value, callback, properties, whitespace, indentation, stack);\n                results.push(element === undef ? \"null\" : element);\n              }\n              result = results.length ? (whitespace ? \"[\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"]\" : (\"[\" + results.join(\",\") + \"]\")) : \"[]\";\n            } else {\n              // Recursively serialize object members. Members are selected from\n              // either a user-specified list of property names, or the object\n              // itself.\n              forEach(properties || value, function (property) {\n                var element = serialize(property, value, callback, properties, whitespace, indentation, stack);\n                if (element !== undef) {\n                  // According to ES 5.1 section 15.12.3: \"If `gap` {whitespace}\n                  // is not the empty string, let `member` {quote(property) + \":\"}\n                  // be the concatenation of `member` and the `space` character.\"\n                  // The \"`space` character\" refers to the literal space\n                  // character, not the `space` {width} argument provided to\n                  // `JSON.stringify`.\n                  results.push(quote(property) + \":\" + (whitespace ? \" \" : \"\") + element);\n                }\n              });\n              result = results.length ? (whitespace ? \"{\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"}\" : (\"{\" + results.join(\",\") + \"}\")) : \"{}\";\n            }\n            // Remove the object from the traversed object stack.\n            stack.pop();\n            return result;\n          }\n        };\n\n        // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.\n        exports.stringify = function (source, filter, width) {\n          var whitespace, callback, properties, className;\n          if (objectTypes[typeof filter] && filter) {\n            if ((className = getClass.call(filter)) == functionClass) {\n              callback = filter;\n            } else if (className == arrayClass) {\n              // Convert the property names array into a makeshift set.\n              properties = {};\n              for (var index = 0, length = filter.length, value; index < length; value = filter[index++], ((className = getClass.call(value)), className == stringClass || className == numberClass) && (properties[value] = 1));\n            }\n          }\n          if (width) {\n            if ((className = getClass.call(width)) == numberClass) {\n              // Convert the `width` to an integer and create a string containing\n              // `width` number of space characters.\n              if ((width -= width % 1) > 0) {\n                for (whitespace = \"\", width > 10 && (width = 10); whitespace.length < width; whitespace += \" \");\n              }\n            } else if (className == stringClass) {\n              whitespace = width.length <= 10 ? width : width.slice(0, 10);\n            }\n          }\n          // Opera <= 7.54u2 discards the values associated with empty string keys\n          // (`\"\"`) only if they are used directly within an object member list\n          // (e.g., `!(\"\" in { \"\": 1})`).\n          return serialize(\"\", (value = {}, value[\"\"] = source, value), callback, properties, whitespace, \"\", []);\n        };\n      }\n\n      // Public: Parses a JSON source string.\n      if (!has(\"json-parse\")) {\n        var fromCharCode = String.fromCharCode;\n\n        // Internal: A map of escaped control characters and their unescaped\n        // equivalents.\n        var Unescapes = {\n          92: \"\\\\\",\n          34: '\"',\n          47: \"/\",\n          98: \"\\b\",\n          116: \"\\t\",\n          110: \"\\n\",\n          102: \"\\f\",\n          114: \"\\r\"\n        };\n\n        // Internal: Stores the parser state.\n        var Index, Source;\n\n        // Internal: Resets the parser state and throws a `SyntaxError`.\n        var abort = function () {\n          Index = Source = null;\n          throw SyntaxError();\n        };\n\n        // Internal: Returns the next token, or `\"$\"` if the parser has reached\n        // the end of the source string. A token may be a string, number, `null`\n        // literal, or Boolean literal.\n        var lex = function () {\n          var source = Source, length = source.length, value, begin, position, isSigned, charCode;\n          while (Index < length) {\n            charCode = source.charCodeAt(Index);\n            switch (charCode) {\n              case 9: case 10: case 13: case 32:\n                // Skip whitespace tokens, including tabs, carriage returns, line\n                // feeds, and space characters.\n                Index++;\n                break;\n              case 123: case 125: case 91: case 93: case 58: case 44:\n                // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at\n                // the current position.\n                value = charIndexBuggy ? source.charAt(Index) : source[Index];\n                Index++;\n                return value;\n              case 34:\n                // `\"` delimits a JSON string; advance to the next character and\n                // begin parsing the string. String tokens are prefixed with the\n                // sentinel `@` character to distinguish them from punctuators and\n                // end-of-string tokens.\n                for (value = \"@\", Index++; Index < length;) {\n                  charCode = source.charCodeAt(Index);\n                  if (charCode < 32) {\n                    // Unescaped ASCII control characters (those with a code unit\n                    // less than the space character) are not permitted.\n                    abort();\n                  } else if (charCode == 92) {\n                    // A reverse solidus (`\\`) marks the beginning of an escaped\n                    // control character (including `\"`, `\\`, and `/`) or Unicode\n                    // escape sequence.\n                    charCode = source.charCodeAt(++Index);\n                    switch (charCode) {\n                      case 92: case 34: case 47: case 98: case 116: case 110: case 102: case 114:\n                        // Revive escaped control characters.\n                        value += Unescapes[charCode];\n                        Index++;\n                        break;\n                      case 117:\n                        // `\\u` marks the beginning of a Unicode escape sequence.\n                        // Advance to the first character and validate the\n                        // four-digit code point.\n                        begin = ++Index;\n                        for (position = Index + 4; Index < position; Index++) {\n                          charCode = source.charCodeAt(Index);\n                          // A valid sequence comprises four hexdigits (case-\n                          // insensitive) that form a single hexadecimal value.\n                          if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {\n                            // Invalid Unicode escape sequence.\n                            abort();\n                          }\n                        }\n                        // Revive the escaped character.\n                        value += fromCharCode(\"0x\" + source.slice(begin, Index));\n                        break;\n                      default:\n                        // Invalid escape sequence.\n                        abort();\n                    }\n                  } else {\n                    if (charCode == 34) {\n                      // An unescaped double-quote character marks the end of the\n                      // string.\n                      break;\n                    }\n                    charCode = source.charCodeAt(Index);\n                    begin = Index;\n                    // Optimize for the common case where a string is valid.\n                    while (charCode >= 32 && charCode != 92 && charCode != 34) {\n                      charCode = source.charCodeAt(++Index);\n                    }\n                    // Append the string as-is.\n                    value += source.slice(begin, Index);\n                  }\n                }\n                if (source.charCodeAt(Index) == 34) {\n                  // Advance to the next character and return the revived string.\n                  Index++;\n                  return value;\n                }\n                // Unterminated string.\n                abort();\n              default:\n                // Parse numbers and literals.\n                begin = Index;\n                // Advance past the negative sign, if one is specified.\n                if (charCode == 45) {\n                  isSigned = true;\n                  charCode = source.charCodeAt(++Index);\n                }\n                // Parse an integer or floating-point value.\n                if (charCode >= 48 && charCode <= 57) {\n                  // Leading zeroes are interpreted as octal literals.\n                  if (charCode == 48 && ((charCode = source.charCodeAt(Index + 1)), charCode >= 48 && charCode <= 57)) {\n                    // Illegal octal literal.\n                    abort();\n                  }\n                  isSigned = false;\n                  // Parse the integer component.\n                  for (; Index < length && ((charCode = source.charCodeAt(Index)), charCode >= 48 && charCode <= 57); Index++);\n                  // Floats cannot contain a leading decimal point; however, this\n                  // case is already accounted for by the parser.\n                  if (source.charCodeAt(Index) == 46) {\n                    position = ++Index;\n                    // Parse the decimal component.\n                    for (; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n                    if (position == Index) {\n                      // Illegal trailing decimal.\n                      abort();\n                    }\n                    Index = position;\n                  }\n                  // Parse exponents. The `e` denoting the exponent is\n                  // case-insensitive.\n                  charCode = source.charCodeAt(Index);\n                  if (charCode == 101 || charCode == 69) {\n                    charCode = source.charCodeAt(++Index);\n                    // Skip past the sign following the exponent, if one is\n                    // specified.\n                    if (charCode == 43 || charCode == 45) {\n                      Index++;\n                    }\n                    // Parse the exponential component.\n                    for (position = Index; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n                    if (position == Index) {\n                      // Illegal empty exponent.\n                      abort();\n                    }\n                    Index = position;\n                  }\n                  // Coerce the parsed value to a JavaScript number.\n                  return +source.slice(begin, Index);\n                }\n                // A negative sign may only precede numbers.\n                if (isSigned) {\n                  abort();\n                }\n                // `true`, `false`, and `null` literals.\n                if (source.slice(Index, Index + 4) == \"true\") {\n                  Index += 4;\n                  return true;\n                } else if (source.slice(Index, Index + 5) == \"false\") {\n                  Index += 5;\n                  return false;\n                } else if (source.slice(Index, Index + 4) == \"null\") {\n                  Index += 4;\n                  return null;\n                }\n                // Unrecognized token.\n                abort();\n            }\n          }\n          // Return the sentinel `$` character if the parser has reached the end\n          // of the source string.\n          return \"$\";\n        };\n\n        // Internal: Parses a JSON `value` token.\n        var get = function (value) {\n          var results, hasMembers;\n          if (value == \"$\") {\n            // Unexpected end of input.\n            abort();\n          }\n          if (typeof value == \"string\") {\n            if ((charIndexBuggy ? value.charAt(0) : value[0]) == \"@\") {\n              // Remove the sentinel `@` character.\n              return value.slice(1);\n            }\n            // Parse object and array literals.\n            if (value == \"[\") {\n              // Parses a JSON array, returning a new JavaScript array.\n              results = [];\n              for (;; hasMembers || (hasMembers = true)) {\n                value = lex();\n                // A closing square bracket marks the end of the array literal.\n                if (value == \"]\") {\n                  break;\n                }\n                // If the array literal contains elements, the current token\n                // should be a comma separating the previous element from the\n                // next.\n                if (hasMembers) {\n                  if (value == \",\") {\n                    value = lex();\n                    if (value == \"]\") {\n                      // Unexpected trailing `,` in array literal.\n                      abort();\n                    }\n                  } else {\n                    // A `,` must separate each array element.\n                    abort();\n                  }\n                }\n                // Elisions and leading commas are not permitted.\n                if (value == \",\") {\n                  abort();\n                }\n                results.push(get(value));\n              }\n              return results;\n            } else if (value == \"{\") {\n              // Parses a JSON object, returning a new JavaScript object.\n              results = {};\n              for (;; hasMembers || (hasMembers = true)) {\n                value = lex();\n                // A closing curly brace marks the end of the object literal.\n                if (value == \"}\") {\n                  break;\n                }\n                // If the object literal contains members, the current token\n                // should be a comma separator.\n                if (hasMembers) {\n                  if (value == \",\") {\n                    value = lex();\n                    if (value == \"}\") {\n                      // Unexpected trailing `,` in object literal.\n                      abort();\n                    }\n                  } else {\n                    // A `,` must separate each object member.\n                    abort();\n                  }\n                }\n                // Leading commas are not permitted, object property names must be\n                // double-quoted strings, and a `:` must separate each property\n                // name and value.\n                if (value == \",\" || typeof value != \"string\" || (charIndexBuggy ? value.charAt(0) : value[0]) != \"@\" || lex() != \":\") {\n                  abort();\n                }\n                results[value.slice(1)] = get(lex());\n              }\n              return results;\n            }\n            // Unexpected token encountered.\n            abort();\n          }\n          return value;\n        };\n\n        // Internal: Updates a traversed object member.\n        var update = function (source, property, callback) {\n          var element = walk(source, property, callback);\n          if (element === undef) {\n            delete source[property];\n          } else {\n            source[property] = element;\n          }\n        };\n\n        // Internal: Recursively traverses a parsed JSON object, invoking the\n        // `callback` function for each value. This is an implementation of the\n        // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.\n        var walk = function (source, property, callback) {\n          var value = source[property], length;\n          if (typeof value == \"object\" && value) {\n            // `forEach` can't be used to traverse an array in Opera <= 8.54\n            // because its `Object#hasOwnProperty` implementation returns `false`\n            // for array indices (e.g., `![1, 2, 3].hasOwnProperty(\"0\")`).\n            if (getClass.call(value) == arrayClass) {\n              for (length = value.length; length--;) {\n                update(value, length, callback);\n              }\n            } else {\n              forEach(value, function (property) {\n                update(value, property, callback);\n              });\n            }\n          }\n          return callback.call(source, property, value);\n        };\n\n        // Public: `JSON.parse`. See ES 5.1 section 15.12.2.\n        exports.parse = function (source, callback) {\n          var result, value;\n          Index = 0;\n          Source = \"\" + source;\n          result = get(lex());\n          // If a JSON string contains multiple tokens, it is invalid.\n          if (lex() != \"$\") {\n            abort();\n          }\n          // Reset the parser state.\n          Index = Source = null;\n          return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[\"\"] = result, value), \"\", callback) : result;\n        };\n      }\n    }\n\n    exports[\"runInContext\"] = runInContext;\n    return exports;\n  }\n\n  if (freeExports && !isLoader) {\n    // Export for CommonJS environments.\n    runInContext(root, freeExports);\n  } else {\n    // Export for web browsers and JavaScript engines.\n    var nativeJSON = root.JSON,\n        previousJSON = root[\"JSON3\"],\n        isRestored = false;\n\n    var JSON3 = runInContext(root, (root[\"JSON3\"] = {\n      // Public: Restores the original value of the global `JSON` object and\n      // returns a reference to the `JSON3` object.\n      \"noConflict\": function () {\n        if (!isRestored) {\n          isRestored = true;\n          root.JSON = nativeJSON;\n          root[\"JSON3\"] = previousJSON;\n          nativeJSON = previousJSON = null;\n        }\n        return JSON3;\n      }\n    }));\n\n    root.JSON = {\n      \"parse\": JSON3.parse,\n      \"stringify\": JSON3.stringify\n    };\n  }\n\n  // Export for asynchronous module loaders.\n  if (isLoader) {\n    define(function () {\n      return JSON3;\n    });\n  }\n}).call(this);\n\n//##############################################################################\n// Elements.js\n//##############################################################################\n\n(function () {\n\n\t/**\n\t * Convenience methods for creating various elements used by PrelaodJS.\n\t *\n\t * @class DomUtils\n\t */\n\tvar s = {};\n\n\ts.a = function() {\n\t\treturn s.el(\"a\");\n\t}\n\n\ts.svg = function() {\n\t\treturn s.el(\"svg\");\n\t}\n\n\ts.object = function() {\n\t\treturn s.el(\"object\");\n\t}\n\n\ts.image = function() {\n\t\treturn s.el(\"image\");\n\t}\n\n\ts.img = function() {\n\t\treturn s.el(\"img\");\n\t}\n\n\ts.style = function() {\n\t\treturn s.el(\"style\");\n\t}\n\n\ts.link = function() {\n\t\treturn s.el(\"link\");\n\t}\n\n\ts.script = function() {\n\t\treturn s.el(\"script\");\n\t}\n\n\ts.audio = function() {\n\t\treturn s.el(\"audio\");\n\t}\n\n\ts.video = function() {\n\t\treturn s.el(\"video\");\n\t}\n\n\ts.text = function(value) {\n\t\treturn document.createTextNode(value);\n\t}\n\n\ts.el = function(name) {\n\t\treturn document.createElement(name);\n\t}\n\n\tcreatejs.Elements = s;\n\n}());\n\n//##############################################################################\n// URLUtils.js\n//##############################################################################\n\n(function () {\n\n\t/**\n\t * Utilities that assist with parsing load items, and determining file types, etc.\n\t * @class URLUtils\n\t */\n\tvar s = {};\n\n\t/**\n\t * The Regular Expression used to test file URLS for an absolute path.\n\t * @property ABSOLUTE_PATH\n\t * @type {RegExp}\n\t * @static\n\t */\n\ts.ABSOLUTE_PATT = /^(?:\\w+:)?\\/{2}/i;\n\n\t/**\n\t * The Regular Expression used to test file URLS for a relative path.\n\t * @property RELATIVE_PATH\n\t * @type {RegExp}\n\t * @static\n\t */\n\ts.RELATIVE_PATT = (/^[./]*?\\//i);\n\n\t/**\n\t * The Regular Expression used to test file URLS for an extension. Note that URIs must already have the query string\n\t * removed.\n\t * @property EXTENSION_PATT\n\t * @type {RegExp}\n\t * @static\n\t */\n\ts.EXTENSION_PATT = /\\/?[^/]+\\.(\\w{1,5})$/i;\n\n\t/**\n\t * Parse a file path to determine the information we need to work with it. Currently, PreloadJS needs to know:\n\t * <ul>\n\t *     <li>If the path is absolute. Absolute paths start with a protocol (such as `http://`, `file://`, or\n\t *     `//networkPath`)</li>\n\t *     <li>If the path is relative. Relative paths start with `../` or `/path` (or similar)</li>\n\t *     <li>The file extension. This is determined by the filename with an extension. Query strings are dropped, and\n\t *     the file path is expected to follow the format `name.ext`.</li>\n\t * </ul>\n\t *\n\t * @method parseURI\n\t * @param {String} path\n\t * @returns {Object} An Object with an `absolute` and `relative` Boolean values,\n\t * \tthe pieces of the path (protocol, hostname, port, pathname, search, hash, host)\n\t * \tas well as an optional 'extension` property, which is the lowercase extension.\n\t *\n\t * @static\n\t */\n\ts.parseURI = function (path) {\n\t\tvar info = {\n\t\t\tabsolute: false,\n\t\t\trelative: false,\n\t\t\tprotocol: null,\n\t\t\thostname: null,\n\t\t\tport: null,\n\t\t\tpathname: null,\n\t\t\tsearch: null,\n\t\t\thash: null,\n\t\t\thost: null\n\t\t};\n\n\t\tif (path == null) { return info; }\n\n\t\t// Inject the path parts.\n\t\tvar parser = createjs.Elements.a();\n\t\tparser.href = path;\n\n\t\tfor (var n in info) {\n\t\t\tif (n in parser) {\n\t\t\t\tinfo[n] = parser[n];\n\t\t\t}\n\t\t}\n\n\t\t// Drop the query string\n\t\tvar queryIndex = path.indexOf(\"?\");\n\t\tif (queryIndex > -1) {\n\t\t\tpath = path.substr(0, queryIndex);\n\t\t}\n\n\t\t// Absolute\n\t\tvar match;\n\t\tif (s.ABSOLUTE_PATT.test(path)) {\n\t\t\tinfo.absolute = true;\n\n\t\t\t// Relative\n\t\t} else if (s.RELATIVE_PATT.test(path)) {\n\t\t\tinfo.relative = true;\n\t\t}\n\n\t\t// Extension\n\t\tif (match = path.match(s.EXTENSION_PATT)) {\n\t\t\tinfo.extension = match[1].toLowerCase();\n\t\t}\n\n\t\treturn info;\n\t};\n\n\t/**\n\t * Formats an object into a query string for either a POST or GET request.\n\t * @method formatQueryString\n\t * @param {Object} data The data to convert to a query string.\n\t * @param {Array} [query] Existing name/value pairs to append on to this query.\n\t * @static\n\t */\n\ts.formatQueryString = function (data, query) {\n\t\tif (data == null) {\n\t\t\tthrow new Error(\"You must specify data.\");\n\t\t}\n\t\tvar params = [];\n\t\tfor (var n in data) {\n\t\t\tparams.push(n + \"=\" + escape(data[n]));\n\t\t}\n\t\tif (query) {\n\t\t\tparams = params.concat(query);\n\t\t}\n\t\treturn params.join(\"&\");\n\t};\n\n\t/**\n\t * A utility method that builds a file path using a source and a data object, and formats it into a new path.\n\t * @method buildURI\n\t * @param {String} src The source path to add values to.\n\t * @param {Object} [data] Object used to append values to this request as a query string. Existing parameters on the\n\t * path will be preserved.\n\t * @returns {string} A formatted string that contains the path and the supplied parameters.\n\t * @static\n\t */\n\ts.buildURI = function (src, data) {\n\t\tif (data == null) {\n\t\t\treturn src;\n\t\t}\n\n\t\tvar query = [];\n\t\tvar idx = src.indexOf(\"?\");\n\n\t\tif (idx != -1) {\n\t\t\tvar q = src.slice(idx + 1);\n\t\t\tquery = query.concat(q.split(\"&\"));\n\t\t}\n\n\t\tif (idx != -1) {\n\t\t\treturn src.slice(0, idx) + \"?\" + this.formatQueryString(data, query);\n\t\t} else {\n\t\t\treturn src + \"?\" + this.formatQueryString(data, query);\n\t\t}\n\t};\n\n\t/**\n\t * @method isCrossDomain\n\t * @param {LoadItem|Object} item A load item with a `src` property.\n\t * @return {Boolean} If the load item is loading from a different domain than the current location.\n\t * @static\n\t */\n\ts.isCrossDomain = function (item) {\n\t\tvar target = createjs.Elements.a();\n\t\ttarget.href = item.src;\n\n\t\tvar host = createjs.Elements.a();\n\t\thost.href = location.href;\n\n\t\tvar crossdomain = (target.hostname != \"\") &&\n\t\t\t(target.port != host.port ||\n\t\t\ttarget.protocol != host.protocol ||\n\t\t\ttarget.hostname != host.hostname);\n\t\treturn crossdomain;\n\t};\n\n\t/**\n\t * @method isLocal\n\t * @param {LoadItem|Object} item A load item with a `src` property\n\t * @return {Boolean} If the load item is loading from the \"file:\" protocol. Assume that the host must be local as\n\t * well.\n\t * @static\n\t */\n\ts.isLocal = function (item) {\n\t\tvar target = createjs.Elements.a();\n\t\ttarget.href = item.src;\n\t\treturn target.hostname == \"\" && target.protocol == \"file:\";\n\t};\n\n\tcreatejs.URLUtils = s;\n\n}());\n\n//##############################################################################\n// DomUtils.js\n//##############################################################################\n\n(function () {\n\n\t/**\n\t * A few utilities for interacting with the dom.\n\t * @class DomUtils\n\t */\n\tvar s = {\n\t\tcontainer: null\n\t};\n\n\ts.appendToHead = function (el) {\n\t\ts.getHead().appendChild(el);\n\t}\n\n\ts.appendToBody = function (el) {\n\t\tif (s.container == null) {\n\t\t\ts.container = document.createElement(\"div\");\n\t\t\ts.container.id = \"preloadjs-container\";\n\t\t\tvar style = s.container.style;\n\t\t\tstyle.visibility = \"hidden\";\n\t\t\tstyle.position = \"absolute\";\n\t\t\tstyle.width = s.container.style.height = \"10px\";\n\t\t\tstyle.overflow = \"hidden\";\n\t\t\tstyle.transform = style.msTransform = style.webkitTransform = style.oTransform = \"translate(-10px, -10px)\"; //LM: Not working\n\t\t\ts.getBody().appendChild(s.container);\n\t\t}\n\t\ts.container.appendChild(el);\n\t}\n\n\ts.getHead = function () {\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t}\n\n\ts.getBody = function () {\n\t\treturn document.body || document.getElementsByTagName(\"body\")[0];\n\t}\n\n\ts.removeChild = function(el) {\n\t\tif (el.parent) {\n\t\t\tel.parent.removeChild(el);\n\t\t}\n\t}\n\n\t/**\n\t * Check if item is a valid HTMLImageElement\n\t * @method isImageTag\n\t * @param {Object} item\n\t * @returns {Boolean}\n\t * @static\n\t */\n\ts.isImageTag = function(item) {\n\t\treturn item instanceof HTMLImageElement;\n\t};\n\n\t/**\n\t * Check if item is a valid HTMLAudioElement\n\t * @method isAudioTag\n\t * @param {Object} item\n\t * @returns {Boolean}\n\t * @static\n\t */\n\ts.isAudioTag = function(item) {\n\t\tif (window.HTMLAudioElement) {\n\t\t\treturn item instanceof HTMLAudioElement;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\t/**\n\t * Check if item is a valid HTMLVideoElement\n\t * @method isVideoTag\n\t * @param {Object} item\n\t * @returns {Boolean}\n\t * @static\n\t */\n\ts.isVideoTag = function(item) {\n\t\tif (window.HTMLVideoElement) {\n\t\t\treturn item instanceof HTMLVideoElement;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tcreatejs.DomUtils = s;\n\n}());\n\n//##############################################################################\n// DataUtils.js\n//##############################################################################\n\n(function () {\n\n\t/**\n\t * A few data utilities for formatting different data types.\n\t * @class DataUtils\n\t */\n\tvar s = {};\n\n\t// static methods\n\t/**\n\t * Parse XML using the DOM. This is required when preloading XML or SVG.\n\t * @method parseXML\n\t * @param {String} text The raw text or XML that is loaded by XHR.\n\t * @return {XML} An XML document\n\t * @static\n\t */\n\ts.parseXML = function (text) {\n\t\tvar xml = null;\n\t\t// CocoonJS does not support XML parsing with either method.\n\n\t\t// Most browsers will use DOMParser\n\t\t// IE fails on certain SVG files, so we have a fallback below.\n\t\ttry {\n\t\t\tif (window.DOMParser) {\n\t\t\t\tvar parser = new DOMParser();\n\t\t\t\txml = parser.parseFromString(text, \"text/xml\");\n\t\t\t}\n\t\t} catch (e) {\n\t\t}\n\n\t\t// Fallback for IE support.\n\t\tif (!xml) {\n\t\t\ttry {\n\t\t\t\txml = new ActiveXObject(\"Microsoft.XMLDOM\");\n\t\t\t\txml.async = false;\n\t\t\t\txml.loadXML(text);\n\t\t\t} catch (e) {\n\t\t\t\txml = null;\n\t\t\t}\n\t\t}\n\n\t\treturn xml;\n\t};\n\n\t/**\n\t * Parse a string into an Object.\n\t * @method parseJSON\n\t * @param {String} value The loaded JSON string\n\t * @returns {Object} A JavaScript object.\n\t */\n\ts.parseJSON = function (value) {\n\t\tif (value == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\ttry {\n\t\t\treturn JSON.parse(value);\n\t\t} catch (e) {\n\t\t\t// TODO; Handle this with a custom error?\n\t\t\tthrow e;\n\t\t}\n\t};\n\n\tcreatejs.DataUtils = s;\n\n}());\n\n//##############################################################################\n// Types.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function() {\n\tvar s = {};\n\n\t/**\n\t * The preload type for generic binary types. Note that images are loaded as binary files when using XHR.\n\t * @property BINARY\n\t * @type {String}\n\t * @default binary\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.BINARY = \"binary\";\n\n\t/**\n\t * The preload type for css files. CSS files are loaded using a &lt;link&gt; when loaded with XHR, or a\n\t * &lt;style&gt; tag when loaded with tags.\n\t * @property CSS\n\t * @type {String}\n\t * @default css\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.CSS = \"css\";\n\n\t/**\n\t * The preload type for font files.\n\t * @property FONT\n\t * @type {String}\n\t * @default font\n\t * @static\n\t * @since 0.9.0\n\t */\n\ts.FONT = \"font\";\n\n\t/**\n\t * The preload type for fonts specified with CSS (such as Google fonts)\n\t * @property FONTCSS\n\t * @type {String}\n\t * @default fontcss\n\t * @static\n\t * @since 0.9.0\n\t */\n\ts.FONTCSS = \"fontcss\";\n\n\t/**\n\t * The preload type for image files, usually png, gif, or jpg/jpeg. Images are loaded into an &lt;image&gt; tag.\n\t * @property IMAGE\n\t * @type {String}\n\t * @default image\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.IMAGE = \"image\";\n\n\t/**\n\t * The preload type for javascript files, usually with the \"js\" file extension. JavaScript files are loaded into a\n\t * &lt;script&gt; tag.\n\t *\n\t * Since version 0.4.1+, due to how tag-loaded scripts work, all JavaScript files are automatically injected into\n\t * the body of the document to maintain parity between XHR and tag-loaded scripts. In version 0.4.0 and earlier,\n\t * only tag-loaded scripts are injected.\n\t * @property JAVASCRIPT\n\t * @type {String}\n\t * @default javascript\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.JAVASCRIPT = \"javascript\";\n\n\t/**\n\t * The preload type for json files, usually with the \"json\" file extension. JSON data is loaded and parsed into a\n\t * JavaScript object. Note that if a `callback` is present on the load item, the file will be loaded with JSONP,\n\t * no matter what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}} property is set to, and the JSON\n\t * must contain a matching wrapper function.\n\t * @property JSON\n\t * @type {String}\n\t * @default json\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.JSON = \"json\";\n\n\t/**\n\t * The preload type for jsonp files, usually with the \"json\" file extension. JSON data is loaded and parsed into a\n\t * JavaScript object. You are required to pass a callback parameter that matches the function wrapper in the JSON.\n\t * Note that JSONP will always be used if there is a callback present, no matter what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}}\n\t * property is set to.\n\t * @property JSONP\n\t * @type {String}\n\t * @default jsonp\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.JSONP = \"jsonp\";\n\n\t/**\n\t * The preload type for json-based manifest files, usually with the \"json\" file extension. The JSON data is loaded\n\t * and parsed into a JavaScript object. PreloadJS will then look for a \"manifest\" property in the JSON, which is an\n\t * Array of files to load, following the same format as the {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}\n\t * method. If a \"callback\" is specified on the manifest object, then it will be loaded using JSONP instead,\n\t * regardless of what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}} property is set to.\n\t * @property MANIFEST\n\t * @type {String}\n\t * @default manifest\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.MANIFEST = \"manifest\";\n\n\t/**\n\t * The preload type for sound files, usually mp3, ogg, or wav. When loading via tags, audio is loaded into an\n\t * &lt;audio&gt; tag.\n\t * @property SOUND\n\t * @type {String}\n\t * @default sound\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.SOUND = \"sound\";\n\n\t/**\n\t * The preload type for video files, usually mp4, ts, or ogg. When loading via tags, video is loaded into an\n\t * &lt;video&gt; tag.\n\t * @property VIDEO\n\t * @type {String}\n\t * @default video\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.VIDEO = \"video\";\n\n\t/**\n\t * The preload type for SpriteSheet files. SpriteSheet files are JSON files that contain string image paths.\n\t * @property SPRITESHEET\n\t * @type {String}\n\t * @default spritesheet\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.SPRITESHEET = \"spritesheet\";\n\n\t/**\n\t * The preload type for SVG files.\n\t * @property SVG\n\t * @type {String}\n\t * @default svg\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.SVG = \"svg\";\n\n\t/**\n\t * The preload type for text files, which is also the default file type if the type can not be determined. Text is\n\t * loaded as raw text.\n\t * @property TEXT\n\t * @type {String}\n\t * @default text\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.TEXT = \"text\";\n\n\t/**\n\t * The preload type for xml files. XML is loaded into an XML document.\n\t * @property XML\n\t * @type {String}\n\t * @default xml\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.XML = \"xml\";\n\n\tcreatejs.Types = s;\n}());\n\n//##############################################################################\n// Methods.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function() {\n\tvar s = {};\n\n\t/**\n\t * Defines a POST request, use for a method value when loading data.\n\t * @property POST\n\t * @type {string}\n\t * @default post\n\t * @static\n\t */\n\ts.POST = \"POST\";\n\n\t/**\n\t * Defines a GET request, use for a method value when loading data.\n\t * @property GET\n\t * @type {string}\n\t * @default get\n\t * @static\n\t */\n\ts.GET = \"GET\";\n\n\tcreatejs.Methods = s;\n}());\n\n//##############################################################################\n// LoadItem.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\t/**\n\t * All loaders accept an item containing the properties defined in this class. If a raw object is passed instead,\n\t * it will not be affected, but it must contain at least a {{#crossLink \"src:property\"}}{{/crossLink}} property. A\n\t * string path or HTML tag is also acceptable, but it will be automatically converted to a LoadItem using the\n\t * {{#crossLink \"create\"}}{{/crossLink}} method by {{#crossLink \"AbstractLoader\"}}{{/crossLink}}\n\t * @class LoadItem\n\t * @constructor\n\t * @since 0.6.0\n\t */\n\tfunction LoadItem() {\n\t\t/**\n\t\t * The source of the file that is being loaded. This property is <b>required</b>. The source can either be a\n\t\t * string (recommended), or an HTML tag.\n\t\t * This can also be an object, but in that case it has to include a type and be handled by a plugin.\n\t\t * @property src\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.src = null;\n\n\t\t/**\n\t\t * The type file that is being loaded. The type of the file is usually inferred by the extension, but can also\n\t\t * be set manually. This is helpful in cases where a file does not have an extension.\n\t\t * @property type\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.type = null;\n\n\t\t/**\n\t\t * A string identifier which can be used to reference the loaded object. If none is provided, this will be\n\t\t * automatically set to the {{#crossLink \"src:property\"}}{{/crossLink}}.\n\t\t * @property id\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.id = null;\n\n\t\t/**\n\t\t * Determines if a manifest will maintain the order of this item, in relation to other items in the manifest\n\t\t * that have also set the `maintainOrder` property to `true`. This only applies when the max connections has\n\t\t * been set above 1 (using {{#crossLink \"LoadQueue/setMaxConnections\"}}{{/crossLink}}). Everything with this\n\t\t * property set to `false` will finish as it is loaded. Ordered items are combined with script tags loading in\n\t\t * order when {{#crossLink \"LoadQueue/maintainScriptOrder:property\"}}{{/crossLink}} is set to `true`.\n\t\t * @property maintainOrder\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.maintainOrder = false;\n\n\t\t/**\n\t\t * A callback used by JSONP requests that defines what global method to call when the JSONP content is loaded.\n\t\t * @property callback\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.callback = null;\n\n\t\t/**\n\t\t * An arbitrary data object, which is included with the loaded object.\n\t\t * @property data\n\t\t * @type {Object}\n\t\t * @default null\n\t\t */\n\t\tthis.data = null;\n\n\t\t/**\n\t\t * The request method used for HTTP calls. Both {{#crossLink \"Methods/GET:property\"}}{{/crossLink}} or\n\t\t * {{#crossLink \"Methods/POST:property\"}}{{/crossLink}} request types are supported, and are defined as\n\t\t * constants on {{#crossLink \"AbstractLoader\"}}{{/crossLink}}.\n\t\t * @property method\n\t\t * @type {String}\n\t\t * @default GET\n\t\t */\n\t\tthis.method = createjs.Methods.GET;\n\n\t\t/**\n\t\t * An object hash of name/value pairs to send to the server.\n\t\t * @property values\n\t\t * @type {Object}\n\t\t * @default null\n\t\t */\n\t\tthis.values = null;\n\n\t\t/**\n\t\t * An object hash of headers to attach to an XHR request. PreloadJS will automatically attach some default\n\t\t * headers when required, including \"Origin\", \"Content-Type\", and \"X-Requested-With\". You may override the\n\t\t * default headers by including them in your headers object.\n\t\t * @property headers\n\t\t * @type {Object}\n\t\t * @default null\n\t\t */\n\t\tthis.headers = null;\n\n\t\t/**\n\t\t * Enable credentials for XHR requests.\n\t\t * @property withCredentials\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.withCredentials = false;\n\n\t\t/**\n\t\t * Set the mime type of XHR-based requests. This is automatically set to \"text/plain; charset=utf-8\" for text\n\t\t * based files (json, xml, text, css, js).\n\t\t * @property mimeType\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.mimeType = null;\n\n\t\t/**\n\t\t * Sets the crossOrigin attribute for CORS-enabled images loading cross-domain.\n\t\t * @property crossOrigin\n\t\t * @type {boolean}\n\t\t * @default Anonymous\n\t\t */\n\t\tthis.crossOrigin = null;\n\n\t\t/**\n\t\t * The duration in milliseconds to wait before a request times out. This only applies to tag-based and and XHR\n\t\t * (level one) loading, as XHR (level 2) provides its own timeout event.\n\t\t * @property loadTimeout\n\t\t * @type {Number}\n\t\t * @default 8000 (8 seconds)\n\t\t */\n\t\tthis.loadTimeout = s.LOAD_TIMEOUT_DEFAULT;\n\t};\n\n\tvar p = LoadItem.prototype = {};\n\tvar s = LoadItem;\n\n\t/**\n\t * Default duration in milliseconds to wait before a request times out. This only applies to tag-based and and XHR\n\t * (level one) loading, as XHR (level 2) provides its own timeout event.\n\t * @property LOAD_TIMEOUT_DEFAULT\n\t * @type {number}\n\t * @static\n\t */\n\ts.LOAD_TIMEOUT_DEFAULT = 8000;\n\n\t/**\n\t * Create a LoadItem.\n\t * <ul>\n\t *     <li>String-based items are converted to a LoadItem with a populated {{#crossLink \"src:property\"}}{{/crossLink}}.</li>\n\t *     <li>LoadItem instances are returned as-is</li>\n\t *     <li>Objects are returned with any needed properties added</li>\n\t * </ul>\n\t * @method create\n\t * @param {LoadItem|String|Object} value The load item value\n\t * @returns {LoadItem|Object}\n\t * @static\n\t */\n\ts.create = function (value) {\n\t\tif (typeof value == \"string\") {\n\t\t\tvar item = new LoadItem();\n\t\t\titem.src = value;\n\t\t\treturn item;\n\t\t} else if (value instanceof s) {\n\t\t\treturn value;\n\t\t} else if (value instanceof Object && value.src) {\n\t\t\tif (value.loadTimeout == null) {\n\t\t\t\tvalue.loadTimeout = s.LOAD_TIMEOUT_DEFAULT;\n\t\t\t}\n\t\t\treturn value;\n\t\t} else {\n\t\t\tthrow new Error(\"Type not recognized.\");\n\t\t}\n\t};\n\n\t/**\n\t * Provides a chainable shortcut method for setting a number of properties on the instance.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var loadItem = new createjs.LoadItem().set({src:\"image.png\", maintainOrder:true});\n\t *\n\t * @method set\n\t * @param {Object} props A generic object containing properties to copy to the LoadItem instance.\n\t * @return {LoadItem} Returns the instance the method is called on (useful for chaining calls.)\n\t*/\n\tp.set = function(props) {\n\t\tfor (var n in props) { this[n] = props[n]; }\n\t\treturn this;\n\t};\n\n\tcreatejs.LoadItem = s;\n\n}());\n\n//##############################################################################\n// RequestUtils.js\n//##############################################################################\n\n(function () {\n\n\t/**\n\t * Utilities that assist with parsing load items, and determining file types, etc.\n\t * @class RequestUtils\n\t */\n\tvar s = {};\n\n\t/**\n\t * Determine if a specific type should be loaded as a binary file. Currently, only images and items marked\n\t * specifically as \"binary\" are loaded as binary. Note that audio is <b>not</b> a binary type, as we can not play\n\t * back using an audio tag if it is loaded as binary. Plugins can change the item type to binary to ensure they get\n\t * a binary result to work with. Binary files are loaded using XHR2. Types are defined as static constants on\n\t * {{#crossLink \"AbstractLoader\"}}{{/crossLink}}.\n\t * @method isBinary\n\t * @param {String} type The item type.\n\t * @return {Boolean} If the specified type is binary.\n\t * @static\n\t */\n\ts.isBinary = function (type) {\n\t\tswitch (type) {\n\t\t\tcase createjs.Types.IMAGE:\n\t\t\tcase createjs.Types.BINARY:\n\t\t\t\treturn true;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t};\n\n\t/**\n\t * Determine if a specific type is a text-based asset, and should be loaded as UTF-8.\n\t * @method isText\n\t * @param {String} type The item type.\n\t * @return {Boolean} If the specified type is text.\n\t * @static\n\t */\n\ts.isText = function (type) {\n\t\tswitch (type) {\n\t\t\tcase createjs.Types.TEXT:\n\t\t\tcase createjs.Types.JSON:\n\t\t\tcase createjs.Types.MANIFEST:\n\t\t\tcase createjs.Types.XML:\n\t\t\tcase createjs.Types.CSS:\n\t\t\tcase createjs.Types.SVG:\n\t\t\tcase createjs.Types.JAVASCRIPT:\n\t\t\tcase createjs.Types.SPRITESHEET:\n\t\t\t\treturn true;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t};\n\n\t/**\n\t * Determine the type of the object using common extensions. Note that the type can be passed in with the load item\n\t * if it is an unusual extension.\n\t * @method getTypeByExtension\n\t * @param {String} extension The file extension to use to determine the load type.\n\t * @return {String} The determined load type (for example, `createjs.Types.IMAGE`). Will return `null` if\n\t * the type can not be determined by the extension.\n\t * @static\n\t */\n\ts.getTypeByExtension = function (extension) {\n\t\tif (extension == null) {\n\t\t\treturn createjs.Types.TEXT;\n\t\t}\n\n\t\tswitch (extension.toLowerCase()) {\n\t\t\tcase \"jpeg\":\n\t\t\tcase \"jpg\":\n\t\t\tcase \"gif\":\n\t\t\tcase \"png\":\n\t\t\tcase \"webp\":\n\t\t\tcase \"bmp\":\n\t\t\t\treturn createjs.Types.IMAGE;\n\t\t\tcase \"ogg\":\n\t\t\tcase \"mp3\":\n\t\t\tcase \"webm\":\n\t\t\t\treturn createjs.Types.SOUND;\n\t\t\tcase \"mp4\":\n\t\t\tcase \"webm\":\n\t\t\tcase \"ts\":\n\t\t\t\treturn createjs.Types.VIDEO;\n\t\t\tcase \"json\":\n\t\t\t\treturn createjs.Types.JSON;\n\t\t\tcase \"xml\":\n\t\t\t\treturn createjs.Types.XML;\n\t\t\tcase \"css\":\n\t\t\t\treturn createjs.Types.CSS;\n\t\t\tcase \"js\":\n\t\t\t\treturn createjs.Types.JAVASCRIPT;\n\t\t\tcase 'svg':\n\t\t\t\treturn createjs.Types.SVG;\n\t\t\tdefault:\n\t\t\t\treturn createjs.Types.TEXT;\n\t\t}\n\t};\n\n\tcreatejs.RequestUtils = s;\n\n}());\n\n//##############################################################################\n// AbstractLoader.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n// constructor\n\t/**\n\t * The base loader, which defines all the generic methods, properties, and events. All loaders extend this class,\n\t * including the {{#crossLink \"LoadQueue\"}}{{/crossLink}}.\n\t * @class AbstractLoader\n\t * @param {LoadItem|object|string} loadItem The item to be loaded.\n\t * @param {Boolean} [preferXHR] Determines if the LoadItem should <em>try</em> and load using XHR, or take a\n\t * tag-based approach, which can be better in cross-domain situations. Not all loaders can load using one or the\n\t * other, so this is a suggested directive.\n\t * @param {String} [type] The type of loader. Loader types are defined as constants on the AbstractLoader class,\n\t * such as {{#crossLink \"IMAGE:property\"}}{{/crossLink}}, {{#crossLink \"CSS:property\"}}{{/crossLink}}, etc.\n\t * @extends EventDispatcher\n\t */\n\tfunction AbstractLoader(loadItem, preferXHR, type) {\n\t\tthis.EventDispatcher_constructor();\n\n\t\t// public properties\n\t\t/**\n\t\t * If the loader has completed loading. This provides a quick check, but also ensures that the different approaches\n\t\t * used for loading do not pile up resulting in more than one `complete` {{#crossLink \"Event\"}}{{/crossLink}}.\n\t\t * @property loaded\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.loaded = false;\n\n\t\t/**\n\t\t * Determine if the loader was canceled. Canceled loads will not fire complete events. Note that this property\n\t\t * is readonly, so {{#crossLink \"LoadQueue\"}}{{/crossLink}} queues should be closed using {{#crossLink \"LoadQueue/close\"}}{{/crossLink}}\n\t\t * instead.\n\t\t * @property canceled\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t * @readonly\n\t\t */\n\t\tthis.canceled = false;\n\n\t\t/**\n\t\t * The current load progress (percentage) for this item. This will be a number between 0 and 1.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *     var queue = new createjs.LoadQueue();\n\t\t *     queue.loadFile(\"largeImage.png\");\n\t\t *     queue.on(\"progress\", function() {\n\t\t *         console.log(\"Progress:\", queue.progress, event.progress);\n\t\t *     });\n\t\t *\n\t\t * @property progress\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.progress = 0;\n\n\t\t/**\n\t\t * The type of item this loader will load. See {{#crossLink \"AbstractLoader\"}}{{/crossLink}} for a full list of\n\t\t * supported types.\n\t\t * @property type\n\t\t * @type {String}\n\t\t */\n\t\tthis.type = type;\n\n\t\t/**\n\t\t * A formatter function that converts the loaded raw result into the final result. For example, the JSONLoader\n\t\t * converts a string of text into a JavaScript object. Not all loaders have a resultFormatter, and this property\n\t\t * can be overridden to provide custom formatting.\n\t\t *\n\t\t * Optionally, a resultFormatter can return a callback function in cases where the formatting needs to be\n\t\t * asynchronous, such as creating a new image. The callback function is passed 2 parameters, which are callbacks\n\t\t * to handle success and error conditions in the resultFormatter. Note that the resultFormatter method is\n\t\t * called in the current scope, as well as the success and error callbacks.\n\t\t *\n\t\t * <h4>Example asynchronous resultFormatter</h4>\n\t\t *\n\t\t * \tfunction _formatResult(loader) {\n\t\t * \t\treturn function(success, error) {\n\t\t * \t\t\tif (errorCondition) { error(errorDetailEvent); }\n\t\t * \t\t\tsuccess(result);\n\t\t * \t\t}\n\t\t * \t}\n\t\t * @property resultFormatter\n\t\t * @type {Function}\n\t\t * @default null\n\t\t */\n\t\tthis.resultFormatter = null;\n\n\t\t// protected properties\n\t\t/**\n\t\t * The {{#crossLink \"LoadItem\"}}{{/crossLink}} this loader represents. Note that this is null in a {{#crossLink \"LoadQueue\"}}{{/crossLink}},\n\t\t * but will be available on loaders such as {{#crossLink \"XMLLoader\"}}{{/crossLink}} and {{#crossLink \"ImageLoader\"}}{{/crossLink}}.\n\t\t * @property _item\n\t\t * @type {LoadItem|Object}\n\t\t * @private\n\t\t */\n\t\tif (loadItem) {\n\t\t\tthis._item = createjs.LoadItem.create(loadItem);\n\t\t} else {\n\t\t\tthis._item = null;\n\t\t}\n\n\t\t/**\n\t\t * Whether the loader will try and load content using XHR (true) or HTML tags (false).\n\t\t * @property _preferXHR\n\t\t * @type {Boolean}\n\t\t * @private\n\t\t */\n\t\tthis._preferXHR = preferXHR;\n\n\t\t/**\n\t\t * The loaded result after it is formatted by an optional {{#crossLink \"resultFormatter\"}}{{/crossLink}}. For\n\t\t * items that are not formatted, this will be the same as the {{#crossLink \"_rawResult:property\"}}{{/crossLink}}.\n\t\t * The result is accessed using the {{#crossLink \"getResult\"}}{{/crossLink}} method.\n\t\t * @property _result\n\t\t * @type {Object|String}\n\t\t * @private\n\t\t */\n\t\tthis._result = null;\n\n\t\t/**\n\t\t * The loaded result before it is formatted. The rawResult is accessed using the {{#crossLink \"getResult\"}}{{/crossLink}}\n\t\t * method, and passing `true`.\n\t\t * @property _rawResult\n\t\t * @type {Object|String}\n\t\t * @private\n\t\t */\n\t\tthis._rawResult = null;\n\n\t\t/**\n\t\t * A list of items that loaders load behind the scenes. This does not include the main item the loader is\n\t\t * responsible for loading. Examples of loaders that have sub-items include the {{#crossLink \"SpriteSheetLoader\"}}{{/crossLink}} and\n\t\t * {{#crossLink \"ManifestLoader\"}}{{/crossLink}}.\n\t\t * @property _loadItems\n\t\t * @type {null}\n\t\t * @protected\n\t\t */\n\t\tthis._loadedItems = null;\n\n\t\t/**\n\t\t * The attribute the items loaded using tags use for the source.\n\t\t * @type {string}\n\t\t * @default null\n\t\t * @private\n\t\t */\n\t\tthis._tagSrcAttribute = null;\n\n\t\t/**\n\t\t * An HTML tag (or similar) that a loader may use to load HTML content, such as images, scripts, etc.\n\t\t * @property _tag\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n\t\tthis._tag = null;\n\t};\n\n\tvar p = createjs.extend(AbstractLoader, createjs.EventDispatcher);\n\tvar s = AbstractLoader;\n\n\t// Remove these @deprecated properties after 1.0\n\ttry {\n\t\tObject.defineProperties(s, {\n\t\t\tPOST: { get: createjs.deprecate(function() { return createjs.Methods.POST; }, \"AbstractLoader.POST\") },\n\t\t\tGET: { get: createjs.deprecate(function() { return createjs.Methods.GET; }, \"AbstractLoader.GET\") },\n\n\t\t\tBINARY: { get: createjs.deprecate(function() { return createjs.Types.BINARY; }, \"AbstractLoader.BINARY\") },\n\t\t\tCSS: { get: createjs.deprecate(function() { return createjs.Types.CSS; }, \"AbstractLoader.CSS\") },\n\t\t\tFONT: { get: createjs.deprecate(function() { return createjs.Types.FONT; }, \"AbstractLoader.FONT\") },\n\t\t\tFONTCSS: { get: createjs.deprecate(function() { return createjs.Types.FONTCSS; }, \"AbstractLoader.FONTCSS\") },\n\t\t\tIMAGE: { get: createjs.deprecate(function() { return createjs.Types.IMAGE; }, \"AbstractLoader.IMAGE\") },\n\t\t\tJAVASCRIPT: { get: createjs.deprecate(function() { return createjs.Types.JAVASCRIPT; }, \"AbstractLoader.JAVASCRIPT\") },\n\t\t\tJSON: { get: createjs.deprecate(function() { return createjs.Types.JSON; }, \"AbstractLoader.JSON\") },\n\t\t\tJSONP: { get: createjs.deprecate(function() { return createjs.Types.JSONP; }, \"AbstractLoader.JSONP\") },\n\t\t\tMANIFEST: { get: createjs.deprecate(function() { return createjs.Types.MANIFEST; }, \"AbstractLoader.MANIFEST\") },\n\t\t\tSOUND: { get: createjs.deprecate(function() { return createjs.Types.SOUND; }, \"AbstractLoader.SOUND\") },\n\t\t\tVIDEO: { get: createjs.deprecate(function() { return createjs.Types.VIDEO; }, \"AbstractLoader.VIDEO\") },\n\t\t\tSPRITESHEET: { get: createjs.deprecate(function() { return createjs.Types.SPRITESHEET; }, \"AbstractLoader.SPRITESHEET\") },\n\t\t\tSVG: { get: createjs.deprecate(function() { return createjs.Types.SVG; }, \"AbstractLoader.SVG\") },\n\t\t\tTEXT: { get: createjs.deprecate(function() { return createjs.Types.TEXT; }, \"AbstractLoader.TEXT\") },\n\t\t\tXML: { get: createjs.deprecate(function() { return createjs.Types.XML; }, \"AbstractLoader.XML\") }\n\t\t});\n\t} catch (e) {}\n\n// Events\n\t/**\n\t * The {{#crossLink \"ProgressEvent\"}}{{/crossLink}} that is fired when the overall progress changes. Prior to\n\t * version 0.6.0, this was just a regular {{#crossLink \"Event\"}}{{/crossLink}}.\n\t * @event progress\n\t * @since 0.3.0\n\t */\n\n\t/**\n\t * The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when a load starts.\n\t * @event loadstart\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @since 0.3.1\n\t */\n\n\t/**\n\t * The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when the entire queue has been loaded.\n\t * @event complete\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @since 0.3.0\n\t */\n\n\t/**\n\t * The {{#crossLink \"ErrorEvent\"}}{{/crossLink}} that is fired when the loader encounters an error. If the error was\n\t * encountered by a file, the event will contain the item that caused the error. Prior to version 0.6.0, this was\n\t * just a regular {{#crossLink \"Event\"}}{{/crossLink}}.\n\t * @event error\n\t * @since 0.3.0\n\t */\n\n\t/**\n\t * The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when the loader encounters an internal file load error.\n\t * This enables loaders to maintain internal queues, and surface file load errors.\n\t * @event fileerror\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type (\"fileerror\")\n\t * @param {LoadItem|object} The item that encountered the error\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when a loader internally loads a file. This enables\n\t * loaders such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}} to maintain internal {{#crossLink \"LoadQueue\"}}{{/crossLink}}s\n\t * and notify when they have loaded a file. The {{#crossLink \"LoadQueue\"}}{{/crossLink}} class dispatches a\n\t * slightly different {{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}} event.\n\t * @event fileload\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type (\"fileload\")\n\t * @param {Object} item The file item which was specified in the {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}}\n\t * or {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}} call. If only a string path or tag was specified, the\n\t * object will contain that value as a `src` property.\n\t * @param {Object} result The HTML tag or parsed result of the loaded item.\n\t * @param {Object} rawResult The unprocessed result, usually the raw text or binary data before it is converted\n\t * to a usable object.\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * The {{#crossLink \"Event\"}}{{/crossLink}} that is fired after the internal request is created, but before a load.\n\t * This allows updates to the loader for specific loading needs, such as binary or XHR image loading.\n\t * @event initialize\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type (\"initialize\")\n\t * @param {AbstractLoader} loader The loader that has been initialized.\n\t */\n\n\n\t/**\n\t * Get a reference to the manifest item that is loaded by this loader. In some cases this will be the value that was\n\t * passed into {{#crossLink \"LoadQueue\"}}{{/crossLink}} using {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}} or\n\t * {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}. However if only a String path was passed in, then it will\n\t * be a {{#crossLink \"LoadItem\"}}{{/crossLink}}.\n\t * @method getItem\n\t * @return {Object} The manifest item that this loader is responsible for loading.\n\t * @since 0.6.0\n\t */\n\tp.getItem = function () {\n\t\treturn this._item;\n\t};\n\n\t/**\n\t * Get a reference to the content that was loaded by the loader (only available after the {{#crossLink \"complete:event\"}}{{/crossLink}}\n\t * event is dispatched.\n\t * @method getResult\n\t * @param {Boolean} [raw=false] Determines if the returned result will be the formatted content, or the raw loaded\n\t * data (if it exists).\n\t * @return {Object}\n\t * @since 0.6.0\n\t */\n\tp.getResult = function (raw) {\n\t\treturn raw ? this._rawResult : this._result;\n\t};\n\n\t/**\n\t * Return the `tag` this object creates or uses for loading.\n\t * @method getTag\n\t * @return {Object} The tag instance\n\t * @since 0.6.0\n\t */\n\tp.getTag = function () {\n\t\treturn this._tag;\n\t};\n\n\t/**\n\t * Set the `tag` this item uses for loading.\n\t * @method setTag\n\t * @param {Object} tag The tag instance\n\t * @since 0.6.0\n\t */\n\tp.setTag = function(tag) {\n\t  this._tag = tag;\n\t};\n\n\t/**\n\t * Begin loading the item. This method is required when using a loader by itself.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var queue = new createjs.LoadQueue();\n\t *      queue.on(\"complete\", handleComplete);\n\t *      queue.loadManifest(fileArray, false); // Note the 2nd argument that tells the queue not to start loading yet\n\t *      queue.load();\n\t *\n\t * @method load\n\t */\n\tp.load = function () {\n\t\tthis._createRequest();\n\n\t\tthis._request.on(\"complete\", this, this);\n\t\tthis._request.on(\"progress\", this, this);\n\t\tthis._request.on(\"loadStart\", this, this);\n\t\tthis._request.on(\"abort\", this, this);\n\t\tthis._request.on(\"timeout\", this, this);\n\t\tthis._request.on(\"error\", this, this);\n\n\t\tvar evt = new createjs.Event(\"initialize\");\n\t\tevt.loader = this._request;\n\t\tthis.dispatchEvent(evt);\n\n\t\tthis._request.load();\n\t};\n\n\t/**\n\t * Close the the item. This will stop any open requests (although downloads using HTML tags may still continue in\n\t * the background), but events will not longer be dispatched.\n\t * @method cancel\n\t */\n\tp.cancel = function () {\n\t\tthis.canceled = true;\n\t\tthis.destroy();\n\t};\n\n\t/**\n\t * Clean up the loader.\n\t * @method destroy\n\t */\n\tp.destroy = function() {\n\t\tif (this._request) {\n\t\t\tthis._request.removeAllEventListeners();\n\t\t\tthis._request.destroy();\n\t\t}\n\n\t\tthis._request = null;\n\n\t\tthis._item = null;\n\t\tthis._rawResult = null;\n\t\tthis._result = null;\n\n\t\tthis._loadItems = null;\n\n\t\tthis.removeAllEventListeners();\n\t};\n\n\t/**\n\t * Get any items loaded internally by the loader. The enables loaders such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}}\n\t * to expose items it loads internally.\n\t * @method getLoadedItems\n\t * @return {Array} A list of the items loaded by the loader.\n\t * @since 0.6.0\n\t */\n\tp.getLoadedItems = function () {\n\t\treturn this._loadedItems;\n\t};\n\n\n\t// Private methods\n\t/**\n\t * Create an internal request used for loading. By default, an {{#crossLink \"XHRRequest\"}}{{/crossLink}} or\n\t * {{#crossLink \"TagRequest\"}}{{/crossLink}} is created, depending on the value of {{#crossLink \"preferXHR:property\"}}{{/crossLink}}.\n\t * Other loaders may override this to use different request types, such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}},\n\t * which uses {{#crossLink \"JSONLoader\"}}{{/crossLink}} or {{#crossLink \"JSONPLoader\"}}{{/crossLink}} under the hood.\n\t * @method _createRequest\n\t * @protected\n\t */\n\tp._createRequest = function() {\n\t\tif (!this._preferXHR) {\n\t\t\tthis._request = new createjs.TagRequest(this._item, this._tag || this._createTag(), this._tagSrcAttribute);\n\t\t} else {\n\t\t\tthis._request = new createjs.XHRRequest(this._item);\n\t\t}\n\t};\n\n\t/**\n\t * Create the HTML tag used for loading. This method does nothing by default, and needs to be implemented\n\t * by loaders that require tag loading.\n\t * @method _createTag\n\t * @param {String} src The tag source\n\t * @return {HTMLElement} The tag that was created\n\t * @protected\n\t */\n\tp._createTag = function(src) { return null; };\n\n\t/**\n\t * Dispatch a loadstart {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"AbstractLoader/loadstart:event\"}}{{/crossLink}}\n\t * event for details on the event payload.\n\t * @method _sendLoadStart\n\t * @protected\n\t */\n\tp._sendLoadStart = function () {\n\t\tif (this._isCanceled()) { return; }\n\t\tthis.dispatchEvent(\"loadstart\");\n\t};\n\n\t/**\n\t * Dispatch a {{#crossLink \"ProgressEvent\"}}{{/crossLink}}.\n\t * @method _sendProgress\n\t * @param {Number | Object} value The progress of the loaded item, or an object containing <code>loaded</code>\n\t * and <code>total</code> properties.\n\t * @protected\n\t */\n\tp._sendProgress = function (value) {\n\t\tif (this._isCanceled()) { return; }\n\t\tvar event = null;\n\t\tif (typeof(value) == \"number\") {\n\t\t\tthis.progress = value;\n\t\t\tevent = new createjs.ProgressEvent(this.progress);\n\t\t} else {\n\t\t\tevent = value;\n\t\t\tthis.progress = value.loaded / value.total;\n\t\t\tevent.progress = this.progress;\n\t\t\tif (isNaN(this.progress) || this.progress == Infinity) { this.progress = 0; }\n\t\t}\n\t\tthis.hasEventListener(\"progress\") && this.dispatchEvent(event);\n\t};\n\n\t/**\n\t * Dispatch a complete {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"AbstractLoader/complete:event\"}}{{/crossLink}} event\n\t * @method _sendComplete\n\t * @protected\n\t */\n\tp._sendComplete = function () {\n\t\tif (this._isCanceled()) { return; }\n\n\t\tthis.loaded = true;\n\n\t\tvar event = new createjs.Event(\"complete\");\n\t\tevent.rawResult = this._rawResult;\n\n\t\tif (this._result != null) {\n\t\t\tevent.result = this._result;\n\t\t}\n\n\t\tthis.dispatchEvent(event);\n\t};\n\n\t/**\n\t * Dispatch an error {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"AbstractLoader/error:event\"}}{{/crossLink}}\n\t * event for details on the event payload.\n\t * @method _sendError\n\t * @param {ErrorEvent} event The event object containing specific error properties.\n\t * @protected\n\t */\n\tp._sendError = function (event) {\n\t\tif (this._isCanceled() || !this.hasEventListener(\"error\")) { return; }\n\t\tif (event == null) {\n\t\t\tevent = new createjs.ErrorEvent(\"PRELOAD_ERROR_EMPTY\"); // TODO: Populate error\n\t\t}\n\t\tthis.dispatchEvent(event);\n\t};\n\n\t/**\n\t * Determine if the load has been canceled. This is important to ensure that method calls or asynchronous events\n\t * do not cause issues after the queue has been cleaned up.\n\t * @method _isCanceled\n\t * @return {Boolean} If the loader has been canceled.\n\t * @protected\n\t */\n\tp._isCanceled = function () {\n\t\tif (window.createjs == null || this.canceled) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\t/**\n\t * A custom result formatter function, which is called just before a request dispatches its complete event. Most\n\t * loader types already have an internal formatter, but this can be user-overridden for custom formatting. The\n\t * formatted result will be available on Loaders using {{#crossLink \"getResult\"}}{{/crossLink}}, and passing `true`.\n\t * @property resultFormatter\n\t * @type Function\n\t * @return {Object} The formatted result\n\t * @since 0.6.0\n\t */\n\tp.resultFormatter = null;\n\n\t/**\n\t * Handle events from internal requests. By default, loaders will handle, and redispatch the necessary events, but\n\t * this method can be overridden for custom behaviours.\n\t * @method handleEvent\n\t * @param {Event} event The event that the internal request dispatches.\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp.handleEvent = function (event) {\n\t\tswitch (event.type) {\n\t\t\tcase \"complete\":\n\t\t\t\tthis._rawResult = event.target._response;\n\t\t\t\tvar result = this.resultFormatter && this.resultFormatter(this);\n\t\t\t\t// The resultFormatter is asynchronous\n\t\t\t\tif (result instanceof Function) {\n\t\t\t\t\tresult.call(this,\n\t\t\t\t\t\t\tcreatejs.proxy(this._resultFormatSuccess, this),\n\t\t\t\t\t\t\tcreatejs.proxy(this._resultFormatFailed, this)\n\t\t\t\t\t);\n\t\t\t\t// The result formatter is synchronous\n\t\t\t\t} else {\n\t\t\t\t\tthis._result =  result || this._rawResult;\n\t\t\t\t\tthis._sendComplete();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"progress\":\n\t\t\t\tthis._sendProgress(event);\n\t\t\t\tbreak;\n\t\t\tcase \"error\":\n\t\t\t\tthis._sendError(event);\n\t\t\t\tbreak;\n\t\t\tcase \"loadstart\":\n\t\t\t\tthis._sendLoadStart();\n\t\t\t\tbreak;\n\t\t\tcase \"abort\":\n\t\t\tcase \"timeout\":\n\t\t\t\tif (!this._isCanceled()) {\n\t\t\t\t\tthis.dispatchEvent(new createjs.ErrorEvent(\"PRELOAD_\" + event.type.toUpperCase() + \"_ERROR\"));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\t/**\n\t * The \"success\" callback passed to {{#crossLink \"AbstractLoader/resultFormatter\"}}{{/crossLink}} asynchronous\n\t * functions.\n\t * @method _resultFormatSuccess\n\t * @param {Object} result The formatted result\n\t * @private\n\t */\n\tp._resultFormatSuccess = function (result) {\n\t\tthis._result = result;\n\t\tthis._sendComplete();\n\t};\n\n\t/**\n\t * The \"error\" callback passed to {{#crossLink \"AbstractLoader/resultFormatter\"}}{{/crossLink}} asynchronous\n\t * functions.\n\t * @method _resultFormatSuccess\n\t * @param {Object} error The error event\n\t * @private\n\t */\n\tp._resultFormatFailed = function (event) {\n\t\tthis._sendError(event);\n\t};\n\n\t/**\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\tp.toString = function () {\n\t\treturn \"[PreloadJS AbstractLoader]\";\n\t};\n\n\tcreatejs.AbstractLoader = createjs.promote(AbstractLoader, \"EventDispatcher\");\n\n}());\n\n//##############################################################################\n// AbstractMediaLoader.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * The AbstractMediaLoader is a base class that handles some of the shared methods and properties of loaders that\n\t * handle HTML media elements, such as Video and Audio.\n\t * @class AbstractMediaLoader\n\t * @param {LoadItem|Object} loadItem\n\t * @param {Boolean} preferXHR\n\t * @param {String} type The type of media to load. Usually \"video\" or \"audio\".\n\t * @extends AbstractLoader\n\t * @constructor\n\t */\n\tfunction AbstractMediaLoader(loadItem, preferXHR, type) {\n\t\tthis.AbstractLoader_constructor(loadItem, preferXHR, type);\n\n\t\t// public properties\n\t\tthis.resultFormatter = this._formatResult;\n\n\t\t// protected properties\n\t\tthis._tagSrcAttribute = \"src\";\n\n        this.on(\"initialize\", this._updateXHR, this);\n\t};\n\n\tvar p = createjs.extend(AbstractMediaLoader, createjs.AbstractLoader);\n\n\t// static properties\n\t// public methods\n\tp.load = function () {\n\t\t// TagRequest will handle most of this, but Sound / Video need a few custom properties, so just handle them here.\n\t\tif (!this._tag) {\n\t\t\tthis._tag = this._createTag(this._item.src);\n\t\t}\n\n\t\tthis._tag.preload = \"auto\";\n\t\tthis._tag.load();\n\n\t\tthis.AbstractLoader_load();\n\t};\n\n\t// protected methods\n\t/**\n\t * Creates a new tag for loading if it doesn't exist yet.\n\t * @method _createTag\n\t * @private\n\t */\n\tp._createTag = function () {};\n\n\n\tp._createRequest = function() {\n\t\tif (!this._preferXHR) {\n\t\t\tthis._request = new createjs.MediaTagRequest(this._item, this._tag || this._createTag(), this._tagSrcAttribute);\n\t\t} else {\n\t\t\tthis._request = new createjs.XHRRequest(this._item);\n\t\t}\n\t};\n\n    // protected methods\n    /**\n     * Before the item loads, set its mimeType and responseType.\n     * @property _updateXHR\n     * @param {Event} event\n     * @private\n     */\n    p._updateXHR = function (event) {\n        // Only exists for XHR\n        if (event.loader.setResponseType) {\n            event.loader.setResponseType(\"blob\");\n        }\n    };\n\n\t/**\n\t * The result formatter for media files.\n\t * @method _formatResult\n\t * @param {AbstractLoader} loader\n\t * @returns {HTMLVideoElement|HTMLAudioElement}\n\t * @private\n\t */\n\tp._formatResult = function (loader) {\n\t\tthis._tag.removeEventListener && this._tag.removeEventListener(\"canplaythrough\", this._loadedHandler);\n\t\tthis._tag.onstalled = null;\n\t\tif (this._preferXHR) {\n            var URL = window.URL || window.webkitURL;\n            var result = loader.getResult(true);\n\n\t\t\tloader.getTag().src = URL.createObjectURL(result);\n\t\t}\n\t\treturn loader.getTag();\n\t};\n\n\tcreatejs.AbstractMediaLoader = createjs.promote(AbstractMediaLoader, \"AbstractLoader\");\n\n}());\n\n//##############################################################################\n// AbstractRequest.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\t/**\n\t * A base class for actual data requests, such as {{#crossLink \"XHRRequest\"}}{{/crossLink}}, {{#crossLink \"TagRequest\"}}{{/crossLink}},\n\t * and {{#crossLink \"MediaRequest\"}}{{/crossLink}}. PreloadJS loaders will typically use a data loader under the\n\t * hood to get data.\n\t * @class AbstractRequest\n\t * @param {LoadItem} item\n\t * @constructor\n\t */\n\tvar AbstractRequest = function (item) {\n\t\tthis._item = item;\n\t};\n\n\tvar p = createjs.extend(AbstractRequest, createjs.EventDispatcher);\n\n\t// public methods\n\t/**\n\t * Begin a load.\n\t * @method load\n\t */\n\tp.load =  function() {};\n\n\t/**\n\t * Clean up a request.\n\t * @method destroy\n\t */\n\tp.destroy = function() {};\n\n\t/**\n\t * Cancel an in-progress request.\n\t * @method cancel\n\t */\n\tp.cancel = function() {};\n\n\tcreatejs.AbstractRequest = createjs.promote(AbstractRequest, \"EventDispatcher\");\n\n}());\n\n//##############################################################################\n// TagRequest.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * An {{#crossLink \"AbstractRequest\"}}{{/crossLink}} that loads HTML tags, such as images and scripts.\n\t * @class TagRequest\n\t * @param {LoadItem} loadItem\n\t * @param {HTMLElement} tag\n\t * @param {String} srcAttribute The tag attribute that specifies the source, such as \"src\", \"href\", etc.\n\t */\n\tfunction TagRequest(loadItem, tag, srcAttribute) {\n\t\tthis.AbstractRequest_constructor(loadItem);\n\n\t\t// protected properties\n\t\t/**\n\t\t * The HTML tag instance that is used to load.\n\t\t * @property _tag\n\t\t * @type {HTMLElement}\n\t\t * @protected\n\t\t */\n\t\tthis._tag = tag;\n\n\t\t/**\n\t\t * The tag attribute that specifies the source, such as \"src\", \"href\", etc.\n\t\t * @property _tagSrcAttribute\n\t\t * @type {String}\n\t\t * @protected\n\t\t */\n\t\tthis._tagSrcAttribute = srcAttribute;\n\n\t\t/**\n\t\t * A method closure used for handling the tag load event.\n\t\t * @property _loadedHandler\n\t\t * @type {Function}\n\t\t * @private\n\t\t */\n\t\tthis._loadedHandler = createjs.proxy(this._handleTagComplete, this);\n\n\t\t/**\n\t\t * Determines if the element was added to the DOM automatically by PreloadJS, so it can be cleaned up after.\n\t\t * @property _addedToDOM\n\t\t * @type {Boolean}\n\t\t * @private\n\t\t */\n\t\tthis._addedToDOM = false;\n\n\t};\n\n\tvar p = createjs.extend(TagRequest, createjs.AbstractRequest);\n\n\t// public methods\n\tp.load = function () {\n\t\tthis._tag.onload = createjs.proxy(this._handleTagComplete, this);\n\t\tthis._tag.onreadystatechange = createjs.proxy(this._handleReadyStateChange, this);\n\t\tthis._tag.onerror = createjs.proxy(this._handleError, this);\n\n\t\tvar evt = new createjs.Event(\"initialize\");\n\t\tevt.loader = this._tag;\n\n\t\tthis.dispatchEvent(evt);\n\n\t\tthis._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), this._item.loadTimeout);\n\n\t\tthis._tag[this._tagSrcAttribute] = this._item.src;\n\n\t\t// wdg:: Append the tag AFTER setting the src, or SVG loading on iOS will fail.\n\t\tif (this._tag.parentNode == null) {\n\t\t\tcreatejs.DomUtils.appendToBody(this._tag);\n\t\t\tthis._addedToDOM = true;\n\t\t}\n\t};\n\n\tp.destroy = function() {\n\t\tthis._clean();\n\t\tthis._tag = null;\n\n\t\tthis.AbstractRequest_destroy();\n\t};\n\n\t// private methods\n\t/**\n\t * Handle the readyStateChange event from a tag. We need this in place of the `onload` callback (mainly SCRIPT\n\t * and LINK tags), but other cases may exist.\n\t * @method _handleReadyStateChange\n\t * @private\n\t */\n\tp._handleReadyStateChange = function () {\n\t\tclearTimeout(this._loadTimeout);\n\t\t// This is strictly for tags in browsers that do not support onload.\n\t\tvar tag = this._tag;\n\n\t\t// Complete is for old IE support.\n\t\tif (tag.readyState == \"loaded\" || tag.readyState == \"complete\") {\n\t\t\tthis._handleTagComplete();\n\t\t}\n\t};\n\n\t/**\n\t * Handle any error events from the tag.\n\t * @method _handleError\n\t * @protected\n\t */\n\tp._handleError = function() {\n\t\tthis._clean();\n\t\tthis.dispatchEvent(\"error\");\n\t};\n\n\t/**\n\t * Handle the tag's onload callback.\n\t * @method _handleTagComplete\n\t * @private\n\t */\n\tp._handleTagComplete = function () {\n\t\tthis._rawResult = this._tag;\n\t\tthis._result = this.resultFormatter && this.resultFormatter(this) || this._rawResult;\n\n\t\tthis._clean();\n\n\t\tthis.dispatchEvent(\"complete\");\n\t};\n\n\t/**\n\t * The tag request has not loaded within the time specified in loadTimeout.\n\t * @method _handleError\n\t * @param {Object} event The XHR error event.\n\t * @private\n\t */\n\tp._handleTimeout = function () {\n\t\tthis._clean();\n\t\tthis.dispatchEvent(new createjs.Event(\"timeout\"));\n\t};\n\n\t/**\n\t * Remove event listeners, but don't destroy the request object\n\t * @method _clean\n\t * @private\n\t */\n\tp._clean = function() {\n\t\tthis._tag.onload = null;\n\t\tthis._tag.onreadystatechange = null;\n\t\tthis._tag.onerror = null;\n\t\tif (this._addedToDOM && this._tag.parentNode != null) {\n\t\t\tthis._tag.parentNode.removeChild(this._tag);\n\t\t}\n\t\tclearTimeout(this._loadTimeout);\n\t};\n\n\t/**\n\t * Handle a stalled audio event. The main place this happens is with HTMLAudio in Chrome when playing back audio\n\t * that is already in a load, but not complete.\n\t * @method _handleStalled\n\t * @private\n\t */\n\tp._handleStalled = function () {\n\t\t//Ignore, let the timeout take care of it. Sometimes its not really stopped.\n\t};\n\n\tcreatejs.TagRequest = createjs.promote(TagRequest, \"AbstractRequest\");\n\n}());\n\n//##############################################################################\n// MediaTagRequest.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * An {{#crossLink \"TagRequest\"}}{{/crossLink}} that loads HTML tags for video and audio.\n\t * @class MediaTagRequest\n\t * @param {LoadItem} loadItem\n\t * @param {HTMLAudioElement|HTMLVideoElement} tag\n\t * @param {String} srcAttribute The tag attribute that specifies the source, such as \"src\", \"href\", etc.\n\t * @constructor\n\t */\n\tfunction MediaTagRequest(loadItem, tag, srcAttribute) {\n\t\tthis.AbstractRequest_constructor(loadItem);\n\n\t\t// protected properties\n\t\tthis._tag = tag;\n\t\tthis._tagSrcAttribute = srcAttribute;\n\t\tthis._loadedHandler = createjs.proxy(this._handleTagComplete, this);\n\t};\n\n\tvar p = createjs.extend(MediaTagRequest, createjs.TagRequest);\n\tvar s = MediaTagRequest;\n\n\t// public methods\n\tp.load = function () {\n\t\tvar sc = createjs.proxy(this._handleStalled, this);\n\t\tthis._stalledCallback = sc;\n\n\t\tvar pc = createjs.proxy(this._handleProgress, this);\n\t\tthis._handleProgress = pc;\n\n\t\tthis._tag.addEventListener(\"stalled\", sc);\n\t\tthis._tag.addEventListener(\"progress\", pc);\n\n\t\t// This will tell us when audio is buffered enough to play through, but not when its loaded.\n\t\t// The tag doesn't keep loading in Chrome once enough has buffered, and we have decided that behaviour is sufficient.\n\t\tthis._tag.addEventListener && this._tag.addEventListener(\"canplaythrough\", this._loadedHandler, false); // canplaythrough callback doesn't work in Chrome, so we use an event.\n\n\t\tthis.TagRequest_load();\n\t};\n\n\t// private methods\n\tp._handleReadyStateChange = function () {\n\t\tclearTimeout(this._loadTimeout);\n\t\t// This is strictly for tags in browsers that do not support onload.\n\t\tvar tag = this._tag;\n\n\t\t// Complete is for old IE support.\n\t\tif (tag.readyState == \"loaded\" || tag.readyState == \"complete\") {\n\t\t\tthis._handleTagComplete();\n\t\t}\n\t};\n\n\tp._handleStalled = function () {\n\t\t//Ignore, let the timeout take care of it. Sometimes its not really stopped.\n\t};\n\n\t/**\n\t * An XHR request has reported progress.\n\t * @method _handleProgress\n\t * @param {Object} event The XHR progress event.\n\t * @private\n\t */\n\tp._handleProgress = function (event) {\n\t\tif (!event || event.loaded > 0 && event.total == 0) {\n\t\t\treturn; // Sometimes we get no \"total\", so just ignore the progress event.\n\t\t}\n\n\t\tvar newEvent = new createjs.ProgressEvent(event.loaded, event.total);\n\t\tthis.dispatchEvent(newEvent);\n\t};\n\n\t// protected methods\n\tp._clean = function () {\n\t\tthis._tag.removeEventListener && this._tag.removeEventListener(\"canplaythrough\", this._loadedHandler);\n\t\tthis._tag.removeEventListener(\"stalled\", this._stalledCallback);\n\t\tthis._tag.removeEventListener(\"progress\", this._progressCallback);\n\n\t\tthis.TagRequest__clean();\n\t};\n\n\tcreatejs.MediaTagRequest = createjs.promote(MediaTagRequest, \"TagRequest\");\n\n}());\n\n//##############################################################################\n// XHRRequest.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n// constructor\n\t/**\n\t * A preloader that loads items using XHR requests, usually XMLHttpRequest. However XDomainRequests will be used\n\t * for cross-domain requests if possible, and older versions of IE fall back on to ActiveX objects when necessary.\n\t * XHR requests load the content as text or binary data, provide progress and consistent completion events, and\n\t * can be canceled during load. Note that XHR is not supported in IE 6 or earlier, and is not recommended for\n\t * cross-domain loading.\n\t * @class XHRRequest\n\t * @constructor\n\t * @param {Object} item The object that defines the file to load. Please see the {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}}\n\t * for an overview of supported file properties.\n\t * @extends AbstractLoader\n\t */\n\tfunction XHRRequest (item) {\n\t\tthis.AbstractRequest_constructor(item);\n\n\t\t// protected properties\n\t\t/**\n\t\t * A reference to the XHR request used to load the content.\n\t\t * @property _request\n\t\t * @type {XMLHttpRequest | XDomainRequest | ActiveX.XMLHTTP}\n\t\t * @private\n\t\t */\n\t\tthis._request = null;\n\n\t\t/**\n\t\t * A manual load timeout that is used for browsers that do not support the onTimeout event on XHR (XHR level 1,\n\t\t * typically IE9).\n\t\t * @property _loadTimeout\n\t\t * @type {Number}\n\t\t * @private\n\t\t */\n\t\tthis._loadTimeout = null;\n\n\t\t/**\n\t\t * The browser's XHR (XMLHTTPRequest) version. Supported versions are 1 and 2. There is no official way to detect\n\t\t * the version, so we use capabilities to make a best guess.\n\t\t * @property _xhrLevel\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t * @private\n\t\t */\n\t\tthis._xhrLevel = 1;\n\n\t\t/**\n\t\t * The response of a loaded file. This is set because it is expensive to look up constantly. This property will be\n\t\t * null until the file is loaded.\n\t\t * @property _response\n\t\t * @type {mixed}\n\t\t * @private\n\t\t */\n\t\tthis._response = null;\n\n\t\t/**\n\t\t * The response of the loaded file before it is modified. In most cases, content is converted from raw text to\n\t\t * an HTML tag or a formatted object which is set to the <code>result</code> property, but the developer may still\n\t\t * want to access the raw content as it was loaded.\n\t\t * @property _rawResponse\n\t\t * @type {String|Object}\n\t\t * @private\n\t\t */\n\t\tthis._rawResponse = null;\n\n\t\tthis._canceled = false;\n\n\t\t// Setup our event handlers now.\n\t\tthis._handleLoadStartProxy = createjs.proxy(this._handleLoadStart, this);\n\t\tthis._handleProgressProxy = createjs.proxy(this._handleProgress, this);\n\t\tthis._handleAbortProxy = createjs.proxy(this._handleAbort, this);\n\t\tthis._handleErrorProxy = createjs.proxy(this._handleError, this);\n\t\tthis._handleTimeoutProxy = createjs.proxy(this._handleTimeout, this);\n\t\tthis._handleLoadProxy = createjs.proxy(this._handleLoad, this);\n\t\tthis._handleReadyStateChangeProxy = createjs.proxy(this._handleReadyStateChange, this);\n\n\t\tif (!this._createXHR(item)) {\n\t\t\t//TODO: Throw error?\n\t\t}\n\t};\n\n\tvar p = createjs.extend(XHRRequest, createjs.AbstractRequest);\n\n// static properties\n\t/**\n\t * A list of XMLHTTP object IDs to try when building an ActiveX object for XHR requests in earlier versions of IE.\n\t * @property ACTIVEX_VERSIONS\n\t * @type {Array}\n\t * @since 0.4.2\n\t * @private\n\t */\n\tXHRRequest.ACTIVEX_VERSIONS = [\n\t\t\"Msxml2.XMLHTTP.6.0\",\n\t\t\"Msxml2.XMLHTTP.5.0\",\n\t\t\"Msxml2.XMLHTTP.4.0\",\n\t\t\"MSXML2.XMLHTTP.3.0\",\n\t\t\"MSXML2.XMLHTTP\",\n\t\t\"Microsoft.XMLHTTP\"\n\t];\n\n// Public methods\n\t/**\n\t * Look up the loaded result.\n\t * @method getResult\n\t * @param {Boolean} [raw=false] Return a raw result instead of a formatted result. This applies to content\n\t * loaded via XHR such as scripts, XML, CSS, and Images. If there is no raw result, the formatted result will be\n\t * returned instead.\n\t * @return {Object} A result object containing the content that was loaded, such as:\n\t * <ul>\n\t *      <li>An image tag (&lt;image /&gt;) for images</li>\n\t *      <li>A script tag for JavaScript (&lt;script /&gt;). Note that scripts loaded with tags may be added to the\n\t *      HTML head.</li>\n\t *      <li>A style tag for CSS (&lt;style /&gt;)</li>\n\t *      <li>Raw text for TEXT</li>\n\t *      <li>A formatted JavaScript object defined by JSON</li>\n\t *      <li>An XML document</li>\n\t *      <li>An binary arraybuffer loaded by XHR</li>\n\t * </ul>\n\t * Note that if a raw result is requested, but not found, the result will be returned instead.\n\t */\n\tp.getResult = function (raw) {\n\t\tif (raw && this._rawResponse) {\n\t\t\treturn this._rawResponse;\n\t\t}\n\t\treturn this._response;\n\t};\n\n\t// Overrides abstract method in AbstractRequest\n\tp.cancel = function () {\n\t\tthis.canceled = true;\n\t\tthis._clean();\n\t\tthis._request.abort();\n\t};\n\n\t// Overrides abstract method in AbstractLoader\n\tp.load = function () {\n\t\tif (this._request == null) {\n\t\t\tthis._handleError();\n\t\t\treturn;\n\t\t}\n\n\t\t//Events\n\t\tif (this._request.addEventListener != null) {\n\t\t\tthis._request.addEventListener(\"loadstart\", this._handleLoadStartProxy, false);\n\t\t\tthis._request.addEventListener(\"progress\", this._handleProgressProxy, false);\n\t\t\tthis._request.addEventListener(\"abort\", this._handleAbortProxy, false);\n\t\t\tthis._request.addEventListener(\"error\", this._handleErrorProxy, false);\n\t\t\tthis._request.addEventListener(\"timeout\", this._handleTimeoutProxy, false);\n\n\t\t\t// Note: We don't get onload in all browsers (earlier FF and IE). onReadyStateChange handles these.\n\t\t\tthis._request.addEventListener(\"load\", this._handleLoadProxy, false);\n\t\t\tthis._request.addEventListener(\"readystatechange\", this._handleReadyStateChangeProxy, false);\n\t\t} else {\n\t\t\t// IE9 support\n\t\t\tthis._request.onloadstart = this._handleLoadStartProxy;\n\t\t\tthis._request.onprogress = this._handleProgressProxy;\n\t\t\tthis._request.onabort = this._handleAbortProxy;\n\t\t\tthis._request.onerror = this._handleErrorProxy;\n\t\t\tthis._request.ontimeout = this._handleTimeoutProxy;\n\n\t\t\t// Note: We don't get onload in all browsers (earlier FF and IE). onReadyStateChange handles these.\n\t\t\tthis._request.onload = this._handleLoadProxy;\n\t\t\tthis._request.onreadystatechange = this._handleReadyStateChangeProxy;\n\t\t}\n\n\t\t// Set up a timeout if we don't have XHR2\n\t\tif (this._xhrLevel == 1) {\n\t\t\tthis._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), this._item.loadTimeout);\n\t\t}\n\n\t\t// Sometimes we get back 404s immediately, particularly when there is a cross origin request.  // note this does not catch in Chrome\n\t\ttry {\n\t\t\tif (!this._item.values) {\n\t\t\t\tthis._request.send();\n\t\t\t} else {\n\t\t\t\tthis._request.send(createjs.URLUtils.formatQueryString(this._item.values));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.dispatchEvent(new createjs.ErrorEvent(\"XHR_SEND\", null, error));\n\t\t}\n\t};\n\n\tp.setResponseType = function (type) {\n\t\t// Some old browsers doesn't support blob, so we convert arraybuffer to blob after response is downloaded\n\t\tif (type === 'blob') {\n\t\t\ttype = window.URL ? 'blob' : 'arraybuffer';\n\t\t\tthis._responseType = type;\n\t\t}\n\t\tthis._request.responseType = type;\n\t};\n\n\t/**\n\t * Get all the response headers from the XmlHttpRequest.\n\t *\n\t * <strong>From the docs:</strong> Return all the HTTP headers, excluding headers that are a case-insensitive match\n\t * for Set-Cookie or Set-Cookie2, as a single string, with each header line separated by a U+000D CR U+000A LF pair,\n\t * excluding the status line, and with each header name and header value separated by a U+003A COLON U+0020 SPACE\n\t * pair.\n\t * @method getAllResponseHeaders\n\t * @return {String}\n\t * @since 0.4.1\n\t */\n\tp.getAllResponseHeaders = function () {\n\t\tif (this._request.getAllResponseHeaders instanceof Function) {\n\t\t\treturn this._request.getAllResponseHeaders();\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t};\n\n\t/**\n\t * Get a specific response header from the XmlHttpRequest.\n\t *\n\t * <strong>From the docs:</strong> Returns the header field value from the response of which the field name matches\n\t * header, unless the field name is Set-Cookie or Set-Cookie2.\n\t * @method getResponseHeader\n\t * @param {String} header The header name to retrieve.\n\t * @return {String}\n\t * @since 0.4.1\n\t */\n\tp.getResponseHeader = function (header) {\n\t\tif (this._request.getResponseHeader instanceof Function) {\n\t\t\treturn this._request.getResponseHeader(header);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t};\n\n// protected methods\n\t/**\n\t * The XHR request has reported progress.\n\t * @method _handleProgress\n\t * @param {Object} event The XHR progress event.\n\t * @private\n\t */\n\tp._handleProgress = function (event) {\n\t\tif (!event || event.loaded > 0 && event.total == 0) {\n\t\t\treturn; // Sometimes we get no \"total\", so just ignore the progress event.\n\t\t}\n\n\t\tvar newEvent = new createjs.ProgressEvent(event.loaded, event.total);\n\t\tthis.dispatchEvent(newEvent);\n\t};\n\n\t/**\n\t * The XHR request has reported a load start.\n\t * @method _handleLoadStart\n\t * @param {Object} event The XHR loadStart event.\n\t * @private\n\t */\n\tp._handleLoadStart = function (event) {\n\t\tclearTimeout(this._loadTimeout);\n\t\tthis.dispatchEvent(\"loadstart\");\n\t};\n\n\t/**\n\t * The XHR request has reported an abort event.\n\t * @method handleAbort\n\t * @param {Object} event The XHR abort event.\n\t * @private\n\t */\n\tp._handleAbort = function (event) {\n\t\tthis._clean();\n\t\tthis.dispatchEvent(new createjs.ErrorEvent(\"XHR_ABORTED\", null, event));\n\t};\n\n\t/**\n\t * The XHR request has reported an error event.\n\t * @method _handleError\n\t * @param {Object} event The XHR error event.\n\t * @private\n\t */\n\tp._handleError = function (event) {\n\t\tthis._clean();\n\t\tthis.dispatchEvent(new createjs.ErrorEvent(event.message));\n\t};\n\n\t/**\n\t * The XHR request has reported a readyState change. Note that older browsers (IE 7 & 8) do not provide an onload\n\t * event, so we must monitor the readyStateChange to determine if the file is loaded.\n\t * @method _handleReadyStateChange\n\t * @param {Object} event The XHR readyStateChange event.\n\t * @private\n\t */\n\tp._handleReadyStateChange = function (event) {\n\t\tif (this._request.readyState == 4) {\n\t\t\tthis._handleLoad();\n\t\t}\n\t};\n\n\t/**\n\t * The XHR request has completed. This is called by the XHR request directly, or by a readyStateChange that has\n\t * <code>request.readyState == 4</code>. Only the first call to this method will be processed.\n\t *\n\t * Note that This method uses {{#crossLink \"_checkError\"}}{{/crossLink}} to determine if the server has returned an\n\t * error code.\n\t * @method _handleLoad\n\t * @param {Object} event The XHR load event.\n\t * @private\n\t */\n\tp._handleLoad = function (event) {\n\t\tif (this.loaded) {\n\t\t\treturn;\n\t\t}\n\t\tthis.loaded = true;\n\n\t\tvar error = this._checkError();\n\t\tif (error) {\n\t\t\tthis._handleError(error);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._response = this._getResponse();\n\t\t// Convert arraybuffer back to blob\n\t\tif (this._responseType === 'arraybuffer') {\n\t\t\ttry {\n\t\t\t\tthis._response = new Blob([this._response]);\n\t\t\t} catch (e) {\n\t\t\t\t// Fallback to use BlobBuilder if Blob constructor is not supported\n\t\t\t\t// Tested on Android 2.3 ~ 4.2 and iOS5 safari\n\t\t\t\twindow.BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n\t\t\t\tif (e.name === 'TypeError' && window.BlobBuilder) {\n\t\t\t\t\tvar builder = new BlobBuilder();\n\t\t\t\t\tbuilder.append(this._response);\n\t\t\t\t\tthis._response = builder.getBlob();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._clean();\n\n\t\tthis.dispatchEvent(new createjs.Event(\"complete\"));\n\t};\n\n\t/**\n\t * The XHR request has timed out. This is called by the XHR request directly, or via a <code>setTimeout</code>\n\t * callback.\n\t * @method _handleTimeout\n\t * @param {Object} [event] The XHR timeout event. This is occasionally null when called by the backup setTimeout.\n\t * @private\n\t */\n\tp._handleTimeout = function (event) {\n\t\tthis._clean();\n\t\tthis.dispatchEvent(new createjs.ErrorEvent(\"PRELOAD_TIMEOUT\", null, event));\n\t};\n\n// Protected\n\t/**\n\t * Determine if there is an error in the current load.\n\t * Currently this checks the status of the request for problem codes, and not actual response content:\n\t * <ul>\n\t *     <li>Status codes between 400 and 599 (HTTP error range)</li>\n\t *     <li>A status of 0, but *only when the application is running on a server*. If the application is running\n\t *     on `file:`, then it may incorrectly treat an error on local (or embedded applications) as a successful\n\t *     load.</li>\n\t * </ul>\n\t * @method _checkError\n\t * @return {Error} An error with the status code in the `message` argument.\n\t * @private\n\t */\n\tp._checkError = function () {\n\t\tvar status = parseInt(this._request.status);\n\t\tif (status >= 400 && status <= 599) {\n\t\t\treturn new Error(status);\n\t\t} else if (status == 0) {\n\t\t\tif ((/^https?:/).test(location.protocol)) { return new Error(0); }\n\t\t\treturn null; // Likely an embedded app.\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t};\n\n\n\t/**\n\t * Validate the response. Different browsers have different approaches, some of which throw errors when accessed\n\t * in other browsers. If there is no response, the <code>_response</code> property will remain null.\n\t * @method _getResponse\n\t * @private\n\t */\n\tp._getResponse = function () {\n\t\tif (this._response != null) {\n\t\t\treturn this._response;\n\t\t}\n\n\t\tif (this._request.response != null) {\n\t\t\treturn this._request.response;\n\t\t}\n\n\t\t// Android 2.2 uses .responseText\n\t\ttry {\n\t\t\tif (this._request.responseText != null) {\n\t\t\t\treturn this._request.responseText;\n\t\t\t}\n\t\t} catch (e) {\n\t\t}\n\n\t\t// When loading XML, IE9 does not return .response, instead it returns responseXML.xml\n\t\ttry {\n\t\t\tif (this._request.responseXML != null) {\n\t\t\t\treturn this._request.responseXML;\n\t\t\t}\n\t\t} catch (e) {\n\t\t}\n\n\t\treturn null;\n\t};\n\n\t/**\n\t * Create an XHR request. Depending on a number of factors, we get totally different results.\n\t * <ol><li>Some browsers get an <code>XDomainRequest</code> when loading cross-domain.</li>\n\t *      <li>XMLHttpRequest are created when available.</li>\n\t *      <li>ActiveX.XMLHTTP objects are used in older IE browsers.</li>\n\t *      <li>Text requests override the mime type if possible</li>\n\t *      <li>Origin headers are sent for crossdomain requests in some browsers.</li>\n\t *      <li>Binary loads set the response type to \"arraybuffer\"</li></ol>\n\t * @method _createXHR\n\t * @param {Object} item The requested item that is being loaded.\n\t * @return {Boolean} If an XHR request or equivalent was successfully created.\n\t * @private\n\t */\n\tp._createXHR = function (item) {\n\t\t// Check for cross-domain loads. We can't fully support them, but we can try.\n\t\tvar crossdomain = createjs.URLUtils.isCrossDomain(item);\n\t\tvar headers = {};\n\n\t\t// Create the request. Fallback to whatever support we have.\n\t\tvar req = null;\n\t\tif (window.XMLHttpRequest) {\n\t\t\treq = new XMLHttpRequest();\n\t\t\t// This is 8 or 9, so use XDomainRequest instead.\n\t\t\tif (crossdomain && req.withCredentials === undefined && window.XDomainRequest) {\n\t\t\t\treq = new XDomainRequest();\n\t\t\t}\n\t\t} else { // Old IE versions use a different approach\n\t\t\tfor (var i = 0, l = s.ACTIVEX_VERSIONS.length; i < l; i++) {\n\t\t\t\tvar axVersion = s.ACTIVEX_VERSIONS[i];\n\t\t\t\ttry {\n\t\t\t\t\treq = new ActiveXObject(axVersion);\n\t\t\t\t\tbreak;\n\t\t\t\t} catch (e) {\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (req == null) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Default to utf-8 for Text requests.\n\t\tif (item.mimeType == null && createjs.RequestUtils.isText(item.type)) {\n\t\t\titem.mimeType = \"text/plain; charset=utf-8\";\n\t\t}\n\n\t\t// IE9 doesn't support overrideMimeType(), so we need to check for it.\n\t\tif (item.mimeType && req.overrideMimeType) {\n\t\t\treq.overrideMimeType(item.mimeType);\n\t\t}\n\n\t\t// Determine the XHR level\n\t\tthis._xhrLevel = (typeof req.responseType === \"string\") ? 2 : 1;\n\n\t\tvar src = null;\n\t\tif (item.method == createjs.Methods.GET) {\n\t\t\tsrc = createjs.URLUtils.buildURI(item.src, item.values);\n\t\t} else {\n\t\t\tsrc = item.src;\n\t\t}\n\n\t\t// Open the request.  Set cross-domain flags if it is supported (XHR level 1 only)\n\t\treq.open(item.method || createjs.Methods.GET, src, true);\n\n\t\tif (crossdomain && req instanceof XMLHttpRequest && this._xhrLevel == 1) {\n\t\t\theaders[\"Origin\"] = location.origin;\n\t\t}\n\n\t\t// To send data we need to set the Content-type header)\n\t\tif (item.values && item.method == createjs.Methods.POST) {\n\t\t\theaders[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n\t\t}\n\n\t\tif (!crossdomain && !headers[\"X-Requested-With\"]) {\n\t\t\theaders[\"X-Requested-With\"] = \"XMLHttpRequest\";\n\t\t}\n\n\t\tif (item.headers) {\n\t\t\tfor (var n in item.headers) {\n\t\t\t\theaders[n] = item.headers[n];\n\t\t\t}\n\t\t}\n\n\t\tfor (n in headers) {\n\t\t\treq.setRequestHeader(n, headers[n])\n\t\t}\n\n\t\tif (req instanceof XMLHttpRequest && item.withCredentials !== undefined) {\n\t\t\treq.withCredentials = item.withCredentials;\n\t\t}\n\n\t\tthis._request = req;\n\n\t\treturn true;\n\t};\n\n\t/**\n\t * A request has completed (or failed or canceled), and needs to be disposed.\n\t * @method _clean\n\t * @private\n\t */\n\tp._clean = function () {\n\t\tclearTimeout(this._loadTimeout);\n\n\t\tif (this._request.removeEventListener != null) {\n\t\t\tthis._request.removeEventListener(\"loadstart\", this._handleLoadStartProxy);\n\t\t\tthis._request.removeEventListener(\"progress\", this._handleProgressProxy);\n\t\t\tthis._request.removeEventListener(\"abort\", this._handleAbortProxy);\n\t\t\tthis._request.removeEventListener(\"error\", this._handleErrorProxy);\n\t\t\tthis._request.removeEventListener(\"timeout\", this._handleTimeoutProxy);\n\t\t\tthis._request.removeEventListener(\"load\", this._handleLoadProxy);\n\t\t\tthis._request.removeEventListener(\"readystatechange\", this._handleReadyStateChangeProxy);\n\t\t} else {\n\t\t\tthis._request.onloadstart = null;\n\t\t\tthis._request.onprogress = null;\n\t\t\tthis._request.onabort = null;\n\t\t\tthis._request.onerror = null;\n\t\t\tthis._request.ontimeout = null;\n\t\t\tthis._request.onload = null;\n\t\t\tthis._request.onreadystatechange = null;\n\t\t}\n\t};\n\n\tp.toString = function () {\n\t\treturn \"[PreloadJS XHRRequest]\";\n\t};\n\n\tcreatejs.XHRRequest = createjs.promote(XHRRequest, \"AbstractRequest\");\n\n}());\n\n//##############################################################################\n// LoadQueue.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n/*\n TODO: WINDOWS ISSUES\n * No error for HTML audio in IE 678\n * SVG no failure error in IE 67 (maybe 8) TAGS AND XHR\n * No script complete handler in IE 67 TAGS (XHR is fine)\n * No XML/JSON in IE6 TAGS\n * Need to hide loading SVG in Opera TAGS\n * No CSS onload/readystatechange in Safari or Android TAGS (requires rule checking)\n * SVG no load or failure in Opera XHR\n * Reported issues with IE7/8\n */\n\n(function () {\n\t\"use strict\";\n\n// constructor\n\t/**\n\t * The LoadQueue class is the main API for preloading content. LoadQueue is a load manager, which can preload either\n\t * a single file, or queue of files.\n\t *\n\t * <b>Creating a Queue</b><br />\n\t * To use LoadQueue, create a LoadQueue instance. If you want to force tag loading where possible, set the preferXHR\n\t * argument to false.\n\t *\n\t *      var queue = new createjs.LoadQueue(true);\n\t *\n\t * <b>Listening for Events</b><br />\n\t * Add any listeners you want to the queue. Since PreloadJS 0.3.0, the {{#crossLink \"EventDispatcher\"}}{{/crossLink}}\n\t * lets you add as many listeners as you want for events. You can subscribe to the following events:<ul>\n\t *     <li>{{#crossLink \"AbstractLoader/complete:event\"}}{{/crossLink}}: fired when a queue completes loading all\n\t *     files</li>\n\t *     <li>{{#crossLink \"AbstractLoader/error:event\"}}{{/crossLink}}: fired when the queue encounters an error with\n\t *     any file.</li>\n\t *     <li>{{#crossLink \"AbstractLoader/progress:event\"}}{{/crossLink}}: Progress for the entire queue has\n\t *     changed.</li>\n\t *     <li>{{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}}: A single file has completed loading.</li>\n\t *     <li>{{#crossLink \"LoadQueue/fileprogress:event\"}}{{/crossLink}}: Progress for a single file has changes. Note\n\t *     that only files loaded with XHR (or possibly by plugins) will fire progress events other than 0 or 100%.</li>\n\t * </ul>\n\t *\n\t *      queue.on(\"fileload\", handleFileLoad, this);\n\t *      queue.on(\"complete\", handleComplete, this);\n\t *\n\t * <b>Adding files and manifests</b><br />\n\t * Add files you want to load using {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}} or add multiple files at a\n\t * time using a list or a manifest definition using {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}. Files are\n\t * appended to the end of the active queue, so you can use these methods as many times as you like, whenever you\n\t * like.\n\t *\n\t *      queue.loadFile(\"filePath/file.jpg\");\n\t *      queue.loadFile({id:\"image\", src:\"filePath/file.jpg\"});\n\t *      queue.loadManifest([\"filePath/file.jpg\", {id:\"image\", src:\"filePath/file.jpg\"}]);\n\t *\n\t *      // Use an external manifest\n\t *      queue.loadManifest(\"path/to/manifest.json\");\n\t *      queue.loadManifest({src:\"manifest.json\", type:\"manifest\"});\n\t *\n\t * If you pass `false` as the `loadNow` parameter, the queue will not kick of the load of the files, but it will not\n\t * stop if it has already been started. Call the {{#crossLink \"AbstractLoader/load\"}}{{/crossLink}} method to begin\n\t * a paused queue. Note that a paused queue will automatically resume when new files are added to it with a\n\t * `loadNow` argument of `true`.\n\t *\n\t *      queue.load();\n\t *\n\t * <b>File Types</b><br />\n\t * The file type of a manifest item is auto-determined by the file extension. The pattern matching in PreloadJS\n\t * should handle the majority of standard file and url formats, and works with common file extensions. If you have\n\t * either a non-standard file extension, or are serving the file using a proxy script, then you can pass in a\n\t * <code>type</code> property with any manifest item.\n\t *\n\t *      queue.loadFile({src:\"path/to/myFile.mp3x\", type:createjs.Types.SOUND});\n\t *\n\t *      // Note that PreloadJS will not read a file extension from the query string\n\t *      queue.loadFile({src:\"http://server.com/proxy?file=image.jpg\", type:createjs.Types.IMAGE});\n\t *\n\t * Supported types are defined on the {{#crossLink \"AbstractLoader\"}}{{/crossLink}} class, and include:\n\t * <ul>\n\t *     <li>{{#crossLink \"Types/BINARY:property\"}}{{/crossLink}}: Raw binary data via XHR</li>\n\t *     <li>{{#crossLink \"Types/CSS:property\"}}{{/crossLink}}: CSS files</li>\n\t *     <li>{{#crossLink \"Types/IMAGE:property\"}}{{/crossLink}}: Common image formats</li>\n\t *     <li>{{#crossLink \"Types/JAVASCRIPT:property\"}}{{/crossLink}}: JavaScript files</li>\n\t *     <li>{{#crossLink \"Types/JSON:property\"}}{{/crossLink}}: JSON data</li>\n\t *     <li>{{#crossLink \"Types/JSONP:property\"}}{{/crossLink}}: JSON files cross-domain</li>\n\t *     <li>{{#crossLink \"Types/MANIFEST:property\"}}{{/crossLink}}: A list of files to load in JSON format, see\n\t *     {{#crossLink \"AbstractLoader/loadManifest\"}}{{/crossLink}}</li>\n\t *     <li>{{#crossLink \"Types/SOUND:property\"}}{{/crossLink}}: Audio file formats</li>\n\t *     <li>{{#crossLink \"Types/SPRITESHEET:property\"}}{{/crossLink}}: JSON SpriteSheet definitions. This\n\t *     will also load sub-images, and provide a {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instance.</li>\n\t *     <li>{{#crossLink \"Types/SVG:property\"}}{{/crossLink}}: SVG files</li>\n\t *     <li>{{#crossLink \"Types/TEXT:property\"}}{{/crossLink}}: Text files - XHR only</li>\n     *     <li>{{#crossLink \"Types/VIDEO:property\"}}{{/crossLink}}: Video objects</li>\n\t *     <li>{{#crossLink \"Types/XML:property\"}}{{/crossLink}}: XML data</li>\n\t * </ul>\n\t *\n\t * <em>Note: Loader types used to be defined on LoadQueue, but have been moved to the Types class</em>\n\t *\n\t * <b>Handling Results</b><br />\n\t * When a file is finished downloading, a {{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}} event is\n\t * dispatched. In an example above, there is an event listener snippet for fileload. Loaded files are usually a\n\t * formatted object that can be used immediately, including:\n\t * <ul>\n\t *     <li>Binary: The binary loaded result</li>\n\t *     <li>CSS: A &lt;link /&gt; tag</li>\n\t *     <li>Image: An &lt;img /&gt; tag</li>\n\t *     <li>JavaScript: A &lt;script /&gt; tag</li>\n\t *     <li>JSON/JSONP: A formatted JavaScript Object</li>\n\t *     <li>Manifest: A JavaScript object.\n\t *     <li>Sound: An &lt;audio /&gt; tag</a>\n\t *     <li>SpriteSheet: A {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instance, containing loaded images.\n\t *     <li>SVG: An &lt;object /&gt; tag</li>\n\t *     <li>Text: Raw text</li>\n     *     <li>Video: A Video DOM node</li>\n\t *     <li>XML: An XML DOM node</li>\n\t * </ul>\n\t *\n\t *      function handleFileLoad(event) {\n\t *          var item = event.item; // A reference to the item that was passed in to the LoadQueue\n\t *          var type = item.type;\n\t *\n\t *          // Add any images to the page body.\n\t *          if (type == createjs.Types.IMAGE) {\n\t *              document.body.appendChild(event.result);\n\t *          }\n\t *      }\n\t *\n\t * At any time after the file has been loaded (usually after the queue has completed), any result can be looked up\n\t * via its \"id\" using {{#crossLink \"LoadQueue/getResult\"}}{{/crossLink}}. If no id was provided, then the\n\t * \"src\" or file path can be used instead, including the `path` defined by a manifest, but <strong>not including</strong>\n\t * a base path defined on the LoadQueue. It is recommended to always pass an id if you want to look up content.\n\t *\n\t *      var image = queue.getResult(\"image\");\n\t *      document.body.appendChild(image);\n\t *\n\t * Raw loaded content can be accessed using the <code>rawResult</code> property of the {{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}}\n\t * event, or can be looked up using {{#crossLink \"LoadQueue/getResult\"}}{{/crossLink}}, passing `true` as the 2nd\n\t * argument. This is only applicable for content that has been parsed for the browser, specifically: JavaScript,\n\t * CSS, XML, SVG, and JSON objects, or anything loaded with XHR.\n\t *\n\t *      var image = queue.getResult(\"image\", true); // load the binary image data loaded with XHR.\n\t *\n\t * <b>Plugins</b><br />\n\t * LoadQueue has a simple plugin architecture to help process and preload content. For example, to preload audio,\n\t * make sure to install the <a href=\"http://soundjs.com\">SoundJS</a> Sound class, which will help load HTML audio,\n\t * Flash audio, and WebAudio files. This should be installed <strong>before</strong> loading any audio files.\n\t *\n\t *      queue.installPlugin(createjs.Sound);\n\t *\n\t * <h4>Known Browser Issues</h4>\n\t * <ul>\n\t *     <li>Browsers without audio support can not load audio files.</li>\n\t *     <li>Safari on Mac OS X can only play HTML audio if QuickTime is installed</li>\n\t *     <li>HTML Audio tags will only download until their <code>canPlayThrough</code> event is fired. Browsers other\n\t *     than Chrome will continue to download in the background.</li>\n\t *     <li>When loading scripts using tags, they are automatically added to the document.</li>\n\t *     <li>Scripts loaded via XHR may not be properly inspectable with browser tools.</li>\n\t *     <li>IE6 and IE7 (and some other browsers) may not be able to load XML, Text, or JSON, since they require\n\t *     XHR to work.</li>\n\t *     <li>Content loaded via tags will not show progress, and will continue to download in the background when\n\t *     canceled, although no events will be dispatched.</li>\n\t * </ul>\n\t *\n\t * @class LoadQueue\n\t * @param {Boolean} [preferXHR=true] Determines whether the preload instance will favor loading with XHR (XML HTTP\n\t * Requests), or HTML tags. When this is `false`, the queue will use tag loading when possible, and fall back on XHR\n\t * when necessary.\n\t * @param {String} [basePath=\"\"] A path that will be prepended on to the source parameter of all items in the queue\n\t * before they are loaded.  Sources beginning with a protocol such as `http://` or a relative path such as `../`\n\t * will not receive a base path.\n\t * @param {String|Boolean} [crossOrigin=\"\"] An optional flag to support images loaded from a CORS-enabled server. To\n\t * use it, set this value to `true`, which will default the crossOrigin property on images to \"Anonymous\". Any\n\t * string value will be passed through, but only \"\" and \"Anonymous\" are recommended. <strong>Note: The crossOrigin\n\t * parameter is deprecated. Use LoadItem.crossOrigin instead</strong>\n\t *\n\t * @constructor\n\t * @extends AbstractLoader\n\t */\n\tfunction LoadQueue (preferXHR, basePath, crossOrigin) {\n\t\tthis.AbstractLoader_constructor();\n\n\t\t/**\n\t\t * An array of the plugins registered using {{#crossLink \"LoadQueue/installPlugin\"}}{{/crossLink}}.\n\t\t * @property _plugins\n\t\t * @type {Array}\n\t\t * @private\n\t\t * @since 0.6.1\n\t\t */\n\t\tthis._plugins = [];\n\n\t\t/**\n\t\t * An object hash of callbacks that are fired for each file type before the file is loaded, giving plugins the\n\t\t * ability to override properties of the load. Please see the {{#crossLink \"LoadQueue/installPlugin\"}}{{/crossLink}}\n\t\t * method for more information.\n\t\t * @property _typeCallbacks\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n\t\tthis._typeCallbacks = {};\n\n\t\t/**\n\t\t * An object hash of callbacks that are fired for each file extension before the file is loaded, giving plugins the\n\t\t * ability to override properties of the load. Please see the {{#crossLink \"LoadQueue/installPlugin\"}}{{/crossLink}}\n\t\t * method for more information.\n\t\t * @property _extensionCallbacks\n\t\t * @type {null}\n\t\t * @private\n\t\t */\n\t\tthis._extensionCallbacks = {};\n\n\t\t/**\n\t\t * The next preload queue to process when this one is complete. If an error is thrown in the current queue, and\n\t\t * {{#crossLink \"LoadQueue/stopOnError:property\"}}{{/crossLink}} is `true`, the next queue will not be processed.\n\t\t * @property next\n\t\t * @type {LoadQueue}\n\t\t * @default null\n\t\t */\n\t\tthis.next = null;\n\n\t\t/**\n\t\t * Ensure loaded scripts \"complete\" in the order they are specified. Loaded scripts are added to the document head\n\t\t * once they are loaded. Scripts loaded via tags will load one-at-a-time when this property is `true`, whereas\n\t\t * scripts loaded using XHR can load in any order, but will \"finish\" and be added to the document in the order\n\t\t * specified.\n\t\t *\n\t\t * Any items can be set to load in order by setting the {{#crossLink \"maintainOrder:property\"}}{{/crossLink}}\n\t\t * property on the load item, or by ensuring that only one connection can be open at a time using\n\t\t * {{#crossLink \"LoadQueue/setMaxConnections\"}}{{/crossLink}}. Note that when the `maintainScriptOrder` property\n\t\t * is set to `true`, scripts items are automatically set to `maintainOrder=true`, and changing the\n\t\t * `maintainScriptOrder` to `false` during a load will not change items already in a queue.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      var queue = new createjs.LoadQueue();\n\t\t *      queue.setMaxConnections(3); // Set a higher number to load multiple items at once\n\t\t *      queue.maintainScriptOrder = true; // Ensure scripts are loaded in order\n\t\t *      queue.loadManifest([\n\t\t *          \"script1.js\",\n\t\t *          \"script2.js\",\n\t\t *          \"image.png\", // Load any time\n\t\t *          {src: \"image2.png\", maintainOrder: true} // Will wait for script2.js\n\t\t *          \"image3.png\",\n\t\t *          \"script3.js\" // Will wait for image2.png before loading (or completing when loading with XHR)\n\t\t *      ]);\n\t\t *\n\t\t * @property maintainScriptOrder\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.maintainScriptOrder = true;\n\n\t\t/**\n\t\t * Determines if the LoadQueue will stop processing the current queue when an error is encountered.\n\t\t * @property stopOnError\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.stopOnError = false;\n\n\t\t/**\n\t\t * The number of maximum open connections that a loadQueue tries to maintain. Please see\n\t\t * {{#crossLink \"LoadQueue/setMaxConnections\"}}{{/crossLink}} for more information.\n\t\t * @property _maxConnections\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t * @private\n\t\t */\n\t\tthis._maxConnections = 1;\n\n\t\t/**\n\t\t * An internal list of all the default Loaders that are included with PreloadJS. Before an item is loaded, the\n\t\t * available loader list is iterated, in the order they are included, and as soon as a loader indicates it can\n\t\t * handle the content, it will be selected. The default loader, ({{#crossLink \"TextLoader\"}}{{/crossLink}} is\n\t\t * last in the list, so it will be used if no other match is found. Typically, loaders will match based on the\n\t\t * {{#crossLink \"LoadItem/type\"}}{{/crossLink}}, which is automatically determined using the file extension of\n\t\t * the {{#crossLink \"LoadItem/src:property\"}}{{/crossLink}}.\n\t\t *\n\t\t * Loaders can be removed from PreloadJS by simply not including them.\n\t\t *\n\t\t * Custom loaders installed using {{#crossLink \"registerLoader\"}}{{/crossLink}} will be prepended to this list\n\t\t * so that they are checked first.\n\t\t * @property _availableLoaders\n\t\t * @type {Array}\n\t\t * @private\n\t\t * @since 0.6.0\n\t\t */\n\t\tthis._availableLoaders = [\n            createjs.FontLoader,\n\t\t\tcreatejs.ImageLoader,\n\t\t\tcreatejs.JavaScriptLoader,\n\t\t\tcreatejs.CSSLoader,\n\t\t\tcreatejs.JSONLoader,\n\t\t\tcreatejs.JSONPLoader,\n\t\t\tcreatejs.SoundLoader,\n\t\t\tcreatejs.ManifestLoader,\n\t\t\tcreatejs.SpriteSheetLoader,\n\t\t\tcreatejs.XMLLoader,\n\t\t\tcreatejs.SVGLoader,\n\t\t\tcreatejs.BinaryLoader,\n\t\t\tcreatejs.VideoLoader,\n\t\t\tcreatejs.TextLoader\n\t\t];\n\n\t\t/**\n\t\t * The number of built in loaders, so they can't be removed by {{#crossLink \"unregisterLoader\"}}{{/crossLink}.\n\t\t\t\t * @property _defaultLoaderLength\n\t\t * @type {Number}\n\t\t * @private\n\t\t * @since 0.6.0\n\t\t */\n\t\tthis._defaultLoaderLength = this._availableLoaders.length;\n\n\t\tthis.init(preferXHR, basePath, crossOrigin);\n\t}\n\n\tvar p = createjs.extend(LoadQueue, createjs.AbstractLoader);\n\tvar s = LoadQueue;\n\n\t// Remove these @deprecated properties after 1.0\n\ttry {\n\t\tObject.defineProperties(s, {\n\t\t\tPOST: { get: createjs.deprecate(function() { return createjs.Methods.POST; }, \"AbstractLoader.POST\") },\n\t\t\tGET: { get: createjs.deprecate(function() { return createjs.Methods.GET; }, \"AbstractLoader.GET\") },\n\n\t\t\tBINARY: { get: createjs.deprecate(function() { return createjs.Types.BINARY; }, \"AbstractLoader.BINARY\") },\n\t\t\tCSS: { get: createjs.deprecate(function() { return createjs.Types.CSS; }, \"AbstractLoader.CSS\") },\n\t\t\tFONT: { get: createjs.deprecate(function() { return createjs.Types.FONT; }, \"AbstractLoader.FONT\") },\n\t\t\tFONTCSS: { get: createjs.deprecate(function() { return createjs.Types.FONTCSS; }, \"AbstractLoader.FONTCSS\") },\n\t\t\tIMAGE: { get: createjs.deprecate(function() { return createjs.Types.IMAGE; }, \"AbstractLoader.IMAGE\") },\n\t\t\tJAVASCRIPT: { get: createjs.deprecate(function() { return createjs.Types.JAVASCRIPT; }, \"AbstractLoader.JAVASCRIPT\") },\n\t\t\tJSON: { get: createjs.deprecate(function() { return createjs.Types.JSON; }, \"AbstractLoader.JSON\") },\n\t\t\tJSONP: { get: createjs.deprecate(function() { return createjs.Types.JSONP; }, \"AbstractLoader.JSONP\") },\n\t\t\tMANIFEST: { get: createjs.deprecate(function() { return createjs.Types.MANIFEST; }, \"AbstractLoader.MANIFEST\") },\n\t\t\tSOUND: { get: createjs.deprecate(function() { return createjs.Types.SOUND; }, \"AbstractLoader.SOUND\") },\n\t\t\tVIDEO: { get: createjs.deprecate(function() { return createjs.Types.VIDEO; }, \"AbstractLoader.VIDEO\") },\n\t\t\tSPRITESHEET: { get: createjs.deprecate(function() { return createjs.Types.SPRITESHEET; }, \"AbstractLoader.SPRITESHEET\") },\n\t\t\tSVG: { get: createjs.deprecate(function() { return createjs.Types.SVG; }, \"AbstractLoader.SVG\") },\n\t\t\tTEXT: { get: createjs.deprecate(function() { return createjs.Types.TEXT; }, \"AbstractLoader.TEXT\") },\n\t\t\tXML: { get: createjs.deprecate(function() { return createjs.Types.XML; }, \"AbstractLoader.XML\") }\n\t\t});\n\t} catch (e) {}\n\n\t/**\n\t * An internal initialization method, which is used for initial set up, but also to reset the LoadQueue.\n\t * @method init\n\t * @param preferXHR\n\t * @param basePath\n\t * @param crossOrigin\n\t * @private\n\t */\n\tp.init = function (preferXHR, basePath, crossOrigin) {\n\n\t\t// public properties\n\n\t\t/**\n\t\t * Try and use XMLHttpRequest (XHR) when possible. Note that LoadQueue will default to tag loading or XHR\n\t\t * loading depending on the requirements for a media type. For example, HTML audio can not be loaded with XHR,\n\t\t * and plain text can not be loaded with tags, so it will default the the correct type instead of using the\n\t\t * user-defined type.\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t * @since 0.6.0\n\t\t */\n\t\tthis.preferXHR = true; //TODO: Get/Set\n\t\tthis._preferXHR = true;\n\t\tthis.setPreferXHR(preferXHR);\n\n\t\t// protected properties\n\t\t/**\n\t\t * Whether the queue is currently paused or not.\n\t\t * @property _paused\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._paused = false;\n\n\t\t/**\n\t\t * A path that will be prepended on to the item's {{#crossLink \"LoadItem/src:property\"}}{{/crossLink}}. The\n\t\t * `_basePath` property will only be used if an item's source is relative, and does not include a protocol such\n\t\t * as `http://`, or a relative path such as `../`.\n\t\t * @property _basePath\n\t\t * @type {String}\n\t\t * @private\n\t\t * @since 0.3.1\n\t\t */\n\t\tthis._basePath = basePath;\n\n\t\t/**\n\t\t * An optional flag to set on images that are loaded using PreloadJS, which enables CORS support. Images loaded\n\t\t * cross-domain by servers that support CORS require the crossOrigin flag to be loaded and interacted with by\n\t\t * a canvas. When loading locally, or with a server with no CORS support, this flag can cause other security issues,\n\t\t * so it is recommended to only set it if you are sure the server supports it. Currently, supported values are \"\"\n\t\t * and \"Anonymous\".\n\t\t * @property _crossOrigin\n\t\t * @type {String}\n\t\t * @default \"\"\n\t\t * @private\n\t\t * @since 0.4.1\n\t\t */\n\t\tthis._crossOrigin = crossOrigin;\n\n\t\t/**\n\t\t * Determines if the loadStart event was dispatched already. This event is only fired one time, when the first\n\t\t * file is requested.\n\t\t * @property _loadStartWasDispatched\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t * @private\n\t\t */\n\t\tthis._loadStartWasDispatched = false;\n\n\t\t/**\n\t\t * Determines if there is currently a script loading. This helps ensure that only a single script loads at once when\n\t\t * using a script tag to do preloading.\n\t\t * @property _currentlyLoadingScript\n\t\t * @type {Boolean}\n\t\t * @private\n\t\t */\n\t\tthis._currentlyLoadingScript = null;\n\n\t\t/**\n\t\t * An array containing the currently downloading files.\n\t\t * @property _currentLoads\n\t\t * @type {Array}\n\t\t * @private\n\t\t */\n\t\tthis._currentLoads = [];\n\n\t\t/**\n\t\t * An array containing the queued items that have not yet started downloading.\n\t\t * @property _loadQueue\n\t\t * @type {Array}\n\t\t * @private\n\t\t */\n\t\tthis._loadQueue = [];\n\n\t\t/**\n\t\t * An array containing downloads that have not completed, so that the LoadQueue can be properly reset.\n\t\t * @property _loadQueueBackup\n\t\t * @type {Array}\n\t\t * @private\n\t\t */\n\t\tthis._loadQueueBackup = [];\n\n\t\t/**\n\t\t * An object hash of items that have finished downloading, indexed by the {{#crossLink \"LoadItem\"}}{{/crossLink}}\n\t\t * id.\n\t\t * @property _loadItemsById\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n\t\tthis._loadItemsById = {};\n\n\t\t/**\n\t\t * An object hash of items that have finished downloading, indexed by {{#crossLink \"LoadItem\"}}{{/crossLink}}\n\t\t * source.\n\t\t * @property _loadItemsBySrc\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n\t\tthis._loadItemsBySrc = {};\n\n\t\t/**\n\t\t * An object hash of loaded items, indexed by the ID of the {{#crossLink \"LoadItem\"}}{{/crossLink}}.\n\t\t * @property _loadedResults\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n\t\tthis._loadedResults = {};\n\n\t\t/**\n\t\t * An object hash of un-parsed loaded items, indexed by the ID of the {{#crossLink \"LoadItem\"}}{{/crossLink}}.\n\t\t * @property _loadedRawResults\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n\t\tthis._loadedRawResults = {};\n\n\t\t/**\n\t\t * The number of items that have been requested. This helps manage an overall progress without knowing how large\n\t\t * the files are before they are downloaded. This does not include items inside of loaders such as the\n\t\t * {{#crossLink \"ManifestLoader\"}}{{/crossLink}}.\n\t\t * @property _numItems\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @private\n\t\t */\n\t\tthis._numItems = 0;\n\n\t\t/**\n\t\t * The number of items that have completed loaded. This helps manage an overall progress without knowing how large\n\t\t * the files are before they are downloaded.\n\t\t * @property _numItemsLoaded\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @private\n\t\t */\n\t\tthis._numItemsLoaded = 0;\n\n\t\t/**\n\t\t * A list of scripts in the order they were requested. This helps ensure that scripts are \"completed\" in the right\n\t\t * order.\n\t\t * @property _scriptOrder\n\t\t * @type {Array}\n\t\t * @private\n\t\t */\n\t\tthis._scriptOrder = [];\n\n\t\t/**\n\t\t * A list of scripts that have been loaded. Items are added to this list as <code>null</code> when they are\n\t\t * requested, contain the loaded item if it has completed, but not been dispatched to the user, and <code>true</true>\n\t\t * once they are complete and have been dispatched.\n\t\t * @property _loadedScripts\n\t\t * @type {Array}\n\t\t * @private\n\t\t */\n\t\tthis._loadedScripts = [];\n\n\t\t/**\n\t\t * The last progress amount. This is used to suppress duplicate progress events.\n\t\t * @property _lastProgress\n\t\t * @type {Number}\n\t\t * @private\n\t\t * @since 0.6.0\n\t\t */\n\t\tthis._lastProgress = NaN;\n\n\t};\n\n// static properties\n\n// events\n\t/**\n\t * This event is fired when an individual file has loaded, and been processed.\n\t * @event fileload\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @param {Object} item The file item which was specified in the {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}}\n\t * or {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}} call. If only a string path or tag was specified, the\n\t * object will contain that value as a `src` property.\n\t * @param {Object} result The HTML tag or parsed result of the loaded item.\n\t * @param {Object} rawResult The unprocessed result, usually the raw text or binary data before it is converted\n\t * to a usable object.\n\t * @since 0.3.0\n\t */\n\n\t/**\n\t * This {{#crossLink \"ProgressEvent\"}}{{/crossLink}} that is fired when an an individual file's progress changes.\n\t * @event fileprogress\n\t * @since 0.3.0\n\t */\n\n\t/**\n\t * This event is fired when an individual file starts to load.\n\t * @event filestart\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @param {Object} item The file item which was specified in the {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}}\n\t * or {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}} call. If only a string path or tag was specified, the\n\t * object will contain that value as a property.\n\t */\n\n\t/**\n\t * Although it extends {{#crossLink \"AbstractLoader\"}}{{/crossLink}}, the `initialize` event is never fired from\n\t * a LoadQueue instance.\n\t * @event initialize\n\t * @private\n\t */\n\n// public methods\n\t/**\n\t * Register a custom loaders class. New loaders are given precedence over loaders added earlier and default loaders.\n\t * It is recommended that loaders extend {{#crossLink \"AbstractLoader\"}}{{/crossLink}}. Loaders can only be added\n\t * once, and will be prepended to the list of available loaders.\n\t * @method registerLoader\n\t * @param {Function|AbstractLoader} loader The AbstractLoader class to add.\n\t * @since 0.6.0\n\t */\n\tp.registerLoader = function (loader) {\n\t\tif (!loader || !loader.canLoadItem) {\n\t\t\tthrow new Error(\"loader is of an incorrect type.\");\n\t\t} else if (this._availableLoaders.indexOf(loader) != -1) {\n\t\t\tthrow new Error(\"loader already exists.\"); //LM: Maybe just silently fail here\n\t\t}\n\n\t\tthis._availableLoaders.unshift(loader);\n\t};\n\n\t/**\n\t * Remove a custom loader added using {{#crossLink \"registerLoader\"}}{{/crossLink}}. Only custom loaders can be\n\t * unregistered, the default loaders will always be available.\n\t * @method unregisterLoader\n\t * @param {Function|AbstractLoader} loader The AbstractLoader class to remove\n\t */\n\tp.unregisterLoader = function (loader) {\n\t\tvar idx = this._availableLoaders.indexOf(loader);\n\t\tif (idx != -1 && idx < this._defaultLoaderLength - 1) {\n\t\t\tthis._availableLoaders.splice(idx, 1);\n\t\t}\n\t};\n\n\t/**\n\t * Change the {{#crossLink \"preferXHR:property\"}}{{/crossLink}} value. Note that if this is set to `true`, it may\n\t * fail, or be ignored depending on the browser's capabilities and the load type.\n\t * @method setPreferXHR\n\t * @param {Boolean} value\n\t * @returns {Boolean} The value of {{#crossLink \"preferXHR\"}}{{/crossLink}} that was successfully set.\n\t * @since 0.6.0\n\t */\n\tp.setPreferXHR = function (value) {\n\t\t// Determine if we can use XHR. XHR defaults to TRUE, but the browser may not support it.\n\t\t//TODO: Should we be checking for the other XHR types? Might have to do a try/catch on the different types similar to createXHR.\n\t\tthis.preferXHR = (value != false && window.XMLHttpRequest != null);\n\t\treturn this.preferXHR;\n\t};\n\n\t/**\n\t * Stops all queued and loading items, and clears the queue. This also removes all internal references to loaded\n\t * content, and allows the queue to be used again.\n\t * @method removeAll\n\t * @since 0.3.0\n\t */\n\tp.removeAll = function () {\n\t\tthis.remove();\n\t};\n\n\t/**\n\t * Stops an item from being loaded, and removes it from the queue. If nothing is passed, all items are removed.\n\t * This also removes internal references to loaded item(s).\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      queue.loadManifest([\n\t *          {src:\"test.png\", id:\"png\"},\n\t *          {src:\"test.jpg\", id:\"jpg\"},\n\t *          {src:\"test.mp3\", id:\"mp3\"}\n\t *      ]);\n\t *      queue.remove(\"png\"); // Single item by ID\n\t *      queue.remove(\"png\", \"test.jpg\"); // Items as arguments. Mixed id and src.\n\t *      queue.remove([\"test.png\", \"jpg\"]); // Items in an Array. Mixed id and src.\n\t *\n\t * @method remove\n\t * @param {String | Array} idsOrUrls* The id or ids to remove from this queue. You can pass an item, an array of\n\t * items, or multiple items as arguments.\n\t * @since 0.3.0\n\t */\n\tp.remove = function (idsOrUrls) {\n\t\tvar args = null;\n\n\t\tif (idsOrUrls && !Array.isArray(idsOrUrls)) {\n\t\t\targs = [idsOrUrls];\n\t\t} else if (idsOrUrls) {\n\t\t\targs = idsOrUrls;\n\t\t} else if (arguments.length > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar itemsWereRemoved = false;\n\n\t\t// Destroy everything\n\t\tif (!args) {\n\t\t\tthis.close();\n\t\t\tfor (var n in this._loadItemsById) {\n\t\t\t\tthis._disposeItem(this._loadItemsById[n]);\n\t\t\t}\n\t\t\tthis.init(this.preferXHR, this._basePath);\n\n\t\t\t// Remove specific items\n\t\t} else {\n\t\t\twhile (args.length) {\n\t\t\t\tvar item = args.pop();\n\t\t\t\tvar r = this.getResult(item);\n\n\t\t\t\t//Remove from the main load Queue\n\t\t\t\tfor (i = this._loadQueue.length - 1; i >= 0; i--) {\n\t\t\t\t\tloadItem = this._loadQueue[i].getItem();\n\t\t\t\t\tif (loadItem.id == item || loadItem.src == item) {\n\t\t\t\t\t\tthis._loadQueue.splice(i, 1)[0].cancel();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t//Remove from the backup queue\n\t\t\t\tfor (i = this._loadQueueBackup.length - 1; i >= 0; i--) {\n\t\t\t\t\tloadItem = this._loadQueueBackup[i].getItem();\n\t\t\t\t\tif (loadItem.id == item || loadItem.src == item) {\n\t\t\t\t\t\tthis._loadQueueBackup.splice(i, 1)[0].cancel();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (r) {\n\t\t\t\t\tthis._disposeItem(this.getItem(item));\n\t\t\t\t} else {\n\t\t\t\t\tfor (var i = this._currentLoads.length - 1; i >= 0; i--) {\n\t\t\t\t\t\tvar loadItem = this._currentLoads[i].getItem();\n\t\t\t\t\t\tif (loadItem.id == item || loadItem.src == item) {\n\t\t\t\t\t\t\tthis._currentLoads.splice(i, 1)[0].cancel();\n\t\t\t\t\t\t\titemsWereRemoved = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If this was called during a load, try to load the next item.\n\t\t\tif (itemsWereRemoved) {\n\t\t\t\tthis._loadNext();\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Stops all open loads, destroys any loaded items, and resets the queue, so all items can\n\t * be reloaded again by calling {{#crossLink \"AbstractLoader/load\"}}{{/crossLink}}. Items are not removed from the\n\t * queue. To remove items use the {{#crossLink \"LoadQueue/remove\"}}{{/crossLink}} or\n\t * {{#crossLink \"LoadQueue/removeAll\"}}{{/crossLink}} method.\n\t * @method reset\n\t * @since 0.3.0\n\t */\n\tp.reset = function () {\n\t\tthis.close();\n\t\tfor (var n in this._loadItemsById) {\n\t\t\tthis._disposeItem(this._loadItemsById[n]);\n\t\t}\n\n\t\t//Reset the queue to its start state\n\t\tvar a = [];\n\t\tfor (var i = 0, l = this._loadQueueBackup.length; i < l; i++) {\n\t\t\ta.push(this._loadQueueBackup[i].getItem());\n\t\t}\n\n\t\tthis.loadManifest(a, false);\n\t};\n\n\t/**\n\t * Register a plugin. Plugins can map to load types (sound, image, etc), or specific extensions (png, mp3, etc).\n\t * Currently, only one plugin can exist per type/extension.\n\t *\n\t * When a plugin is installed, a <code>getPreloadHandlers()</code> method will be called on it. For more information\n\t * on this method, check out the {{#crossLink \"SamplePlugin/getPreloadHandlers\"}}{{/crossLink}} method in the\n\t * {{#crossLink \"SamplePlugin\"}}{{/crossLink}} class.\n\t *\n\t * Before a file is loaded, a matching plugin has an opportunity to modify the load. If a `callback` is returned\n\t * from the {{#crossLink \"SamplePlugin/getPreloadHandlers\"}}{{/crossLink}} method, it will be invoked first, and its\n\t * result may cancel or modify the item. The callback method can also return a `completeHandler` to be fired when\n\t * the file is loaded, or a `tag` object, which will manage the actual download. For more information on these\n\t * methods, check out the {{#crossLink \"SamplePlugin/preloadHandler\"}}{{/crossLink}} and {{#crossLink \"SamplePlugin/fileLoadHandler\"}}{{/crossLink}}\n\t * methods on the {{#crossLink \"SamplePlugin\"}}{{/crossLink}}.\n\t *\n\t * @method installPlugin\n\t * @param {Function} plugin The plugin class to install.\n\t */\n\tp.installPlugin = function (plugin) {\n\t\tif (plugin == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (plugin.getPreloadHandlers != null) {\n\t\t\tthis._plugins.push(plugin);\n\t\t\tvar map = plugin.getPreloadHandlers();\n\t\t\tmap.scope = plugin;\n\n\t\t\tif (map.types != null) {\n\t\t\t\tfor (var i = 0, l = map.types.length; i < l; i++) {\n\t\t\t\t\tthis._typeCallbacks[map.types[i]] = map;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (map.extensions != null) {\n\t\t\t\tfor (i = 0, l = map.extensions.length; i < l; i++) {\n\t\t\t\t\tthis._extensionCallbacks[map.extensions[i]] = map;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Set the maximum number of concurrent connections. Note that browsers and servers may have a built-in maximum\n\t * number of open connections, so any additional connections may remain in a pending state until the browser\n\t * opens the connection. When loading scripts using tags, and when {{#crossLink \"LoadQueue/maintainScriptOrder:property\"}}{{/crossLink}}\n\t * is `true`, only one script is loaded at a time due to browser limitations.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var queue = new createjs.LoadQueue();\n\t *      queue.setMaxConnections(10); // Allow 10 concurrent loads\n\t *\n\t * @method setMaxConnections\n\t * @param {Number} value The number of concurrent loads to allow. By default, only a single connection per LoadQueue\n\t * is open at any time.\n\t */\n\tp.setMaxConnections = function (value) {\n\t\tthis._maxConnections = value;\n\t\tif (!this._paused && this._loadQueue.length > 0) {\n\t\t\tthis._loadNext();\n\t\t}\n\t};\n\n\t/**\n\t * Load a single file. To add multiple files at once, use the {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}\n\t * method.\n\t *\n\t * Files are always appended to the current queue, so this method can be used multiple times to add files.\n\t * To clear the queue first, use the {{#crossLink \"AbstractLoader/close\"}}{{/crossLink}} method.\n\t * @method loadFile\n\t * @param {LoadItem|Object|String} file The file object or path to load. A file can be either\n\t * <ul>\n\t *     <li>A {{#crossLink \"LoadItem\"}}{{/crossLink}} instance</li>\n\t *     <li>An object containing properties defined by {{#crossLink \"LoadItem\"}}{{/crossLink}}</li>\n\t *     <li>OR A string path to a resource. Note that this kind of load item will be converted to a {{#crossLink \"LoadItem\"}}{{/crossLink}}\n\t *     in the background.</li>\n\t * </ul>\n\t * @param {Boolean} [loadNow=true] Kick off an immediate load (true) or wait for a load call (false). The default\n\t * value is true. If the queue is paused using {{#crossLink \"LoadQueue/setPaused\"}}{{/crossLink}}, and the value is\n\t * `true`, the queue will resume automatically.\n\t * @param {String} [basePath] A base path that will be prepended to each file. The basePath argument overrides the\n\t * path specified in the constructor. Note that if you load a manifest using a file of type {{#crossLink \"Types/MANIFEST:property\"}}{{/crossLink}},\n\t * its files will <strong>NOT</strong> use the basePath parameter. <strong>The basePath parameter is deprecated.</strong>\n\t * This parameter will be removed in a future version. Please either use the `basePath` parameter in the LoadQueue\n\t * constructor, or a `path` property in a manifest definition.\n\t */\n\tp.loadFile = function (file, loadNow, basePath) {\n\t\tif (file == null) {\n\t\t\tvar event = new createjs.ErrorEvent(\"PRELOAD_NO_FILE\");\n\t\t\tthis._sendError(event);\n\t\t\treturn;\n\t\t}\n\t\tthis._addItem(file, null, basePath);\n\n\t\tif (loadNow !== false) {\n\t\t\tthis.setPaused(false);\n\t\t} else {\n\t\t\tthis.setPaused(true);\n\t\t}\n\t};\n\n\t/**\n\t * Load an array of files. To load a single file, use the {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}} method.\n\t * The files in the manifest are requested in the same order, but may complete in a different order if the max\n\t * connections are set above 1 using {{#crossLink \"LoadQueue/setMaxConnections\"}}{{/crossLink}}. Scripts will load\n\t * in the right order as long as {{#crossLink \"LoadQueue/maintainScriptOrder\"}}{{/crossLink}} is true (which is\n\t * default).\n\t *\n\t * Files are always appended to the current queue, so this method can be used multiple times to add files.\n\t * To clear the queue first, use the {{#crossLink \"AbstractLoader/close\"}}{{/crossLink}} method.\n\t * @method loadManifest\n\t * @param {Array|String|Object} manifest An list of files to load. The loadManifest call supports four types of\n\t * manifests:\n\t * <ol>\n\t *     <li>A string path, which points to a manifest file, which is a JSON file that contains a \"manifest\" property,\n\t *     which defines the list of files to load, and can optionally contain a \"path\" property, which will be\n\t *     prepended to each file in the list.</li>\n\t *     <li>An object which defines a \"src\", which is a JSON or JSONP file. A \"callback\" can be defined for JSONP\n\t *     file. The JSON/JSONP file should contain a \"manifest\" property, which defines the list of files to load,\n\t *     and can optionally contain a \"path\" property, which will be prepended to each file in the list.</li>\n\t *     <li>An object which contains a \"manifest\" property, which defines the list of files to load, and can\n\t *     optionally contain a \"path\" property, which will be prepended to each file in the list.</li>\n\t *     <li>An Array of files to load.</li>\n\t * </ol>\n\t *\n\t * Each \"file\" in a manifest can be either:\n\t * <ul>\n\t *     <li>A {{#crossLink \"LoadItem\"}}{{/crossLink}} instance</li>\n\t *     <li>An object containing properties defined by {{#crossLink \"LoadItem\"}}{{/crossLink}}</li>\n\t *     <li>OR A string path to a resource. Note that this kind of load item will be converted to a {{#crossLink \"LoadItem\"}}{{/crossLink}}\n\t *     in the background.</li>\n\t * </ul>\n\t *\n\t * @param {Boolean} [loadNow=true] Kick off an immediate load (true) or wait for a load call (false). The default\n\t * value is true. If the queue is paused using {{#crossLink \"LoadQueue/setPaused\"}}{{/crossLink}} and this value is\n\t * `true`, the queue will resume automatically.\n\t * @param {String} [basePath] A base path that will be prepended to each file. The basePath argument overrides the\n\t * path specified in the constructor. Note that if you load a manifest using a file of type {{#crossLink \"LoadQueue/MANIFEST:property\"}}{{/crossLink}},\n\t * its files will <strong>NOT</strong> use the basePath parameter. <strong>The basePath parameter is deprecated.</strong>\n\t * This parameter will be removed in a future version. Please either use the `basePath` parameter in the LoadQueue\n\t * constructor, or a `path` property in a manifest definition.\n\t */\n\tp.loadManifest = function (manifest, loadNow, basePath) {\n\t\tvar fileList = null;\n\t\tvar path = null;\n\n\t\t// Array-based list of items\n\t\tif (Array.isArray(manifest)) {\n\t\t\tif (manifest.length == 0) {\n\t\t\t\tvar event = new createjs.ErrorEvent(\"PRELOAD_MANIFEST_EMPTY\");\n\t\t\t\tthis._sendError(event);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfileList = manifest;\n\n\t\t\t// String-based. Only file manifests can be specified this way. Any other types will cause an error when loaded.\n\t\t} else if (typeof(manifest) === \"string\") {\n\t\t\tfileList = [\n\t\t\t\t{\n\t\t\t\t\tsrc: manifest,\n\t\t\t\t\ttype: s.MANIFEST\n\t\t\t\t}\n\t\t\t];\n\n\t\t} else if (typeof(manifest) == \"object\") {\n\n\t\t\t// An object that defines a manifest path\n\t\t\tif (manifest.src !== undefined) {\n\t\t\t\tif (manifest.type == null) {\n\t\t\t\t\tmanifest.type = s.MANIFEST;\n\t\t\t\t} else if (manifest.type != s.MANIFEST) {\n\t\t\t\t\tvar event = new createjs.ErrorEvent(\"PRELOAD_MANIFEST_TYPE\");\n\t\t\t\t\tthis._sendError(event);\n\t\t\t\t}\n\t\t\t\tfileList = [manifest];\n\n\t\t\t\t// An object that defines a manifest\n\t\t\t} else if (manifest.manifest !== undefined) {\n\t\t\t\tfileList = manifest.manifest;\n\t\t\t\tpath = manifest.path;\n\t\t\t}\n\n\t\t\t// Unsupported. This will throw an error.\n\t\t} else {\n\t\t\tvar event = new createjs.ErrorEvent(\"PRELOAD_MANIFEST_NULL\");\n\t\t\tthis._sendError(event);\n\t\t\treturn;\n\t\t}\n\n\t\tfor (var i = 0, l = fileList.length; i < l; i++) {\n\t\t\tthis._addItem(fileList[i], path, basePath);\n\t\t}\n\n\t\tif (loadNow !== false) {\n\t\t\tthis.setPaused(false);\n\t\t} else {\n\t\t\tthis.setPaused(true);\n\t\t}\n\n\t};\n\n\t/**\n\t * Start a LoadQueue that was created, but not automatically started.\n\t * @method load\n\t */\n\tp.load = function () {\n\t\tthis.setPaused(false);\n\t};\n\n\t/**\n\t * Look up a {{#crossLink \"LoadItem\"}}{{/crossLink}} using either the \"id\" or \"src\" that was specified when loading it. Note that if no \"id\" was\n\t * supplied with the load item, the ID will be the \"src\", including a `path` property defined by a manifest. The\n\t * `basePath` will not be part of the ID.\n\t * @method getItem\n\t * @param {String} value The <code>id</code> or <code>src</code> of the load item.\n\t * @return {Object} The load item that was initially requested using {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}}\n\t * or {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}. This object is also returned via the {{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}}\n\t * event as the `item` parameter.\n\t */\n\tp.getItem = function (value) {\n\t\treturn this._loadItemsById[value] || this._loadItemsBySrc[value];\n\t};\n\n\t/**\n\t * Look up a loaded result using either the \"id\" or \"src\" that was specified when loading it. Note that if no \"id\"\n\t * was supplied with the load item, the ID will be the \"src\", including a `path` property defined by a manifest. The\n\t * `basePath` will not be part of the ID.\n\t * @method getResult\n\t * @param {String} value The <code>id</code> or <code>src</code> of the load item.\n\t * @param {Boolean} [rawResult=false] Return a raw result instead of a formatted result. This applies to content\n\t * loaded via XHR such as scripts, XML, CSS, and Images. If there is no raw result, the formatted result will be\n\t * returned instead.\n\t * @return {Object} A result object containing the content that was loaded, such as:\n\t * <ul>\n\t *      <li>An image tag (&lt;image /&gt;) for images</li>\n\t *      <li>A script tag for JavaScript (&lt;script /&gt;). Note that scripts are automatically added to the HTML\n\t *      DOM.</li>\n\t *      <li>A style tag for CSS (&lt;style /&gt; or &lt;link &gt;)</li>\n\t *      <li>Raw text for TEXT</li>\n\t *      <li>A formatted JavaScript object defined by JSON</li>\n\t *      <li>An XML document</li>\n\t *      <li>A binary arraybuffer loaded by XHR</li>\n\t *      <li>An audio tag (&lt;audio &gt;) for HTML audio. Note that it is recommended to use SoundJS APIs to play\n\t *      loaded audio. Specifically, audio loaded by Flash and WebAudio will return a loader object using this method\n\t *      which can not be used to play audio back.</li>\n\t * </ul>\n\t * This object is also returned via the {{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}} event as the 'item`\n\t * parameter. Note that if a raw result is requested, but not found, the result will be returned instead.\n\t */\n\tp.getResult = function (value, rawResult) {\n\t\tvar item = this._loadItemsById[value] || this._loadItemsBySrc[value];\n\t\tif (item == null) {\n\t\t\treturn null;\n\t\t}\n\t\tvar id = item.id;\n\t\tif (rawResult && this._loadedRawResults[id]) {\n\t\t\treturn this._loadedRawResults[id];\n\t\t}\n\t\treturn this._loadedResults[id];\n\t};\n\n\t/**\n\t * Generate an list of items loaded by this queue.\n\t * @method getItems\n\t * @param {Boolean} loaded Determines if only items that have been loaded should be returned. If false, in-progress\n\t * and failed load items will also be included.\n\t * @returns {Array} A list of objects that have been loaded. Each item includes the {{#crossLink \"LoadItem\"}}{{/crossLink}},\n\t * result, and rawResult.\n\t * @since 0.6.0\n\t */\n\tp.getItems = function (loaded) {\n\t\tvar arr = [];\n\t\tfor (var n in this._loadItemsById) {\n\t\t\tvar item = this._loadItemsById[n];\n\t\t\tvar result = this.getResult(n);\n\t\t\tif (loaded === true && result == null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tarr.push({\n\t\t\t\titem: item,\n\t\t\t\tresult: result,\n\t\t\t\trawResult: this.getResult(n, true)\n\t\t\t});\n\t\t}\n\t\treturn arr;\n\t};\n\n\t/**\n\t * Pause or resume the current load. Active loads will not be cancelled, but the next items in the queue will not\n\t * be processed when active loads complete. LoadQueues are not paused by default.\n\t *\n\t * Note that if new items are added to the queue using {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}} or\n\t * {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}, a paused queue will be resumed, unless the `loadNow`\n\t * argument is `false`.\n\t * @method setPaused\n\t * @param {Boolean} value Whether the queue should be paused or not.\n\t */\n\tp.setPaused = function (value) {\n\t\tthis._paused = value;\n\t\tif (!this._paused) {\n\t\t\tthis._loadNext();\n\t\t}\n\t};\n\n\t/**\n\t * Close the active queue. Closing a queue completely empties the queue, and prevents any remaining items from\n\t * starting to download. Note that currently any active loads will remain open, and events may be processed.\n\t *\n\t * To stop and restart a queue, use the {{#crossLink \"LoadQueue/setPaused\"}}{{/crossLink}} method instead.\n\t * @method close\n\t */\n\tp.close = function () {\n\t\twhile (this._currentLoads.length) {\n\t\t\tthis._currentLoads.pop().cancel();\n\t\t}\n\t\tthis._scriptOrder.length = 0;\n\t\tthis._loadedScripts.length = 0;\n\t\tthis.loadStartWasDispatched = false;\n\t\tthis._itemCount = 0;\n\t\tthis._lastProgress = NaN;\n\t};\n\n// protected methods\n\t/**\n\t * Add an item to the queue. Items are formatted into a usable object containing all the properties necessary to\n\t * load the content. The load queue is populated with the loader instance that handles preloading, and not the load\n\t * item that was passed in by the user. To look up the load item by id or src, use the {{#crossLink \"LoadQueue.getItem\"}}{{/crossLink}}\n\t * method.\n\t * @method _addItem\n\t * @param {String|Object} value The item to add to the queue.\n\t * @param {String} [path] An optional path prepended to the `src`. The path will only be prepended if the src is\n\t * relative, and does not start with a protocol such as `http://`, or a path like `../`. If the LoadQueue was\n\t * provided a {{#crossLink \"_basePath\"}}{{/crossLink}}, then it will optionally be prepended after.\n\t * @param {String} [basePath] <strong>Deprecated</strong>An optional basePath passed into a {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}\n\t * or {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}} call. This parameter will be removed in a future tagged\n\t * version.\n\t * @private\n\t */\n\tp._addItem = function (value, path, basePath) {\n\t\tvar item = this._createLoadItem(value, path, basePath); // basePath and manifest path are added to the src.\n\t\tif (item == null) {\n\t\t\treturn;\n\t\t} // Sometimes plugins or types should be skipped.\n\t\tvar loader = this._createLoader(item);\n\t\tif (loader != null) {\n\t\t\tif (\"plugins\" in loader) {\n\t\t\t\tloader.plugins = this._plugins;\n\t\t\t}\n\t\t\titem._loader = loader;\n\t\t\tthis._loadQueue.push(loader);\n\t\t\tthis._loadQueueBackup.push(loader);\n\n\t\t\tthis._numItems++;\n\t\t\tthis._updateProgress();\n\n\t\t\t// Only worry about script order when using XHR to load scripts. Tags are only loading one at a time.\n\t\t\tif ((this.maintainScriptOrder\n\t\t\t\t\t&& item.type == createjs.Types.JAVASCRIPT\n\t\t\t\t\t\t//&& loader instanceof createjs.XHRLoader //NOTE: Have to track all JS files this way\n\t\t\t\t\t)\n\t\t\t\t\t|| item.maintainOrder === true) {\n\t\t\t\tthis._scriptOrder.push(item);\n\t\t\t\tthis._loadedScripts.push(null);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Create a refined {{#crossLink \"LoadItem\"}}{{/crossLink}}, which contains all the required properties. The type of\n\t * item is determined by browser support, requirements based on the file type, and developer settings. For example,\n\t * XHR is only used for file types that support it in new browsers.\n\t *\n\t * Before the item is returned, any plugins registered to handle the type or extension will be fired, which may\n\t * alter the load item.\n\t * @method _createLoadItem\n\t * @param {String | Object | HTMLAudioElement | HTMLImageElement} value The item that needs to be preloaded.\n\t * @param {String} [path] A path to prepend to the item's source. Sources beginning with http:// or similar will\n\t * not receive a path. Since PreloadJS 0.4.1, the src will be modified to include the `path` and {{#crossLink \"LoadQueue/_basePath:property\"}}{{/crossLink}}\n\t * when it is added.\n\t * @param {String} [basePath] <strong>Deprectated</strong> A base path to prepend to the items source in addition to\n\t * the path argument.\n\t * @return {Object} The loader instance that will be used.\n\t * @private\n\t */\n\tp._createLoadItem = function (value, path, basePath) {\n\t\tvar item = createjs.LoadItem.create(value);\n\t\tif (item == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar bp = \"\"; // Store the generated basePath\n\t\tvar useBasePath = basePath || this._basePath;\n\n\t\tif (item.src instanceof Object) {\n\t\t\tif (!item.type) {\n\t\t\t\treturn null;\n\t\t\t} // the the src is an object, type is required to pass off to plugin\n\t\t\tif (path) {\n\t\t\t\tbp = path;\n\t\t\t\tvar pathMatch = createjs.URLUtils.parseURI(path);\n\t\t\t\t// Also append basePath\n\t\t\t\tif (useBasePath != null && !pathMatch.absolute && !pathMatch.relative) {\n\t\t\t\t\tbp = useBasePath + bp;\n\t\t\t\t}\n\t\t\t} else if (useBasePath != null) {\n\t\t\t\tbp = useBasePath;\n\t\t\t}\n\t\t} else {\n\t\t\t// Determine Extension, etc.\n\t\t\tvar match = createjs.URLUtils.parseURI(item.src);\n\t\t\tif (match.extension) {\n\t\t\t\titem.ext = match.extension;\n\t\t\t}\n\t\t\tif (item.type == null) {\n\t\t\t\titem.type = createjs.RequestUtils.getTypeByExtension(item.ext);\n\t\t\t}\n\n\t\t\t// Inject path & basePath\n\t\t\tvar autoId = item.src;\n\t\t\tif (!match.absolute && !match.relative) {\n\t\t\t\tif (path) {\n\t\t\t\t\tbp = path;\n\t\t\t\t\tvar pathMatch = createjs.URLUtils.parseURI(path);\n\t\t\t\t\tautoId = path + autoId;\n\t\t\t\t\t// Also append basePath\n\t\t\t\t\tif (useBasePath != null && !pathMatch.absolute && !pathMatch.relative) {\n\t\t\t\t\t\tbp = useBasePath + bp;\n\t\t\t\t\t}\n\t\t\t\t} else if (useBasePath != null) {\n\t\t\t\t\tbp = useBasePath;\n\t\t\t\t}\n\t\t\t}\n\t\t\titem.src = bp + item.src;\n\t\t}\n\t\titem.path = bp;\n\n\t\t// If there's no id, set one now.\n\t\tif (item.id === undefined || item.id === null || item.id === \"\") {\n\t\t\titem.id = autoId;\n\t\t}\n\n\t\t// Give plugins a chance to modify the loadItem:\n\t\tvar customHandler = this._typeCallbacks[item.type] || this._extensionCallbacks[item.ext];\n\t\tif (customHandler) {\n\t\t\t// Plugins are now passed both the full source, as well as a combined path+basePath (appropriately)\n\t\t\tvar result = customHandler.callback.call(customHandler.scope, item, this);\n\n\t\t\t// The plugin will handle the load, or has canceled it. Ignore it.\n\t\t\tif (result === false) {\n\t\t\t\treturn null;\n\n\t\t\t\t// Load as normal:\n\t\t\t} else if (result === true) {\n\t\t\t\t// Do Nothing\n\n\t\t\t\t// Result is a loader class:\n\t\t\t} else if (result != null) {\n\t\t\t\titem._loader = result;\n\t\t\t}\n\n\t\t\t// Update the extension in case the type changed:\n\t\t\tmatch = createjs.URLUtils.parseURI(item.src);\n\t\t\tif (match.extension != null) {\n\t\t\t\titem.ext = match.extension;\n\t\t\t}\n\t\t}\n\n\t\t// Store the item for lookup. This also helps clean-up later.\n\t\tthis._loadItemsById[item.id] = item;\n\t\tthis._loadItemsBySrc[item.src] = item;\n\n\t\tif (item.crossOrigin == null) {\n\t\t\titem.crossOrigin = this._crossOrigin;\n\t\t}\n\n\t\treturn item;\n\t};\n\n\t/**\n\t * Create a loader for a load item.\n\t * @method _createLoader\n\t * @param {Object} item A formatted load item that can be used to generate a loader.\n\t * @return {AbstractLoader} A loader that can be used to load content.\n\t * @private\n\t */\n\tp._createLoader = function (item) {\n\t\tif (item._loader != null) { // A plugin already specified a loader\n\t\t\treturn item._loader;\n\t\t}\n\n\t\t// Initially, try and use the provided/supported XHR mode:\n\t\tvar preferXHR = this.preferXHR;\n\n\t\tfor (var i = 0; i < this._availableLoaders.length; i++) {\n\t\t\tvar loader = this._availableLoaders[i];\n\t\t\tif (loader && loader.canLoadItem(item)) {\n\t\t\t\treturn new loader(item, preferXHR);\n\t\t\t}\n\t\t}\n\n\t\t// TODO: Log error (requires createjs.log)\n\t\treturn null;\n\t};\n\n\t/**\n\t * Load the next item in the queue. If the queue is empty (all items have been loaded), then the complete event\n\t * is processed. The queue will \"fill up\" any empty slots, up to the max connection specified using\n\t * {{#crossLink \"LoadQueue.setMaxConnections\"}}{{/crossLink}} method. The only exception is scripts that are loaded\n\t * using tags, which have to be loaded one at a time to maintain load order.\n\t * @method _loadNext\n\t * @private\n\t */\n\tp._loadNext = function () {\n\t\tif (this._paused) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Only dispatch loadstart event when the first file is loaded.\n\t\tif (!this._loadStartWasDispatched) {\n\t\t\tthis._sendLoadStart();\n\t\t\tthis._loadStartWasDispatched = true;\n\t\t}\n\n\t\t// The queue has completed.\n\t\tif (this._numItems == this._numItemsLoaded) {\n\t\t\tthis.loaded = true;\n\t\t\tthis._sendComplete();\n\n\t\t\t// Load the next queue, if it has been defined.\n\t\t\tif (this.next && this.next.load) {\n\t\t\t\tthis.next.load();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.loaded = false;\n\t\t}\n\n\t\t// Must iterate forwards to load in the right order.\n\t\tfor (var i = 0; i < this._loadQueue.length; i++) {\n\t\t\tif (this._currentLoads.length >= this._maxConnections) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar loader = this._loadQueue[i];\n\n\t\t\t// Determine if we should be only loading one tag-script at a time:\n\t\t\t// Note: maintainOrder items don't do anything here because we can hold onto their loaded value\n\t\t\tif (!this._canStartLoad(loader)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis._loadQueue.splice(i, 1);\n\t\t\ti--;\n\t\t\tthis._loadItem(loader);\n\t\t}\n\t};\n\n\t/**\n\t * Begin loading an item. Event listeners are not added to the loaders until the load starts.\n\t * @method _loadItem\n\t * @param {AbstractLoader} loader The loader instance to start. Currently, this will be an XHRLoader or TagLoader.\n\t * @private\n\t */\n\tp._loadItem = function (loader) {\n\t\tloader.on(\"fileload\", this._handleFileLoad, this);\n\t\tloader.on(\"progress\", this._handleProgress, this);\n\t\tloader.on(\"complete\", this._handleFileComplete, this);\n\t\tloader.on(\"error\", this._handleError, this);\n\t\tloader.on(\"fileerror\", this._handleFileError, this);\n\t\tthis._currentLoads.push(loader);\n\t\tthis._sendFileStart(loader.getItem());\n\t\tloader.load();\n\t};\n\n\t/**\n\t * The callback that is fired when a loader loads a file. This enables loaders like {{#crossLink \"ManifestLoader\"}}{{/crossLink}}\n\t * to maintain internal queues, but for this queue to dispatch the {{#crossLink \"fileload:event\"}}{{/crossLink}}\n\t * events.\n\t * @param {Event} event The {{#crossLink \"AbstractLoader/fileload:event\"}}{{/crossLink}} event from the loader.\n\t * @private\n\t * @since 0.6.0\n\t */\n\tp._handleFileLoad = function (event) {\n\t\tevent.target = null;\n\t\tthis.dispatchEvent(event);\n\t};\n\n\t/**\n\t * The callback that is fired when a loader encounters an error from an internal file load operation. This enables\n\t * loaders like M\n\t * @param event\n\t * @private\n\t */\n\tp._handleFileError = function (event) {\n\t\tvar newEvent = new createjs.ErrorEvent(\"FILE_LOAD_ERROR\", null, event.item);\n\t\tthis._sendError(newEvent);\n\t};\n\n\t/**\n\t * The callback that is fired when a loader encounters an error. The queue will continue loading unless {{#crossLink \"LoadQueue/stopOnError:property\"}}{{/crossLink}}\n\t * is set to `true`.\n\t * @method _handleError\n\t * @param {ErrorEvent} event The error event, containing relevant error information.\n\t * @private\n\t */\n\tp._handleError = function (event) {\n\t\tvar loader = event.target;\n\t\tthis._numItemsLoaded++;\n\n\t\tthis._finishOrderedItem(loader, true);\n\t\tthis._updateProgress();\n\n\t\tvar newEvent = new createjs.ErrorEvent(\"FILE_LOAD_ERROR\", null, loader.getItem());\n\t\t// TODO: Propagate actual error message.\n\n\t\tthis._sendError(newEvent);\n\n\t\tif (!this.stopOnError) {\n\t\t\tthis._removeLoadItem(loader);\n\t\t\tthis._cleanLoadItem(loader);\n\t\t\tthis._loadNext();\n\t\t} else {\n\t\t\tthis.setPaused(true);\n\t\t}\n\t};\n\n\t/**\n\t * An item has finished loading. We can assume that it is totally loaded, has been parsed for immediate use, and\n\t * is available as the \"result\" property on the load item. The raw text result for a parsed item (such as JSON, XML,\n\t * CSS, JavaScript, etc) is available as the \"rawResult\" property, and can also be looked up using {{#crossLink \"LoadQueue/getResult\"}}{{/crossLink}}.\n\t * @method _handleFileComplete\n\t * @param {Event} event The event object from the loader.\n\t * @private\n\t */\n\tp._handleFileComplete = function (event) {\n\t\tvar loader = event.target;\n\t\tvar item = loader.getItem();\n\n\t\tvar result = loader.getResult();\n\t\tthis._loadedResults[item.id] = result;\n\t\tvar rawResult = loader.getResult(true);\n\t\tif (rawResult != null && rawResult !== result) {\n\t\t\tthis._loadedRawResults[item.id] = rawResult;\n\t\t}\n\n\t\tthis._saveLoadedItems(loader);\n\n\t\t// Remove the load item\n\t\tthis._removeLoadItem(loader);\n\n\t\tif (!this._finishOrderedItem(loader)) {\n\t\t\t// The item was NOT managed, so process it now\n\t\t\tthis._processFinishedLoad(item, loader);\n\t\t}\n\n\t\t// Clean up the load item\n\t\tthis._cleanLoadItem(loader);\n\t};\n\n\t/**\n\t * Some loaders might load additional content, other than the item they were passed (such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}}).\n\t * Any items exposed by the loader using {{#crossLink \"AbstractLoader/getLoadItems\"}}{{/crossLink}} are added to the\n\t * LoadQueue's look-ups, including {{#crossLink \"getItem\"}}{{/crossLink}} and {{#crossLink \"getResult\"}}{{/crossLink}}\n\t * methods.\n\t * @method _saveLoadedItems\n\t * @param {AbstractLoader} loader\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp._saveLoadedItems = function (loader) {\n\t\t// TODO: Not sure how to handle this. Would be nice to expose the items.\n\t\t// Loaders may load sub-items. This adds them to this queue\n\t\tvar list = loader.getLoadedItems();\n\t\tif (list === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (var i = 0; i < list.length; i++) {\n\t\t\tvar item = list[i].item;\n\n\t\t\t// Store item lookups\n\t\t\tthis._loadItemsBySrc[item.src] = item;\n\t\t\tthis._loadItemsById[item.id] = item;\n\n\t\t\t// Store loaded content\n\t\t\tthis._loadedResults[item.id] = list[i].result;\n\t\t\tthis._loadedRawResults[item.id] = list[i].rawResult;\n\t\t}\n\t};\n\n\t/**\n\t * Flag an item as finished. If the item's order is being managed, then ensure that it is allowed to finish, and if\n\t * so, trigger prior items to trigger as well.\n\t * @method _finishOrderedItem\n\t * @param {AbstractLoader} loader\n\t * @param {Boolean} loadFailed\n\t * @return {Boolean} If the item's order is being managed. This allows the caller to take an alternate\n\t * behaviour if it is.\n\t * @private\n\t */\n\tp._finishOrderedItem = function (loader, loadFailed) {\n\t\tvar item = loader.getItem();\n\n\t\tif ((this.maintainScriptOrder && item.type == createjs.Types.JAVASCRIPT)\n\t\t\t\t|| item.maintainOrder) {\n\n\t\t\t//TODO: Evaluate removal of the _currentlyLoadingScript\n\t\t\tif (loader instanceof createjs.JavaScriptLoader) {\n\t\t\t\tthis._currentlyLoadingScript = false;\n\t\t\t}\n\n\t\t\tvar index = createjs.indexOf(this._scriptOrder, item);\n\t\t\tif (index == -1) {\n\t\t\t\treturn false;\n\t\t\t} // This loader no longer exists\n\t\t\tthis._loadedScripts[index] = (loadFailed === true) ? true : item;\n\n\t\t\tthis._checkScriptLoadOrder();\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t};\n\n\t/**\n\t * Ensure the scripts load and dispatch in the correct order. When using XHR, scripts are stored in an array in the\n\t * order they were added, but with a \"null\" value. When they are completed, the value is set to the load item,\n\t * and then when they are processed and dispatched, the value is set to `true`. This method simply\n\t * iterates the array, and ensures that any loaded items that are not preceded by a `null` value are\n\t * dispatched.\n\t * @method _checkScriptLoadOrder\n\t * @private\n\t */\n\tp._checkScriptLoadOrder = function () {\n\t\tvar l = this._loadedScripts.length;\n\n\t\tfor (var i = 0; i < l; i++) {\n\t\t\tvar item = this._loadedScripts[i];\n\t\t\tif (item === null) {\n\t\t\t\tbreak;\n\t\t\t} // This is still loading. Do not process further.\n\t\t\tif (item === true) {\n\t\t\t\tcontinue;\n\t\t\t} // This has completed, and been processed. Move on.\n\n\t\t\tvar loadItem = this._loadedResults[item.id];\n\t\t\tif (item.type == createjs.Types.JAVASCRIPT) {\n\t\t\t\t// Append script tags to the head automatically.\n\t\t\t\tcreatejs.DomUtils.appendToHead(loadItem);\n\t\t\t}\n\n\t\t\tvar loader = item._loader;\n\t\t\tthis._processFinishedLoad(item, loader);\n\t\t\tthis._loadedScripts[i] = true;\n\t\t}\n\t};\n\n\t/**\n\t * A file has completed loading, and the LoadQueue can move on. This triggers the complete event, and kick-starts\n\t * the next item.\n\t * @method _processFinishedLoad\n\t * @param {LoadItem|Object} item\n\t * @param {AbstractLoader} loader\n\t * @protected\n\t */\n\tp._processFinishedLoad = function (item, loader) {\n\t\tthis._numItemsLoaded++;\n\n\t\t// Since LoadQueue needs maintain order, we can't append scripts in the loader.\n\t\t// So we do it here instead. Or in _checkScriptLoadOrder();\n\t\tif (!this.maintainScriptOrder && item.type == createjs.Types.JAVASCRIPT) {\n\t\t\tvar tag = loader.getTag();\n\t\t\tcreatejs.DomUtils.appendToHead(tag);\n\t\t}\n\n\t\tthis._updateProgress();\n\t\tthis._sendFileComplete(item, loader);\n\t\tthis._loadNext();\n\t};\n\n\t/**\n\t * Ensure items with `maintainOrder=true` that are before the specified item have loaded. This only applies to\n\t * JavaScript items that are being loaded with a TagLoader, since they have to be loaded and completed <strong>before</strong>\n\t * the script can even be started, since it exist in the DOM while loading.\n\t * @method _canStartLoad\n\t * @param {AbstractLoader} loader The loader for the item\n\t * @return {Boolean} Whether the item can start a load or not.\n\t * @private\n\t */\n\tp._canStartLoad = function (loader) {\n\t\tif (!this.maintainScriptOrder || loader.preferXHR) {\n\t\t\treturn true;\n\t\t}\n\t\tvar item = loader.getItem();\n\t\tif (item.type != createjs.Types.JAVASCRIPT) {\n\t\t\treturn true;\n\t\t}\n\t\tif (this._currentlyLoadingScript) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar index = this._scriptOrder.indexOf(item);\n\t\tvar i = 0;\n\t\twhile (i < index) {\n\t\t\tvar checkItem = this._loadedScripts[i];\n\t\t\tif (checkItem == null) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\tthis._currentlyLoadingScript = true;\n\t\treturn true;\n\t};\n\n\t/**\n\t * A load item is completed or was canceled, and needs to be removed from the LoadQueue.\n\t * @method _removeLoadItem\n\t * @param {AbstractLoader} loader A loader instance to remove.\n\t * @private\n\t */\n\tp._removeLoadItem = function (loader) {\n\t\tvar l = this._currentLoads.length;\n\t\tfor (var i = 0; i < l; i++) {\n\t\t\tif (this._currentLoads[i] == loader) {\n\t\t\t\tthis._currentLoads.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Remove unneeded references from a loader.\n\t *\n\t * @param loader\n\t * @private\n\t */\n\tp._cleanLoadItem = function(loader) {\n\t\tvar item = loader.getItem();\n\t\tif (item) {\n\t\t\tdelete item._loader;\n\t\t}\n\t}\n\n\t/**\n\t * An item has dispatched progress. Propagate that progress, and update the LoadQueue's overall progress.\n\t * @method _handleProgress\n\t * @param {ProgressEvent} event The progress event from the item.\n\t * @private\n\t */\n\tp._handleProgress = function (event) {\n\t\tvar loader = event.target;\n\t\tthis._sendFileProgress(loader.getItem(), loader.progress);\n\t\tthis._updateProgress();\n\t};\n\n\t/**\n\t * Overall progress has changed, so determine the new progress amount and dispatch it. This changes any time an\n\t * item dispatches progress or completes. Note that since we don't always know the actual filesize of items before\n\t * they are loaded. In this case, we define a \"slot\" for each item (1 item in 10 would get 10%), and then append\n\t * loaded progress on top of the already-loaded items.\n\t *\n\t * For example, if 5/10 items have loaded, and item 6 is 20% loaded, the total progress would be:\n\t * <ul>\n\t *      <li>5/10 of the items in the queue (50%)</li>\n\t *      <li>plus 20% of item 6's slot (2%)</li>\n\t *      <li>equals 52%</li>\n\t * </ul>\n\t * @method _updateProgress\n\t * @private\n\t */\n\tp._updateProgress = function () {\n\t\tvar loaded = this._numItemsLoaded / this._numItems; // Fully Loaded Progress\n\t\tvar remaining = this._numItems - this._numItemsLoaded;\n\t\tif (remaining > 0) {\n\t\t\tvar chunk = 0;\n\t\t\tfor (var i = 0, l = this._currentLoads.length; i < l; i++) {\n\t\t\t\tchunk += this._currentLoads[i].progress;\n\t\t\t}\n\t\t\tloaded += (chunk / remaining) * (remaining / this._numItems);\n\t\t}\n\n\t\tif (this._lastProgress != loaded) {\n\t\t\tthis._sendProgress(loaded);\n\t\t\tthis._lastProgress = loaded;\n\t\t}\n\t};\n\n\t/**\n\t * Clean out item results, to free them from memory. Mainly, the loaded item and results are cleared from internal\n\t * hashes.\n\t * @method _disposeItem\n\t * @param {LoadItem|Object} item The item that was passed in for preloading.\n\t * @private\n\t */\n\tp._disposeItem = function (item) {\n\t\tdelete this._loadedResults[item.id];\n\t\tdelete this._loadedRawResults[item.id];\n\t\tdelete this._loadItemsById[item.id];\n\t\tdelete this._loadItemsBySrc[item.src];\n\t};\n\n\t/**\n\t * Dispatch a \"fileprogress\" {{#crossLink \"Event\"}}{{/crossLink}}. Please see the LoadQueue {{#crossLink \"LoadQueue/fileprogress:event\"}}{{/crossLink}}\n\t * event for details on the event payload.\n\t * @method _sendFileProgress\n\t * @param {LoadItem|Object} item The item that is being loaded.\n\t * @param {Number} progress The amount the item has been loaded (between 0 and 1).\n\t * @protected\n\t */\n\tp._sendFileProgress = function (item, progress) {\n\t\tif (this._isCanceled() || this._paused) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this.hasEventListener(\"fileprogress\")) {\n\t\t\treturn;\n\t\t}\n\n\t\t//LM: Rework ProgressEvent to support this?\n\t\tvar event = new createjs.Event(\"fileprogress\");\n\t\tevent.progress = progress;\n\t\tevent.loaded = progress;\n\t\tevent.total = 1;\n\t\tevent.item = item;\n\n\t\tthis.dispatchEvent(event);\n\t};\n\n\t/**\n\t * Dispatch a fileload {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}} event for\n\t * details on the event payload.\n\t * @method _sendFileComplete\n\t * @param {LoadItemObject} item The item that is being loaded.\n\t * @param {AbstractLoader} loader\n\t * @protected\n\t */\n\tp._sendFileComplete = function (item, loader) {\n\t\tif (this._isCanceled() || this._paused) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar event = new createjs.Event(\"fileload\");\n\t\tevent.loader = loader;\n\t\tevent.item = item;\n\t\tevent.result = this._loadedResults[item.id];\n\t\tevent.rawResult = this._loadedRawResults[item.id];\n\n\t\t// This calls a handler specified on the actual load item. Currently, the SoundJS plugin uses this.\n\t\tif (item.completeHandler) {\n\t\t\titem.completeHandler(event);\n\t\t}\n\n\t\tthis.hasEventListener(\"fileload\") && this.dispatchEvent(event);\n\t};\n\n\t/**\n\t * Dispatch a filestart {{#crossLink \"Event\"}}{{/crossLink}} immediately before a file starts to load. Please see\n\t * the {{#crossLink \"LoadQueue/filestart:event\"}}{{/crossLink}} event for details on the event payload.\n\t * @method _sendFileStart\n\t * @param {LoadItem|Object} item The item that is being loaded.\n\t * @protected\n\t */\n\tp._sendFileStart = function (item) {\n\t\tvar event = new createjs.Event(\"filestart\");\n\t\tevent.item = item;\n\t\tthis.hasEventListener(\"filestart\") && this.dispatchEvent(event);\n\t};\n\n\tp.toString = function () {\n\t\treturn \"[PreloadJS LoadQueue]\";\n\t};\n\n\tcreatejs.LoadQueue = createjs.promote(LoadQueue, \"AbstractLoader\");\n}());\n\n//##############################################################################\n// TextLoader.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * A loader for Text files.\n\t * @class TextLoader\n\t * @param {LoadItem|Object} loadItem\n\t * @extends AbstractLoader\n\t * @constructor\n\t */\n\tfunction TextLoader(loadItem) {\n\t\tthis.AbstractLoader_constructor(loadItem, true, createjs.Types.TEXT);\n\t};\n\n\tvar p = createjs.extend(TextLoader, createjs.AbstractLoader);\n\tvar s = TextLoader;\n\n\t// static methods\n\t/**\n\t * Determines if the loader can load a specific item. This loader loads items that are of type {{#crossLink \"Types/TEXT:property\"}}{{/crossLink}},\n\t * but is also the default loader if a file type can not be determined.\n\t * @method canLoadItem\n\t * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n\t * @returns {Boolean} Whether the loader can load the item.\n\t * @static\n\t */\n\ts.canLoadItem = function (item) {\n\t\treturn item.type == createjs.Types.TEXT;\n\t};\n\n\tcreatejs.TextLoader = createjs.promote(TextLoader, \"AbstractLoader\");\n\n}());\n\n//##############################################################################\n// BinaryLoader.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * A loader for binary files. This is useful for loading web audio, or content that requires an ArrayBuffer.\n\t * @class BinaryLoader\n\t * @param {LoadItem|Object} loadItem\n\t * @extends AbstractLoader\n\t * @constructor\n\t */\n\tfunction BinaryLoader(loadItem) {\n\t\tthis.AbstractLoader_constructor(loadItem, true, createjs.Types.BINARY);\n\t\tthis.on(\"initialize\", this._updateXHR, this);\n\t};\n\n\tvar p = createjs.extend(BinaryLoader, createjs.AbstractLoader);\n\tvar s = BinaryLoader;\n\n\t// static methods\n\t/**\n\t * Determines if the loader can load a specific item. This loader can only load items that are of type\n\t * {{#crossLink \"Types/BINARY:property\"}}{{/crossLink}}\n\t * @method canLoadItem\n\t * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n\t * @returns {Boolean} Whether the loader can load the item.\n\t * @static\n\t */\n\ts.canLoadItem = function (item) {\n\t\treturn item.type == createjs.Types.BINARY;\n\t};\n\n\t// private methods\n\t/**\n\t * Before the item loads, set the response type to \"arraybuffer\"\n\t * @property _updateXHR\n\t * @param {Event} event\n\t * @private\n\t */\n\tp._updateXHR = function (event) {\n\t\tevent.loader.setResponseType(\"arraybuffer\");\n\t};\n\n\tcreatejs.BinaryLoader = createjs.promote(BinaryLoader, \"AbstractLoader\");\n\n}());\n\n//##############################################################################\n// CSSLoader.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * A loader for CSS files.\n\t * @class CSSLoader\n\t * @param {LoadItem|Object} loadItem\n\t * @param {Boolean} preferXHR\n\t * @extends AbstractLoader\n\t * @constructor\n\t */\n\tfunction CSSLoader(loadItem, preferXHR) {\n\t\tthis.AbstractLoader_constructor(loadItem, preferXHR, createjs.Types.CSS);\n\n\t\t// public properties\n\t\tthis.resultFormatter = this._formatResult;\n\n\t\t// protected properties\n\t\tthis._tagSrcAttribute = \"href\";\n\n\t\tif (preferXHR) {\n\t\t\tthis._tag = createjs.Elements.style();\n\t\t} else {\n\t\t\tthis._tag = createjs.Elements.link();\n\t\t}\n\n\t\tthis._tag.rel = \"stylesheet\";\n\t\tthis._tag.type = \"text/css\";\n\t};\n\n\tvar p = createjs.extend(CSSLoader, createjs.AbstractLoader);\n\tvar s = CSSLoader;\n\n\t// static methods\n\t/**\n\t * Determines if the loader can load a specific item. This loader can only load items that are of type\n\t * {{#crossLink \"Types/CSS:property\"}}{{/crossLink}}.\n\t * @method canLoadItem\n\t * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n\t * @returns {Boolean} Whether the loader can load the item.\n\t * @static\n\t */\n\ts.canLoadItem = function (item) {\n\t\treturn item.type == createjs.Types.CSS;\n\t};\n\n\t// protected methods\n\t/**\n\t * The result formatter for CSS files.\n\t * @method _formatResult\n\t * @param {AbstractLoader} loader\n\t * @returns {HTMLLinkElement|HTMLStyleElement}\n\t * @private\n\t */\n\tp._formatResult = function (loader) {\n\t\tif (this._preferXHR) {\n\t\t\tvar tag = loader.getTag();\n\n\t\t\tif (tag.styleSheet) { // IE\n\t\t\t\ttag.styleSheet.cssText = loader.getResult(true);\n\t\t\t} else {\n\t\t\t\tvar textNode = createjs.Elements.text(loader.getResult(true));\n\t\t\t\ttag.appendChild(textNode);\n\t\t\t}\n\t\t} else {\n\t\t\ttag = this._tag;\n\t\t}\n\n\t\tcreatejs.DomUtils.appendToHead(tag);\n\n\t\treturn tag;\n\t};\n\n\tcreatejs.CSSLoader = createjs.promote(CSSLoader, \"AbstractLoader\");\n\n}());\n\n//##############################################################################\n// FontLoader.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n// constructor:\n\t/**\n\t * A loader that handles font files, CSS definitions, and CSS paths. FontLoader doesn't actually preload fonts\n\t * themselves, but rather generates CSS definitions, and then tests the size changes on an HTML5 Canvas element.\n\t *\n\t * Note that FontLoader does not support tag-based loading due to the requirement that CSS be read to determine the\n\t * font definitions to test for.\n\t * @class FontLoader\n\t * @param {LoadItem|object|string} loadItem The item to be loaded.\n\t * @extends AbstractLoader\n\t * @constructor\n\t **/\n\tfunction FontLoader(loadItem, preferXHR) {\n\t\tthis.AbstractLoader_constructor(loadItem, preferXHR, loadItem.type);\n\n\t\t// private properties:\n\t\t/**\n\t\t * A lookup of font faces to load.\n\t\t * @property _faces\n\t\t * @protected\n\t\t * @type Object\n\t\t **/\n\t\tthis._faces = {};\n\n\t\t/**\n\t\t * A list of font faces currently being \"watched\". Watched fonts will be tested on a regular interval, and be\n\t\t * removed from this list when they are complete.\n\t\t * @oroperty _watched\n\t\t * @type {Array}\n\t\t * @protected\n\t\t */\n\t\tthis._watched = [];\n\n\t\t/**\n\t\t * A count of the total font faces to load.\n\t\t * @property _count\n\t\t * @type {number}\n\t\t * @protected\n\t\t * @default 0\n\t\t */\n\t\tthis._count = 0;\n\n\t\t/**\n\t\t * The interval for checking if fonts have been loaded.\n\t\t * @property _watchInterval\n\t\t * @type {Number}\n\t\t * @protected\n\t\t */\n\t\tthis._watchInterval = null;\n\n\t\t/**\n\t\t * The timeout for determining if a font can't be loaded. Uses the LoadItem {{#crossLink \"LoadImte/timeout:property\"}}{{/crossLink}}\n\t\t * value.\n\t\t * @property _loadTimeout\n\t\t * @type {Number}\n\t\t * @protected\n\t\t */\n\t\tthis._loadTimeout = null;\n\t\t/**\n\t\t * Determines if generated CSS should be injected into the document.\n\t\t * @property _injectCSS\n\t\t * @type {boolean}\n\t\t * @protected\n\t\t */\n\t\tthis._injectCSS = (loadItem.injectCSS === undefined) ? true : loadItem.injectCSS;\n\n\t\tthis.dispatchEvent(\"initialize\");\n\t}\n\tvar p = createjs.extend(FontLoader, createjs.AbstractLoader);\n    \n    /**\n     * Determines if the loader can load a specific item. This loader can only load items that are of type\n     * {{#crossLink \"Types/FONT:property\"}}{{/crossLink}}.\n     * @method canLoadItem\n     * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n     * @returns {Boolean} Whether the loader can load the item.\n     * @static\n     */\n    FontLoader.canLoadItem = function (item) {\n        return item.type == createjs.Types.FONT || item.type == createjs.Types.FONTCSS;\n    };\n\n// static properties:\n\t/**\n\t * Sample text used by the FontLoader to determine if the font has been loaded. The sample text size is compared\n\t * to the loaded font size, and a change indicates that the font has completed.\n\t * @property sampleText\n\t * @type {String}\n\t * @default abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ\n\t * @static\n\t * @private\n\t */\n\tFontLoader.sampleText = \"abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\n\t/**\n\t * The canvas context used to test the font size. Note that this currently requires an HTML DOM.\n\t * @property _ctx\n\t * @type {CanvasRenderingContext2D}\n\t * @static\n\t * @private\n\t */\n\tFontLoader._ctx = document.createElement(\"canvas\").getContext(\"2d\"); // TODO: Consider a method to do this like EaselJS Stage has.\n\n\t/**\n\t * A list of reference fonts to test. Multiple faces are tested to address the rare case of a loaded font being the\n\t * exact same dimensions as the test font.\n\t * @property _referenceFonts\n\t * @type {Array}\n\t * @default [\"serif\", \"monospace\"]\n\t * @private\n\t */\n\tFontLoader._referenceFonts = [\"serif\",\"monospace\"];\n\n\t/**\n\t * A regular expression that pulls out possible style values from the font name.\n\t * <ul>\n\t *     <li>This includes font names that include thin, normal, book, regular, medium, black, and heavy (such as\n\t *     \"Arial Black\")</li>\n\t *     <li>Weight modifiers including extra, ultra, semi, demi, light, and bold (such as \"WorkSans SemiBold\")</li>\n\t * </ul>\n\t *\n\t * Weight descriptions map to font weight values by default using the following (from\n\t * http://www.w3.org/TR/css3-fonts/#font-weight-numeric-values):\n\t * <ul>\n\t *     <li>100 - Thin</li>\n\t * \t   <li>200 - Extra Light, Ultra Light</li>\n\t *     <li>300 - Light, Semi Light, Demi Light</li>\n\t *     <li>400 - Normal, Book, Regular</li>\n\t *     <li>500 - Medium</li>\n\t *     <li>600 - Semi Bold, Demi Bold</li>\n\t *     <li>700 - Bold</li>\n\t *     <li>800 - Extra Bold, Ultra Bold</li>\n\t *     <li>900 - Black, Heavy</li>\n\t * </ul>\n\t * @property WEIGHT_REGEX\n\t * @type {RegExp}\n\t * @static\n\t */\n\tFontLoader.WEIGHT_REGEX = /[- ._]*(thin|normal|book|regular|medium|black|heavy|[1-9]00|(?:extra|ultra|semi|demi)?[- ._]*(?:light|bold))[- ._]*/ig;\n\n\t/**\n\t * A regular expression that pulls out possible style values from the font name. These include \"italic\"\n\t * and \"oblique\".\n\t * @property STYLE_REGEX\n\t * @type {RegExp}\n\t * @static\n\t */\n\tFontLoader.STYLE_REGEX = /[- ._]*(italic|oblique)[- ._]*/ig;\n\n\t/**\n\t * A lookup of font types for generating a CSS definition. For example, TTF fonts requires a \"truetype\" type.\n\t * @property FONT_FORMAT\n\t * @type {Object}\n\t * @static\n\t */\n\tFontLoader.FONT_FORMAT = {woff2:\"woff2\", woff:\"woff\", ttf:\"truetype\", otf:\"truetype\"};\n\n\t/**\n\t * A lookup of font weights based on a name. These values are from http://www.w3.org/TR/css3-fonts/#font-weight-numeric-values.\n\t * @property FONT_WEIGHT\n\t * @type {Object}\n\t * @static\n\t */\n\tFontLoader.FONT_WEIGHT = {thin:100, extralight:200, ultralight:200, light:300, semilight:300, demilight:300, book:\"normal\", regular:\"normal\", semibold:600, demibold:600, extrabold:800, ultrabold:800, black:900, heavy:900};\n\n\t/**\n\t * The frequency in milliseconds to check for loaded fonts.\n\t * @property WATCH_DURATION\n\t * @type {number}\n\t * @default 10\n\t * @static\n\t */\n\tFontLoader.WATCH_DURATION = 10;\n// public methods:\n\tp.load = function() {\n\t\tif (this.type == createjs.Types.FONTCSS) {\n\t\t\tvar loaded = this._watchCSS();\n\n\t\t\t// If the CSS is not ready, it will create a request, which AbstractLoader can handle.\n\t\t\tif (!loaded) {\n\t\t\t\tthis.AbstractLoader_load();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t} else if (this._item.src instanceof Array) {\n\t\t\tthis._watchFontArray();\n\t\t} else {\n\t\t\tvar def = this._defFromSrc(this._item.src);\n\t\t\tthis._watchFont(def);\n\t\t\tthis._injectStyleTag(this._cssFromDef(def));\n\t\t}\n\n\t\tthis._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), this._item.loadTimeout);\n\n\t\tthis.dispatchEvent(\"loadstart\");\n\t};\n\n\t/**\n\t * The font load has timed out. This is called via a <code>setTimeout</code>.\n\t * callback.\n\t * @method _handleTimeout\n\t * @protected\n\t */\n\tp._handleTimeout = function () {\n\t\tthis._stopWatching();\n\t\tthis.dispatchEvent(new createjs.ErrorEvent(\"PRELOAD_TIMEOUT\"));\n\t};\n\n\t// WatchCSS does the work for us, and provides a modified src.\n\tp._createRequest = function() {\n\t\treturn this._request;\n\t};\n\n\t// Events come from the internal XHR loader.\n\tp.handleEvent = function (event) {\n\t\tswitch (event.type) {\n\t\t\tcase \"complete\":\n\t\t\t\tthis._rawResult = event.target._response;\n\t\t\t\tthis._result = true;\n\t\t\t\tthis._parseCSS(this._rawResult);\n\t\t\t\tbreak;\n\n\t\t\tcase \"error\":\n\t\t\t\tthis._stopWatching();\n\t\t\t\tthis.AbstractLoader_handleEvent(event);\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n// private methods:\n\t/**\n\t * Determine if the provided CSS is a string definition, CSS HTML element, or a CSS file URI. Depending on the\n\t * format, the CSS will be parsed, or loaded.\n\t * @method _watchCSS\n\t * @returns {boolean} Whether or not the CSS is ready\n\t * @protected\n\t */\n\tp._watchCSS = function() {\n\t\tvar src = this._item.src;\n\n\t\t// An HTMLElement was passed in. Just use it.\n\t\tif (src instanceof HTMLStyleElement) {\n\t\t\tif (this._injectCSS && !src.parentNode) { (document.head || document.getElementsByTagName('head')[0]).appendChild(src); }\n\t\t\tthis._injectCSS = false;\n\t\t\tsrc = \"\\n\"+src.textContent;\n\t\t}\n\n\t\t// A CSS string was passed in. Parse and use it\n\t\tif (src.search(/\\n|\\r|@font-face/i) !== -1) { // css string.\n\t\t\tthis._parseCSS(src);\n\t\t\treturn true;\n\t\t}\n\n\t\t// Load a CSS Path. Note that we CAN NOT load it without XHR because we need to read the CSS definition\n\t\tthis._request = new createjs.XHRRequest(this._item);\n\t\treturn false;\n\t};\n\n\t/**\n\t * Parse a CSS string to determine the fonts to load.\n\t * @method _parseCSS\n\t * @param {String} css The CSS string to parse\n\t * @protected\n\t */\n\tp._parseCSS = function(css) {\n\t\tvar regex = /@font-face\\s*\\{([^}]+)}/g\n\t\twhile (true) {\n\t\t\tvar result = regex.exec(css);\n\t\t\tif (!result) { break; }\n\t\t\tthis._watchFont(this._parseFontFace(result[1]));\n\t\t}\n\t\tthis._injectStyleTag(css);\n\t};\n\n\t/**\n\t * The provided fonts were an array of object or string definitions. Parse them, and inject any that are ready.\n\t * @method _watchFontArray\n\t * @protected\n\t */\n\tp._watchFontArray = function() {\n\t\tvar arr = this._item.src, css = \"\", def;\n\t\tfor (var i=arr.length-1; i>=0; i--) {\n\t\t\tvar o = arr[i];\n\t\t\tif (typeof o === \"string\") { def = this._defFromSrc(o) }\n\t\t\telse { def = this._defFromObj(o); }\n\t\t\tthis._watchFont(def);\n\t\t\tcss += this._cssFromDef(def)+\"\\n\";\n\t\t}\n\t\tthis._injectStyleTag(css);\n\t};\n\n\t/**\n\t * Inject any style definitions into the document head. This is necessary when the definition is just a string or\n\t * object definition in order for the styles to be applied to the document. If the loaded fonts are already HTML CSS\n\t * elements, they don't need to be appended again.\n\t * @method _injectStyleTag\n\t * @param {String} css The CSS string content to be appended to the\n\t * @protected\n\t */\n\tp._injectStyleTag = function(css) {\n\t\tif (!this._injectCSS) { return; }\n\t\tvar head = document.head || document.getElementsByTagName('head')[0];\n\t\tvar styleTag = document.createElement(\"style\");\n\t\tstyleTag.type = \"text/css\";\n\t\tif (styleTag.styleSheet){\n\t\t\tstyleTag.styleSheet.cssText = css;\n\t\t} else {\n\t\t\tstyleTag.appendChild(document.createTextNode(css));\n\t\t}\n\t\thead.appendChild(styleTag);\n\t};\n\n\t/**\n\t * Determine the font face from a CSS definition.\n\t * @method _parseFontFace\n\t * @param {String} str The CSS string definition\n\t * @protected\n\t * @return {String} A modified CSS object containing family name, src, style, and weight\n\t */\n\tp._parseFontFace = function(str) {\n\t\tvar family = this._getCSSValue(str, \"font-family\"), src = this._getCSSValue(str, \"src\");\n\t\tif (!family || !src) { return null; }\n\t\treturn this._defFromObj({\n\t\t\tfamily: family,\n\t\t\tsrc: src,\n\t\t\tstyle: this._getCSSValue(str, \"font-style\"),\n\t\t\tweight: this._getCSSValue(str, \"font-weight\")\n\t\t});\n\t};\n\n\t/**\n\t * Add a font to the list of fonts currently being watched. If the font is already watched or loaded, it won't be\n\t * added again.\n\t * @method _watchFont\n\t * @param {Object} def The font definition\n\t * @protected\n\t */\n\tp._watchFont = function(def) {\n\t\tif (!def || this._faces[def.id]) { return; }\n\t\tthis._faces[def.id] = def;\n\t\tthis._watched.push(def);\n\t\tthis._count++;\n\n\t\tthis._calculateReferenceSizes(def);\n\t\tthis._startWatching();\n\t};\n\n\t/**\n\t * Create a interval to check for loaded fonts. Only one interval is used for all fonts. The fonts are checked based\n\t * on the {{#crossLink \"FontLoader/WATCH_DURATION:property\"}}{{/crossLink}}.\n\t * @method _startWatching\n\t * @protected\n\t */\n\tp._startWatching = function() {\n\t\tif (this._watchInterval != null) { return; }\n\t\tthis._watchInterval = setInterval(createjs.proxy(this._watch, this), FontLoader.WATCH_DURATION);\n\t};\n\n\t/**\n\t * Clear the interval used to check fonts. This happens when all fonts are loaded, or an error occurs, such as a\n\t * CSS file error, or a load timeout.\n\t * @method _stopWatching\n\t * @protected\n\t */\n\tp._stopWatching = function() {\n\t\tclearInterval(this._watchInterval);\n\t\tclearTimeout(this._loadTimeout);\n\t\tthis._watchInterval = null;\n\t};\n\n\t/**\n\t * Check all the fonts that have not been loaded. The fonts are drawn to a canvas in memory, and if their font size\n\t * varies from the default text size, then the font is considered loaded.\n\t *\n\t * A {{#crossLink \"AbstractLoader/fileload\"}}{{/crossLink}} event will be dispatched when each file is loaded, along\n\t * with the font family name as the `item` value. A {{#crossLink \"ProgressEvent\"}}{{/crossLink}} is dispatched a\n\t * maximum of one time per check when any fonts are loaded, with the {{#crossLink \"ProgressEvent/progress:property\"}}{{/crossLink}}\n\t * value showing the percentage of fonts that have loaded.\n\t * @method _watch\n\t * @protected\n\t */\n\tp._watch = function() {\n\t\tvar defs = this._watched, refFonts = FontLoader._referenceFonts, l = defs.length;\n\t\tfor (var i = l - 1; i >= 0; i--) {\n\t\t\tvar def = defs[i], refs = def.refs;\n\t\t\tfor (var j = refs.length - 1; j >= 0; j--) {\n\t\t\t\tvar w = this._getTextWidth(def.family + \",\" + refFonts[j], def.weight, def.style);\n\t\t\t\tif (w != refs[j]) {\n\t\t\t\t\tvar event = new createjs.Event(\"fileload\");\n\t\t\t\t\tdef.type = \"font-family\";\n\t\t\t\t\tevent.item = def;\n\t\t\t\t\tthis.dispatchEvent(event);\n\t\t\t\t\tdefs.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (l !== defs.length) {\n\t\t\tvar event = new createjs.ProgressEvent(this._count-defs.length, this._count);\n\t\t\tthis.dispatchEvent(event);\n\t\t}\n\t\tif (l === 0) {\n\t\t\tthis._stopWatching();\n\t\t\tthis._sendComplete();\n\t\t}\n\t};\n\n\t/**\n\t * Determine the default size of the reference fonts used to compare against loaded fonts.\n\t * @method _calculateReferenceSizes\n\t * @param {Object} def The font definition to get the size of.\n\t * @protected\n\t */\n\tp._calculateReferenceSizes = function(def) {\n\t\tvar refFonts = FontLoader._referenceFonts;\n\t\tvar refs = def.refs = [];\n\t\tfor (var i=0; i<refFonts.length; i++) {\n\t\t\trefs[i] = this._getTextWidth(refFonts[i], def.weight, def.style);\n\t\t}\n\t};\n\n\t/**\n\t * Get a CSS definition from a font source and name.\n\t * @method _defFromSrc\n\t * @param {String} src The font source\n\t * @protected\n\t */\n\tp._defFromSrc = function(src) {\n\t\tvar re = /[- ._]+/g, name = src, ext = null, index;\n\t\t\n\t\tindex = name.search(/[?#]/);\n\t\tif (index !== -1) {\n\t\t\tname = name.substr(0,index);\n\t\t}\n\t\tindex = name.lastIndexOf(\".\");\n\t\tif (index !== -1) {\n\t\t\text = name.substr(index+1);\n\t\t\tname = name.substr(0,index);\n\t\t}\n\t\tindex = name.lastIndexOf(\"/\");\n\t\tif (index !== -1) {\n\t\t\tname = name.substr(index+1);\n\t\t}\n\t\t\n\t\tvar family = name,\n\t\t\t\tweight = family.match(FontLoader.WEIGHT_REGEX);\n\t\tif (weight) {\n\t\t\tweight = weight[0];\n\t\t\tfamily = family.replace(weight, \"\");\n\t\t\tweight = weight.replace(re, \"\").toLowerCase();\n\t\t}\n\t\tvar style = name.match(FontLoader.STYLE_REGEX);\n\t\tif (style) {\n\t\t\tfamily = family.replace(style[0], \"\");\n\t\t\tstyle = \"italic\";\n\t\t}\n\t\tfamily = family.replace(re, \"\");\n\t\t\n\t\tvar cssSrc = \"local('\"+name.replace(re,\" \")+\"'), url('\"+src+\"')\";\n\t\tvar format = FontLoader.FONT_FORMAT[ext];\n\t\tif (format) { cssSrc += \" format('\"+format+\"')\"; }\n\t\t\n\t\treturn this._defFromObj({\n\t\t\tfamily: family,\n\t\t\tweight: FontLoader.FONT_WEIGHT[weight]||weight,\n\t\t\tstyle: style,\n\t\t\tsrc: cssSrc\n\t\t});\n\t};\n\n\t/**\n\t * Get a font definition from a raw font object.\n\t * @method _defFromObj\n\t * @param {Object} o A raw object provided to the FontLoader\n\t * @returns {Object} A standard font object that the FontLoader understands\n\t * @protected\n\t */\n\tp._defFromObj = function(o) {\n\t\tvar def = {\n\t\t\tfamily: o.family,\n\t\t\tsrc: o.src,\n\t\t\tstyle: o.style || \"normal\",\n\t\t\tweight: o.weight || \"normal\"\n\t\t};\n\t\tdef.id = def.family + \";\" + def.style + \";\" + def.weight;\n\t\treturn def;\n\t};\n\n\t/**\n\t * Get CSS from a font definition.\n\t * @method _cssFromDef\n\t * @param {Object} def A font definition\n\t * @returns {string} A CSS string representing the object\n\t * @protected\n\t */\n\tp._cssFromDef = function(def) {\n\t\treturn \"@font-face {\\n\" +\n\t\t\t\"\\tfont-family: '\"+def.family+\"';\\n\" +\n\t\t\t\"\\tfont-style: \"+def.style+\";\\n\" +\n\t\t\t\"\\tfont-weight: \"+def.weight+\";\\n\" +\n\t\t\t\"\\tsrc: \"+def.src+\";\\n\" +\n\t\t\t\"}\";\n\t};\n\n\t/**\n\t * Get the text width of text using the family, weight, and style\n\t * @method _getTextWidth\n\t * @param {String} family The font family\n\t * @param {String} weight The font weight\n\t * @param {String} style The font style\n\t * @returns {Number} The pixel measurement of the font.\n\t * @protected\n\t */\n\tp._getTextWidth = function(family, weight, style) {\n\t\tvar ctx = FontLoader._ctx;\n\t\tctx.font = style+\" \"+weight+\" 72px \"+family;\n\t\treturn ctx.measureText(FontLoader.sampleText).width;\n\t};\n\n\t/**\n\t * Get the value of a property from a CSS string. For example, searches a CSS string for the value of the\n\t * \"font-family\" property.\n\t * @method _getCSSValue\n\t * @param {String} str The CSS string to search\n\t * @param {String} propName The property name to get the value for\n\t * @returns {String} The value in the CSS for the provided property name\n\t * @protected\n\t */\n\tp._getCSSValue = function(str, propName) {\n\t\tvar regex = new RegExp(propName+\":\\s*([^;}]+?)\\s*[;}]\");\n\t\tvar result = regex.exec(str);\n\t\tif (!result || !result[1]) { return null; }\n\t\treturn result[1];\n\t};\n\n\tcreatejs.FontLoader = createjs.promote(FontLoader, \"AbstractLoader\");\n\n})();\n\n//##############################################################################\n// ImageLoader.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * A loader for image files.\n\t * @class ImageLoader\n\t * @param {LoadItem|Object} loadItem\n\t * @param {Boolean} preferXHR\n\t * @extends AbstractLoader\n\t * @constructor\n\t */\n\tfunction ImageLoader (loadItem, preferXHR) {\n\t\tthis.AbstractLoader_constructor(loadItem, preferXHR, createjs.Types.IMAGE);\n\n\t\t// public properties\n\t\tthis.resultFormatter = this._formatResult;\n\n\t\t// protected properties\n\t\tthis._tagSrcAttribute = \"src\";\n\n\t\t// Check if the preload item is already a tag.\n\t\tif (createjs.DomUtils.isImageTag(loadItem)) {\n\t\t\tthis._tag = loadItem;\n\t\t} else if (createjs.DomUtils.isImageTag(loadItem.src)) {\n\t\t\tthis._tag = loadItem.src;\n\t\t} else if (createjs.DomUtils.isImageTag(loadItem.tag)) {\n\t\t\tthis._tag = loadItem.tag;\n\t\t}\n\n\t\tif (this._tag != null) {\n\t\t\tthis._preferXHR = false;\n\t\t} else {\n\t\t\tthis._tag = createjs.Elements.img();\n\t\t}\n\n\t\tthis.on(\"initialize\", this._updateXHR, this);\n\t};\n\n\tvar p = createjs.extend(ImageLoader, createjs.AbstractLoader);\n\tvar s = ImageLoader;\n\n\t// static methods\n\t/**\n\t * Determines if the loader can load a specific item. This loader can only load items that are of type\n\t * {{#crossLink \"Types/IMAGE:property\"}}{{/crossLink}}.\n\t * @method canLoadItem\n\t * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n\t * @returns {Boolean} Whether the loader can load the item.\n\t * @static\n\t */\n\ts.canLoadItem = function (item) {\n\t\treturn item.type == createjs.Types.IMAGE;\n\t};\n\n\t// public methods\n\tp.load = function () {\n\t\tif (this._tag.src != \"\" && this._tag.complete) {\n\t\t\tthis._sendComplete();\n\t\t\treturn;\n\t\t}\n\n\t\tvar crossOrigin = this._item.crossOrigin;\n\t\tif (crossOrigin == true) { crossOrigin = \"Anonymous\"; }\n\t\tif (crossOrigin != null && !createjs.URLUtils.isLocal(this._item)) {\n\t\t\tthis._tag.crossOrigin = crossOrigin;\n\t\t}\n\n\t\tthis.AbstractLoader_load();\n\t};\n\n\t// protected methods\n\t/**\n\t * Before the item loads, set its mimeType and responseType.\n\t * @property _updateXHR\n\t * @param {Event} event\n\t * @private\n\t */\n\tp._updateXHR = function (event) {\n\t\tevent.loader.mimeType = 'text/plain; charset=x-user-defined-binary';\n\n\t\t// Only exists for XHR\n\t\tif (event.loader.setResponseType) {\n\t\t\tevent.loader.setResponseType(\"blob\");\n\t\t}\n\t};\n\n\t/**\n\t * The result formatter for Image files.\n\t * @method _formatResult\n\t * @param {AbstractLoader} loader\n\t * @returns {HTMLImageElement}\n\t * @private\n\t */\n\tp._formatResult = function (loader) {\n\t\treturn this._formatImage;\n\t};\n\n\t/**\n\t * The asynchronous image formatter function. This is required because images have\n\t * a short delay before they are ready.\n\t * @method _formatImage\n\t * @param {Function} successCallback The method to call when the result has finished formatting\n\t * @param {Function} errorCallback The method to call if an error occurs during formatting\n\t * @private\n\t */\n\tp._formatImage = function (successCallback, errorCallback) {\n\t\tvar tag = this._tag;\n\t\tvar URL = window.URL || window.webkitURL;\n\n\t\tif (!this._preferXHR) {\n\n\t\t\t//document.body.removeChild(tag);\n\t\t} else if (URL) {\n\t\t\tvar objURL = URL.createObjectURL(this.getResult(true));\n\t\t\ttag.src = objURL;\n\n\t\t\ttag.addEventListener(\"load\", this._cleanUpURL, false);\n\t\t\ttag.addEventListener(\"error\", this._cleanUpURL, false);\n\t\t} else {\n\t\t\ttag.src = this._item.src;\n\t\t}\n\n\t\tif (tag.complete) {\n\t\t\tsuccessCallback(tag);\n\t\t} else {\n            tag.onload = createjs.proxy(function() {\n                successCallback(this._tag);\n                tag.onload = tag.onerror = null;\n            }, this);\n\n            tag.onerror = createjs.proxy(function(event) {\n                errorCallback(new createjs.ErrorEvent('IMAGE_FORMAT', null, event));\n                tag.onload = tag.onerror = null;\n            }, this);\n\t\t}\n\t};\n\n\t/**\n\t * Clean up the ObjectURL, the tag is done with it. Note that this function is run\n\t * as an event listener without a proxy/closure, as it doesn't require it - so do not\n\t * include any functionality that requires scope without changing it.\n\t * @method _cleanUpURL\n\t * @param event\n\t * @private\n\t */\n\tp._cleanUpURL = function (event) {\n\t\tvar URL = window.URL || window.webkitURL;\n\t\tURL.revokeObjectURL(event.target.src);\n\t};\n\n\tcreatejs.ImageLoader = createjs.promote(ImageLoader, \"AbstractLoader\");\n\n}());\n\n//##############################################################################\n// JavaScriptLoader.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * A loader for JavaScript files.\n\t * @class JavaScriptLoader\n\t * @param {LoadItem|Object} loadItem\n\t * @param {Boolean} preferXHR\n\t * @extends AbstractLoader\n\t * @constructor\n\t */\n\tfunction JavaScriptLoader(loadItem, preferXHR) {\n\t\tthis.AbstractLoader_constructor(loadItem, preferXHR, createjs.Types.JAVASCRIPT);\n\n\t\t// public properties\n\t\tthis.resultFormatter = this._formatResult;\n\n\t\t// protected properties\n\t\tthis._tagSrcAttribute = \"src\";\n\t\tthis.setTag(createjs.Elements.script());\n\t};\n\n\tvar p = createjs.extend(JavaScriptLoader, createjs.AbstractLoader);\n\tvar s = JavaScriptLoader;\n\n\t// static methods\n\t/**\n\t * Determines if the loader can load a specific item. This loader can only load items that are of type\n\t * {{#crossLink \"Types/JAVASCRIPT:property\"}}{{/crossLink}}\n\t * @method canLoadItem\n\t * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n\t * @returns {Boolean} Whether the loader can load the item.\n\t * @static\n\t */\n\ts.canLoadItem = function (item) {\n\t\treturn item.type == createjs.Types.JAVASCRIPT;\n\t};\n\n\t// protected methods\n\t/**\n\t * The result formatter for JavaScript files.\n\t * @method _formatResult\n\t * @param {AbstractLoader} loader\n\t * @returns {HTMLLinkElement|HTMLStyleElement}\n\t * @private\n\t */\n\tp._formatResult = function (loader) {\n\t\tvar tag = loader.getTag();\n\t\tif (this._preferXHR) {\n\t\t\ttag.text = loader.getResult(true);\n\t\t}\n\t\treturn tag;\n\t};\n\n\tcreatejs.JavaScriptLoader = createjs.promote(JavaScriptLoader, \"AbstractLoader\");\n\n}());\n\n//##############################################################################\n// JSONLoader.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * A loader for JSON files. To load JSON cross-domain, use JSONP and the {{#crossLink \"JSONPLoader\"}}{{/crossLink}}\n\t * instead. To load JSON-formatted manifests, use {{#crossLink \"ManifestLoader\"}}{{/crossLink}}, and to\n\t * load EaselJS SpriteSheets, use {{#crossLink \"SpriteSheetLoader\"}}{{/crossLink}}.\n\t * @class JSONLoader\n\t * @param {LoadItem|Object} loadItem\n\t * @extends AbstractLoader\n\t * @constructor\n\t */\n\tfunction JSONLoader(loadItem) {\n\t\tthis.AbstractLoader_constructor(loadItem, true, createjs.Types.JSON);\n\n\t\t// public properties\n\t\tthis.resultFormatter = this._formatResult;\n\t};\n\n\tvar p = createjs.extend(JSONLoader, createjs.AbstractLoader);\n\tvar s = JSONLoader;\n\n\t// static methods\n\t/**\n\t * Determines if the loader can load a specific item. This loader can only load items that are of type\n\t * {{#crossLink \"Types/JSON:property\"}}{{/crossLink}}.\n\t * @method canLoadItem\n\t * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n\t * @returns {Boolean} Whether the loader can load the item.\n\t * @static\n\t */\n\ts.canLoadItem = function (item) {\n\t\treturn item.type == createjs.Types.JSON;\n\t};\n\n\t// protected methods\n\t/**\n\t * The result formatter for JSON files.\n\t * @method _formatResult\n\t * @param {AbstractLoader} loader\n\t * @returns {HTMLLinkElement|HTMLStyleElement}\n\t * @private\n\t */\n\tp._formatResult = function (loader) {\n\t\tvar json = null;\n\t\ttry {\n\t\t\tjson = createjs.DataUtils.parseJSON(loader.getResult(true));\n\t\t} catch (e) {\n\t\t\tvar event = new createjs.ErrorEvent(\"JSON_FORMAT\", null, e);\n\t\t\tthis._sendError(event);\n\t\t\treturn e;\n\t\t}\n\n\t\treturn json;\n\t};\n\n\tcreatejs.JSONLoader = createjs.promote(JSONLoader, \"AbstractLoader\");\n\n}());\n\n//##############################################################################\n// JSONPLoader.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * A loader for JSONP files, which are JSON-formatted text files, wrapped in a callback. To load regular JSON\n\t * without a callback use the {{#crossLink \"JSONLoader\"}}{{/crossLink}} instead. To load JSON-formatted manifests,\n\t * use {{#crossLink \"ManifestLoader\"}}{{/crossLink}}, and to load EaselJS SpriteSheets, use\n\t * {{#crossLink \"SpriteSheetLoader\"}}{{/crossLink}}.\n\t *\n\t * JSONP is a format that provides a solution for loading JSON files cross-domain <em>without</em> requiring CORS.\n\t * JSONP files are loaded as JavaScript, and the \"callback\" is executed once they are loaded. The callback in the\n\t * JSONP must match the callback passed to the loadItem.\n\t *\n\t * <h4>Example JSONP</h4>\n\t *\n\t * \t\tcallbackName({\n\t * \t\t\t\"name\": \"value\",\n\t *\t \t\t\"num\": 3,\n\t *\t\t\t\"obj\": { \"bool\":true }\n\t * \t\t});\n\t *\n\t * <h4>Example</h4>\n\t *\n\t * \t\tvar loadItem = {id:\"json\", type:\"jsonp\", src:\"http://server.com/text.json\", callback:\"callbackName\"}\n\t * \t\tvar queue = new createjs.LoadQueue();\n\t * \t\tqueue.on(\"complete\", handleComplete);\n\t * \t\tqueue.loadItem(loadItem);\n\t *\n\t * \t\tfunction handleComplete(event) }\n\t * \t\t\tvar json = queue.getResult(\"json\");\n\t * \t\t\tconsole.log(json.obj.bool); // true\n\t * \t\t}\n\t *\n\t * JSONP files loaded concurrently require a <em>unique</em> callback. To ensure JSONP files are loaded in order,\n\t * either use the {{#crossLink \"LoadQueue/setMaxConnections\"}}{{/crossLink}} method (set to 1), or set\n\t * {{#crossLink \"LoadItem/maintainOrder:property\"}}{{/crossLink}} on items with the same callback.\n\t *\n\t * Important note: Some browsers will prevent JSONP from firing the callback if the file was loaded as JSON, and not\n\t * JavaScript. You may have to have your server give you a JavaScript mime-type for this to work.\n\t *\n\t * @class JSONPLoader\n\t * @param {LoadItem|Object} loadItem\n\t * @extends AbstractLoader\n\t * @constructor\n\t */\n\tfunction JSONPLoader(loadItem) {\n\t\tthis.AbstractLoader_constructor(loadItem, false, createjs.Types.JSONP);\n\t\tthis.setTag(createjs.Elements.script());\n\t\tthis.getTag().type = \"text/javascript\";\n\t};\n\n\tvar p = createjs.extend(JSONPLoader, createjs.AbstractLoader);\n\tvar s = JSONPLoader;\n\n\n\t// static methods\n\t/**\n\t * Determines if the loader can load a specific item. This loader can only load items that are of type\n\t * {{#crossLink \"Types/JSONP:property\"}}{{/crossLink}}.\n\t * @method canLoadItem\n\t * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n\t * @returns {Boolean} Whether the loader can load the item.\n\t * @static\n\t */\n\ts.canLoadItem = function (item) {\n\t\treturn item.type == createjs.Types.JSONP;\n\t};\n\n\t// public methods\n\tp.cancel = function () {\n\t\tthis.AbstractLoader_cancel();\n\t\tthis._dispose();\n\t};\n\n\t/**\n\t * Loads the JSONp file.  Because of the unique loading needs of JSONp\n\t * we don't use the AbstractLoader.load() method.\n\t *\n\t * @method load\n\t *\n\t */\n\tp.load = function () {\n\t\tif (this._item.callback == null) {\n\t\t\tthrow new Error('callback is required for loading JSONP requests.');\n\t\t}\n\n\t\t// TODO: Look into creating our own iFrame to handle the load\n\t\t// In the first attempt, FF did not get the result\n\t\t//   result instanceof Object did not work either\n\t\t//   so we would need to clone the result.\n\t\tif (window[this._item.callback] != null) {\n\t\t\tthrow new Error(\n\t\t\t\t\"JSONP callback '\" +\n\t\t\t\tthis._item.callback +\n\t\t\t\t\"' already exists on window. You need to specify a different callback or re-name the current one.\");\n\t\t}\n\n\t\twindow[this._item.callback] = createjs.proxy(this._handleLoad, this);\n\t\tcreatejs.DomUtils.appendToBody(this._tag);\n\n\t\tthis._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), this._item.loadTimeout);\n\n\t\t// Load the tag\n\t\tthis._tag.src = this._item.src;\n\t};\n\n\t// private methods\n\t/**\n\t * Handle the JSONP callback, which is a public method defined on `window`.\n\t * @method _handleLoad\n\t * @param {Object} data The formatted JSON data.\n\t * @private\n\t */\n\tp._handleLoad = function (data) {\n\t\tthis._result = this._rawResult = data;\n\t\tthis._sendComplete();\n\n\t\tthis._dispose();\n\t};\n\n\t/**\n\t * The tag request has not loaded within the time specfied in loadTimeout.\n\t * @method _handleError\n\t * @param {Object} event The XHR error event.\n\t * @private\n\t */\n\tp._handleTimeout = function () {\n\t\tthis._dispose();\n\t\tthis.dispatchEvent(new createjs.ErrorEvent(\"timeout\"));\n\t};\n\n\t/**\n\t * Clean up the JSONP load. This clears out the callback and script tag that this loader creates.\n\t * @method _dispose\n\t * @private\n\t */\n\tp._dispose = function () {\n\t\tcreatejs.DomUtils.removeChild(this._tag);\n\t\tdelete window[this._item.callback];\n\n\t\tclearTimeout(this._loadTimeout);\n\t};\n\n\tcreatejs.JSONPLoader = createjs.promote(JSONPLoader, \"AbstractLoader\");\n\n}());\n\n//##############################################################################\n// ManifestLoader.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * A loader for JSON manifests. Items inside the manifest are loaded before the loader completes. To load manifests\n\t * using JSONP, specify a {{#crossLink \"LoadItem/callback:property\"}}{{/crossLink}} as part of the\n\t * {{#crossLink \"LoadItem\"}}{{/crossLink}}.\n\t *\n\t * The list of files in the manifest must be defined on the top-level JSON object in a `manifest` property. This\n\t * example shows a sample manifest definition, as well as how to to include a sub-manifest.\n\t *\n\t * \t\t{\n\t * \t\t\t\"path\": \"assets/\",\n\t *\t \t    \"manifest\": [\n\t *\t\t\t\t\"image.png\",\n\t *\t\t\t\t{\"src\": \"image2.png\", \"id\":\"image2\"},\n\t *\t\t\t\t{\"src\": \"sub-manifest.json\", \"type\":\"manifest\", \"callback\":\"jsonCallback\"}\n\t *\t \t    ]\n\t *\t \t}\n\t *\n\t * When a ManifestLoader has completed loading, the parent loader (usually a {{#crossLink \"LoadQueue\"}}{{/crossLink}},\n\t * but could also be another ManifestLoader) will inherit all the loaded items, so you can access them directly.\n\t *\n\t * Note that the {{#crossLink \"JSONLoader\"}}{{/crossLink}} and {{#crossLink \"JSONPLoader\"}}{{/crossLink}} are\n\t * higher priority loaders, so manifests <strong>must</strong> set the {{#crossLink \"LoadItem\"}}{{/crossLink}}\n\t * {{#crossLink \"LoadItem/type:property\"}}{{/crossLink}} property to {{#crossLink \"Types/MANIFEST:property\"}}{{/crossLink}}.\n\t *\n\t * Additionally, some browsers require the server to serve a JavaScript mime-type for JSONP, so it may not work in\n\t * some conditions.\n\t * @class ManifestLoader\n\t * @param {LoadItem|Object} loadItem\n\t * @extends AbstractLoader\n\t * @constructor\n\t */\n\tfunction ManifestLoader(loadItem, preferXHR) {\n\t\tthis.AbstractLoader_constructor(loadItem, preferXHR, createjs.Types.MANIFEST);\n\n\t// Public Properties\n\t\t/**\n\t\t * An array of the plugins registered using {{#crossLink \"LoadQueue/installPlugin\"}}{{/crossLink}},\n\t\t * used to pass plugins to new LoadQueues that may be created.\n\t\t * @property _plugins\n\t\t * @type {Array}\n\t\t * @private\n\t\t * @since 0.6.1\n\t\t */\n\t\tthis.plugins = null;\n\n\n\t// Protected Properties\n\t\t/**\n\t\t * An internal {{#crossLink \"LoadQueue\"}}{{/crossLink}} that loads the contents of the manifest.\n\t\t * @property _manifestQueue\n\t\t * @type {LoadQueue}\n\t\t * @private\n\t\t */\n\t\tthis._manifestQueue = null;\n\t};\n\n\tvar p = createjs.extend(ManifestLoader, createjs.AbstractLoader);\n\tvar s = ManifestLoader;\n\n\t// static properties\n\t/**\n\t * The amount of progress that the manifest itself takes up.\n\t * @property MANIFEST_PROGRESS\n\t * @type {number}\n\t * @default 0.25 (25%)\n\t * @private\n\t * @static\n\t */\n\ts.MANIFEST_PROGRESS = 0.25;\n\n\t// static methods\n\t/**\n\t * Determines if the loader can load a specific item. This loader can only load items that are of type\n\t * {{#crossLink \"Types/MANIFEST:property\"}}{{/crossLink}}\n\t * @method canLoadItem\n\t * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n\t * @returns {Boolean} Whether the loader can load the item.\n\t * @static\n\t */\n\ts.canLoadItem = function (item) {\n\t\treturn item.type == createjs.Types.MANIFEST;\n\t};\n\n\t// public methods\n\tp.load = function () {\n\t\tthis.AbstractLoader_load();\n\t};\n\n\t// protected methods\n\tp._createRequest = function() {\n\t\tvar callback = this._item.callback;\n\t\tif (callback != null) {\n\t\t\tthis._request = new createjs.JSONPLoader(this._item);\n\t\t} else {\n\t\t\tthis._request = new createjs.JSONLoader(this._item);\n\t\t}\n\t};\n\n\tp.handleEvent = function (event) {\n\t\tswitch (event.type) {\n\t\t\tcase \"complete\":\n\t\t\t\tthis._rawResult = event.target.getResult(true);\n\t\t\t\tthis._result = event.target.getResult();\n\t\t\t\tthis._sendProgress(s.MANIFEST_PROGRESS);\n\t\t\t\tthis._loadManifest(this._result);\n\t\t\t\treturn;\n\t\t\tcase \"progress\":\n\t\t\t\tevent.loaded *= s.MANIFEST_PROGRESS;\n\t\t\t\tthis.progress = event.loaded / event.total;\n\t\t\t\tif (isNaN(this.progress) || this.progress == Infinity) { this.progress = 0; }\n\t\t\t\tthis._sendProgress(event);\n\t\t\t\treturn;\n\t\t}\n\t\tthis.AbstractLoader_handleEvent(event);\n\t};\n\n\tp.destroy = function() {\n\t\tthis.AbstractLoader_destroy();\n\t\tthis._manifestQueue.close();\n\t};\n\n\t/**\n\t * Create and load the manifest items once the actual manifest has been loaded.\n\t * @method _loadManifest\n\t * @param {Object} json\n\t * @private\n\t */\n\tp._loadManifest = function (json) {\n\t\tif (json && json.manifest) {\n\t\t\tvar queue = this._manifestQueue = new createjs.LoadQueue(this._preferXHR);\n\t\t\tqueue.on(\"fileload\", this._handleManifestFileLoad, this);\n\t\t\tqueue.on(\"progress\", this._handleManifestProgress, this);\n\t\t\tqueue.on(\"complete\", this._handleManifestComplete, this, true);\n\t\t\tqueue.on(\"error\", this._handleManifestError, this, true);\n\t\t\tfor(var i = 0, l = this.plugins.length; i < l; i++) {\t// conserve order of plugins\n\t\t\t\tqueue.installPlugin(this.plugins[i]);\n\t\t\t}\n\t\t\tqueue.loadManifest(json);\n\t\t} else {\n\t\t\tthis._sendComplete();\n\t\t}\n\t};\n\n\t/**\n\t * An item from the {{#crossLink \"_manifestQueue:property\"}}{{/crossLink}} has completed.\n\t * @method _handleManifestFileLoad\n\t * @param {Event} event\n\t * @private\n\t */\n\tp._handleManifestFileLoad = function (event) {\n\t\tevent.target = null;\n\t\tthis.dispatchEvent(event);\n\t};\n\n\t/**\n\t * The manifest has completed loading. This triggers the {{#crossLink \"AbstractLoader/complete:event\"}}{{/crossLink}}\n\t * {{#crossLink \"Event\"}}{{/crossLink}} from the ManifestLoader.\n\t * @method _handleManifestComplete\n\t * @param {Event} event\n\t * @private\n\t */\n\tp._handleManifestComplete = function (event) {\n\t\tthis._loadedItems = this._manifestQueue.getItems(true);\n\t\tthis._sendComplete();\n\t};\n\n\t/**\n\t * The manifest has reported progress.\n\t * @method _handleManifestProgress\n\t * @param {ProgressEvent} event\n\t * @private\n\t */\n\tp._handleManifestProgress = function (event) {\n\t\tthis.progress = event.progress * (1 - s.MANIFEST_PROGRESS) + s.MANIFEST_PROGRESS;\n\t\tthis._sendProgress(this.progress);\n\t};\n\n\t/**\n\t * The manifest has reported an error with one of the files.\n\t * @method _handleManifestError\n\t * @param {ErrorEvent} event\n\t * @private\n\t */\n\tp._handleManifestError = function (event) {\n\t\tvar newEvent = new createjs.Event(\"fileerror\");\n\t\tnewEvent.item = event.data;\n\t\tthis.dispatchEvent(newEvent);\n\t};\n\n\tcreatejs.ManifestLoader = createjs.promote(ManifestLoader, \"AbstractLoader\");\n\n}());\n\n//##############################################################################\n// SoundLoader.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * A loader for HTML audio files. PreloadJS can not load WebAudio files, as a WebAudio context is required, which\n\t * should be created by either a library playing the sound (such as <a href=\"http://soundjs.com\">SoundJS</a>, or an\n\t * external framework that handles audio playback. To load content that can be played by WebAudio, use the\n\t * {{#crossLink \"BinaryLoader\"}}{{/crossLink}}, and handle the audio context decoding manually.\n\t * @class SoundLoader\n\t * @param {LoadItem|Object} loadItem\n\t * @param {Boolean} preferXHR\n\t * @extends AbstractMediaLoader\n\t * @constructor\n\t */\n\tfunction SoundLoader(loadItem, preferXHR) {\n\t\tthis.AbstractMediaLoader_constructor(loadItem, preferXHR, createjs.Types.SOUND);\n\n\t\t// protected properties\n\t\tif (createjs.DomUtils.isAudioTag(loadItem)) {\n\t\t\tthis._tag = loadItem;\n\t\t} else if (createjs.DomUtils.isAudioTag(loadItem.src)) {\n\t\t\tthis._tag = loadItem;\n\t\t} else if (createjs.DomUtils.isAudioTag(loadItem.tag)) {\n\t\t\tthis._tag = createjs.DomUtils.isAudioTag(loadItem) ? loadItem : loadItem.src;\n\t\t}\n\n\t\tif (this._tag != null) {\n\t\t\tthis._preferXHR = false;\n\t\t}\n\t};\n\n\tvar p = createjs.extend(SoundLoader, createjs.AbstractMediaLoader);\n\tvar s = SoundLoader;\n\n\t// static methods\n\t/**\n\t * Determines if the loader can load a specific item. This loader can only load items that are of type\n\t * {{#crossLink \"Types/SOUND:property\"}}{{/crossLink}}.\n\t * @method canLoadItem\n\t * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n\t * @returns {Boolean} Whether the loader can load the item.\n\t * @static\n\t */\n\ts.canLoadItem = function (item) {\n\t\treturn item.type == createjs.Types.SOUND;\n\t};\n\n\t// protected methods\n\tp._createTag = function (src) {\n\t\tvar tag = createjs.Elements.audio();\n\t\ttag.autoplay = false;\n\t\ttag.preload = \"none\";\n\n\t\t//LM: Firefox fails when this the preload=\"none\" for other tags, but it needs to be \"none\" to ensure PreloadJS works.\n\t\ttag.src = src;\n\t\treturn tag;\n\t};\n\n\tcreatejs.SoundLoader = createjs.promote(SoundLoader, \"AbstractMediaLoader\");\n\n}());\n\n//##############################################################################\n// VideoLoader.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * A loader for video files.\n\t * @class VideoLoader\n\t * @param {LoadItem|Object} loadItem\n\t * @param {Boolean} preferXHR\n\t * @extends AbstractMediaLoader\n\t * @constructor\n\t */\n\tfunction VideoLoader(loadItem, preferXHR) {\n\t\tthis.AbstractMediaLoader_constructor(loadItem, preferXHR, createjs.Types.VIDEO);\n\n\t\tif (createjs.DomUtils.isVideoTag(loadItem) || createjs.DomUtils.isVideoTag(loadItem.src)) {\n\t\t\tthis.setTag(createjs.DomUtils.isVideoTag(loadItem)?loadItem:loadItem.src);\n\n\t\t\t// We can't use XHR for a tag that's passed in.\n\t\t\tthis._preferXHR = false;\n\t\t} else {\n\t\t\tthis.setTag(this._createTag());\n\t\t}\n\t};\n\n\tvar p = createjs.extend(VideoLoader, createjs.AbstractMediaLoader);\n\tvar s = VideoLoader;\n\n\t/**\n\t * Create a new video tag\n\t *\n\t * @returns {HTMLElement}\n\t * @private\n\t */\n\tp._createTag = function () {\n\t\treturn createjs.Elements.video();\n\t};\n\n\t// static methods\n\t/**\n\t * Determines if the loader can load a specific item. This loader can only load items that are of type\n\t * {{#crossLink \"Types/VIDEO:property\"}}{{/crossLink}}.\n\t * @method canLoadItem\n\t * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n\t * @returns {Boolean} Whether the loader can load the item.\n\t * @static\n\t */\n\ts.canLoadItem = function (item) {\n\t\treturn item.type == createjs.Types.VIDEO;\n\t};\n\n\tcreatejs.VideoLoader = createjs.promote(VideoLoader, \"AbstractMediaLoader\");\n\n}());\n\n//##############################################################################\n// SpriteSheetLoader.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * A loader for EaselJS SpriteSheets. Images inside the spritesheet definition are loaded before the loader\n\t * completes. To load SpriteSheets using JSONP, specify a {{#crossLink \"LoadItem/callback:property\"}}{{/crossLink}}\n\t * as part of the {{#crossLink \"LoadItem\"}}{{/crossLink}}. Note that the {{#crossLink \"JSONLoader\"}}{{/crossLink}}\n\t * and {{#crossLink \"JSONPLoader\"}}{{/crossLink}} are higher priority loaders, so SpriteSheets <strong>must</strong>\n\t * set the {{#crossLink \"LoadItem\"}}{{/crossLink}} {{#crossLink \"LoadItem/type:property\"}}{{/crossLink}} property\n\t * to {{#crossLink \"Types/SPRITESHEET:property\"}}{{/crossLink}}.\n\t *\n\t * The {{#crossLink \"LoadItem\"}}{{/crossLink}} {{#crossLink \"LoadItem/crossOrigin:property\"}}{{/crossLink}} as well\n\t * as the {{#crossLink \"LoadQueue's\"}}{{/crossLink}} `basePath` argument and {{#crossLink \"LoadQueue/_preferXHR\"}}{{/crossLink}}\n\t * property supplied to the {{#crossLink \"LoadQueue\"}}{{/crossLink}} are passed on to the sub-manifest that loads\n\t * the SpriteSheet images.\n\t *\n\t * Note that the SpriteSheet JSON does not respect the {{#crossLink \"LoadQueue/_preferXHR:property\"}}{{/crossLink}}\n\t * property, which should instead be determined by the presence of a {{#crossLink \"LoadItem/callback:property\"}}{{/crossLink}}\n\t * property on the SpriteSheet load item. This is because the JSON loaded will have a different format depending on\n\t * if it is loaded as JSON, so just changing `preferXHR` is not enough to change how it is loaded.\n\t * @class SpriteSheetLoader\n\t * @param {LoadItem|Object} loadItem\n\t * @extends AbstractLoader\n\t * @constructor\n\t */\n\tfunction SpriteSheetLoader(loadItem, preferXHR) {\n\t\tthis.AbstractLoader_constructor(loadItem, preferXHR, createjs.Types.SPRITESHEET);\n\n\t\t// protected properties\n\t\t/**\n\t\t * An internal queue which loads the SpriteSheet's images.\n\t\t * @method _manifestQueue\n\t\t * @type {LoadQueue}\n\t\t * @private\n\t\t */\n\t\tthis._manifestQueue = null;\n\t}\n\n\tvar p = createjs.extend(SpriteSheetLoader, createjs.AbstractLoader);\n\tvar s = SpriteSheetLoader;\n\n\t// static properties\n\t/**\n\t * The amount of progress that the manifest itself takes up.\n\t * @property SPRITESHEET_PROGRESS\n\t * @type {number}\n\t * @default 0.25 (25%)\n\t * @private\n\t * @static\n\t */\n\ts.SPRITESHEET_PROGRESS = 0.25;\n\n\t// static methods\n\t/**\n\t * Determines if the loader can load a specific item. This loader can only load items that are of type\n\t * {{#crossLink \"Types/SPRITESHEET:property\"}}{{/crossLink}}\n\t * @method canLoadItem\n\t * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n\t * @returns {Boolean} Whether the loader can load the item.\n\t * @static\n\t */\n\ts.canLoadItem = function (item) {\n\t\treturn item.type == createjs.Types.SPRITESHEET;\n\t};\n\n\t// public methods\n\tp.destroy = function() {\n\t\tthis.AbstractLoader_destroy();\n\t\tthis._manifestQueue.close();\n\t};\n\n\t// protected methods\n\tp._createRequest = function() {\n\t\tvar callback = this._item.callback;\n\t\tif (callback != null) {\n\t\t\tthis._request = new createjs.JSONPLoader(this._item);\n\t\t} else {\n\t\t\tthis._request = new createjs.JSONLoader(this._item);\n\t\t}\n\t};\n\n\tp.handleEvent = function (event) {\n\t\tswitch (event.type) {\n\t\t\tcase \"complete\":\n\t\t\t\tthis._rawResult = event.target.getResult(true);\n\t\t\t\tthis._result = event.target.getResult();\n\t\t\t\tthis._sendProgress(s.SPRITESHEET_PROGRESS);\n\t\t\t\tthis._loadManifest(this._result);\n\t\t\t\treturn;\n\t\t\tcase \"progress\":\n\t\t\t\tevent.loaded *= s.SPRITESHEET_PROGRESS;\n\t\t\t\tthis.progress = event.loaded / event.total;\n\t\t\t\tif (isNaN(this.progress) || this.progress == Infinity) { this.progress = 0; }\n\t\t\t\tthis._sendProgress(event);\n\t\t\t\treturn;\n\t\t}\n\t\tthis.AbstractLoader_handleEvent(event);\n\t};\n\n\t/**\n\t * Create and load the images once the SpriteSheet JSON has been loaded.\n\t * @method _loadManifest\n\t * @param {Object} json\n\t * @private\n\t */\n\tp._loadManifest = function (json) {\n\t\tif (json && json.images) {\n\t\t\tvar queue = this._manifestQueue = new createjs.LoadQueue(this._preferXHR, this._item.path, this._item.crossOrigin);\n\t\t\tqueue.on(\"complete\", this._handleManifestComplete, this, true);\n\t\t\tqueue.on(\"fileload\", this._handleManifestFileLoad, this);\n\t\t\tqueue.on(\"progress\", this._handleManifestProgress, this);\n\t\t\tqueue.on(\"error\", this._handleManifestError, this, true);\n\t\t\tqueue.loadManifest(json.images);\n\t\t}\n\t};\n\n\t/**\n\t * An item from the {{#crossLink \"_manifestQueue:property\"}}{{/crossLink}} has completed.\n\t * @method _handleManifestFileLoad\n\t * @param {Event} event\n\t * @private\n\t */\n\tp._handleManifestFileLoad = function (event) {\n\t\tvar image = event.result;\n\t\tif (image != null) {\n\t\t\tvar images = this.getResult().images;\n\t\t\tvar pos = images.indexOf(event.item.src);\n\t\t\timages[pos] = image;\n\t\t}\n\t};\n\n\t/**\n\t * The images have completed loading. This triggers the {{#crossLink \"AbstractLoader/complete:event\"}}{{/crossLink}}\n\t * {{#crossLink \"Event\"}}{{/crossLink}} from the SpriteSheetLoader.\n\t * @method _handleManifestComplete\n\t * @param {Event} event\n\t * @private\n\t */\n\tp._handleManifestComplete = function (event) {\n\t\tthis._result = new createjs.SpriteSheet(this._result);\n\t\tthis._loadedItems = this._manifestQueue.getItems(true);\n\t\tthis._sendComplete();\n\t};\n\n\t/**\n\t * The images {{#crossLink \"LoadQueue\"}}{{/crossLink}} has reported progress.\n\t * @method _handleManifestProgress\n\t * @param {ProgressEvent} event\n\t * @private\n\t */\n\tp._handleManifestProgress = function (event) {\n\t\tthis.progress = event.progress * (1 - s.SPRITESHEET_PROGRESS) + s.SPRITESHEET_PROGRESS;\n\t\tthis._sendProgress(this.progress);\n\t};\n\n\t/**\n\t * An image has reported an error.\n\t * @method _handleManifestError\n\t * @param {ErrorEvent} event\n\t * @private\n\t */\n\tp._handleManifestError = function (event) {\n\t\tvar newEvent = new createjs.Event(\"fileerror\");\n\t\tnewEvent.item = event.data;\n\t\tthis.dispatchEvent(newEvent);\n\t};\n\n\tcreatejs.SpriteSheetLoader = createjs.promote(SpriteSheetLoader, \"AbstractLoader\");\n\n}());\n\n//##############################################################################\n// SVGLoader.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * A loader for SVG files.\n\t * @class SVGLoader\n\t * @param {LoadItem|Object} loadItem\n\t * @param {Boolean} preferXHR\n\t * @extends AbstractLoader\n\t * @constructor\n\t */\n\tfunction SVGLoader(loadItem, preferXHR) {\n\t\tthis.AbstractLoader_constructor(loadItem, preferXHR, createjs.Types.SVG);\n\n\t\t// public properties\n\t\tthis.resultFormatter = this._formatResult;\n\n\t\t// protected properties\n\t\tthis._tagSrcAttribute = \"data\";\n\n\t\tif (preferXHR) {\n\t\t\tthis.setTag(createjs.Elements.svg());\n\t\t} else {\n\t\t\tthis.setTag(createjs.Elements.object());\n\t\t\tthis.getTag().type = \"image/svg+xml\";\n\t\t}\n\t};\n\n\tvar p = createjs.extend(SVGLoader, createjs.AbstractLoader);\n\tvar s = SVGLoader;\n\n\t// static methods\n\t/**\n\t * Determines if the loader can load a specific item. This loader can only load items that are of type\n\t * {{#crossLink \"Types/SVG:property\"}}{{/crossLink}}\n\t * @method canLoadItem\n\t * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n\t * @returns {Boolean} Whether the loader can load the item.\n\t * @static\n\t */\n\ts.canLoadItem = function (item) {\n\t\treturn item.type == createjs.Types.SVG;\n\t};\n\n\t// protected methods\n\t/**\n\t * The result formatter for SVG files.\n\t * @method _formatResult\n\t * @param {AbstractLoader} loader\n\t * @returns {Object}\n\t * @private\n\t */\n\tp._formatResult = function (loader) {\n\t\t// mime should be image/svg+xml, but Opera requires text/xml\n\t\tvar xml = createjs.DataUtils.parseXML(loader.getResult(true));\n\t\tvar tag = loader.getTag();\n\n\t\tif (!this._preferXHR && document.body.contains(tag)) {\n\t\t\tdocument.body.removeChild(tag);\n\t\t}\n\n\t\tif (xml.documentElement != null) {\n\t\t\tvar element = xml.documentElement;\n\t\t\t// Support loading an SVG from a different domain in ID\n\t\t\tif (document.importNode) {\n\t\t\t\telement = document.importNode(element, true);\n\t\t\t}\n\t\t\ttag.appendChild(element);\n\t\t\treturn tag;\n\t\t} else { // For browsers that don't support SVG, just give them the XML. (IE 9-8)\n\t\t\treturn xml;\n\t\t}\n\t};\n\n\tcreatejs.SVGLoader = createjs.promote(SVGLoader, \"AbstractLoader\");\n\n}());\n\n//##############################################################################\n// XMLLoader.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * A loader for CSS files.\n\t * @class XMLLoader\n\t * @param {LoadItem|Object} loadItem\n\t * @extends AbstractLoader\n\t * @constructor\n\t */\n\tfunction XMLLoader(loadItem) {\n\t\tthis.AbstractLoader_constructor(loadItem, true, createjs.Types.XML);\n\n\t\t// public properties\n\t\tthis.resultFormatter = this._formatResult;\n\t};\n\n\tvar p = createjs.extend(XMLLoader, createjs.AbstractLoader);\n\tvar s = XMLLoader;\n\n\t// static methods\n\t/**\n\t * Determines if the loader can load a specific item. This loader can only load items that are of type\n\t * {{#crossLink \"Types/XML:property\"}}{{/crossLink}}.\n\t * @method canLoadItem\n\t * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n\t * @returns {Boolean} Whether the loader can load the item.\n\t * @static\n\t */\n\ts.canLoadItem = function (item) {\n\t\treturn item.type == createjs.Types.XML;\n\t};\n\n\t// protected methods\n\t/**\n\t * The result formatter for XML files.\n\t * @method _formatResult\n\t * @param {AbstractLoader} loader\n\t * @returns {XMLDocument}\n\t * @private\n\t */\n\tp._formatResult = function (loader) {\n\t\treturn createjs.DataUtils.parseXML(loader.getResult(true));\n\t};\n\n\tcreatejs.XMLLoader = createjs.promote(XMLLoader, \"AbstractLoader\");\n\n}());\n"]},"metadata":{},"sourceType":"script"}