{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { Component } from 'react';\nimport NAV2D from './vendor/nav2d.js';\nimport ROS2D from './vendor/ros2d.js';\nimport ROSLIB from 'roslib';\nimport PropTypes from 'prop-types';\n\nvar Nav2d = function (_Component) {\n  _inherits(Nav2d, _Component);\n\n  function Nav2d() {\n    _classCallCheck(this, Nav2d);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  Nav2d.prototype.componentDidUpdate = function componentDidUpdate() {\n    this.nav.setCommand(this.props.command);\n\n    if (this.props.stationName) {\n      this.nav.setStationName(this.props.stationName);\n    }\n\n    console.log(\"station list\", this.props.station);\n\n    if (this.props.station) {\n      this.nav.syncStation(this.props.station);\n    }\n  };\n\n  Nav2d.prototype.componentDidMount = function componentDidMount() {\n    var ros = this.props.ros || new ROSLIB.Ros({\n      url: 'ws://localhost:9090'\n    });\n    var command = this.props.command || 'none';\n    var imageRobot = this.props.imageRobot;\n    var imageGoalArrow = this.props.imageGoalArrow;\n    var imageStationArrow = this.props.imageStationArrow;\n    var topic = this.props.topic || '/map';\n    var topic_costmap = this.props.topic_costmap || '/move_base/local_costmap/costmap';\n    var viewer = new ROS2D.Viewer({\n      divID: this.props.id,\n      width: this.props.width,\n      height: this.props.height\n    });\n    var zoomView = new ROS2D.ZoomView({\n      rootObject: viewer.scene\n    }); // Add panning to the viewer.\n\n    var panView = new ROS2D.PanView({\n      rootObject: viewer.scene\n    });\n    this.nav = new NAV2D.OccupancyGridClientNav({\n      ros: ros,\n      rootObject: viewer.scene,\n      viewer: viewer,\n      zoomView: zoomView,\n      panView: panView,\n      serverName: this.props.serverName,\n      topic: topic,\n      topic_costmap: topic_costmap,\n      continuous: true,\n      imageRobot: imageRobot,\n      imageGoalArrow: imageGoalArrow,\n      imageStationArrow: imageStationArrow,\n      command: command,\n      onSetGoal: this.props.onSetGoal,\n      onAddStation: this.props.onAddStation,\n      onClickStation: this.props.onClickStation\n    }); // Add zoom to the viewer.\n  };\n\n  Nav2d.prototype.render = function render() {\n    console.log(this.props);\n    return React.createElement('div', {\n      id: this.props.id\n    });\n  };\n\n  return Nav2d;\n}(Component);\n\nNav2d.defaultProps = {\n  ros: null,\n  nav: null,\n  id: 'nav2d',\n  width: 500,\n  height: 500,\n  serverName: '/move_base'\n};\nNav2d.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  ros: PropTypes.object,\n  id: PropTypes.string,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  serverName: PropTypes.string\n} : {};\nexport default Nav2d;","map":{"version":3,"sources":["/home/luong/kobuki_web/react-nav2djs-0.0.3/package/es/index.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","React","Component","NAV2D","ROS2D","ROSLIB","PropTypes","Nav2d","_Component","apply","arguments","componentDidUpdate","nav","setCommand","props","command","stationName","setStationName","console","log","station","syncStation","componentDidMount","ros","Ros","url","imageRobot","imageGoalArrow","imageStationArrow","topic","topic_costmap","viewer","Viewer","divID","id","width","height","zoomView","ZoomView","rootObject","scene","panView","PanView","OccupancyGridClientNav","serverName","continuous","onSetGoal","onAddStation","onClickStation","render","createElement","defaultProps","propTypes","process","env","NODE_ENV","object","string","number"],"mappings":"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","sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { Component } from 'react';\nimport NAV2D from './vendor/nav2d.js';\nimport ROS2D from './vendor/ros2d.js';\nimport ROSLIB from 'roslib';\nimport PropTypes from 'prop-types';\n\nvar Nav2d = function (_Component) {\n  _inherits(Nav2d, _Component);\n\n  function Nav2d() {\n    _classCallCheck(this, Nav2d);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  Nav2d.prototype.componentDidUpdate = function componentDidUpdate() {\n    this.nav.setCommand(this.props.command);\n    if (this.props.stationName) {\n      this.nav.setStationName(this.props.stationName);\n    }\n    console.log(\"station list\", this.props.station);\n    if (this.props.station) {\n      this.nav.syncStation(this.props.station);\n    }\n  }\n\n  Nav2d.prototype.componentDidMount = function componentDidMount() {\n    var ros = this.props.ros || new ROSLIB.Ros({\n      url: 'ws://localhost:9090'\n    });\n    var command = this.props.command || 'none';\n    var imageRobot = this.props.imageRobot;\n    var imageGoalArrow = this.props.imageGoalArrow;\n    var imageStationArrow = this.props.imageStationArrow;\n    var topic = this.props.topic || '/map';\n    var topic_costmap = this.props.topic_costmap || '/move_base/local_costmap/costmap';\n    var viewer = new ROS2D.Viewer({\n      divID: this.props.id,\n      width: this.props.width,\n      height: this.props.height\n    });\n    var zoomView = new ROS2D.ZoomView({\n      rootObject : viewer.scene,\n    });\n    // Add panning to the viewer.\n\t\tvar panView = new ROS2D.PanView({\n\t\t\trootObject : viewer.scene\n\t\t});\n    this.nav = new NAV2D.OccupancyGridClientNav({\n      ros: ros,\n      rootObject: viewer.scene,\n      viewer: viewer,\n      zoomView: zoomView,\n      panView: panView,\n      serverName: this.props.serverName,\n      topic: topic,\n      topic_costmap: topic_costmap,\n      continuous: true,\n      imageRobot: imageRobot,\n      imageGoalArrow: imageGoalArrow,\n      imageStationArrow: imageStationArrow,\n      command: command,\n      onSetGoal: this.props.onSetGoal,\n      onAddStation: this.props.onAddStation,\n      onClickStation: this.props.onClickStation,\n    });\n    // Add zoom to the viewer.\n  };\n\n  Nav2d.prototype.render = function render() {\n    console.log(this.props);\n    return React.createElement('div', { id: this.props.id });\n  };\n\n  return Nav2d;\n}(Component);\n\nNav2d.defaultProps = {\n  ros: null,\n  nav: null,\n  id: 'nav2d',\n  width: 500,\n  height: 500,\n  serverName: '/move_base'\n};\n\nNav2d.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  ros: PropTypes.object,\n  id: PropTypes.string,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  serverName: PropTypes.string\n} : {};\n\nexport default Nav2d;"]},"metadata":{},"sourceType":"module"}