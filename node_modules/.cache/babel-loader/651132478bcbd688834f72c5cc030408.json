{"ast":null,"code":"/**\n * @fileoverview\n * @author David Gossow - dgossow@willowgarage.com\n */\nvar Vector3 = require('./Vector3');\n\nvar Quaternion = require('./Quaternion');\n/**\n * A Pose in 3D space. Values are copied into this object.\n *\n *  @constructor\n *  @param options - object with following keys:\n *   * position - the Vector3 describing the position\n *   * orientation - the ROSLIB.Quaternion describing the orientation\n */\n\n\nfunction Pose(options) {\n  options = options || {}; // copy the values into this object if they exist\n\n  this.position = new Vector3(options.position);\n  this.orientation = new Quaternion(options.orientation);\n}\n/**\n * Apply a transform against this pose.\n *\n * @param tf the transform\n */\n\n\nPose.prototype.applyTransform = function (tf) {\n  this.position.multiplyQuaternion(tf.rotation);\n  this.position.add(tf.translation);\n  var tmp = tf.rotation.clone();\n  tmp.multiply(this.orientation);\n  this.orientation = tmp;\n};\n/**\n * Clone a copy of this pose.\n *\n * @returns the cloned pose\n */\n\n\nPose.prototype.clone = function () {\n  return new Pose(this);\n};\n\nmodule.exports = Pose;","map":{"version":3,"sources":["/home/luong/kobuki_web/react-nav2djs-0.0.3/package/node_modules/roslib/src/math/Pose.js"],"names":["Vector3","require","Quaternion","Pose","options","position","orientation","prototype","applyTransform","tf","multiplyQuaternion","rotation","add","translation","tmp","clone","multiply","module","exports"],"mappings":"AAAA;;;;AAKA,IAAIA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAArB;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,cAAD,CAAxB;AAEA;;;;;;;;;;AAQA,SAASE,IAAT,CAAcC,OAAd,EAAuB;AACrBA,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB,CADqB,CAErB;;AACA,OAAKC,QAAL,GAAgB,IAAIL,OAAJ,CAAYI,OAAO,CAACC,QAApB,CAAhB;AACA,OAAKC,WAAL,GAAmB,IAAIJ,UAAJ,CAAeE,OAAO,CAACE,WAAvB,CAAnB;AACD;AAED;;;;;;;AAKAH,IAAI,CAACI,SAAL,CAAeC,cAAf,GAAgC,UAASC,EAAT,EAAa;AAC3C,OAAKJ,QAAL,CAAcK,kBAAd,CAAiCD,EAAE,CAACE,QAApC;AACA,OAAKN,QAAL,CAAcO,GAAd,CAAkBH,EAAE,CAACI,WAArB;AACA,MAAIC,GAAG,GAAGL,EAAE,CAACE,QAAH,CAAYI,KAAZ,EAAV;AACAD,EAAAA,GAAG,CAACE,QAAJ,CAAa,KAAKV,WAAlB;AACA,OAAKA,WAAL,GAAmBQ,GAAnB;AACD,CAND;AAQA;;;;;;;AAKAX,IAAI,CAACI,SAAL,CAAeQ,KAAf,GAAuB,YAAW;AAChC,SAAO,IAAIZ,IAAJ,CAAS,IAAT,CAAP;AACD,CAFD;;AAIAc,MAAM,CAACC,OAAP,GAAiBf,IAAjB","sourcesContent":["/**\n * @fileoverview\n * @author David Gossow - dgossow@willowgarage.com\n */\n\nvar Vector3 = require('./Vector3');\nvar Quaternion = require('./Quaternion');\n\n/**\n * A Pose in 3D space. Values are copied into this object.\n *\n *  @constructor\n *  @param options - object with following keys:\n *   * position - the Vector3 describing the position\n *   * orientation - the ROSLIB.Quaternion describing the orientation\n */\nfunction Pose(options) {\n  options = options || {};\n  // copy the values into this object if they exist\n  this.position = new Vector3(options.position);\n  this.orientation = new Quaternion(options.orientation);\n}\n\n/**\n * Apply a transform against this pose.\n *\n * @param tf the transform\n */\nPose.prototype.applyTransform = function(tf) {\n  this.position.multiplyQuaternion(tf.rotation);\n  this.position.add(tf.translation);\n  var tmp = tf.rotation.clone();\n  tmp.multiply(this.orientation);\n  this.orientation = tmp;\n};\n\n/**\n * Clone a copy of this pose.\n *\n * @returns the cloned pose\n */\nPose.prototype.clone = function() {\n  return new Pose(this);\n};\n\nmodule.exports = Pose;"]},"metadata":{},"sourceType":"script"}