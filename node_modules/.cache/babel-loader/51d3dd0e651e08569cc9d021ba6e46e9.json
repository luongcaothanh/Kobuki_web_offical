{"ast":null,"code":"var _jsxFileName = \"/home/luong/kobuki_web/src/components/Header/Header.js\";\nimport React, { Component } from \"react\";\nimport \"./Header.css\";\nimport \"../CommonStyle.css\";\nimport { Container, Alert, Button } from \"react-bootstrap\";\nimport ROSLIB from \"roslib\";\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.ros = props.ros || null;\n    this.state = {\n      value: '',\n      isConnected: false\n    };\n    this.connectCb = props.connectCb;\n    this.disconnectCb = props.disconnectCb;\n    this.url = \"ws://localhost:9090\";\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.setGoal = this.setGoal.bind(this);\n    this.getStations = this.getStations.bind(this);\n    this.addStation = this.addStation.bind(this);\n    this.deleteStation = this.deleteStation.bind(this);\n  }\n\n  handleChange(event) {\n    this.state.value = event.target.value;\n  }\n\n  handleSubmit(event) {\n    if (!this.state.isConnected) {\n      if (this.state.value === '') {\n        this.connectCb(this.url);\n      } else {\n        this.connectCb(this.state.value);\n      }\n    } else {\n      this.disconnectCb();\n    }\n\n    event.preventDefault();\n  }\n\n  setGoal() {\n    var actionClient = new ROSLIB.ActionClient({\n      ros: this.props.ros,\n      serverName: '/move_base',\n      actionName: 'move_base_msgs/MoveBaseAction'\n    });\n    var positionVec3 = new ROSLIB.Vector3(null);\n    var orientation = new ROSLIB.Quaternion({\n      x: 0,\n      y: 0,\n      z: 0,\n      w: 1.0\n    });\n    positionVec3.x = 3.0;\n    positionVec3.y = 0.0;\n    var pose = new ROSLIB.Pose({\n      position: positionVec3,\n      orientation: orientation\n    });\n    var goal = new ROSLIB.Goal({\n      actionClient: actionClient,\n      goalMessage: {\n        target_pose: {\n          header: {\n            frame_id: 'map'\n          },\n          pose: pose\n        }\n      }\n    });\n    console.log(\"send goal\");\n    goal.send();\n  }\n\n  getStations() {\n    var getStationsClient = new ROSLIB.Service({\n      ros: this.ros,\n      name: '/get_station_list',\n      serviceType: 'kobuki_ui/GetStationList'\n    });\n    var request = new ROSLIB.ServiceRequest({});\n    getStationsClient.callService(request, function (result) {\n      console.log(result.station_list);\n    }, function (error) {\n      console.log(error);\n    });\n  }\n\n  addStation() {\n    var addStationsClient = new ROSLIB.Service({\n      ros: this.ros,\n      name: '/add_station',\n      serviceType: 'kobuki_ui/AddStation'\n    });\n    var request = new ROSLIB.ServiceRequest({\n      name: \"station10\",\n      positionX: 2.121,\n      positionY: 5.112,\n      positionZ: 0,\n      orientationX: 0,\n      orientationY: 0,\n      orientationZ: -21.22,\n      orientationW: 1.2121,\n      id: \"idStation10\"\n    });\n    addStationsClient.callService(request, function (result) {\n      console.log(result.success);\n    }, function (error) {\n      console.log(error);\n    });\n  }\n\n  deleteStation() {\n    console.log(\"delete station\");\n  }\n\n  componentWillReceiveProps(props) {\n    this.setState({\n      isConnected: props.isConnected\n    });\n    this.ros = this.props.ros;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      className: \"header-common w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      variant: this.state.isConnected ? \"success\" : \"danger\",\n      style: {\n        margin: \"0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }, this.state.isConnected ? \"Server is online !\" : \"Server is not available\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"bg-primary\",\n      onClick: this.setGoal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, \"Set goal\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"bg-primary ms-2\",\n      onClick: this.getStations,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, \"Get station\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"bg-primary ms-2\",\n      onClick: this.addStation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }, \"Add station\"));\n  }\n\n}\n\nexport default Header;","map":{"version":3,"sources":["/home/luong/kobuki_web/src/components/Header/Header.js"],"names":["React","Component","Container","Alert","Button","ROSLIB","Header","constructor","props","ros","state","value","isConnected","connectCb","disconnectCb","url","handleChange","bind","handleSubmit","setGoal","getStations","addStation","deleteStation","event","target","preventDefault","actionClient","ActionClient","serverName","actionName","positionVec3","Vector3","orientation","Quaternion","x","y","z","w","pose","Pose","position","goal","Goal","goalMessage","target_pose","header","frame_id","console","log","send","getStationsClient","Service","name","serviceType","request","ServiceRequest","callService","result","station_list","error","addStationsClient","positionX","positionY","positionZ","orientationX","orientationY","orientationZ","orientationW","id","success","componentWillReceiveProps","setState","render","margin"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Header.css\";\nimport \"../CommonStyle.css\"\nimport { Container, Alert, Button } from \"react-bootstrap\";\nimport ROSLIB from \"roslib\";\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.ros = props.ros || null;\n    this.state = {\n      value: '',\n      isConnected: false,\n    };\n    this.connectCb = props.connectCb;\n    this.disconnectCb = props.disconnectCb;\n    this.url = \"ws://localhost:9090\";\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.setGoal = this.setGoal.bind(this);\n    this.getStations = this.getStations.bind(this);\n    this.addStation = this.addStation.bind(this);\n    this.deleteStation = this.deleteStation.bind(this);\n  }\n\n  handleChange(event) {\n    this.state.value = event.target.value;\n  }\n\n  handleSubmit(event) {\n    if (!this.state.isConnected) {\n      if (this.state.value === '') {\n        this.connectCb(this.url);\n      } else {\n        this.connectCb(this.state.value);\n      }\n    } else {\n      this.disconnectCb();\n    }\n    event.preventDefault();\n  }\n\n  setGoal() {\n    var actionClient = new ROSLIB.ActionClient({\n      ros : this.props.ros,\n      serverName : '/move_base',\n      actionName : 'move_base_msgs/MoveBaseAction'\n    });\n\n    var positionVec3 = new ROSLIB.Vector3(null);\n    var orientation = new ROSLIB.Quaternion({x:0, y:0, z:0, w:1.0});\n    \n    positionVec3.x = 3.0;\n    positionVec3.y = 0.0;\n\n    var pose = new ROSLIB.Pose({\n      position : positionVec3,\n      orientation : orientation\n    });\n\n    var goal = new ROSLIB.Goal({\n      actionClient : actionClient,\n      goalMessage : {\n        target_pose : {\n          header : {\n            frame_id : 'map'\n          },\n          pose : pose\n        }\n      }\n    });\n\n    console.log(\"send goal\");\n    goal.send();\n  }\n\n  getStations() {\n    var getStationsClient = new ROSLIB.Service({\n      ros : this.ros,\n      name : '/get_station_list',\n      serviceType : 'kobuki_ui/GetStationList'\n    });\n    var request = new ROSLIB.ServiceRequest({});\n    \n    getStationsClient.callService(request, function(result) {\n      console.log(result.station_list);\n    }, function(error) {\n      console.log(error);\n    });\n  }\n\n  addStation() {\n    var addStationsClient = new ROSLIB.Service({\n      ros : this.ros,\n      name : '/add_station',\n      serviceType : 'kobuki_ui/AddStation'\n    });\n    var request = new ROSLIB.ServiceRequest({\n      name: \"station10\",\n      positionX: 2.121,\n      positionY: 5.112,\n      positionZ: 0,\n      orientationX: 0,\n      orientationY: 0,\n      orientationZ: -21.22,\n      orientationW: 1.2121,\n      id: \"idStation10\",\n    });\n    \n    addStationsClient.callService(request, function(result) {\n      console.log(result.success);\n    }, function(error) {\n      console.log(error);\n    });\n  }\n\n  deleteStation() {\n    console.log(\"delete station\");\n  }\n\n  componentWillReceiveProps(props) {\n    this.setState({ isConnected: props.isConnected })\n    this.ros = this.props.ros;\n  }\n\n  render() {\n    return (\n      <Container className=\"header-common w-100\">\n        <Alert variant={this.state.isConnected ? \"success\" : \"danger\"} style={{margin: \"0\"}}>\n          {this.state.isConnected ? \"Server is online !\" : \"Server is not available\"}\n        </Alert>\n        <Button className=\"bg-primary\" onClick={this.setGoal}>Set goal</Button>\n        <Button className=\"bg-primary ms-2\" onClick={this.getStations}>Get station</Button>\n        <Button className=\"bg-primary ms-2\" onClick={this.addStation}>Add station</Button>\n      </Container>\n    )\n  }\n}\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}