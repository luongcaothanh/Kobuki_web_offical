{"ast":null,"code":"var _jsxFileName = \"/home/luong/kobuki_web/src/components/Map/Map.js\";\nimport React, { Component } from \"react\";\nimport { Container, Card, Button, Form, Col, Row, Alert } from \"react-bootstrap\";\nimport ROSLIB from \"roslib\";\nimport Nav2d from \"react-nav2djs\";\nimport \"./Map.css\";\nimport \"../CommonStyle.css\";\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n    this.ros = props.ros || null;\n    this.state = {\n      command: 'none',\n      message: 'Robot is ready !',\n      stationName: 'NoName',\n      enableCancel: false,\n      stations: []\n    };\n    this.stationListLoad = [];\n    this.onAddStation = this.onAddStation.bind(this);\n    this.onClickStation = this.onClickStation.bind(this);\n    this.onSetGoal = this.onSetGoal.bind(this);\n    this.actionClient = null;\n    this.cancelAssignmentService = null;\n    this.InsertStationService = null;\n    this.DeleteStationService = null;\n    this.GetStationService = null;\n  }\n\n  componentDidMount() {\n    if (this.props.ros != null) {\n      this.ros = this.props.ros;\n      var serverName = this.props.serverName || '/move_base';\n      var actionName = this.props.actionName || 'move_base_msgs/MoveBaseAction';\n      this.actionClient = new ROSLIB.ActionClient({\n        ros: this.ros,\n        actionName: actionName,\n        serverName: serverName\n      }); // this.cancelAssignmentService = new ROSLIB.Service({\n      //   ros: this.ros,\n      //   name: '/rtabmap/cancel_goal',\n      //   serviceType: 'std_srvs/Empty'\n      // });\n      // this.InsertStationService = new ROSLIB.Service({\n      //   ros: this.ros,\n      //   name: '/InsertStation',\n      //   serviceType: 'jarvis_web_server/InsertStation',\n      // });\n      // this.DeleteStationService = new ROSLIB.Service({\n      //   ros: this.ros,\n      //   name: '/DeleteStation',\n      //   serviceType: 'jarvis_web_server/DeleteStation',\n      // });\n      // this.GetStationService = new ROSLIB.Service({\n      //   ros: this.ros,\n      //   name: '/GetStation',\n      //   serviceType: 'jarvis_web_server/GetStation',\n      // });\n      // this.GetStationService.callService(null,(res) => {\n      //   // this.stationListLoad = res.stations;\n      //   this.setState({stations: res.stations});\n      // });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      className: \"box-margin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      border: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: {\n        fontSize: \"1.2rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 54\n      }\n    }, \"Map\")), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      className: \"map-container\",\n      id: \"map\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      className: \"map-controller\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"map-button\",\n      variant: \"danger\",\n      onClick: () => this.setState({\n        command: 'SetGoal',\n        message: 'Send goal to your robot'\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, \"Set Goal\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"map-button\",\n      variant: \"success\",\n      onClick: () => this.setState({\n        command: 'AddStation',\n        message: 'Add new station',\n        stationName: 'NoName'\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, \"Add Station\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"map-button\",\n      variant: \"outline-success\",\n      onClick: () => this.setState({\n        command: 'DeleteStation',\n        message: 'Click to delete station'\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, \"Delete Station\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"map-button\",\n      variant: \"warning\",\n      onClick: () => this.setState({\n        command: 'none',\n        message: 'Robot is ready !'\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, \"Cancel\")), /*#__PURE__*/React.createElement(Container, {\n      style: {\n        width: \"28rem\",\n        height: \"4rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, this.state.command == 'AddStation' && /*#__PURE__*/React.createElement(Form, {\n      onChange: event => this.setState({\n        stationName: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formHorizontalEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, \"Station:\"), /*#__PURE__*/React.createElement(Col, {\n      sm: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"ex: Table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 27\n      }\n    })))), this.state.command != 'AddStation' && /*#__PURE__*/React.createElement(Alert, {\n      variant: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, this.state.message)), /*#__PURE__*/React.createElement(Nav2d, {\n      id: \"random\",\n      imageRobot: require('./jarvis.png'),\n      imageGoalArrow: require('./arrow-red.png'),\n      imageStationArrow: require('./arrow-green.png'),\n      width: 720,\n      height: 480,\n      ros: this.ros,\n      topic: \"/map\",\n      topic_costmap: \"/move_base/global_costmap/costmap\",\n      command: this.state.command,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      disabled: this.state.enableCancel ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, \"Cancel Assignment\"))))));\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/home/luong/kobuki_web/src/components/Map/Map.js"],"names":["React","Component","Container","Card","Button","Form","Col","Row","Alert","ROSLIB","Nav2d","Map","constructor","props","ros","state","command","message","stationName","enableCancel","stations","stationListLoad","onAddStation","bind","onClickStation","onSetGoal","actionClient","cancelAssignmentService","InsertStationService","DeleteStationService","GetStationService","componentDidMount","serverName","actionName","ActionClient","render","fontSize","setState","width","height","event","target","value","require"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Container, Card, Button, Form, Col, Row, Alert } from \"react-bootstrap\";\nimport ROSLIB from \"roslib\";\nimport Nav2d from \"react-nav2djs\";\nimport \"./Map.css\";\nimport \"../CommonStyle.css\";\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n    this.ros = props.ros || null;\n    this.state = {\n      command: 'none',\n      message: 'Robot is ready !',\n      stationName: 'NoName',\n      enableCancel: false,\n      stations: [],\n    }\n    this.stationListLoad = [];\n    this.onAddStation = this.onAddStation.bind(this);\n    this.onClickStation = this.onClickStation.bind(this);\n    this.onSetGoal = this.onSetGoal.bind(this);\n    this.actionClient = null;\n    this.cancelAssignmentService = null;\n    this.InsertStationService = null;\n    this.DeleteStationService = null;\n    this.GetStationService = null;\n  }\n\n  componentDidMount() {\n    if (this.props.ros != null) {\n      this.ros = this.props.ros;\n      var serverName = this.props.serverName || '/move_base';\n      var actionName = this.props.actionName || 'move_base_msgs/MoveBaseAction';\n      this.actionClient = new ROSLIB.ActionClient({\n        ros: this.ros,\n        actionName: actionName,\n        serverName: serverName\n      });\n      // this.cancelAssignmentService = new ROSLIB.Service({\n      //   ros: this.ros,\n      //   name: '/rtabmap/cancel_goal',\n      //   serviceType: 'std_srvs/Empty'\n      // });\n      // this.InsertStationService = new ROSLIB.Service({\n      //   ros: this.ros,\n      //   name: '/InsertStation',\n      //   serviceType: 'jarvis_web_server/InsertStation',\n      // });\n      // this.DeleteStationService = new ROSLIB.Service({\n      //   ros: this.ros,\n      //   name: '/DeleteStation',\n      //   serviceType: 'jarvis_web_server/DeleteStation',\n      // });\n      // this.GetStationService = new ROSLIB.Service({\n      //   ros: this.ros,\n      //   name: '/GetStation',\n      //   serviceType: 'jarvis_web_server/GetStation',\n      // });\n      // this.GetStationService.callService(null,(res) => {\n      //   // this.stationListLoad = res.stations;\n      //   this.setState({stations: res.stations});\n      // });\n    }\n  }\n\n  render() {\n    return (\n      <Container className=\"box-margin\">\n        <Card border=\"secondary\">\n          <Card.Header style={{fontSize: \"1.2rem\" }}><strong>Map</strong></Card.Header>\n          <Card.Body>\n            <Container className=\"map-container\" id=\"map\">\n              <Container className=\"map-controller\">\n                <Button className=\"map-button\" variant='danger' onClick={() => this.setState({ command: 'SetGoal', message: 'Send goal to your robot' })}>Set Goal</Button>\n                {/* <Button className=\"map-button\" variant='outline-danger' onClick={() => this.setState({command: 'CancelGoal'})}>Cancel Goal</Button> */}\n                <Button className=\"map-button\" variant='success' onClick={() => this.setState({ command: 'AddStation', message: 'Add new station', stationName: 'NoName' })}>Add Station</Button>\n                <Button className=\"map-button\" variant='outline-success' onClick={() => this.setState({ command: 'DeleteStation', message: 'Click to delete station' })}>Delete Station</Button>\n                <Button className=\"map-button\" variant='warning' onClick={() => this.setState({ command: 'none', message: 'Robot is ready !' })}>Cancel</Button>\n              </Container>\n                <Container style={{ width: \"28rem\", height: \"4rem\" }}>\n                  {this.state.command == 'AddStation' &&\n                    <Form onChange={(event) => this.setState({stationName: event.target.value})}>\n                      <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n                        <Form.Label column sm={3}>\n                          Station:\n                        </Form.Label>\n                        <Col sm={8}>\n                          <Form.Control type=\"text\" placeholder=\"ex: Table\" />\n                        </Col>\n                      </Form.Group>\n                    </Form>\n                  }\n                  {this.state.command != 'AddStation' &&\n                    <Alert variant=\"info\">{this.state.message}</Alert>\n                  }\n                </Container>\n              <Nav2d\n                id='random'\n                imageRobot={require('./jarvis.png')}\n                imageGoalArrow={require('./arrow-red.png')}\n                imageStationArrow={require('./arrow-green.png')}\n                width={720}\n                height={480}\n                ros={this.ros}\n                topic='/map'\n                topic_costmap='/move_base/global_costmap/costmap'\n                command={this.state.command}\n              />\n              <Container>\n                <Button\n                  variant=\"danger\"\n                  disabled={this.state.enableCancel ? false : true}\n                  >\n                  Cancel Assignment\n                </Button>\n              </Container>\n            </Container>\n          </Card.Body>\n        </Card>\n      </Container>\n    )\n  }\n}\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}