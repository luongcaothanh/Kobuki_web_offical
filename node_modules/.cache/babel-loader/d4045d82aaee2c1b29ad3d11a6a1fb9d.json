{"ast":null,"code":"/*!\n* SoundJS\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2010 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n//##############################################################################\n// version.js\n//##############################################################################\nwindow.createjs = window.createjs || {};\n\n(function () {\n  /**\n   * Static class holding library specific information such as the version and buildDate of the library.\n   * The SoundJS class has been renamed {{#crossLink \"Sound\"}}{{/crossLink}}.  Please see {{#crossLink \"Sound\"}}{{/crossLink}}\n   * for information on using sound.\n   * @class SoundJS\n   **/\n  var s = createjs.SoundJS = createjs.SoundJS || {};\n  /**\n   * The version string for this release.\n   * @property version\n   * @type String\n   * @static\n   **/\n\n  s.version =\n  /*=version*/\n  \"1.0.0\"; // injected by build process\n\n  /**\n   * The build date for this release in UTC format.\n   * @property buildDate\n   * @type String\n   * @static\n   **/\n\n  s.buildDate =\n  /*=date*/\n  \"Tue, 10 Oct 2017 12:24:35 GMT\"; // injected by build process\n})(); //##############################################################################\n// extend.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n/**\n * @class Utility Methods\n */\n\n/**\n * Sets up the prototype chain and constructor property for a new class.\n *\n * This should be called right after creating the class constructor.\n *\n * \tfunction MySubClass() {}\n * \tcreatejs.extend(MySubClass, MySuperClass);\n * \tMySubClass.prototype.doSomething = function() { }\n *\n * \tvar foo = new MySubClass();\n * \tconsole.log(foo instanceof MySuperClass); // true\n * \tconsole.log(foo.prototype.constructor === MySubClass); // true\n *\n * @method extend\n * @param {Function} subclass The subclass.\n * @param {Function} superclass The superclass to extend.\n * @return {Function} Returns the subclass's new prototype.\n */\n\ncreatejs.extend = function (subclass, superclass) {\n  \"use strict\";\n\n  function o() {\n    this.constructor = subclass;\n  }\n\n  o.prototype = superclass.prototype;\n  return subclass.prototype = new o();\n}; //##############################################################################\n// promote.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n/**\n * @class Utility Methods\n */\n\n/**\n * Promotes any methods on the super class that were overridden, by creating an alias in the format `prefix_methodName`.\n * It is recommended to use the super class's name as the prefix.\n * An alias to the super class's constructor is always added in the format `prefix_constructor`.\n * This allows the subclass to call super class methods without using `function.call`, providing better performance.\n *\n * For example, if `MySubClass` extends `MySuperClass`, and both define a `draw` method, then calling `promote(MySubClass, \"MySuperClass\")`\n * would add a `MySuperClass_constructor` method to MySubClass and promote the `draw` method on `MySuperClass` to the\n * prototype of `MySubClass` as `MySuperClass_draw`.\n *\n * This should be called after the class's prototype is fully defined.\n *\n * \tfunction ClassA(name) {\n * \t\tthis.name = name;\n * \t}\n * \tClassA.prototype.greet = function() {\n * \t\treturn \"Hello \"+this.name;\n * \t}\n *\n * \tfunction ClassB(name, punctuation) {\n * \t\tthis.ClassA_constructor(name);\n * \t\tthis.punctuation = punctuation;\n * \t}\n * \tcreatejs.extend(ClassB, ClassA);\n * \tClassB.prototype.greet = function() {\n * \t\treturn this.ClassA_greet()+this.punctuation;\n * \t}\n * \tcreatejs.promote(ClassB, \"ClassA\");\n *\n * \tvar foo = new ClassB(\"World\", \"!?!\");\n * \tconsole.log(foo.greet()); // Hello World!?!\n *\n * @method promote\n * @param {Function} subclass The class to promote super class methods on.\n * @param {String} prefix The prefix to add to the promoted method names. Usually the name of the superclass.\n * @return {Function} Returns the subclass.\n */\n\ncreatejs.promote = function (subclass, prefix) {\n  \"use strict\";\n\n  var subP = subclass.prototype,\n      supP = Object.getPrototypeOf && Object.getPrototypeOf(subP) || subP.__proto__;\n\n  if (supP) {\n    subP[(prefix += \"_\") + \"constructor\"] = supP.constructor; // constructor is not always innumerable\n\n    for (var n in supP) {\n      if (subP.hasOwnProperty(n) && typeof supP[n] == \"function\") {\n        subP[prefix + n] = supP[n];\n      }\n    }\n  }\n\n  return subclass;\n}; //##############################################################################\n// deprecate.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n/**\n * @class Utility Methods\n */\n\n/**\n * Wraps deprecated methods so they still be used, but throw warnings to developers.\n *\n *\tobj.deprecatedMethod = createjs.deprecate(\"Old Method Name\", obj._fallbackMethod);\n *\n * The recommended approach for deprecated properties is:\n *\n *\ttry {\n *\t\tObj\tect.defineProperties(object, {\n *\t\t\treadyOnlyProp: { get: createjs.deprecate(\"readOnlyProp\", function() { return this.alternateProp; }) },\n *\t\t\treadWriteProp: {\n *\t\t\t\tget: createjs.deprecate(\"readOnlyProp\", function() { return this.alternateProp; }),\n *\t\t\t\tset: createjs.deprecate(\"readOnlyProp\", function(val) { this.alternateProp = val; })\n *\t\t});\n *\t} catch (e) {}\n *\n * @method deprecate\n * @param {Function} [fallbackMethod=null] A method to call when the deprecated method is used. See the example for how\n * @param {String} [name=null] The name of the method or property to display in the console warning.\n * to deprecate properties.\n * @return {Function} If a fallbackMethod is supplied, returns a closure that will call the fallback method after\n * logging the warning in the console.\n */\n\ncreatejs.deprecate = function (fallbackMethod, name) {\n  \"use strict\";\n\n  return function () {\n    var msg = \"Deprecated property or method '\" + name + \"'. See docs for info.\";\n    console && (console.warn ? console.warn(msg) : console.log(msg));\n    return fallbackMethod && fallbackMethod.apply(this, arguments);\n  };\n}; //##############################################################################\n// indexOf.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n/**\n * @class Utility Methods\n */\n\n/**\n * Finds the first occurrence of a specified value searchElement in the passed in array, and returns the index of\n * that value.  Returns -1 if value is not found.\n *\n *      var i = createjs.indexOf(myArray, myElementToFind);\n *\n * @method indexOf\n * @param {Array} array Array to search for searchElement\n * @param searchElement Element to find in array.\n * @return {Number} The first index of searchElement in array.\n */\n\ncreatejs.indexOf = function (array, searchElement) {\n  \"use strict\";\n\n  for (var i = 0, l = array.length; i < l; i++) {\n    if (searchElement === array[i]) {\n      return i;\n    }\n  }\n\n  return -1;\n}; //##############################################################################\n// proxy.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n/**\n * Various utilities that the CreateJS Suite uses. Utilities are created as separate files, and will be available on the\n * createjs namespace directly.\n *\n * <h4>Example</h4>\n *\n *      myObject.addEventListener(\"change\", createjs.proxy(myMethod, scope));\n *\n * @class Utility Methods\n * @main Utility Methods\n */\n\n(function () {\n  \"use strict\";\n  /**\n   * A function proxy for methods. By default, JavaScript methods do not maintain scope, so passing a method as a\n   * callback will result in the method getting called in the scope of the caller. Using a proxy ensures that the\n   * method gets called in the correct scope.\n   *\n   * Additional arguments can be passed that will be applied to the function when it is called.\n   *\n   * <h4>Example</h4>\n   *\n   *      myObject.addEventListener(\"event\", createjs.proxy(myHandler, this, arg1, arg2));\n   *\n   *      function myHandler(arg1, arg2) {\n   *           // This gets called when myObject.myCallback is executed.\n   *      }\n   *\n   * @method proxy\n   * @param {Function} method The function to call\n   * @param {Object} scope The scope to call the method name on\n   * @param {mixed} [arg] * Arguments that are appended to the callback for additional params.\n   * @public\n   * @static\n   */\n\n  createjs.proxy = function (method, scope) {\n    var aArgs = Array.prototype.slice.call(arguments, 2);\n    return function () {\n      return method.apply(scope, Array.prototype.slice.call(arguments, 0).concat(aArgs));\n    };\n  };\n})(); //##############################################################################\n// BrowserDetect.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n/**\n * @class Utility Methods\n */\n\n(function () {\n  \"use strict\";\n  /**\n   * An object that determines the current browser, version, operating system, and other environment\n   * variables via user agent string.\n   *\n   * Used for audio because feature detection is unable to detect the many limitations of mobile devices.\n   *\n   * <h4>Example</h4>\n   *\n   *      if (createjs.BrowserDetect.isIOS) { // do stuff }\n   *\n   * @property BrowserDetect\n   * @type {Object}\n   * @param {Boolean} isFirefox True if our browser is Firefox.\n   * @param {Boolean} isOpera True if our browser is opera.\n   * @param {Boolean} isChrome True if our browser is Chrome.  Note that Chrome for Android returns true, but is a\n   * completely different browser with different abilities.\n   * @param {Boolean} isIOS True if our browser is safari for iOS devices (iPad, iPhone, and iPod).\n   * @param {Boolean} isAndroid True if our browser is Android.\n   * @param {Boolean} isBlackberry True if our browser is Blackberry.\n   * @constructor\n   * @static\n   */\n\n  function BrowserDetect() {\n    throw \"BrowserDetect cannot be instantiated\";\n  }\n\n  ;\n  var agent = BrowserDetect.agent = window.navigator.userAgent;\n  BrowserDetect.isWindowPhone = agent.indexOf(\"IEMobile\") > -1 || agent.indexOf(\"Windows Phone\") > -1;\n  BrowserDetect.isFirefox = agent.indexOf(\"Firefox\") > -1;\n  BrowserDetect.isOpera = window.opera != null;\n  BrowserDetect.isChrome = agent.indexOf(\"Chrome\") > -1; // NOTE that Chrome on Android returns true but is a completely different browser with different abilities\n\n  BrowserDetect.isIOS = (agent.indexOf(\"iPod\") > -1 || agent.indexOf(\"iPhone\") > -1 || agent.indexOf(\"iPad\") > -1) && !BrowserDetect.isWindowPhone;\n  BrowserDetect.isAndroid = agent.indexOf(\"Android\") > -1 && !BrowserDetect.isWindowPhone;\n  BrowserDetect.isBlackberry = agent.indexOf(\"Blackberry\") > -1;\n  createjs.BrowserDetect = BrowserDetect;\n})(); //##############################################################################\n// EventDispatcher.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor:\n\n  /**\r\n   * EventDispatcher provides methods for managing queues of event listeners and dispatching events.\r\n   *\r\n   * You can either extend EventDispatcher or mix its methods into an existing prototype or instance by using the\r\n   * EventDispatcher {{#crossLink \"EventDispatcher/initialize\"}}{{/crossLink}} method.\r\n   * \r\n   * Together with the CreateJS Event class, EventDispatcher provides an extended event model that is based on the\r\n   * DOM Level 2 event model, including addEventListener, removeEventListener, and dispatchEvent. It supports\r\n   * bubbling / capture, preventDefault, stopPropagation, stopImmediatePropagation, and handleEvent.\r\n   * \r\n   * EventDispatcher also exposes a {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}} method, which makes it easier\r\n   * to create scoped listeners, listeners that only run once, and listeners with associated arbitrary data. The \r\n   * {{#crossLink \"EventDispatcher/off\"}}{{/crossLink}} method is merely an alias to\r\n   * {{#crossLink \"EventDispatcher/removeEventListener\"}}{{/crossLink}}.\r\n   * \r\n   * Another addition to the DOM Level 2 model is the {{#crossLink \"EventDispatcher/removeAllEventListeners\"}}{{/crossLink}}\r\n   * method, which can be used to listeners for all events, or listeners for a specific event. The Event object also \r\n   * includes a {{#crossLink \"Event/remove\"}}{{/crossLink}} method which removes the active listener.\r\n   *\r\n   * <h4>Example</h4>\r\n   * Add EventDispatcher capabilities to the \"MyClass\" class.\r\n   *\r\n   *      EventDispatcher.initialize(MyClass.prototype);\r\n   *\r\n   * Add an event (see {{#crossLink \"EventDispatcher/addEventListener\"}}{{/crossLink}}).\r\n   *\r\n   *      instance.addEventListener(\"eventName\", handlerMethod);\r\n   *      function handlerMethod(event) {\r\n   *          console.log(event.target + \" Was Clicked\");\r\n   *      }\r\n   *\r\n   * <b>Maintaining proper scope</b><br />\r\n   * Scope (ie. \"this\") can be be a challenge with events. Using the {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}}\r\n   * method to subscribe to events simplifies this.\r\n   *\r\n   *      instance.addEventListener(\"click\", function(event) {\r\n   *          console.log(instance == this); // false, scope is ambiguous.\r\n   *      });\r\n   *      \r\n   *      instance.on(\"click\", function(event) {\r\n   *          console.log(instance == this); // true, \"on\" uses dispatcher scope by default.\r\n   *      });\r\n   * \r\n   * If you want to use addEventListener instead, you may want to use function.bind() or a similar proxy to manage\r\n   * scope.\r\n   *\r\n   * <b>Browser support</b>\r\n   * The event model in CreateJS can be used separately from the suite in any project, however the inheritance model\r\n   * requires modern browsers (IE9+).\r\n   *      \r\n   *\r\n   * @class EventDispatcher\r\n   * @constructor\r\n   **/\n\n  function EventDispatcher() {\n    // private properties:\n\n    /**\r\n     * @protected\r\n     * @property _listeners\r\n     * @type Object\r\n     **/\n    this._listeners = null;\n    /**\r\n     * @protected\r\n     * @property _captureListeners\r\n     * @type Object\r\n     **/\n\n    this._captureListeners = null;\n  }\n\n  var p = EventDispatcher.prototype; // static public methods:\n\n  /**\r\n   * Static initializer to mix EventDispatcher methods into a target object or prototype.\r\n   * \r\n   * \t\tEventDispatcher.initialize(MyClass.prototype); // add to the prototype of the class\r\n   * \t\tEventDispatcher.initialize(myObject); // add to a specific instance\r\n   * \r\n   * @method initialize\r\n   * @static\r\n   * @param {Object} target The target object to inject EventDispatcher methods into. This can be an instance or a\r\n   * prototype.\r\n   **/\n\n  EventDispatcher.initialize = function (target) {\n    target.addEventListener = p.addEventListener;\n    target.on = p.on;\n    target.removeEventListener = target.off = p.removeEventListener;\n    target.removeAllEventListeners = p.removeAllEventListeners;\n    target.hasEventListener = p.hasEventListener;\n    target.dispatchEvent = p.dispatchEvent;\n    target._dispatchEvent = p._dispatchEvent;\n    target.willTrigger = p.willTrigger;\n  }; // public methods:\n\n  /**\r\n   * Adds the specified event listener. Note that adding multiple listeners to the same function will result in\r\n   * multiple callbacks getting fired.\r\n   *\r\n   * <h4>Example</h4>\r\n   *\r\n   *      displayObject.addEventListener(\"click\", handleClick);\r\n   *      function handleClick(event) {\r\n   *         // Click happened.\r\n   *      }\r\n   *\r\n   * @method addEventListener\r\n   * @param {String} type The string type of the event.\r\n   * @param {Function | Object} listener An object with a handleEvent method, or a function that will be called when\r\n   * the event is dispatched.\r\n   * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n   * @return {Function | Object} Returns the listener for chaining or assignment.\r\n   **/\n\n\n  p.addEventListener = function (type, listener, useCapture) {\n    var listeners;\n\n    if (useCapture) {\n      listeners = this._captureListeners = this._captureListeners || {};\n    } else {\n      listeners = this._listeners = this._listeners || {};\n    }\n\n    var arr = listeners[type];\n\n    if (arr) {\n      this.removeEventListener(type, listener, useCapture);\n    }\n\n    arr = listeners[type]; // remove may have deleted the array\n\n    if (!arr) {\n      listeners[type] = [listener];\n    } else {\n      arr.push(listener);\n    }\n\n    return listener;\n  };\n  /**\r\n   * A shortcut method for using addEventListener that makes it easier to specify an execution scope, have a listener\r\n   * only run once, associate arbitrary data with the listener, and remove the listener.\r\n   * \r\n   * This method works by creating an anonymous wrapper function and subscribing it with addEventListener.\r\n   * The wrapper function is returned for use with `removeEventListener` (or `off`).\r\n   * \r\n   * <b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener, or use\r\n   * {{#crossLink \"Event/remove\"}}{{/crossLink}}. Likewise, each time you call `on` a NEW wrapper function is subscribed, so multiple calls\r\n   * to `on` with the same params will create multiple listeners.\r\n   * \r\n   * <h4>Example</h4>\r\n   * \r\n   * \t\tvar listener = myBtn.on(\"click\", handleClick, null, false, {count:3});\r\n   * \t\tfunction handleClick(evt, data) {\r\n   * \t\t\tdata.count -= 1;\r\n   * \t\t\tconsole.log(this == myBtn); // true - scope defaults to the dispatcher\r\n   * \t\t\tif (data.count == 0) {\r\n   * \t\t\t\talert(\"clicked 3 times!\");\r\n   * \t\t\t\tmyBtn.off(\"click\", listener);\r\n   * \t\t\t\t// alternately: evt.remove();\r\n   * \t\t\t}\r\n   * \t\t}\r\n   * \r\n   * @method on\r\n   * @param {String} type The string type of the event.\r\n   * @param {Function | Object} listener An object with a handleEvent method, or a function that will be called when\r\n   * the event is dispatched.\r\n   * @param {Object} [scope] The scope to execute the listener in. Defaults to the dispatcher/currentTarget for function listeners, and to the listener itself for object listeners (ie. using handleEvent).\r\n   * @param {Boolean} [once=false] If true, the listener will remove itself after the first time it is triggered.\r\n   * @param {*} [data] Arbitrary data that will be included as the second parameter when the listener is called.\r\n   * @param {Boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n   * @return {Function} Returns the anonymous function that was created and assigned as the listener. This is needed to remove the listener later using .removeEventListener.\r\n   **/\n\n\n  p.on = function (type, listener, scope, once, data, useCapture) {\n    if (listener.handleEvent) {\n      scope = scope || listener;\n      listener = listener.handleEvent;\n    }\n\n    scope = scope || this;\n    return this.addEventListener(type, function (evt) {\n      listener.call(scope, evt, data);\n      once && evt.remove();\n    }, useCapture);\n  };\n  /**\r\n   * Removes the specified event listener.\r\n   *\r\n   * <b>Important Note:</b> that you must pass the exact function reference used when the event was added. If a proxy\r\n   * function, or function closure is used as the callback, the proxy/closure reference must be used - a new proxy or\r\n   * closure will not work.\r\n   *\r\n   * <h4>Example</h4>\r\n   *\r\n   *      displayObject.removeEventListener(\"click\", handleClick);\r\n   *\r\n   * @method removeEventListener\r\n   * @param {String} type The string type of the event.\r\n   * @param {Function | Object} listener The listener function or object.\r\n   * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n   **/\n\n\n  p.removeEventListener = function (type, listener, useCapture) {\n    var listeners = useCapture ? this._captureListeners : this._listeners;\n\n    if (!listeners) {\n      return;\n    }\n\n    var arr = listeners[type];\n\n    if (!arr) {\n      return;\n    }\n\n    for (var i = 0, l = arr.length; i < l; i++) {\n      if (arr[i] == listener) {\n        if (l == 1) {\n          delete listeners[type];\n        } // allows for faster checks.\n        else {\n            arr.splice(i, 1);\n          }\n\n        break;\n      }\n    }\n  };\n  /**\r\n   * A shortcut to the removeEventListener method, with the same parameters and return value. This is a companion to the\r\n   * .on method.\r\n   * \r\n   * <b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener. See \r\n   * {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}} for an example.\r\n   *\r\n   * @method off\r\n   * @param {String} type The string type of the event.\r\n   * @param {Function | Object} listener The listener function or object.\r\n   * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n   **/\n\n\n  p.off = p.removeEventListener;\n  /**\r\n   * Removes all listeners for the specified type, or all listeners of all types.\r\n   *\r\n   * <h4>Example</h4>\r\n   *\r\n   *      // Remove all listeners\r\n   *      displayObject.removeAllEventListeners();\r\n   *\r\n   *      // Remove all click listeners\r\n   *      displayObject.removeAllEventListeners(\"click\");\r\n   *\r\n   * @method removeAllEventListeners\r\n   * @param {String} [type] The string type of the event. If omitted, all listeners for all types will be removed.\r\n   **/\n\n  p.removeAllEventListeners = function (type) {\n    if (!type) {\n      this._listeners = this._captureListeners = null;\n    } else {\n      if (this._listeners) {\n        delete this._listeners[type];\n      }\n\n      if (this._captureListeners) {\n        delete this._captureListeners[type];\n      }\n    }\n  };\n  /**\r\n   * Dispatches the specified event to all listeners.\r\n   *\r\n   * <h4>Example</h4>\r\n   *\r\n   *      // Use a string event\r\n   *      this.dispatchEvent(\"complete\");\r\n   *\r\n   *      // Use an Event instance\r\n   *      var event = new createjs.Event(\"progress\");\r\n   *      this.dispatchEvent(event);\r\n   *\r\n   * @method dispatchEvent\r\n   * @param {Object | String | Event} eventObj An object with a \"type\" property, or a string type.\r\n   * While a generic object will work, it is recommended to use a CreateJS Event instance. If a string is used,\r\n   * dispatchEvent will construct an Event instance if necessary with the specified type. This latter approach can\r\n   * be used to avoid event object instantiation for non-bubbling events that may not have any listeners.\r\n   * @param {Boolean} [bubbles] Specifies the `bubbles` value when a string was passed to eventObj.\r\n   * @param {Boolean} [cancelable] Specifies the `cancelable` value when a string was passed to eventObj.\r\n   * @return {Boolean} Returns false if `preventDefault()` was called on a cancelable event, true otherwise.\r\n   **/\n\n\n  p.dispatchEvent = function (eventObj, bubbles, cancelable) {\n    if (typeof eventObj == \"string\") {\n      // skip everything if there's no listeners and it doesn't bubble:\n      var listeners = this._listeners;\n\n      if (!bubbles && (!listeners || !listeners[eventObj])) {\n        return true;\n      }\n\n      eventObj = new createjs.Event(eventObj, bubbles, cancelable);\n    } else if (eventObj.target && eventObj.clone) {\n      // redispatching an active event object, so clone it:\n      eventObj = eventObj.clone();\n    } // TODO: it would be nice to eliminate this. Maybe in favour of evtObj instanceof Event? Or !!evtObj.createEvent\n\n\n    try {\n      eventObj.target = this;\n    } catch (e) {} // try/catch allows redispatching of native events\n\n\n    if (!eventObj.bubbles || !this.parent) {\n      this._dispatchEvent(eventObj, 2);\n    } else {\n      var top = this,\n          list = [top];\n\n      while (top.parent) {\n        list.push(top = top.parent);\n      }\n\n      var i,\n          l = list.length; // capture & atTarget\n\n      for (i = l - 1; i >= 0 && !eventObj.propagationStopped; i--) {\n        list[i]._dispatchEvent(eventObj, 1 + (i == 0));\n      } // bubbling\n\n\n      for (i = 1; i < l && !eventObj.propagationStopped; i++) {\n        list[i]._dispatchEvent(eventObj, 3);\n      }\n    }\n\n    return !eventObj.defaultPrevented;\n  };\n  /**\r\n   * Indicates whether there is at least one listener for the specified event type.\r\n   * @method hasEventListener\r\n   * @param {String} type The string type of the event.\r\n   * @return {Boolean} Returns true if there is at least one listener for the specified event.\r\n   **/\n\n\n  p.hasEventListener = function (type) {\n    var listeners = this._listeners,\n        captureListeners = this._captureListeners;\n    return !!(listeners && listeners[type] || captureListeners && captureListeners[type]);\n  };\n  /**\r\n   * Indicates whether there is at least one listener for the specified event type on this object or any of its\r\n   * ancestors (parent, parent's parent, etc). A return value of true indicates that if a bubbling event of the\r\n   * specified type is dispatched from this object, it will trigger at least one listener.\r\n   * \r\n   * This is similar to {{#crossLink \"EventDispatcher/hasEventListener\"}}{{/crossLink}}, but it searches the entire\r\n   * event flow for a listener, not just this object.\r\n   * @method willTrigger\r\n   * @param {String} type The string type of the event.\r\n   * @return {Boolean} Returns `true` if there is at least one listener for the specified event.\r\n   **/\n\n\n  p.willTrigger = function (type) {\n    var o = this;\n\n    while (o) {\n      if (o.hasEventListener(type)) {\n        return true;\n      }\n\n      o = o.parent;\n    }\n\n    return false;\n  };\n  /**\r\n   * @method toString\r\n   * @return {String} a string representation of the instance.\r\n   **/\n\n\n  p.toString = function () {\n    return \"[EventDispatcher]\";\n  }; // private methods:\n\n  /**\r\n   * @method _dispatchEvent\r\n   * @param {Object | Event} eventObj\r\n   * @param {Object} eventPhase\r\n   * @protected\r\n   **/\n\n\n  p._dispatchEvent = function (eventObj, eventPhase) {\n    var l,\n        arr,\n        listeners = eventPhase <= 2 ? this._captureListeners : this._listeners;\n\n    if (eventObj && listeners && (arr = listeners[eventObj.type]) && (l = arr.length)) {\n      try {\n        eventObj.currentTarget = this;\n      } catch (e) {}\n\n      try {\n        eventObj.eventPhase = eventPhase | 0;\n      } catch (e) {}\n\n      eventObj.removed = false;\n      arr = arr.slice(); // to avoid issues with items being removed or added during the dispatch\n\n      for (var i = 0; i < l && !eventObj.immediatePropagationStopped; i++) {\n        var o = arr[i];\n\n        if (o.handleEvent) {\n          o.handleEvent(eventObj);\n        } else {\n          o(eventObj);\n        }\n\n        if (eventObj.removed) {\n          this.off(eventObj.type, o, eventPhase == 1);\n          eventObj.removed = false;\n        }\n      }\n    }\n\n    if (eventPhase === 2) {\n      this._dispatchEvent(eventObj, 2.1);\n    }\n  };\n\n  createjs.EventDispatcher = EventDispatcher;\n})(); //##############################################################################\n// Event.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor:\n\n  /**\n   * Contains properties and methods shared by all events for use with\n   * {{#crossLink \"EventDispatcher\"}}{{/crossLink}}.\n   * \n   * Note that Event objects are often reused, so you should never\n   * rely on an event object's state outside of the call stack it was received in.\n   * @class Event\n   * @param {String} type The event type.\n   * @param {Boolean} bubbles Indicates whether the event will bubble through the display list.\n   * @param {Boolean} cancelable Indicates whether the default behaviour of this event can be cancelled.\n   * @constructor\n   **/\n\n  function Event(type, bubbles, cancelable) {\n    // public properties:\n\n    /**\n     * The type of event.\n     * @property type\n     * @type String\n     **/\n    this.type = type;\n    /**\n     * The object that generated an event.\n     * @property target\n     * @type Object\n     * @default null\n     * @readonly\n    */\n\n    this.target = null;\n    /**\n     * The current target that a bubbling event is being dispatched from. For non-bubbling events, this will\n     * always be the same as target. For example, if childObj.parent = parentObj, and a bubbling event\n     * is generated from childObj, then a listener on parentObj would receive the event with\n     * target=childObj (the original target) and currentTarget=parentObj (where the listener was added).\n     * @property currentTarget\n     * @type Object\n     * @default null\n     * @readonly\n    */\n\n    this.currentTarget = null;\n    /**\n     * For bubbling events, this indicates the current event phase:<OL>\n     * \t<LI> capture phase: starting from the top parent to the target</LI>\n     * \t<LI> at target phase: currently being dispatched from the target</LI>\n     * \t<LI> bubbling phase: from the target to the top parent</LI>\n     * </OL>\n     * @property eventPhase\n     * @type Number\n     * @default 0\n     * @readonly\n    */\n\n    this.eventPhase = 0;\n    /**\n     * Indicates whether the event will bubble through the display list.\n     * @property bubbles\n     * @type Boolean\n     * @default false\n     * @readonly\n    */\n\n    this.bubbles = !!bubbles;\n    /**\n     * Indicates whether the default behaviour of this event can be cancelled via\n     * {{#crossLink \"Event/preventDefault\"}}{{/crossLink}}. This is set via the Event constructor.\n     * @property cancelable\n     * @type Boolean\n     * @default false\n     * @readonly\n    */\n\n    this.cancelable = !!cancelable;\n    /**\n     * The epoch time at which this event was created.\n     * @property timeStamp\n     * @type Number\n     * @default 0\n     * @readonly\n    */\n\n    this.timeStamp = new Date().getTime();\n    /**\n     * Indicates if {{#crossLink \"Event/preventDefault\"}}{{/crossLink}} has been called\n     * on this event.\n     * @property defaultPrevented\n     * @type Boolean\n     * @default false\n     * @readonly\n    */\n\n    this.defaultPrevented = false;\n    /**\n     * Indicates if {{#crossLink \"Event/stopPropagation\"}}{{/crossLink}} or\n     * {{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called on this event.\n     * @property propagationStopped\n     * @type Boolean\n     * @default false\n     * @readonly\n    */\n\n    this.propagationStopped = false;\n    /**\n     * Indicates if {{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called\n     * on this event.\n     * @property immediatePropagationStopped\n     * @type Boolean\n     * @default false\n     * @readonly\n    */\n\n    this.immediatePropagationStopped = false;\n    /**\n     * Indicates if {{#crossLink \"Event/remove\"}}{{/crossLink}} has been called on this event.\n     * @property removed\n     * @type Boolean\n     * @default false\n     * @readonly\n    */\n\n    this.removed = false;\n  }\n\n  var p = Event.prototype; // public methods:\n\n  /**\n   * Sets {{#crossLink \"Event/defaultPrevented\"}}{{/crossLink}} to true if the event is cancelable.\n   * Mirrors the DOM level 2 event standard. In general, cancelable events that have `preventDefault()` called will\n   * cancel the default behaviour associated with the event.\n   * @method preventDefault\n   **/\n\n  p.preventDefault = function () {\n    this.defaultPrevented = this.cancelable && true;\n  };\n  /**\n   * Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} to true.\n   * Mirrors the DOM event standard.\n   * @method stopPropagation\n   **/\n\n\n  p.stopPropagation = function () {\n    this.propagationStopped = true;\n  };\n  /**\n   * Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} and\n   * {{#crossLink \"Event/immediatePropagationStopped\"}}{{/crossLink}} to true.\n   * Mirrors the DOM event standard.\n   * @method stopImmediatePropagation\n   **/\n\n\n  p.stopImmediatePropagation = function () {\n    this.immediatePropagationStopped = this.propagationStopped = true;\n  };\n  /**\n   * Causes the active listener to be removed via removeEventListener();\n   * \n   * \t\tmyBtn.addEventListener(\"click\", function(evt) {\n   * \t\t\t// do stuff...\n   * \t\t\tevt.remove(); // removes this listener.\n   * \t\t});\n   * \n   * @method remove\n   **/\n\n\n  p.remove = function () {\n    this.removed = true;\n  };\n  /**\n   * Returns a clone of the Event instance.\n   * @method clone\n   * @return {Event} a clone of the Event instance.\n   **/\n\n\n  p.clone = function () {\n    return new Event(this.type, this.bubbles, this.cancelable);\n  };\n  /**\n   * Provides a chainable shortcut method for setting a number of properties on the instance.\n   *\n   * @method set\n   * @param {Object} props A generic object containing properties to copy to the instance.\n   * @return {Event} Returns the instance the method is called on (useful for chaining calls.)\n   * @chainable\n  */\n\n\n  p.set = function (props) {\n    for (var n in props) {\n      this[n] = props[n];\n    }\n\n    return this;\n  };\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n\n\n  p.toString = function () {\n    return \"[Event (type=\" + this.type + \")]\";\n  };\n\n  createjs.Event = Event;\n})(); //##############################################################################\n// ErrorEvent.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n  /**\n   * A general error {{#crossLink \"Event\"}}{{/crossLink}}, that describes an error that occurred, as well as any details.\n   * @class ErrorEvent\n   * @param {String} [title] The error title\n   * @param {String} [message] The error description\n   * @param {Object} [data] Additional error data\n   * @constructor\n   */\n\n  function ErrorEvent(title, message, data) {\n    this.Event_constructor(\"error\");\n    /**\n     * The short error title, which indicates the type of error that occurred.\n     * @property title\n     * @type String\n     */\n\n    this.title = title;\n    /**\n     * The verbose error message, containing details about the error.\n     * @property message\n     * @type String\n     */\n\n    this.message = message;\n    /**\n     * Additional data attached to an error.\n     * @property data\n     * @type {Object}\n     */\n\n    this.data = data;\n  }\n\n  var p = createjs.extend(ErrorEvent, createjs.Event);\n\n  p.clone = function () {\n    return new createjs.ErrorEvent(this.title, this.message, this.data);\n  };\n\n  createjs.ErrorEvent = createjs.promote(ErrorEvent, \"Event\");\n})(); //##############################################################################\n// ProgressEvent.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function (scope) {\n  \"use strict\"; // constructor\n\n  /**\n   * A CreateJS {{#crossLink \"Event\"}}{{/crossLink}} that is dispatched when progress changes.\n   * @class ProgressEvent\n   * @param {Number} loaded The amount that has been loaded. This can be any number relative to the total.\n   * @param {Number} [total=1] The total amount that will load. This will default to 1, so if the `loaded` value is\n   * a percentage (between 0 and 1), it can be omitted.\n   * @todo Consider having this event be a \"fileprogress\" event as well\n   * @constructor\n   */\n\n  function ProgressEvent(loaded, total) {\n    this.Event_constructor(\"progress\");\n    /**\n     * The amount that has been loaded (out of a total amount)\n     * @property loaded\n     * @type {Number}\n     */\n\n    this.loaded = loaded;\n    /**\n     * The total \"size\" of the load.\n     * @property total\n     * @type {Number}\n     * @default 1\n     */\n\n    this.total = total == null ? 1 : total;\n    /**\n     * The percentage (out of 1) that the load has been completed. This is calculated using `loaded/total`.\n     * @property progress\n     * @type {Number}\n     * @default 0\n     */\n\n    this.progress = total == 0 ? 0 : this.loaded / this.total;\n  }\n\n  ;\n  var p = createjs.extend(ProgressEvent, createjs.Event);\n  /**\n   * Returns a clone of the ProgressEvent instance.\n   * @method clone\n   * @return {ProgressEvent} a clone of the Event instance.\n   **/\n\n  p.clone = function () {\n    return new createjs.ProgressEvent(this.loaded, this.total);\n  };\n\n  createjs.ProgressEvent = createjs.promote(ProgressEvent, \"Event\");\n})(window); //##############################################################################\n// LoadItem.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n  /**\n   * All loaders accept an item containing the properties defined in this class. If a raw object is passed instead,\n   * it will not be affected, but it must contain at least a {{#crossLink \"src:property\"}}{{/crossLink}} property. A\n   * string path or HTML tag is also acceptable, but it will be automatically converted to a LoadItem using the\n   * {{#crossLink \"create\"}}{{/crossLink}} method by {{#crossLink \"AbstractLoader\"}}{{/crossLink}}\n   * @class LoadItem\n   * @constructor\n   * @since 0.6.0\n   */\n\n  function LoadItem() {\n    /**\n     * The source of the file that is being loaded. This property is <b>required</b>. The source can either be a\n     * string (recommended), or an HTML tag.\n     * This can also be an object, but in that case it has to include a type and be handled by a plugin.\n     * @property src\n     * @type {String}\n     * @default null\n     */\n    this.src = null;\n    /**\n     * The type file that is being loaded. The type of the file is usually inferred by the extension, but can also\n     * be set manually. This is helpful in cases where a file does not have an extension.\n     * @property type\n     * @type {String}\n     * @default null\n     */\n\n    this.type = null;\n    /**\n     * A string identifier which can be used to reference the loaded object. If none is provided, this will be\n     * automatically set to the {{#crossLink \"src:property\"}}{{/crossLink}}.\n     * @property id\n     * @type {String}\n     * @default null\n     */\n\n    this.id = null;\n    /**\n     * Determines if a manifest will maintain the order of this item, in relation to other items in the manifest\n     * that have also set the `maintainOrder` property to `true`. This only applies when the max connections has\n     * been set above 1 (using {{#crossLink \"LoadQueue/setMaxConnections\"}}{{/crossLink}}). Everything with this\n     * property set to `false` will finish as it is loaded. Ordered items are combined with script tags loading in\n     * order when {{#crossLink \"LoadQueue/maintainScriptOrder:property\"}}{{/crossLink}} is set to `true`.\n     * @property maintainOrder\n     * @type {Boolean}\n     * @default false\n     */\n\n    this.maintainOrder = false;\n    /**\n     * A callback used by JSONP requests that defines what global method to call when the JSONP content is loaded.\n     * @property callback\n     * @type {String}\n     * @default null\n     */\n\n    this.callback = null;\n    /**\n     * An arbitrary data object, which is included with the loaded object.\n     * @property data\n     * @type {Object}\n     * @default null\n     */\n\n    this.data = null;\n    /**\n     * The request method used for HTTP calls. Both {{#crossLink \"Methods/GET:property\"}}{{/crossLink}} or\n     * {{#crossLink \"Methods/POST:property\"}}{{/crossLink}} request types are supported, and are defined as\n     * constants on {{#crossLink \"AbstractLoader\"}}{{/crossLink}}.\n     * @property method\n     * @type {String}\n     * @default GET\n     */\n\n    this.method = createjs.Methods.GET;\n    /**\n     * An object hash of name/value pairs to send to the server.\n     * @property values\n     * @type {Object}\n     * @default null\n     */\n\n    this.values = null;\n    /**\n     * An object hash of headers to attach to an XHR request. PreloadJS will automatically attach some default\n     * headers when required, including \"Origin\", \"Content-Type\", and \"X-Requested-With\". You may override the\n     * default headers by including them in your headers object.\n     * @property headers\n     * @type {Object}\n     * @default null\n     */\n\n    this.headers = null;\n    /**\n     * Enable credentials for XHR requests.\n     * @property withCredentials\n     * @type {Boolean}\n     * @default false\n     */\n\n    this.withCredentials = false;\n    /**\n     * Set the mime type of XHR-based requests. This is automatically set to \"text/plain; charset=utf-8\" for text\n     * based files (json, xml, text, css, js).\n     * @property mimeType\n     * @type {String}\n     * @default null\n     */\n\n    this.mimeType = null;\n    /**\n     * Sets the crossOrigin attribute for CORS-enabled images loading cross-domain.\n     * @property crossOrigin\n     * @type {boolean}\n     * @default Anonymous\n     */\n\n    this.crossOrigin = null;\n    /**\n     * The duration in milliseconds to wait before a request times out. This only applies to tag-based and and XHR\n     * (level one) loading, as XHR (level 2) provides its own timeout event.\n     * @property loadTimeout\n     * @type {Number}\n     * @default 8000 (8 seconds)\n     */\n\n    this.loadTimeout = s.LOAD_TIMEOUT_DEFAULT;\n  }\n\n  ;\n  var p = LoadItem.prototype = {};\n  var s = LoadItem;\n  /**\n   * Default duration in milliseconds to wait before a request times out. This only applies to tag-based and and XHR\n   * (level one) loading, as XHR (level 2) provides its own timeout event.\n   * @property LOAD_TIMEOUT_DEFAULT\n   * @type {number}\n   * @static\n   */\n\n  s.LOAD_TIMEOUT_DEFAULT = 8000;\n  /**\n   * Create a LoadItem.\n   * <ul>\n   *     <li>String-based items are converted to a LoadItem with a populated {{#crossLink \"src:property\"}}{{/crossLink}}.</li>\n   *     <li>LoadItem instances are returned as-is</li>\n   *     <li>Objects are returned with any needed properties added</li>\n   * </ul>\n   * @method create\n   * @param {LoadItem|String|Object} value The load item value\n   * @returns {LoadItem|Object}\n   * @static\n   */\n\n  s.create = function (value) {\n    if (typeof value == \"string\") {\n      var item = new LoadItem();\n      item.src = value;\n      return item;\n    } else if (value instanceof s) {\n      return value;\n    } else if (value instanceof Object && value.src) {\n      if (value.loadTimeout == null) {\n        value.loadTimeout = s.LOAD_TIMEOUT_DEFAULT;\n      }\n\n      return value;\n    } else {\n      throw new Error(\"Type not recognized.\");\n    }\n  };\n  /**\n   * Provides a chainable shortcut method for setting a number of properties on the instance.\n   *\n   * <h4>Example</h4>\n   *\n   *      var loadItem = new createjs.LoadItem().set({src:\"image.png\", maintainOrder:true});\n   *\n   * @method set\n   * @param {Object} props A generic object containing properties to copy to the LoadItem instance.\n   * @return {LoadItem} Returns the instance the method is called on (useful for chaining calls.)\n  */\n\n\n  p.set = function (props) {\n    for (var n in props) {\n      this[n] = props[n];\n    }\n\n    return this;\n  };\n\n  createjs.LoadItem = s;\n})(); //##############################################################################\n// Methods.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  var s = {};\n  /**\n   * Defines a POST request, use for a method value when loading data.\n   * @property POST\n   * @type {string}\n   * @default post\n   * @static\n   */\n\n  s.POST = \"POST\";\n  /**\n   * Defines a GET request, use for a method value when loading data.\n   * @property GET\n   * @type {string}\n   * @default get\n   * @static\n   */\n\n  s.GET = \"GET\";\n  createjs.Methods = s;\n})(); //##############################################################################\n// Types.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  var s = {};\n  /**\n   * The preload type for generic binary types. Note that images are loaded as binary files when using XHR.\n   * @property BINARY\n   * @type {String}\n   * @default binary\n   * @static\n   * @since 0.6.0\n   */\n\n  s.BINARY = \"binary\";\n  /**\n   * The preload type for css files. CSS files are loaded using a &lt;link&gt; when loaded with XHR, or a\n   * &lt;style&gt; tag when loaded with tags.\n   * @property CSS\n   * @type {String}\n   * @default css\n   * @static\n   * @since 0.6.0\n   */\n\n  s.CSS = \"css\";\n  /**\n   * The preload type for font files.\n   * @property FONT\n   * @type {String}\n   * @default font\n   * @static\n   * @since 0.9.0\n   */\n\n  s.FONT = \"font\";\n  /**\n   * The preload type for fonts specified with CSS (such as Google fonts)\n   * @property FONTCSS\n   * @type {String}\n   * @default fontcss\n   * @static\n   * @since 0.9.0\n   */\n\n  s.FONTCSS = \"fontcss\";\n  /**\n   * The preload type for image files, usually png, gif, or jpg/jpeg. Images are loaded into an &lt;image&gt; tag.\n   * @property IMAGE\n   * @type {String}\n   * @default image\n   * @static\n   * @since 0.6.0\n   */\n\n  s.IMAGE = \"image\";\n  /**\n   * The preload type for javascript files, usually with the \"js\" file extension. JavaScript files are loaded into a\n   * &lt;script&gt; tag.\n   *\n   * Since version 0.4.1+, due to how tag-loaded scripts work, all JavaScript files are automatically injected into\n   * the body of the document to maintain parity between XHR and tag-loaded scripts. In version 0.4.0 and earlier,\n   * only tag-loaded scripts are injected.\n   * @property JAVASCRIPT\n   * @type {String}\n   * @default javascript\n   * @static\n   * @since 0.6.0\n   */\n\n  s.JAVASCRIPT = \"javascript\";\n  /**\n   * The preload type for json files, usually with the \"json\" file extension. JSON data is loaded and parsed into a\n   * JavaScript object. Note that if a `callback` is present on the load item, the file will be loaded with JSONP,\n   * no matter what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}} property is set to, and the JSON\n   * must contain a matching wrapper function.\n   * @property JSON\n   * @type {String}\n   * @default json\n   * @static\n   * @since 0.6.0\n   */\n\n  s.JSON = \"json\";\n  /**\n   * The preload type for jsonp files, usually with the \"json\" file extension. JSON data is loaded and parsed into a\n   * JavaScript object. You are required to pass a callback parameter that matches the function wrapper in the JSON.\n   * Note that JSONP will always be used if there is a callback present, no matter what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}}\n   * property is set to.\n   * @property JSONP\n   * @type {String}\n   * @default jsonp\n   * @static\n   * @since 0.6.0\n   */\n\n  s.JSONP = \"jsonp\";\n  /**\n   * The preload type for json-based manifest files, usually with the \"json\" file extension. The JSON data is loaded\n   * and parsed into a JavaScript object. PreloadJS will then look for a \"manifest\" property in the JSON, which is an\n   * Array of files to load, following the same format as the {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}\n   * method. If a \"callback\" is specified on the manifest object, then it will be loaded using JSONP instead,\n   * regardless of what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}} property is set to.\n   * @property MANIFEST\n   * @type {String}\n   * @default manifest\n   * @static\n   * @since 0.6.0\n   */\n\n  s.MANIFEST = \"manifest\";\n  /**\n   * The preload type for sound files, usually mp3, ogg, or wav. When loading via tags, audio is loaded into an\n   * &lt;audio&gt; tag.\n   * @property SOUND\n   * @type {String}\n   * @default sound\n   * @static\n   * @since 0.6.0\n   */\n\n  s.SOUND = \"sound\";\n  /**\n   * The preload type for video files, usually mp4, ts, or ogg. When loading via tags, video is loaded into an\n   * &lt;video&gt; tag.\n   * @property VIDEO\n   * @type {String}\n   * @default video\n   * @static\n   * @since 0.6.0\n   */\n\n  s.VIDEO = \"video\";\n  /**\n   * The preload type for SpriteSheet files. SpriteSheet files are JSON files that contain string image paths.\n   * @property SPRITESHEET\n   * @type {String}\n   * @default spritesheet\n   * @static\n   * @since 0.6.0\n   */\n\n  s.SPRITESHEET = \"spritesheet\";\n  /**\n   * The preload type for SVG files.\n   * @property SVG\n   * @type {String}\n   * @default svg\n   * @static\n   * @since 0.6.0\n   */\n\n  s.SVG = \"svg\";\n  /**\n   * The preload type for text files, which is also the default file type if the type can not be determined. Text is\n   * loaded as raw text.\n   * @property TEXT\n   * @type {String}\n   * @default text\n   * @static\n   * @since 0.6.0\n   */\n\n  s.TEXT = \"text\";\n  /**\n   * The preload type for xml files. XML is loaded into an XML document.\n   * @property XML\n   * @type {String}\n   * @default xml\n   * @static\n   * @since 0.6.0\n   */\n\n  s.XML = \"xml\";\n  createjs.Types = s;\n})(); //##############################################################################\n// Elements.js\n//##############################################################################\n\n\n(function () {\n  /**\n   * Convenience methods for creating various elements used by PrelaodJS.\n   *\n   * @class DomUtils\n   */\n  var s = {};\n\n  s.a = function () {\n    return s.el(\"a\");\n  };\n\n  s.svg = function () {\n    return s.el(\"svg\");\n  };\n\n  s.object = function () {\n    return s.el(\"object\");\n  };\n\n  s.image = function () {\n    return s.el(\"image\");\n  };\n\n  s.img = function () {\n    return s.el(\"img\");\n  };\n\n  s.style = function () {\n    return s.el(\"style\");\n  };\n\n  s.link = function () {\n    return s.el(\"link\");\n  };\n\n  s.script = function () {\n    return s.el(\"script\");\n  };\n\n  s.audio = function () {\n    return s.el(\"audio\");\n  };\n\n  s.video = function () {\n    return s.el(\"video\");\n  };\n\n  s.text = function (value) {\n    return document.createTextNode(value);\n  };\n\n  s.el = function (name) {\n    return document.createElement(name);\n  };\n\n  createjs.Elements = s;\n})(); //##############################################################################\n// DomUtils.js\n//##############################################################################\n\n\n(function () {\n  /**\n   * A few utilities for interacting with the dom.\n   * @class DomUtils\n   */\n  var s = {\n    container: null\n  };\n\n  s.appendToHead = function (el) {\n    s.getHead().appendChild(el);\n  };\n\n  s.appendToBody = function (el) {\n    if (s.container == null) {\n      s.container = document.createElement(\"div\");\n      s.container.id = \"preloadjs-container\";\n      var style = s.container.style;\n      style.visibility = \"hidden\";\n      style.position = \"absolute\";\n      style.width = s.container.style.height = \"10px\";\n      style.overflow = \"hidden\";\n      style.transform = style.msTransform = style.webkitTransform = style.oTransform = \"translate(-10px, -10px)\"; //LM: Not working\n\n      s.getBody().appendChild(s.container);\n    }\n\n    s.container.appendChild(el);\n  };\n\n  s.getHead = function () {\n    return document.head || document.getElementsByTagName(\"head\")[0];\n  };\n\n  s.getBody = function () {\n    return document.body || document.getElementsByTagName(\"body\")[0];\n  };\n\n  s.removeChild = function (el) {\n    if (el.parent) {\n      el.parent.removeChild(el);\n    }\n  };\n  /**\n   * Check if item is a valid HTMLImageElement\n   * @method isImageTag\n   * @param {Object} item\n   * @returns {Boolean}\n   * @static\n   */\n\n\n  s.isImageTag = function (item) {\n    return item instanceof HTMLImageElement;\n  };\n  /**\n   * Check if item is a valid HTMLAudioElement\n   * @method isAudioTag\n   * @param {Object} item\n   * @returns {Boolean}\n   * @static\n   */\n\n\n  s.isAudioTag = function (item) {\n    if (window.HTMLAudioElement) {\n      return item instanceof HTMLAudioElement;\n    } else {\n      return false;\n    }\n  };\n  /**\n   * Check if item is a valid HTMLVideoElement\n   * @method isVideoTag\n   * @param {Object} item\n   * @returns {Boolean}\n   * @static\n   */\n\n\n  s.isVideoTag = function (item) {\n    if (window.HTMLVideoElement) {\n      return item instanceof HTMLVideoElement;\n    } else {\n      return false;\n    }\n  };\n\n  createjs.DomUtils = s;\n})(); //##############################################################################\n// RequestUtils.js\n//##############################################################################\n\n\n(function () {\n  /**\n   * Utilities that assist with parsing load items, and determining file types, etc.\n   * @class RequestUtils\n   */\n  var s = {};\n  /**\n   * Determine if a specific type should be loaded as a binary file. Currently, only images and items marked\n   * specifically as \"binary\" are loaded as binary. Note that audio is <b>not</b> a binary type, as we can not play\n   * back using an audio tag if it is loaded as binary. Plugins can change the item type to binary to ensure they get\n   * a binary result to work with. Binary files are loaded using XHR2. Types are defined as static constants on\n   * {{#crossLink \"AbstractLoader\"}}{{/crossLink}}.\n   * @method isBinary\n   * @param {String} type The item type.\n   * @return {Boolean} If the specified type is binary.\n   * @static\n   */\n\n  s.isBinary = function (type) {\n    switch (type) {\n      case createjs.Types.IMAGE:\n      case createjs.Types.BINARY:\n        return true;\n\n      default:\n        return false;\n    }\n  };\n  /**\n   * Determine if a specific type is a text-based asset, and should be loaded as UTF-8.\n   * @method isText\n   * @param {String} type The item type.\n   * @return {Boolean} If the specified type is text.\n   * @static\n   */\n\n\n  s.isText = function (type) {\n    switch (type) {\n      case createjs.Types.TEXT:\n      case createjs.Types.JSON:\n      case createjs.Types.MANIFEST:\n      case createjs.Types.XML:\n      case createjs.Types.CSS:\n      case createjs.Types.SVG:\n      case createjs.Types.JAVASCRIPT:\n      case createjs.Types.SPRITESHEET:\n        return true;\n\n      default:\n        return false;\n    }\n  };\n  /**\n   * Determine the type of the object using common extensions. Note that the type can be passed in with the load item\n   * if it is an unusual extension.\n   * @method getTypeByExtension\n   * @param {String} extension The file extension to use to determine the load type.\n   * @return {String} The determined load type (for example, `createjs.Types.IMAGE`). Will return `null` if\n   * the type can not be determined by the extension.\n   * @static\n   */\n\n\n  s.getTypeByExtension = function (extension) {\n    if (extension == null) {\n      return createjs.Types.TEXT;\n    }\n\n    switch (extension.toLowerCase()) {\n      case \"jpeg\":\n      case \"jpg\":\n      case \"gif\":\n      case \"png\":\n      case \"webp\":\n      case \"bmp\":\n        return createjs.Types.IMAGE;\n\n      case \"ogg\":\n      case \"mp3\":\n      case \"webm\":\n        return createjs.Types.SOUND;\n\n      case \"mp4\":\n      case \"webm\":\n      case \"ts\":\n        return createjs.Types.VIDEO;\n\n      case \"json\":\n        return createjs.Types.JSON;\n\n      case \"xml\":\n        return createjs.Types.XML;\n\n      case \"css\":\n        return createjs.Types.CSS;\n\n      case \"js\":\n        return createjs.Types.JAVASCRIPT;\n\n      case 'svg':\n        return createjs.Types.SVG;\n\n      default:\n        return createjs.Types.TEXT;\n    }\n  };\n\n  createjs.RequestUtils = s;\n})(); //##############################################################################\n// URLUtils.js\n//##############################################################################\n\n\n(function () {\n  /**\n   * Utilities that assist with parsing load items, and determining file types, etc.\n   * @class URLUtils\n   */\n  var s = {};\n  /**\n   * The Regular Expression used to test file URLS for an absolute path.\n   * @property ABSOLUTE_PATH\n   * @type {RegExp}\n   * @static\n   */\n\n  s.ABSOLUTE_PATT = /^(?:\\w+:)?\\/{2}/i;\n  /**\n   * The Regular Expression used to test file URLS for a relative path.\n   * @property RELATIVE_PATH\n   * @type {RegExp}\n   * @static\n   */\n\n  s.RELATIVE_PATT = /^[./]*?\\//i;\n  /**\n   * The Regular Expression used to test file URLS for an extension. Note that URIs must already have the query string\n   * removed.\n   * @property EXTENSION_PATT\n   * @type {RegExp}\n   * @static\n   */\n\n  s.EXTENSION_PATT = /\\/?[^/]+\\.(\\w{1,5})$/i;\n  /**\n   * Parse a file path to determine the information we need to work with it. Currently, PreloadJS needs to know:\n   * <ul>\n   *     <li>If the path is absolute. Absolute paths start with a protocol (such as `http://`, `file://`, or\n   *     `//networkPath`)</li>\n   *     <li>If the path is relative. Relative paths start with `../` or `/path` (or similar)</li>\n   *     <li>The file extension. This is determined by the filename with an extension. Query strings are dropped, and\n   *     the file path is expected to follow the format `name.ext`.</li>\n   * </ul>\n   *\n   * @method parseURI\n   * @param {String} path\n   * @returns {Object} An Object with an `absolute` and `relative` Boolean values,\n   * \tthe pieces of the path (protocol, hostname, port, pathname, search, hash, host)\n   * \tas well as an optional 'extension` property, which is the lowercase extension.\n   *\n   * @static\n   */\n\n  s.parseURI = function (path) {\n    var info = {\n      absolute: false,\n      relative: false,\n      protocol: null,\n      hostname: null,\n      port: null,\n      pathname: null,\n      search: null,\n      hash: null,\n      host: null\n    };\n\n    if (path == null) {\n      return info;\n    } // Inject the path parts.\n\n\n    var parser = createjs.Elements.a();\n    parser.href = path;\n\n    for (var n in info) {\n      if (n in parser) {\n        info[n] = parser[n];\n      }\n    } // Drop the query string\n\n\n    var queryIndex = path.indexOf(\"?\");\n\n    if (queryIndex > -1) {\n      path = path.substr(0, queryIndex);\n    } // Absolute\n\n\n    var match;\n\n    if (s.ABSOLUTE_PATT.test(path)) {\n      info.absolute = true; // Relative\n    } else if (s.RELATIVE_PATT.test(path)) {\n      info.relative = true;\n    } // Extension\n\n\n    if (match = path.match(s.EXTENSION_PATT)) {\n      info.extension = match[1].toLowerCase();\n    }\n\n    return info;\n  };\n  /**\n   * Formats an object into a query string for either a POST or GET request.\n   * @method formatQueryString\n   * @param {Object} data The data to convert to a query string.\n   * @param {Array} [query] Existing name/value pairs to append on to this query.\n   * @static\n   */\n\n\n  s.formatQueryString = function (data, query) {\n    if (data == null) {\n      throw new Error(\"You must specify data.\");\n    }\n\n    var params = [];\n\n    for (var n in data) {\n      params.push(n + \"=\" + escape(data[n]));\n    }\n\n    if (query) {\n      params = params.concat(query);\n    }\n\n    return params.join(\"&\");\n  };\n  /**\n   * A utility method that builds a file path using a source and a data object, and formats it into a new path.\n   * @method buildURI\n   * @param {String} src The source path to add values to.\n   * @param {Object} [data] Object used to append values to this request as a query string. Existing parameters on the\n   * path will be preserved.\n   * @returns {string} A formatted string that contains the path and the supplied parameters.\n   * @static\n   */\n\n\n  s.buildURI = function (src, data) {\n    if (data == null) {\n      return src;\n    }\n\n    var query = [];\n    var idx = src.indexOf(\"?\");\n\n    if (idx != -1) {\n      var q = src.slice(idx + 1);\n      query = query.concat(q.split(\"&\"));\n    }\n\n    if (idx != -1) {\n      return src.slice(0, idx) + \"?\" + this.formatQueryString(data, query);\n    } else {\n      return src + \"?\" + this.formatQueryString(data, query);\n    }\n  };\n  /**\n   * @method isCrossDomain\n   * @param {LoadItem|Object} item A load item with a `src` property.\n   * @return {Boolean} If the load item is loading from a different domain than the current location.\n   * @static\n   */\n\n\n  s.isCrossDomain = function (item) {\n    var target = createjs.Elements.a();\n    target.href = item.src;\n    var host = createjs.Elements.a();\n    host.href = location.href;\n    var crossdomain = target.hostname != \"\" && (target.port != host.port || target.protocol != host.protocol || target.hostname != host.hostname);\n    return crossdomain;\n  };\n  /**\n   * @method isLocal\n   * @param {LoadItem|Object} item A load item with a `src` property\n   * @return {Boolean} If the load item is loading from the \"file:\" protocol. Assume that the host must be local as\n   * well.\n   * @static\n   */\n\n\n  s.isLocal = function (item) {\n    var target = createjs.Elements.a();\n    target.href = item.src;\n    return target.hostname == \"\" && target.protocol == \"file:\";\n  };\n\n  createjs.URLUtils = s;\n})(); //##############################################################################\n// AbstractLoader.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor\n\n  /**\n   * The base loader, which defines all the generic methods, properties, and events. All loaders extend this class,\n   * including the {{#crossLink \"LoadQueue\"}}{{/crossLink}}.\n   * @class AbstractLoader\n   * @param {LoadItem|object|string} loadItem The item to be loaded.\n   * @param {Boolean} [preferXHR] Determines if the LoadItem should <em>try</em> and load using XHR, or take a\n   * tag-based approach, which can be better in cross-domain situations. Not all loaders can load using one or the\n   * other, so this is a suggested directive.\n   * @param {String} [type] The type of loader. Loader types are defined as constants on the AbstractLoader class,\n   * such as {{#crossLink \"IMAGE:property\"}}{{/crossLink}}, {{#crossLink \"CSS:property\"}}{{/crossLink}}, etc.\n   * @extends EventDispatcher\n   */\n\n  function AbstractLoader(loadItem, preferXHR, type) {\n    this.EventDispatcher_constructor(); // public properties\n\n    /**\n     * If the loader has completed loading. This provides a quick check, but also ensures that the different approaches\n     * used for loading do not pile up resulting in more than one `complete` {{#crossLink \"Event\"}}{{/crossLink}}.\n     * @property loaded\n     * @type {Boolean}\n     * @default false\n     */\n\n    this.loaded = false;\n    /**\n     * Determine if the loader was canceled. Canceled loads will not fire complete events. Note that this property\n     * is readonly, so {{#crossLink \"LoadQueue\"}}{{/crossLink}} queues should be closed using {{#crossLink \"LoadQueue/close\"}}{{/crossLink}}\n     * instead.\n     * @property canceled\n     * @type {Boolean}\n     * @default false\n     * @readonly\n     */\n\n    this.canceled = false;\n    /**\n     * The current load progress (percentage) for this item. This will be a number between 0 and 1.\n     *\n     * <h4>Example</h4>\n     *\n     *     var queue = new createjs.LoadQueue();\n     *     queue.loadFile(\"largeImage.png\");\n     *     queue.on(\"progress\", function() {\n     *         console.log(\"Progress:\", queue.progress, event.progress);\n     *     });\n     *\n     * @property progress\n     * @type {Number}\n     * @default 0\n     */\n\n    this.progress = 0;\n    /**\n     * The type of item this loader will load. See {{#crossLink \"AbstractLoader\"}}{{/crossLink}} for a full list of\n     * supported types.\n     * @property type\n     * @type {String}\n     */\n\n    this.type = type;\n    /**\n     * A formatter function that converts the loaded raw result into the final result. For example, the JSONLoader\n     * converts a string of text into a JavaScript object. Not all loaders have a resultFormatter, and this property\n     * can be overridden to provide custom formatting.\n     *\n     * Optionally, a resultFormatter can return a callback function in cases where the formatting needs to be\n     * asynchronous, such as creating a new image. The callback function is passed 2 parameters, which are callbacks\n     * to handle success and error conditions in the resultFormatter. Note that the resultFormatter method is\n     * called in the current scope, as well as the success and error callbacks.\n     *\n     * <h4>Example asynchronous resultFormatter</h4>\n     *\n     * \tfunction _formatResult(loader) {\n     * \t\treturn function(success, error) {\n     * \t\t\tif (errorCondition) { error(errorDetailEvent); }\n     * \t\t\tsuccess(result);\n     * \t\t}\n     * \t}\n     * @property resultFormatter\n     * @type {Function}\n     * @default null\n     */\n\n    this.resultFormatter = null; // protected properties\n\n    /**\n     * The {{#crossLink \"LoadItem\"}}{{/crossLink}} this loader represents. Note that this is null in a {{#crossLink \"LoadQueue\"}}{{/crossLink}},\n     * but will be available on loaders such as {{#crossLink \"XMLLoader\"}}{{/crossLink}} and {{#crossLink \"ImageLoader\"}}{{/crossLink}}.\n     * @property _item\n     * @type {LoadItem|Object}\n     * @private\n     */\n\n    if (loadItem) {\n      this._item = createjs.LoadItem.create(loadItem);\n    } else {\n      this._item = null;\n    }\n    /**\n     * Whether the loader will try and load content using XHR (true) or HTML tags (false).\n     * @property _preferXHR\n     * @type {Boolean}\n     * @private\n     */\n\n\n    this._preferXHR = preferXHR;\n    /**\n     * The loaded result after it is formatted by an optional {{#crossLink \"resultFormatter\"}}{{/crossLink}}. For\n     * items that are not formatted, this will be the same as the {{#crossLink \"_rawResult:property\"}}{{/crossLink}}.\n     * The result is accessed using the {{#crossLink \"getResult\"}}{{/crossLink}} method.\n     * @property _result\n     * @type {Object|String}\n     * @private\n     */\n\n    this._result = null;\n    /**\n     * The loaded result before it is formatted. The rawResult is accessed using the {{#crossLink \"getResult\"}}{{/crossLink}}\n     * method, and passing `true`.\n     * @property _rawResult\n     * @type {Object|String}\n     * @private\n     */\n\n    this._rawResult = null;\n    /**\n     * A list of items that loaders load behind the scenes. This does not include the main item the loader is\n     * responsible for loading. Examples of loaders that have sub-items include the {{#crossLink \"SpriteSheetLoader\"}}{{/crossLink}} and\n     * {{#crossLink \"ManifestLoader\"}}{{/crossLink}}.\n     * @property _loadItems\n     * @type {null}\n     * @protected\n     */\n\n    this._loadedItems = null;\n    /**\n     * The attribute the items loaded using tags use for the source.\n     * @type {string}\n     * @default null\n     * @private\n     */\n\n    this._tagSrcAttribute = null;\n    /**\n     * An HTML tag (or similar) that a loader may use to load HTML content, such as images, scripts, etc.\n     * @property _tag\n     * @type {Object}\n     * @private\n     */\n\n    this._tag = null;\n  }\n\n  ;\n  var p = createjs.extend(AbstractLoader, createjs.EventDispatcher);\n  var s = AbstractLoader; // Remove these @deprecated properties after 1.0\n\n  try {\n    Object.defineProperties(s, {\n      POST: {\n        get: createjs.deprecate(function () {\n          return createjs.Methods.POST;\n        }, \"AbstractLoader.POST\")\n      },\n      GET: {\n        get: createjs.deprecate(function () {\n          return createjs.Methods.GET;\n        }, \"AbstractLoader.GET\")\n      },\n      BINARY: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.BINARY;\n        }, \"AbstractLoader.BINARY\")\n      },\n      CSS: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.CSS;\n        }, \"AbstractLoader.CSS\")\n      },\n      FONT: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.FONT;\n        }, \"AbstractLoader.FONT\")\n      },\n      FONTCSS: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.FONTCSS;\n        }, \"AbstractLoader.FONTCSS\")\n      },\n      IMAGE: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.IMAGE;\n        }, \"AbstractLoader.IMAGE\")\n      },\n      JAVASCRIPT: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.JAVASCRIPT;\n        }, \"AbstractLoader.JAVASCRIPT\")\n      },\n      JSON: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.JSON;\n        }, \"AbstractLoader.JSON\")\n      },\n      JSONP: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.JSONP;\n        }, \"AbstractLoader.JSONP\")\n      },\n      MANIFEST: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.MANIFEST;\n        }, \"AbstractLoader.MANIFEST\")\n      },\n      SOUND: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.SOUND;\n        }, \"AbstractLoader.SOUND\")\n      },\n      VIDEO: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.VIDEO;\n        }, \"AbstractLoader.VIDEO\")\n      },\n      SPRITESHEET: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.SPRITESHEET;\n        }, \"AbstractLoader.SPRITESHEET\")\n      },\n      SVG: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.SVG;\n        }, \"AbstractLoader.SVG\")\n      },\n      TEXT: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.TEXT;\n        }, \"AbstractLoader.TEXT\")\n      },\n      XML: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.XML;\n        }, \"AbstractLoader.XML\")\n      }\n    });\n  } catch (e) {} // Events\n\n  /**\n   * The {{#crossLink \"ProgressEvent\"}}{{/crossLink}} that is fired when the overall progress changes. Prior to\n   * version 0.6.0, this was just a regular {{#crossLink \"Event\"}}{{/crossLink}}.\n   * @event progress\n   * @since 0.3.0\n   */\n\n  /**\n   * The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when a load starts.\n   * @event loadstart\n   * @param {Object} target The object that dispatched the event.\n   * @param {String} type The event type.\n   * @since 0.3.1\n   */\n\n  /**\n   * The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when the entire queue has been loaded.\n   * @event complete\n   * @param {Object} target The object that dispatched the event.\n   * @param {String} type The event type.\n   * @since 0.3.0\n   */\n\n  /**\n   * The {{#crossLink \"ErrorEvent\"}}{{/crossLink}} that is fired when the loader encounters an error. If the error was\n   * encountered by a file, the event will contain the item that caused the error. Prior to version 0.6.0, this was\n   * just a regular {{#crossLink \"Event\"}}{{/crossLink}}.\n   * @event error\n   * @since 0.3.0\n   */\n\n  /**\n   * The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when the loader encounters an internal file load error.\n   * This enables loaders to maintain internal queues, and surface file load errors.\n   * @event fileerror\n   * @param {Object} target The object that dispatched the event.\n   * @param {String} type The event type (\"fileerror\")\n   * @param {LoadItem|object} The item that encountered the error\n   * @since 0.6.0\n   */\n\n  /**\n   * The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when a loader internally loads a file. This enables\n   * loaders such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}} to maintain internal {{#crossLink \"LoadQueue\"}}{{/crossLink}}s\n   * and notify when they have loaded a file. The {{#crossLink \"LoadQueue\"}}{{/crossLink}} class dispatches a\n   * slightly different {{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}} event.\n   * @event fileload\n   * @param {Object} target The object that dispatched the event.\n   * @param {String} type The event type (\"fileload\")\n   * @param {Object} item The file item which was specified in the {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}}\n   * or {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}} call. If only a string path or tag was specified, the\n   * object will contain that value as a `src` property.\n   * @param {Object} result The HTML tag or parsed result of the loaded item.\n   * @param {Object} rawResult The unprocessed result, usually the raw text or binary data before it is converted\n   * to a usable object.\n   * @since 0.6.0\n   */\n\n  /**\n   * The {{#crossLink \"Event\"}}{{/crossLink}} that is fired after the internal request is created, but before a load.\n   * This allows updates to the loader for specific loading needs, such as binary or XHR image loading.\n   * @event initialize\n   * @param {Object} target The object that dispatched the event.\n   * @param {String} type The event type (\"initialize\")\n   * @param {AbstractLoader} loader The loader that has been initialized.\n   */\n\n  /**\n   * Get a reference to the manifest item that is loaded by this loader. In some cases this will be the value that was\n   * passed into {{#crossLink \"LoadQueue\"}}{{/crossLink}} using {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}} or\n   * {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}. However if only a String path was passed in, then it will\n   * be a {{#crossLink \"LoadItem\"}}{{/crossLink}}.\n   * @method getItem\n   * @return {Object} The manifest item that this loader is responsible for loading.\n   * @since 0.6.0\n   */\n\n\n  p.getItem = function () {\n    return this._item;\n  };\n  /**\n   * Get a reference to the content that was loaded by the loader (only available after the {{#crossLink \"complete:event\"}}{{/crossLink}}\n   * event is dispatched.\n   * @method getResult\n   * @param {Boolean} [raw=false] Determines if the returned result will be the formatted content, or the raw loaded\n   * data (if it exists).\n   * @return {Object}\n   * @since 0.6.0\n   */\n\n\n  p.getResult = function (raw) {\n    return raw ? this._rawResult : this._result;\n  };\n  /**\n   * Return the `tag` this object creates or uses for loading.\n   * @method getTag\n   * @return {Object} The tag instance\n   * @since 0.6.0\n   */\n\n\n  p.getTag = function () {\n    return this._tag;\n  };\n  /**\n   * Set the `tag` this item uses for loading.\n   * @method setTag\n   * @param {Object} tag The tag instance\n   * @since 0.6.0\n   */\n\n\n  p.setTag = function (tag) {\n    this._tag = tag;\n  };\n  /**\n   * Begin loading the item. This method is required when using a loader by itself.\n   *\n   * <h4>Example</h4>\n   *\n   *      var queue = new createjs.LoadQueue();\n   *      queue.on(\"complete\", handleComplete);\n   *      queue.loadManifest(fileArray, false); // Note the 2nd argument that tells the queue not to start loading yet\n   *      queue.load();\n   *\n   * @method load\n   */\n\n\n  p.load = function () {\n    this._createRequest();\n\n    this._request.on(\"complete\", this, this);\n\n    this._request.on(\"progress\", this, this);\n\n    this._request.on(\"loadStart\", this, this);\n\n    this._request.on(\"abort\", this, this);\n\n    this._request.on(\"timeout\", this, this);\n\n    this._request.on(\"error\", this, this);\n\n    var evt = new createjs.Event(\"initialize\");\n    evt.loader = this._request;\n    this.dispatchEvent(evt);\n\n    this._request.load();\n  };\n  /**\n   * Close the the item. This will stop any open requests (although downloads using HTML tags may still continue in\n   * the background), but events will not longer be dispatched.\n   * @method cancel\n   */\n\n\n  p.cancel = function () {\n    this.canceled = true;\n    this.destroy();\n  };\n  /**\n   * Clean up the loader.\n   * @method destroy\n   */\n\n\n  p.destroy = function () {\n    if (this._request) {\n      this._request.removeAllEventListeners();\n\n      this._request.destroy();\n    }\n\n    this._request = null;\n    this._item = null;\n    this._rawResult = null;\n    this._result = null;\n    this._loadItems = null;\n    this.removeAllEventListeners();\n  };\n  /**\n   * Get any items loaded internally by the loader. The enables loaders such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}}\n   * to expose items it loads internally.\n   * @method getLoadedItems\n   * @return {Array} A list of the items loaded by the loader.\n   * @since 0.6.0\n   */\n\n\n  p.getLoadedItems = function () {\n    return this._loadedItems;\n  }; // Private methods\n\n  /**\n   * Create an internal request used for loading. By default, an {{#crossLink \"XHRRequest\"}}{{/crossLink}} or\n   * {{#crossLink \"TagRequest\"}}{{/crossLink}} is created, depending on the value of {{#crossLink \"preferXHR:property\"}}{{/crossLink}}.\n   * Other loaders may override this to use different request types, such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}},\n   * which uses {{#crossLink \"JSONLoader\"}}{{/crossLink}} or {{#crossLink \"JSONPLoader\"}}{{/crossLink}} under the hood.\n   * @method _createRequest\n   * @protected\n   */\n\n\n  p._createRequest = function () {\n    if (!this._preferXHR) {\n      this._request = new createjs.TagRequest(this._item, this._tag || this._createTag(), this._tagSrcAttribute);\n    } else {\n      this._request = new createjs.XHRRequest(this._item);\n    }\n  };\n  /**\n   * Create the HTML tag used for loading. This method does nothing by default, and needs to be implemented\n   * by loaders that require tag loading.\n   * @method _createTag\n   * @param {String} src The tag source\n   * @return {HTMLElement} The tag that was created\n   * @protected\n   */\n\n\n  p._createTag = function (src) {\n    return null;\n  };\n  /**\n   * Dispatch a loadstart {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"AbstractLoader/loadstart:event\"}}{{/crossLink}}\n   * event for details on the event payload.\n   * @method _sendLoadStart\n   * @protected\n   */\n\n\n  p._sendLoadStart = function () {\n    if (this._isCanceled()) {\n      return;\n    }\n\n    this.dispatchEvent(\"loadstart\");\n  };\n  /**\n   * Dispatch a {{#crossLink \"ProgressEvent\"}}{{/crossLink}}.\n   * @method _sendProgress\n   * @param {Number | Object} value The progress of the loaded item, or an object containing <code>loaded</code>\n   * and <code>total</code> properties.\n   * @protected\n   */\n\n\n  p._sendProgress = function (value) {\n    if (this._isCanceled()) {\n      return;\n    }\n\n    var event = null;\n\n    if (typeof value == \"number\") {\n      this.progress = value;\n      event = new createjs.ProgressEvent(this.progress);\n    } else {\n      event = value;\n      this.progress = value.loaded / value.total;\n      event.progress = this.progress;\n\n      if (isNaN(this.progress) || this.progress == Infinity) {\n        this.progress = 0;\n      }\n    }\n\n    this.hasEventListener(\"progress\") && this.dispatchEvent(event);\n  };\n  /**\n   * Dispatch a complete {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"AbstractLoader/complete:event\"}}{{/crossLink}} event\n   * @method _sendComplete\n   * @protected\n   */\n\n\n  p._sendComplete = function () {\n    if (this._isCanceled()) {\n      return;\n    }\n\n    this.loaded = true;\n    var event = new createjs.Event(\"complete\");\n    event.rawResult = this._rawResult;\n\n    if (this._result != null) {\n      event.result = this._result;\n    }\n\n    this.dispatchEvent(event);\n  };\n  /**\n   * Dispatch an error {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"AbstractLoader/error:event\"}}{{/crossLink}}\n   * event for details on the event payload.\n   * @method _sendError\n   * @param {ErrorEvent} event The event object containing specific error properties.\n   * @protected\n   */\n\n\n  p._sendError = function (event) {\n    if (this._isCanceled() || !this.hasEventListener(\"error\")) {\n      return;\n    }\n\n    if (event == null) {\n      event = new createjs.ErrorEvent(\"PRELOAD_ERROR_EMPTY\"); // TODO: Populate error\n    }\n\n    this.dispatchEvent(event);\n  };\n  /**\n   * Determine if the load has been canceled. This is important to ensure that method calls or asynchronous events\n   * do not cause issues after the queue has been cleaned up.\n   * @method _isCanceled\n   * @return {Boolean} If the loader has been canceled.\n   * @protected\n   */\n\n\n  p._isCanceled = function () {\n    if (window.createjs == null || this.canceled) {\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * A custom result formatter function, which is called just before a request dispatches its complete event. Most\n   * loader types already have an internal formatter, but this can be user-overridden for custom formatting. The\n   * formatted result will be available on Loaders using {{#crossLink \"getResult\"}}{{/crossLink}}, and passing `true`.\n   * @property resultFormatter\n   * @type Function\n   * @return {Object} The formatted result\n   * @since 0.6.0\n   */\n\n\n  p.resultFormatter = null;\n  /**\n   * Handle events from internal requests. By default, loaders will handle, and redispatch the necessary events, but\n   * this method can be overridden for custom behaviours.\n   * @method handleEvent\n   * @param {Event} event The event that the internal request dispatches.\n   * @protected\n   * @since 0.6.0\n   */\n\n  p.handleEvent = function (event) {\n    switch (event.type) {\n      case \"complete\":\n        this._rawResult = event.target._response;\n        var result = this.resultFormatter && this.resultFormatter(this); // The resultFormatter is asynchronous\n\n        if (result instanceof Function) {\n          result.call(this, createjs.proxy(this._resultFormatSuccess, this), createjs.proxy(this._resultFormatFailed, this)); // The result formatter is synchronous\n        } else {\n          this._result = result || this._rawResult;\n\n          this._sendComplete();\n        }\n\n        break;\n\n      case \"progress\":\n        this._sendProgress(event);\n\n        break;\n\n      case \"error\":\n        this._sendError(event);\n\n        break;\n\n      case \"loadstart\":\n        this._sendLoadStart();\n\n        break;\n\n      case \"abort\":\n      case \"timeout\":\n        if (!this._isCanceled()) {\n          this.dispatchEvent(new createjs.ErrorEvent(\"PRELOAD_\" + event.type.toUpperCase() + \"_ERROR\"));\n        }\n\n        break;\n    }\n  };\n  /**\n   * The \"success\" callback passed to {{#crossLink \"AbstractLoader/resultFormatter\"}}{{/crossLink}} asynchronous\n   * functions.\n   * @method _resultFormatSuccess\n   * @param {Object} result The formatted result\n   * @private\n   */\n\n\n  p._resultFormatSuccess = function (result) {\n    this._result = result;\n\n    this._sendComplete();\n  };\n  /**\n   * The \"error\" callback passed to {{#crossLink \"AbstractLoader/resultFormatter\"}}{{/crossLink}} asynchronous\n   * functions.\n   * @method _resultFormatSuccess\n   * @param {Object} error The error event\n   * @private\n   */\n\n\n  p._resultFormatFailed = function (event) {\n    this._sendError(event);\n  };\n  /**\n   * @method toString\n   * @return {String} a string representation of the instance.\n   */\n\n\n  p.toString = function () {\n    return \"[PreloadJS AbstractLoader]\";\n  };\n\n  createjs.AbstractLoader = createjs.promote(AbstractLoader, \"EventDispatcher\");\n})(); //##############################################################################\n// AbstractMediaLoader.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor\n\n  /**\n   * The AbstractMediaLoader is a base class that handles some of the shared methods and properties of loaders that\n   * handle HTML media elements, such as Video and Audio.\n   * @class AbstractMediaLoader\n   * @param {LoadItem|Object} loadItem\n   * @param {Boolean} preferXHR\n   * @param {String} type The type of media to load. Usually \"video\" or \"audio\".\n   * @extends AbstractLoader\n   * @constructor\n   */\n\n  function AbstractMediaLoader(loadItem, preferXHR, type) {\n    this.AbstractLoader_constructor(loadItem, preferXHR, type); // public properties\n\n    this.resultFormatter = this._formatResult; // protected properties\n\n    this._tagSrcAttribute = \"src\";\n    this.on(\"initialize\", this._updateXHR, this);\n  }\n\n  ;\n  var p = createjs.extend(AbstractMediaLoader, createjs.AbstractLoader); // static properties\n  // public methods\n\n  p.load = function () {\n    // TagRequest will handle most of this, but Sound / Video need a few custom properties, so just handle them here.\n    if (!this._tag) {\n      this._tag = this._createTag(this._item.src);\n    }\n\n    this._tag.preload = \"auto\";\n\n    this._tag.load();\n\n    this.AbstractLoader_load();\n  }; // protected methods\n\n  /**\n   * Creates a new tag for loading if it doesn't exist yet.\n   * @method _createTag\n   * @private\n   */\n\n\n  p._createTag = function () {};\n\n  p._createRequest = function () {\n    if (!this._preferXHR) {\n      this._request = new createjs.MediaTagRequest(this._item, this._tag || this._createTag(), this._tagSrcAttribute);\n    } else {\n      this._request = new createjs.XHRRequest(this._item);\n    }\n  }; // protected methods\n\n  /**\n   * Before the item loads, set its mimeType and responseType.\n   * @property _updateXHR\n   * @param {Event} event\n   * @private\n   */\n\n\n  p._updateXHR = function (event) {\n    // Only exists for XHR\n    if (event.loader.setResponseType) {\n      event.loader.setResponseType(\"blob\");\n    }\n  };\n  /**\n   * The result formatter for media files.\n   * @method _formatResult\n   * @param {AbstractLoader} loader\n   * @returns {HTMLVideoElement|HTMLAudioElement}\n   * @private\n   */\n\n\n  p._formatResult = function (loader) {\n    this._tag.removeEventListener && this._tag.removeEventListener(\"canplaythrough\", this._loadedHandler);\n    this._tag.onstalled = null;\n\n    if (this._preferXHR) {\n      var URL = window.URL || window.webkitURL;\n      var result = loader.getResult(true);\n      loader.getTag().src = URL.createObjectURL(result);\n    }\n\n    return loader.getTag();\n  };\n\n  createjs.AbstractMediaLoader = createjs.promote(AbstractMediaLoader, \"AbstractLoader\");\n})(); //##############################################################################\n// AbstractRequest.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n  /**\n   * A base class for actual data requests, such as {{#crossLink \"XHRRequest\"}}{{/crossLink}}, {{#crossLink \"TagRequest\"}}{{/crossLink}},\n   * and {{#crossLink \"MediaRequest\"}}{{/crossLink}}. PreloadJS loaders will typically use a data loader under the\n   * hood to get data.\n   * @class AbstractRequest\n   * @param {LoadItem} item\n   * @constructor\n   */\n\n  var AbstractRequest = function (item) {\n    this._item = item;\n  };\n\n  var p = createjs.extend(AbstractRequest, createjs.EventDispatcher); // public methods\n\n  /**\n   * Begin a load.\n   * @method load\n   */\n\n  p.load = function () {};\n  /**\n   * Clean up a request.\n   * @method destroy\n   */\n\n\n  p.destroy = function () {};\n  /**\n   * Cancel an in-progress request.\n   * @method cancel\n   */\n\n\n  p.cancel = function () {};\n\n  createjs.AbstractRequest = createjs.promote(AbstractRequest, \"EventDispatcher\");\n})(); //##############################################################################\n// TagRequest.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor\n\n  /**\n   * An {{#crossLink \"AbstractRequest\"}}{{/crossLink}} that loads HTML tags, such as images and scripts.\n   * @class TagRequest\n   * @param {LoadItem} loadItem\n   * @param {HTMLElement} tag\n   * @param {String} srcAttribute The tag attribute that specifies the source, such as \"src\", \"href\", etc.\n   */\n\n  function TagRequest(loadItem, tag, srcAttribute) {\n    this.AbstractRequest_constructor(loadItem); // protected properties\n\n    /**\n     * The HTML tag instance that is used to load.\n     * @property _tag\n     * @type {HTMLElement}\n     * @protected\n     */\n\n    this._tag = tag;\n    /**\n     * The tag attribute that specifies the source, such as \"src\", \"href\", etc.\n     * @property _tagSrcAttribute\n     * @type {String}\n     * @protected\n     */\n\n    this._tagSrcAttribute = srcAttribute;\n    /**\n     * A method closure used for handling the tag load event.\n     * @property _loadedHandler\n     * @type {Function}\n     * @private\n     */\n\n    this._loadedHandler = createjs.proxy(this._handleTagComplete, this);\n    /**\n     * Determines if the element was added to the DOM automatically by PreloadJS, so it can be cleaned up after.\n     * @property _addedToDOM\n     * @type {Boolean}\n     * @private\n     */\n\n    this._addedToDOM = false;\n  }\n\n  ;\n  var p = createjs.extend(TagRequest, createjs.AbstractRequest); // public methods\n\n  p.load = function () {\n    this._tag.onload = createjs.proxy(this._handleTagComplete, this);\n    this._tag.onreadystatechange = createjs.proxy(this._handleReadyStateChange, this);\n    this._tag.onerror = createjs.proxy(this._handleError, this);\n    var evt = new createjs.Event(\"initialize\");\n    evt.loader = this._tag;\n    this.dispatchEvent(evt);\n    this._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), this._item.loadTimeout);\n    this._tag[this._tagSrcAttribute] = this._item.src; // wdg:: Append the tag AFTER setting the src, or SVG loading on iOS will fail.\n\n    if (this._tag.parentNode == null) {\n      createjs.DomUtils.appendToBody(this._tag);\n      this._addedToDOM = true;\n    }\n  };\n\n  p.destroy = function () {\n    this._clean();\n\n    this._tag = null;\n    this.AbstractRequest_destroy();\n  }; // private methods\n\n  /**\n   * Handle the readyStateChange event from a tag. We need this in place of the `onload` callback (mainly SCRIPT\n   * and LINK tags), but other cases may exist.\n   * @method _handleReadyStateChange\n   * @private\n   */\n\n\n  p._handleReadyStateChange = function () {\n    clearTimeout(this._loadTimeout); // This is strictly for tags in browsers that do not support onload.\n\n    var tag = this._tag; // Complete is for old IE support.\n\n    if (tag.readyState == \"loaded\" || tag.readyState == \"complete\") {\n      this._handleTagComplete();\n    }\n  };\n  /**\n   * Handle any error events from the tag.\n   * @method _handleError\n   * @protected\n   */\n\n\n  p._handleError = function () {\n    this._clean();\n\n    this.dispatchEvent(\"error\");\n  };\n  /**\n   * Handle the tag's onload callback.\n   * @method _handleTagComplete\n   * @private\n   */\n\n\n  p._handleTagComplete = function () {\n    this._rawResult = this._tag;\n    this._result = this.resultFormatter && this.resultFormatter(this) || this._rawResult;\n\n    this._clean();\n\n    this.dispatchEvent(\"complete\");\n  };\n  /**\n   * The tag request has not loaded within the time specified in loadTimeout.\n   * @method _handleError\n   * @param {Object} event The XHR error event.\n   * @private\n   */\n\n\n  p._handleTimeout = function () {\n    this._clean();\n\n    this.dispatchEvent(new createjs.Event(\"timeout\"));\n  };\n  /**\n   * Remove event listeners, but don't destroy the request object\n   * @method _clean\n   * @private\n   */\n\n\n  p._clean = function () {\n    this._tag.onload = null;\n    this._tag.onreadystatechange = null;\n    this._tag.onerror = null;\n\n    if (this._addedToDOM && this._tag.parentNode != null) {\n      this._tag.parentNode.removeChild(this._tag);\n    }\n\n    clearTimeout(this._loadTimeout);\n  };\n  /**\n   * Handle a stalled audio event. The main place this happens is with HTMLAudio in Chrome when playing back audio\n   * that is already in a load, but not complete.\n   * @method _handleStalled\n   * @private\n   */\n\n\n  p._handleStalled = function () {//Ignore, let the timeout take care of it. Sometimes its not really stopped.\n  };\n\n  createjs.TagRequest = createjs.promote(TagRequest, \"AbstractRequest\");\n})(); //##############################################################################\n// MediaTagRequest.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor\n\n  /**\n   * An {{#crossLink \"TagRequest\"}}{{/crossLink}} that loads HTML tags for video and audio.\n   * @class MediaTagRequest\n   * @param {LoadItem} loadItem\n   * @param {HTMLAudioElement|HTMLVideoElement} tag\n   * @param {String} srcAttribute The tag attribute that specifies the source, such as \"src\", \"href\", etc.\n   * @constructor\n   */\n\n  function MediaTagRequest(loadItem, tag, srcAttribute) {\n    this.AbstractRequest_constructor(loadItem); // protected properties\n\n    this._tag = tag;\n    this._tagSrcAttribute = srcAttribute;\n    this._loadedHandler = createjs.proxy(this._handleTagComplete, this);\n  }\n\n  ;\n  var p = createjs.extend(MediaTagRequest, createjs.TagRequest);\n  var s = MediaTagRequest; // public methods\n\n  p.load = function () {\n    var sc = createjs.proxy(this._handleStalled, this);\n    this._stalledCallback = sc;\n    var pc = createjs.proxy(this._handleProgress, this);\n    this._handleProgress = pc;\n\n    this._tag.addEventListener(\"stalled\", sc);\n\n    this._tag.addEventListener(\"progress\", pc); // This will tell us when audio is buffered enough to play through, but not when its loaded.\n    // The tag doesn't keep loading in Chrome once enough has buffered, and we have decided that behaviour is sufficient.\n\n\n    this._tag.addEventListener && this._tag.addEventListener(\"canplaythrough\", this._loadedHandler, false); // canplaythrough callback doesn't work in Chrome, so we use an event.\n\n    this.TagRequest_load();\n  }; // private methods\n\n\n  p._handleReadyStateChange = function () {\n    clearTimeout(this._loadTimeout); // This is strictly for tags in browsers that do not support onload.\n\n    var tag = this._tag; // Complete is for old IE support.\n\n    if (tag.readyState == \"loaded\" || tag.readyState == \"complete\") {\n      this._handleTagComplete();\n    }\n  };\n\n  p._handleStalled = function () {//Ignore, let the timeout take care of it. Sometimes its not really stopped.\n  };\n  /**\n   * An XHR request has reported progress.\n   * @method _handleProgress\n   * @param {Object} event The XHR progress event.\n   * @private\n   */\n\n\n  p._handleProgress = function (event) {\n    if (!event || event.loaded > 0 && event.total == 0) {\n      return; // Sometimes we get no \"total\", so just ignore the progress event.\n    }\n\n    var newEvent = new createjs.ProgressEvent(event.loaded, event.total);\n    this.dispatchEvent(newEvent);\n  }; // protected methods\n\n\n  p._clean = function () {\n    this._tag.removeEventListener && this._tag.removeEventListener(\"canplaythrough\", this._loadedHandler);\n\n    this._tag.removeEventListener(\"stalled\", this._stalledCallback);\n\n    this._tag.removeEventListener(\"progress\", this._progressCallback);\n\n    this.TagRequest__clean();\n  };\n\n  createjs.MediaTagRequest = createjs.promote(MediaTagRequest, \"TagRequest\");\n})(); //##############################################################################\n// XHRRequest.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor\n\n  /**\n   * A preloader that loads items using XHR requests, usually XMLHttpRequest. However XDomainRequests will be used\n   * for cross-domain requests if possible, and older versions of IE fall back on to ActiveX objects when necessary.\n   * XHR requests load the content as text or binary data, provide progress and consistent completion events, and\n   * can be canceled during load. Note that XHR is not supported in IE 6 or earlier, and is not recommended for\n   * cross-domain loading.\n   * @class XHRRequest\n   * @constructor\n   * @param {Object} item The object that defines the file to load. Please see the {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}}\n   * for an overview of supported file properties.\n   * @extends AbstractLoader\n   */\n\n  function XHRRequest(item) {\n    this.AbstractRequest_constructor(item); // protected properties\n\n    /**\n     * A reference to the XHR request used to load the content.\n     * @property _request\n     * @type {XMLHttpRequest | XDomainRequest | ActiveX.XMLHTTP}\n     * @private\n     */\n\n    this._request = null;\n    /**\n     * A manual load timeout that is used for browsers that do not support the onTimeout event on XHR (XHR level 1,\n     * typically IE9).\n     * @property _loadTimeout\n     * @type {Number}\n     * @private\n     */\n\n    this._loadTimeout = null;\n    /**\n     * The browser's XHR (XMLHTTPRequest) version. Supported versions are 1 and 2. There is no official way to detect\n     * the version, so we use capabilities to make a best guess.\n     * @property _xhrLevel\n     * @type {Number}\n     * @default 1\n     * @private\n     */\n\n    this._xhrLevel = 1;\n    /**\n     * The response of a loaded file. This is set because it is expensive to look up constantly. This property will be\n     * null until the file is loaded.\n     * @property _response\n     * @type {mixed}\n     * @private\n     */\n\n    this._response = null;\n    /**\n     * The response of the loaded file before it is modified. In most cases, content is converted from raw text to\n     * an HTML tag or a formatted object which is set to the <code>result</code> property, but the developer may still\n     * want to access the raw content as it was loaded.\n     * @property _rawResponse\n     * @type {String|Object}\n     * @private\n     */\n\n    this._rawResponse = null;\n    this._canceled = false; // Setup our event handlers now.\n\n    this._handleLoadStartProxy = createjs.proxy(this._handleLoadStart, this);\n    this._handleProgressProxy = createjs.proxy(this._handleProgress, this);\n    this._handleAbortProxy = createjs.proxy(this._handleAbort, this);\n    this._handleErrorProxy = createjs.proxy(this._handleError, this);\n    this._handleTimeoutProxy = createjs.proxy(this._handleTimeout, this);\n    this._handleLoadProxy = createjs.proxy(this._handleLoad, this);\n    this._handleReadyStateChangeProxy = createjs.proxy(this._handleReadyStateChange, this);\n\n    if (!this._createXHR(item)) {//TODO: Throw error?\n    }\n  }\n\n  ;\n  var p = createjs.extend(XHRRequest, createjs.AbstractRequest); // static properties\n\n  /**\n   * A list of XMLHTTP object IDs to try when building an ActiveX object for XHR requests in earlier versions of IE.\n   * @property ACTIVEX_VERSIONS\n   * @type {Array}\n   * @since 0.4.2\n   * @private\n   */\n\n  XHRRequest.ACTIVEX_VERSIONS = [\"Msxml2.XMLHTTP.6.0\", \"Msxml2.XMLHTTP.5.0\", \"Msxml2.XMLHTTP.4.0\", \"MSXML2.XMLHTTP.3.0\", \"MSXML2.XMLHTTP\", \"Microsoft.XMLHTTP\"]; // Public methods\n\n  /**\n   * Look up the loaded result.\n   * @method getResult\n   * @param {Boolean} [raw=false] Return a raw result instead of a formatted result. This applies to content\n   * loaded via XHR such as scripts, XML, CSS, and Images. If there is no raw result, the formatted result will be\n   * returned instead.\n   * @return {Object} A result object containing the content that was loaded, such as:\n   * <ul>\n   *      <li>An image tag (&lt;image /&gt;) for images</li>\n   *      <li>A script tag for JavaScript (&lt;script /&gt;). Note that scripts loaded with tags may be added to the\n   *      HTML head.</li>\n   *      <li>A style tag for CSS (&lt;style /&gt;)</li>\n   *      <li>Raw text for TEXT</li>\n   *      <li>A formatted JavaScript object defined by JSON</li>\n   *      <li>An XML document</li>\n   *      <li>An binary arraybuffer loaded by XHR</li>\n   * </ul>\n   * Note that if a raw result is requested, but not found, the result will be returned instead.\n   */\n\n  p.getResult = function (raw) {\n    if (raw && this._rawResponse) {\n      return this._rawResponse;\n    }\n\n    return this._response;\n  }; // Overrides abstract method in AbstractRequest\n\n\n  p.cancel = function () {\n    this.canceled = true;\n\n    this._clean();\n\n    this._request.abort();\n  }; // Overrides abstract method in AbstractLoader\n\n\n  p.load = function () {\n    if (this._request == null) {\n      this._handleError();\n\n      return;\n    } //Events\n\n\n    if (this._request.addEventListener != null) {\n      this._request.addEventListener(\"loadstart\", this._handleLoadStartProxy, false);\n\n      this._request.addEventListener(\"progress\", this._handleProgressProxy, false);\n\n      this._request.addEventListener(\"abort\", this._handleAbortProxy, false);\n\n      this._request.addEventListener(\"error\", this._handleErrorProxy, false);\n\n      this._request.addEventListener(\"timeout\", this._handleTimeoutProxy, false); // Note: We don't get onload in all browsers (earlier FF and IE). onReadyStateChange handles these.\n\n\n      this._request.addEventListener(\"load\", this._handleLoadProxy, false);\n\n      this._request.addEventListener(\"readystatechange\", this._handleReadyStateChangeProxy, false);\n    } else {\n      // IE9 support\n      this._request.onloadstart = this._handleLoadStartProxy;\n      this._request.onprogress = this._handleProgressProxy;\n      this._request.onabort = this._handleAbortProxy;\n      this._request.onerror = this._handleErrorProxy;\n      this._request.ontimeout = this._handleTimeoutProxy; // Note: We don't get onload in all browsers (earlier FF and IE). onReadyStateChange handles these.\n\n      this._request.onload = this._handleLoadProxy;\n      this._request.onreadystatechange = this._handleReadyStateChangeProxy;\n    } // Set up a timeout if we don't have XHR2\n\n\n    if (this._xhrLevel == 1) {\n      this._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), this._item.loadTimeout);\n    } // Sometimes we get back 404s immediately, particularly when there is a cross origin request.  // note this does not catch in Chrome\n\n\n    try {\n      if (!this._item.values) {\n        this._request.send();\n      } else {\n        this._request.send(createjs.URLUtils.formatQueryString(this._item.values));\n      }\n    } catch (error) {\n      this.dispatchEvent(new createjs.ErrorEvent(\"XHR_SEND\", null, error));\n    }\n  };\n\n  p.setResponseType = function (type) {\n    // Some old browsers doesn't support blob, so we convert arraybuffer to blob after response is downloaded\n    if (type === 'blob') {\n      type = window.URL ? 'blob' : 'arraybuffer';\n      this._responseType = type;\n    }\n\n    this._request.responseType = type;\n  };\n  /**\n   * Get all the response headers from the XmlHttpRequest.\n   *\n   * <strong>From the docs:</strong> Return all the HTTP headers, excluding headers that are a case-insensitive match\n   * for Set-Cookie or Set-Cookie2, as a single string, with each header line separated by a U+000D CR U+000A LF pair,\n   * excluding the status line, and with each header name and header value separated by a U+003A COLON U+0020 SPACE\n   * pair.\n   * @method getAllResponseHeaders\n   * @return {String}\n   * @since 0.4.1\n   */\n\n\n  p.getAllResponseHeaders = function () {\n    if (this._request.getAllResponseHeaders instanceof Function) {\n      return this._request.getAllResponseHeaders();\n    } else {\n      return null;\n    }\n  };\n  /**\n   * Get a specific response header from the XmlHttpRequest.\n   *\n   * <strong>From the docs:</strong> Returns the header field value from the response of which the field name matches\n   * header, unless the field name is Set-Cookie or Set-Cookie2.\n   * @method getResponseHeader\n   * @param {String} header The header name to retrieve.\n   * @return {String}\n   * @since 0.4.1\n   */\n\n\n  p.getResponseHeader = function (header) {\n    if (this._request.getResponseHeader instanceof Function) {\n      return this._request.getResponseHeader(header);\n    } else {\n      return null;\n    }\n  }; // protected methods\n\n  /**\n   * The XHR request has reported progress.\n   * @method _handleProgress\n   * @param {Object} event The XHR progress event.\n   * @private\n   */\n\n\n  p._handleProgress = function (event) {\n    if (!event || event.loaded > 0 && event.total == 0) {\n      return; // Sometimes we get no \"total\", so just ignore the progress event.\n    }\n\n    var newEvent = new createjs.ProgressEvent(event.loaded, event.total);\n    this.dispatchEvent(newEvent);\n  };\n  /**\n   * The XHR request has reported a load start.\n   * @method _handleLoadStart\n   * @param {Object} event The XHR loadStart event.\n   * @private\n   */\n\n\n  p._handleLoadStart = function (event) {\n    clearTimeout(this._loadTimeout);\n    this.dispatchEvent(\"loadstart\");\n  };\n  /**\n   * The XHR request has reported an abort event.\n   * @method handleAbort\n   * @param {Object} event The XHR abort event.\n   * @private\n   */\n\n\n  p._handleAbort = function (event) {\n    this._clean();\n\n    this.dispatchEvent(new createjs.ErrorEvent(\"XHR_ABORTED\", null, event));\n  };\n  /**\n   * The XHR request has reported an error event.\n   * @method _handleError\n   * @param {Object} event The XHR error event.\n   * @private\n   */\n\n\n  p._handleError = function (event) {\n    this._clean();\n\n    this.dispatchEvent(new createjs.ErrorEvent(event.message));\n  };\n  /**\n   * The XHR request has reported a readyState change. Note that older browsers (IE 7 & 8) do not provide an onload\n   * event, so we must monitor the readyStateChange to determine if the file is loaded.\n   * @method _handleReadyStateChange\n   * @param {Object} event The XHR readyStateChange event.\n   * @private\n   */\n\n\n  p._handleReadyStateChange = function (event) {\n    if (this._request.readyState == 4) {\n      this._handleLoad();\n    }\n  };\n  /**\n   * The XHR request has completed. This is called by the XHR request directly, or by a readyStateChange that has\n   * <code>request.readyState == 4</code>. Only the first call to this method will be processed.\n   *\n   * Note that This method uses {{#crossLink \"_checkError\"}}{{/crossLink}} to determine if the server has returned an\n   * error code.\n   * @method _handleLoad\n   * @param {Object} event The XHR load event.\n   * @private\n   */\n\n\n  p._handleLoad = function (event) {\n    if (this.loaded) {\n      return;\n    }\n\n    this.loaded = true;\n\n    var error = this._checkError();\n\n    if (error) {\n      this._handleError(error);\n\n      return;\n    }\n\n    this._response = this._getResponse(); // Convert arraybuffer back to blob\n\n    if (this._responseType === 'arraybuffer') {\n      try {\n        this._response = new Blob([this._response]);\n      } catch (e) {\n        // Fallback to use BlobBuilder if Blob constructor is not supported\n        // Tested on Android 2.3 ~ 4.2 and iOS5 safari\n        window.BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n\n        if (e.name === 'TypeError' && window.BlobBuilder) {\n          var builder = new BlobBuilder();\n          builder.append(this._response);\n          this._response = builder.getBlob();\n        }\n      }\n    }\n\n    this._clean();\n\n    this.dispatchEvent(new createjs.Event(\"complete\"));\n  };\n  /**\n   * The XHR request has timed out. This is called by the XHR request directly, or via a <code>setTimeout</code>\n   * callback.\n   * @method _handleTimeout\n   * @param {Object} [event] The XHR timeout event. This is occasionally null when called by the backup setTimeout.\n   * @private\n   */\n\n\n  p._handleTimeout = function (event) {\n    this._clean();\n\n    this.dispatchEvent(new createjs.ErrorEvent(\"PRELOAD_TIMEOUT\", null, event));\n  }; // Protected\n\n  /**\n   * Determine if there is an error in the current load.\n   * Currently this checks the status of the request for problem codes, and not actual response content:\n   * <ul>\n   *     <li>Status codes between 400 and 599 (HTTP error range)</li>\n   *     <li>A status of 0, but *only when the application is running on a server*. If the application is running\n   *     on `file:`, then it may incorrectly treat an error on local (or embedded applications) as a successful\n   *     load.</li>\n   * </ul>\n   * @method _checkError\n   * @return {Error} An error with the status code in the `message` argument.\n   * @private\n   */\n\n\n  p._checkError = function () {\n    var status = parseInt(this._request.status);\n\n    if (status >= 400 && status <= 599) {\n      return new Error(status);\n    } else if (status == 0) {\n      if (/^https?:/.test(location.protocol)) {\n        return new Error(0);\n      }\n\n      return null; // Likely an embedded app.\n    } else {\n      return null;\n    }\n  };\n  /**\n   * Validate the response. Different browsers have different approaches, some of which throw errors when accessed\n   * in other browsers. If there is no response, the <code>_response</code> property will remain null.\n   * @method _getResponse\n   * @private\n   */\n\n\n  p._getResponse = function () {\n    if (this._response != null) {\n      return this._response;\n    }\n\n    if (this._request.response != null) {\n      return this._request.response;\n    } // Android 2.2 uses .responseText\n\n\n    try {\n      if (this._request.responseText != null) {\n        return this._request.responseText;\n      }\n    } catch (e) {} // When loading XML, IE9 does not return .response, instead it returns responseXML.xml\n\n\n    try {\n      if (this._request.responseXML != null) {\n        return this._request.responseXML;\n      }\n    } catch (e) {}\n\n    return null;\n  };\n  /**\n   * Create an XHR request. Depending on a number of factors, we get totally different results.\n   * <ol><li>Some browsers get an <code>XDomainRequest</code> when loading cross-domain.</li>\n   *      <li>XMLHttpRequest are created when available.</li>\n   *      <li>ActiveX.XMLHTTP objects are used in older IE browsers.</li>\n   *      <li>Text requests override the mime type if possible</li>\n   *      <li>Origin headers are sent for crossdomain requests in some browsers.</li>\n   *      <li>Binary loads set the response type to \"arraybuffer\"</li></ol>\n   * @method _createXHR\n   * @param {Object} item The requested item that is being loaded.\n   * @return {Boolean} If an XHR request or equivalent was successfully created.\n   * @private\n   */\n\n\n  p._createXHR = function (item) {\n    // Check for cross-domain loads. We can't fully support them, but we can try.\n    var crossdomain = createjs.URLUtils.isCrossDomain(item);\n    var headers = {}; // Create the request. Fallback to whatever support we have.\n\n    var req = null;\n\n    if (window.XMLHttpRequest) {\n      req = new XMLHttpRequest(); // This is 8 or 9, so use XDomainRequest instead.\n\n      if (crossdomain && req.withCredentials === undefined && window.XDomainRequest) {\n        req = new XDomainRequest();\n      }\n    } else {\n      // Old IE versions use a different approach\n      for (var i = 0, l = s.ACTIVEX_VERSIONS.length; i < l; i++) {\n        var axVersion = s.ACTIVEX_VERSIONS[i];\n\n        try {\n          req = new ActiveXObject(axVersion);\n          break;\n        } catch (e) {}\n      }\n\n      if (req == null) {\n        return false;\n      }\n    } // Default to utf-8 for Text requests.\n\n\n    if (item.mimeType == null && createjs.RequestUtils.isText(item.type)) {\n      item.mimeType = \"text/plain; charset=utf-8\";\n    } // IE9 doesn't support overrideMimeType(), so we need to check for it.\n\n\n    if (item.mimeType && req.overrideMimeType) {\n      req.overrideMimeType(item.mimeType);\n    } // Determine the XHR level\n\n\n    this._xhrLevel = typeof req.responseType === \"string\" ? 2 : 1;\n    var src = null;\n\n    if (item.method == createjs.Methods.GET) {\n      src = createjs.URLUtils.buildURI(item.src, item.values);\n    } else {\n      src = item.src;\n    } // Open the request.  Set cross-domain flags if it is supported (XHR level 1 only)\n\n\n    req.open(item.method || createjs.Methods.GET, src, true);\n\n    if (crossdomain && req instanceof XMLHttpRequest && this._xhrLevel == 1) {\n      headers[\"Origin\"] = location.origin;\n    } // To send data we need to set the Content-type header)\n\n\n    if (item.values && item.method == createjs.Methods.POST) {\n      headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    }\n\n    if (!crossdomain && !headers[\"X-Requested-With\"]) {\n      headers[\"X-Requested-With\"] = \"XMLHttpRequest\";\n    }\n\n    if (item.headers) {\n      for (var n in item.headers) {\n        headers[n] = item.headers[n];\n      }\n    }\n\n    for (n in headers) {\n      req.setRequestHeader(n, headers[n]);\n    }\n\n    if (req instanceof XMLHttpRequest && item.withCredentials !== undefined) {\n      req.withCredentials = item.withCredentials;\n    }\n\n    this._request = req;\n    return true;\n  };\n  /**\n   * A request has completed (or failed or canceled), and needs to be disposed.\n   * @method _clean\n   * @private\n   */\n\n\n  p._clean = function () {\n    clearTimeout(this._loadTimeout);\n\n    if (this._request.removeEventListener != null) {\n      this._request.removeEventListener(\"loadstart\", this._handleLoadStartProxy);\n\n      this._request.removeEventListener(\"progress\", this._handleProgressProxy);\n\n      this._request.removeEventListener(\"abort\", this._handleAbortProxy);\n\n      this._request.removeEventListener(\"error\", this._handleErrorProxy);\n\n      this._request.removeEventListener(\"timeout\", this._handleTimeoutProxy);\n\n      this._request.removeEventListener(\"load\", this._handleLoadProxy);\n\n      this._request.removeEventListener(\"readystatechange\", this._handleReadyStateChangeProxy);\n    } else {\n      this._request.onloadstart = null;\n      this._request.onprogress = null;\n      this._request.onabort = null;\n      this._request.onerror = null;\n      this._request.ontimeout = null;\n      this._request.onload = null;\n      this._request.onreadystatechange = null;\n    }\n  };\n\n  p.toString = function () {\n    return \"[PreloadJS XHRRequest]\";\n  };\n\n  createjs.XHRRequest = createjs.promote(XHRRequest, \"AbstractRequest\");\n})(); //##############################################################################\n// SoundLoader.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor\n\n  /**\n   * A loader for HTML audio files. PreloadJS can not load WebAudio files, as a WebAudio context is required, which\n   * should be created by either a library playing the sound (such as <a href=\"http://soundjs.com\">SoundJS</a>, or an\n   * external framework that handles audio playback. To load content that can be played by WebAudio, use the\n   * {{#crossLink \"BinaryLoader\"}}{{/crossLink}}, and handle the audio context decoding manually.\n   * @class SoundLoader\n   * @param {LoadItem|Object} loadItem\n   * @param {Boolean} preferXHR\n   * @extends AbstractMediaLoader\n   * @constructor\n   */\n\n  function SoundLoader(loadItem, preferXHR) {\n    this.AbstractMediaLoader_constructor(loadItem, preferXHR, createjs.Types.SOUND); // protected properties\n\n    if (createjs.DomUtils.isAudioTag(loadItem)) {\n      this._tag = loadItem;\n    } else if (createjs.DomUtils.isAudioTag(loadItem.src)) {\n      this._tag = loadItem;\n    } else if (createjs.DomUtils.isAudioTag(loadItem.tag)) {\n      this._tag = createjs.DomUtils.isAudioTag(loadItem) ? loadItem : loadItem.src;\n    }\n\n    if (this._tag != null) {\n      this._preferXHR = false;\n    }\n  }\n\n  ;\n  var p = createjs.extend(SoundLoader, createjs.AbstractMediaLoader);\n  var s = SoundLoader; // static methods\n\n  /**\n   * Determines if the loader can load a specific item. This loader can only load items that are of type\n   * {{#crossLink \"Types/SOUND:property\"}}{{/crossLink}}.\n   * @method canLoadItem\n   * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n   * @returns {Boolean} Whether the loader can load the item.\n   * @static\n   */\n\n  s.canLoadItem = function (item) {\n    return item.type == createjs.Types.SOUND;\n  }; // protected methods\n\n\n  p._createTag = function (src) {\n    var tag = createjs.Elements.audio();\n    tag.autoplay = false;\n    tag.preload = \"none\"; //LM: Firefox fails when this the preload=\"none\" for other tags, but it needs to be \"none\" to ensure PreloadJS works.\n\n    tag.src = src;\n    return tag;\n  };\n\n  createjs.SoundLoader = createjs.promote(SoundLoader, \"AbstractMediaLoader\");\n})(); //##############################################################################\n// AudioSprite.js\n//##############################################################################\n//  NOTE this is \"Class\" is purely to document audioSprite Setup and usage.\n\n/**\n * <strong>Note: AudioSprite is not a class, but its usage is easily lost in the documentation, so it has been called\n * out here for quick reference.</strong>\n *\n * Audio sprites are much like CSS sprites or image sprite sheets: multiple audio assets grouped into a single file.\n * Audio sprites work around limitations in certain browsers, where only a single sound can be loaded and played at a\n * time. We recommend at least 300ms of silence between audio clips to deal with HTML audio tag inaccuracy, and to prevent\n * accidentally playing bits of the neighbouring clips.\n *\n * <strong>Benefits of Audio Sprites:</strong>\n * <ul>\n *     <li>More robust support for older browsers and devices that only allow a single audio instance, such as iOS 5.</li>\n *     <li>They provide a work around for the Internet Explorer 9 audio tag limit, which restricts how many different\n *     sounds that could be loaded at once.</li>\n *     <li>Faster loading by only requiring a single network request for several sounds, especially on mobile devices\n * where the network round trip for each file can add significant latency.</li>\n * </ul>\n *\n * <strong>Drawbacks of Audio Sprites</strong>\n * <ul>\n *     <li>No guarantee of smooth looping when using HTML or Flash audio. If you have a track that needs to loop\n * \t\tsmoothly and you are supporting non-web audio browsers, do not use audio sprites for that sound if you can avoid\n * \t\tit.</li>\n *     <li>No guarantee that HTML audio will play back immediately, especially the first time. In some browsers\n *     (Chrome!), HTML audio will only load enough to play through at the current download speed – so we rely on the\n *     `canplaythrough` event to determine if the audio is loaded. Since audio sprites must jump ahead to play specific\n *     sounds, the audio may not yet have downloaded fully.</li>\n *     <li>Audio sprites share the same core source, so if you have a sprite with 5 sounds and are limited to 2\n * \t\tconcurrently playing instances, you can only play 2 of the sounds at the same time.</li>\n * </ul>\n *\n * <h4>Example</h4>\n *\n *\t\tcreatejs.Sound.initializeDefaultPlugins();\n *\t\tvar assetsPath = \"./assets/\";\n *\t\tvar sounds = [{\n *\t\t\tsrc:\"MyAudioSprite.ogg\", data: {\n *\t\t\t\taudioSprite: [\n *\t\t\t\t\t{id:\"sound1\", startTime:0, duration:500},\n *\t\t\t\t\t{id:\"sound2\", startTime:1000, duration:400},\n *\t\t\t\t\t{id:\"sound3\", startTime:1700, duration: 1000}\n *\t\t\t\t]}\n *\t\t\t}\n *\t\t];\n *\t\tcreatejs.Sound.alternateExtensions = [\"mp3\"];\n *\t\tcreatejs.Sound.on(\"fileload\", loadSound);\n *\t\tcreatejs.Sound.registerSounds(sounds, assetsPath);\n *\t\t// after load is complete\n *\t\tcreatejs.Sound.play(\"sound2\");\n *\n * You can also create audio sprites on the fly by setting the startTime and duration when creating an new AbstractSoundInstance.\n *\n * \t\tcreatejs.Sound.play(\"MyAudioSprite\", {startTime: 1000, duration: 400});\n *\n * The excellent CreateJS community has created a tool to create audio sprites, available at\n * <a href=\"https://github.com/tonistiigi/audiosprite\" target=\"_blank\">https://github.com/tonistiigi/audiosprite</a>,\n * as well as a <a href=\"http://jsfiddle.net/bharat_battu/g8fFP/12/\" target=\"_blank\">jsfiddle</a> to convert the output\n * to SoundJS format.\n *\n * @class AudioSprite\n * @since 0.6.0\n */\n//##############################################################################\n// PlayPropsConfig.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n  /**\n   * A class to store the optional play properties passed in {{#crossLink \"Sound/play\"}}{{/crossLink}} and\n   * {{#crossLink \"AbstractSoundInstance/play\"}}{{/crossLink}} calls.\n   *\n   * Optional Play Properties Include:\n   * <ul>\n   * <li>interrupt - How to interrupt any currently playing instances of audio with the same source,\n   * if the maximum number of instances of the sound are already playing. Values are defined as <code>INTERRUPT_TYPE</code>\n   * constants on the Sound class, with the default defined by {{#crossLink \"Sound/defaultInterruptBehavior:property\"}}{{/crossLink}}.</li>\n   * <li>delay - The amount of time to delay the start of audio playback, in milliseconds.</li>\n   * <li>offset - The offset from the start of the audio to begin playback, in milliseconds.</li>\n   * <li>loop - How many times the audio loops when it reaches the end of playback. The default is 0 (no\n   * loops), and -1 can be used for infinite playback.</li>\n   * <li>volume - The volume of the sound, between 0 and 1. Note that the master volume is applied\n   * against the individual volume.</li>\n   * <li>pan - The left-right pan of the sound (if supported), between -1 (left) and 1 (right).</li>\n   * <li>startTime - To create an audio sprite (with duration), the initial offset to start playback and loop from, in milliseconds.</li>\n   * <li>duration - To create an audio sprite (with startTime), the amount of time to play the clip for, in milliseconds.</li>\n   * </ul>\n   *\n   * <h4>Example</h4>\n   *\n   * \tvar props = new createjs.PlayPropsConfig().set({interrupt: createjs.Sound.INTERRUPT_ANY, loop: -1, volume: 0.5})\n   * \tcreatejs.Sound.play(\"mySound\", props);\n   * \t// OR\n   * \tmySoundInstance.play(props);\n   *\n   * @class PlayPropsConfig\n   * @constructor\n   * @since 0.6.1\n   */\n  // TODO think of a better name for this class\n\n  var PlayPropsConfig = function () {\n    // Public Properties\n\n    /**\n     * How to interrupt any currently playing instances of audio with the same source,\n     * if the maximum number of instances of the sound are already playing. Values are defined as\n     * <code>INTERRUPT_TYPE</code> constants on the Sound class, with the default defined by\n     * {{#crossLink \"Sound/defaultInterruptBehavior:property\"}}{{/crossLink}}.\n     * @property interrupt\n     * @type {string}\n     * @default null\n     */\n    this.interrupt = null;\n    /**\n     * The amount of time to delay the start of audio playback, in milliseconds.\n     * @property delay\n     * @type {Number}\n     * @default null\n     */\n\n    this.delay = null;\n    /**\n     * The offset from the start of the audio to begin playback, in milliseconds.\n     * @property offset\n     * @type {number}\n     * @default null\n     */\n\n    this.offset = null;\n    /**\n     * How many times the audio loops when it reaches the end of playback. The default is 0 (no\n     * loops), and -1 can be used for infinite playback.\n     * @property loop\n     * @type {number}\n     * @default null\n     */\n\n    this.loop = null;\n    /**\n     * The volume of the sound, between 0 and 1. Note that the master volume is applied\n     * against the individual volume.\n     * @property volume\n     * @type {number}\n     * @default null\n     */\n\n    this.volume = null;\n    /**\n     * The left-right pan of the sound (if supported), between -1 (left) and 1 (right).\n     * @property pan\n     * @type {number}\n     * @default null\n     */\n\n    this.pan = null;\n    /**\n     * Used to create an audio sprite (with duration), the initial offset to start playback and loop from, in milliseconds.\n     * @property startTime\n     * @type {number}\n     * @default null\n     */\n\n    this.startTime = null;\n    /**\n     * Used to create an audio sprite (with startTime), the amount of time to play the clip for, in milliseconds.\n     * @property duration\n     * @type {number}\n     * @default null\n     */\n\n    this.duration = null;\n  };\n\n  var p = PlayPropsConfig.prototype = {};\n  var s = PlayPropsConfig; // Static Methods\n\n  /**\n   * Creates a PlayPropsConfig from another PlayPropsConfig or an Object.\n   *\n   * @method create\n   * @param {PlayPropsConfig|Object} value The play properties\n   * @returns {PlayPropsConfig}\n   * @static\n   */\n\n  s.create = function (value) {\n    if (typeof value === \"string\") {\n      // Handle the old API gracefully.\n      console && (console.warn || console.log)(\"Deprecated behaviour. Sound.play takes a configuration object instead of individual arguments. See docs for info.\");\n      return new createjs.PlayPropsConfig().set({\n        interrupt: value\n      });\n    } else if (value == null || value instanceof s || value instanceof Object) {\n      return new createjs.PlayPropsConfig().set(value);\n    } else if (value == null) {\n      throw new Error(\"PlayProps configuration not recognized.\");\n    }\n  }; // Public Methods\n\n  /**\n   * Provides a chainable shortcut method for setting a number of properties on the instance.\n   *\n   * <h4>Example</h4>\n   *\n   *      var PlayPropsConfig = new createjs.PlayPropsConfig().set({loop:-1, volume:0.7});\n   *\n   * @method set\n   * @param {Object} props A generic object containing properties to copy to the PlayPropsConfig instance.\n   * @return {PlayPropsConfig} Returns the instance the method is called on (useful for chaining calls.)\n  */\n\n\n  p.set = function (props) {\n    if (props != null) {\n      for (var n in props) {\n        this[n] = props[n];\n      }\n    }\n\n    return this;\n  };\n\n  p.toString = function () {\n    return \"[PlayPropsConfig]\";\n  };\n\n  createjs.PlayPropsConfig = s;\n})(); //##############################################################################\n// Sound.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n  /**\n   * The Sound class is the public API for creating sounds, controlling the overall sound levels, and managing plugins.\n   * All Sound APIs on this class are static.\n   *\n   * <b>Registering and Preloading</b><br />\n   * Before you can play a sound, it <b>must</b> be registered. You can do this with {{#crossLink \"Sound/registerSound\"}}{{/crossLink}},\n   * or register multiple sounds using {{#crossLink \"Sound/registerSounds\"}}{{/crossLink}}. If you don't register a\n   * sound prior to attempting to play it using {{#crossLink \"Sound/play\"}}{{/crossLink}} or create it using {{#crossLink \"Sound/createInstance\"}}{{/crossLink}},\n   * the sound source will be automatically registered but playback will fail as the source will not be ready. If you use\n   * <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>, registration is handled for you when the sound is\n   * preloaded. It is recommended to preload sounds either internally using the register functions or externally using\n   * PreloadJS so they are ready when you want to use them.\n   *\n   * <b>Playback</b><br />\n   * To play a sound once it's been registered and preloaded, use the {{#crossLink \"Sound/play\"}}{{/crossLink}} method.\n   * This method returns a {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} which can be paused, resumed, muted, etc.\n   * Please see the {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} documentation for more on the instance control APIs.\n   *\n   * <b>Plugins</b><br />\n   * By default, the {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}} or the {{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}\n   * are used (when available), although developers can change plugin priority or add new plugins (such as the\n   * provided {{#crossLink \"FlashAudioPlugin\"}}{{/crossLink}}). Please see the {{#crossLink \"Sound\"}}{{/crossLink}} API\n   * methods for more on the playback and plugin APIs. To install plugins, or specify a different plugin order, see\n   * {{#crossLink \"Sound/installPlugins\"}}{{/crossLink}}.\n   *\n   * <h4>Example</h4>\n   *\n   *      createjs.FlashAudioPlugin.swfPath = \"../src/soundjs/flashaudio\";\n   *      createjs.Sound.registerPlugins([createjs.WebAudioPlugin, createjs.FlashAudioPlugin]);\n   *      createjs.Sound.alternateExtensions = [\"mp3\"];\n   *      createjs.Sound.on(\"fileload\", this.loadHandler, this);\n   *      createjs.Sound.registerSound(\"path/to/mySound.ogg\", \"sound\");\n   *      function loadHandler(event) {\n      *          // This is fired for each sound that is registered.\n      *          var instance = createjs.Sound.play(\"sound\");  // play using id.  Could also use full source path or event.src.\n      *          instance.on(\"complete\", this.handleComplete, this);\n      *          instance.volume = 0.5;\n   *      }\n   *\n   * The maximum number of concurrently playing instances of the same sound can be specified in the \"data\" argument\n   * of {{#crossLink \"Sound/registerSound\"}}{{/crossLink}}.  Note that if not specified, the active plugin will apply\n   * a default limit.  Currently HTMLAudioPlugin sets a default limit of 2, while WebAudioPlugin and FlashAudioPlugin set a\n   * default limit of 100.\n   *\n   *      createjs.Sound.registerSound(\"sound.mp3\", \"soundId\", 4);\n   *\n   * Sound can be used as a plugin with PreloadJS to help preload audio properly. Audio preloaded with PreloadJS is\n   * automatically registered with the Sound class. When audio is not preloaded, Sound will do an automatic internal\n   * load. As a result, it may fail to play the first time play is called if the audio is not finished loading. Use\n   * the {{#crossLink \"Sound/fileload:event\"}}{{/crossLink}} event to determine when a sound has finished internally\n   * preloading. It is recommended that all audio is preloaded before it is played.\n   *\n   *      var queue = new createjs.LoadQueue();\n   *\t\tqueue.installPlugin(createjs.Sound);\n   *\n   * <b>Audio Sprites</b><br />\n   * SoundJS has added support for {{#crossLink \"AudioSprite\"}}{{/crossLink}}, available as of version 0.6.0.\n   * For those unfamiliar with audio sprites, they are much like CSS sprites or sprite sheets: multiple audio assets\n   * grouped into a single file.\n   *\n   * <h4>Example</h4>\n   *\n   *\t\tvar assetsPath = \"./assets/\";\n   *\t\tvar sounds = [{\n   *\t\t\tsrc:\"MyAudioSprite.ogg\", data: {\n   *\t\t\t\taudioSprite: [\n   *\t\t\t\t\t{id:\"sound1\", startTime:0, duration:500},\n   *\t\t\t\t\t{id:\"sound2\", startTime:1000, duration:400},\n   *\t\t\t\t\t{id:\"sound3\", startTime:1700, duration: 1000}\n   *\t\t\t\t]}\n  \t *\t\t\t}\n   *\t\t];\n   *\t\tcreatejs.Sound.alternateExtensions = [\"mp3\"];\n   *\t\tcreatejs.Sound.on(\"fileload\", loadSound);\n   *\t\tcreatejs.Sound.registerSounds(sounds, assetsPath);\n   *\t\t// after load is complete\n   *\t\tcreatejs.Sound.play(\"sound2\");\n   *\n   * <b>Mobile Playback</b><br />\n   * Devices running iOS require the WebAudio context to be \"unlocked\" by playing at least one sound inside of a user-\n   * initiated event (such as touch/click). Earlier versions of SoundJS included a \"MobileSafe\" sample, but this is no\n   * longer necessary as of SoundJS 0.6.2.\n   * <ul>\n   *     <li>\n   *         In SoundJS 0.4.1 and above, you can either initialize plugins or use the {{#crossLink \"WebAudioPlugin/playEmptySound\"}}{{/crossLink}}\n   *         method in the call stack of a user input event to manually unlock the audio context.\n   *     </li>\n   *     <li>\n   *         In SoundJS 0.6.2 and above, SoundJS will automatically listen for the first document-level \"mousedown\"\n   *         and \"touchend\" event, and unlock WebAudio. This will continue to check these events until the WebAudio\n   *         context becomes \"unlocked\" (changes from \"suspended\" to \"running\")\n   *     </li>\n   *     <li>\n   *         Both the \"mousedown\" and \"touchend\" events can be used to unlock audio in iOS9+, the \"touchstart\" event\n   *         will work in iOS8 and below. The \"touchend\" event will only work in iOS9 when the gesture is interpreted\n   *         as a \"click\", so if the user long-presses the button, it will no longer work.\n   *     </li>\n   *     <li>\n   *         When using the <a href=\"http://www.createjs.com/docs/easeljs/classes/Touch.html\">EaselJS Touch class</a>,\n   *         the \"mousedown\" event will not fire when a canvas is clicked, since MouseEvents are prevented, to ensure\n   *         only touch events fire. To get around this, you can either rely on \"touchend\", or:\n   *         <ol>\n   *             <li>Set the `allowDefault` property on the Touch class constructor to `true` (defaults to `false`).</li>\n   *             <li>Set the `preventSelection` property on the EaselJS `Stage` to `false`.</li>\n   *         </ol>\n   *         These settings may change how your application behaves, and are not recommended.\n   *     </li>\n   * </ul>\n   *\n   * <b>Loading Alternate Paths and Extension-less Files</b><br />\n   * SoundJS supports loading alternate paths and extension-less files by passing an object instead of a string for\n   * the `src` property, which is a hash using the format `{extension:\"path\", extension2:\"path2\"}`. These labels are\n   * how SoundJS determines if the browser will support the sound. This also enables multiple formats to live in\n   * different folders, or on CDNs, which often has completely different filenames for each file.\n   *\n   * Priority is determined by the property order (first property is tried first).  This is supported by both internal loading\n   * and loading with PreloadJS.\n   *\n   * <em>Note: an id is required for playback.</em>\n   *\n   * <h4>Example</h4>\n   *\n   *\t\tvar sounds = {path:\"./audioPath/\",\n   * \t\t\t\tmanifest: [\n   *\t\t\t\t{id: \"cool\", src: {mp3:\"mp3/awesome.mp3\", ogg:\"noExtensionOggFile\"}}\n   *\t\t]};\n   *\n   *\t\tcreatejs.Sound.alternateExtensions = [\"mp3\"];\n   *\t\tcreatejs.Sound.addEventListener(\"fileload\", handleLoad);\n   *\t\tcreatejs.Sound.registerSounds(sounds);\n   *\n   * <h3>Known Browser and OS issues</h3>\n   * <b>IE 9 HTML Audio limitations</b><br />\n   * <ul><li>There is a delay in applying volume changes to tags that occurs once playback is started. So if you have\n   * muted all sounds, they will all play during this delay until the mute applies internally. This happens regardless of\n   * when or how you apply the volume change, as the tag seems to need to play to apply it.</li>\n      * <li>MP3 encoding will not always work for audio tags, particularly in Internet Explorer. We've found default\n   * encoding with 64kbps works.</li>\n   * <li>Occasionally very short samples will get cut off.</li>\n   * <li>There is a limit to how many audio tags you can load and play at once, which appears to be determined by\n   * hardware and browser settings.  See {{#crossLink \"HTMLAudioPlugin.MAX_INSTANCES\"}}{{/crossLink}} for a safe\n   * estimate.</li></ul>\n   *\n   * <b>Firefox 25 Web Audio limitations</b>\n   * <ul><li>mp3 audio files do not load properly on all windows machines, reported\n   * <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=929969\" target=\"_blank\">here</a>. </br>\n   * For this reason it is recommended to pass another FF supported type (ie ogg) first until this bug is resolved, if\n   * possible.</li></ul>\n  \t * <b>Safari limitations</b><br />\n   * <ul><li>Safari requires Quicktime to be installed for audio playback.</li></ul>\n   *\n   * <b>iOS 6 Web Audio limitations</b><br />\n   * <ul><li>Sound is initially locked, and must be unlocked via a user-initiated event. Please see the section on\n   * Mobile Playback above.</li>\n   * <li>A bug exists that will distort un-cached web audio when a video element is present in the DOM that has audio\n   * at a different sampleRate.</li>\n   * </ul>\n   *\n   * <b>Android HTML Audio limitations</b><br />\n   * <ul><li>We have no control over audio volume. Only the user can set volume on their device.</li>\n   * <li>We can only play audio inside a user event (touch/click).  This currently means you cannot loop sound or use\n   * a delay.</li></ul>\n   *\n   * <b>Web Audio and PreloadJS</b><br />\n   * <ul><li>Web Audio must be loaded through XHR, therefore when used with PreloadJS, tag loading is not possible.\n   * This means that tag loading can not be used to avoid cross domain issues.</li><ul>\n   *\n   * @class Sound\n   * @static\n   * @uses EventDispatcher\n   */\n\n  function Sound() {\n    throw \"Sound cannot be instantiated\";\n  }\n\n  var s = Sound; // Static Properties\n\n  /**\n   * The interrupt value to interrupt any currently playing instance with the same source, if the maximum number of\n   * instances of the sound are already playing.\n   * @property INTERRUPT_ANY\n   * @type {String}\n   * @default any\n   * @static\n   */\n\n  s.INTERRUPT_ANY = \"any\";\n  /**\n   * The interrupt value to interrupt the earliest currently playing instance with the same source that progressed the\n   * least distance in the audio track, if the maximum number of instances of the sound are already playing.\n   * @property INTERRUPT_EARLY\n   * @type {String}\n   * @default early\n   * @static\n   */\n\n  s.INTERRUPT_EARLY = \"early\";\n  /**\n   * The interrupt value to interrupt the currently playing instance with the same source that progressed the most\n   * distance in the audio track, if the maximum number of instances of the sound are already playing.\n   * @property INTERRUPT_LATE\n   * @type {String}\n   * @default late\n   * @static\n   */\n\n  s.INTERRUPT_LATE = \"late\";\n  /**\n   * The interrupt value to not interrupt any currently playing instances with the same source, if the maximum number of\n   * instances of the sound are already playing.\n   * @property INTERRUPT_NONE\n   * @type {String}\n   * @default none\n   * @static\n   */\n\n  s.INTERRUPT_NONE = \"none\";\n  /**\n   * Defines the playState of an instance that is still initializing.\n   * @property PLAY_INITED\n   * @type {String}\n   * @default playInited\n   * @static\n   */\n\n  s.PLAY_INITED = \"playInited\";\n  /**\n   * Defines the playState of an instance that is currently playing or paused.\n   * @property PLAY_SUCCEEDED\n   * @type {String}\n   * @default playSucceeded\n   * @static\n   */\n\n  s.PLAY_SUCCEEDED = \"playSucceeded\";\n  /**\n   * Defines the playState of an instance that was interrupted by another instance.\n   * @property PLAY_INTERRUPTED\n   * @type {String}\n   * @default playInterrupted\n   * @static\n   */\n\n  s.PLAY_INTERRUPTED = \"playInterrupted\";\n  /**\n   * Defines the playState of an instance that completed playback.\n   * @property PLAY_FINISHED\n   * @type {String}\n   * @default playFinished\n   * @static\n   */\n\n  s.PLAY_FINISHED = \"playFinished\";\n  /**\n   * Defines the playState of an instance that failed to play. This is usually caused by a lack of available channels\n   * when the interrupt mode was \"INTERRUPT_NONE\", the playback stalled, or the sound could not be found.\n   * @property PLAY_FAILED\n   * @type {String}\n   * @default playFailed\n   * @static\n   */\n\n  s.PLAY_FAILED = \"playFailed\";\n  /**\n   * A list of the default supported extensions that Sound will <i>try</i> to play. Plugins will check if the browser\n   * can play these types, so modifying this list before a plugin is initialized will allow the plugins to try to\n   * support additional media types.\n   *\n   * NOTE this does not currently work for {{#crossLink \"FlashAudioPlugin\"}}{{/crossLink}}.\n   *\n   * More details on file formats can be found at <a href=\"http://en.wikipedia.org/wiki/Audio_file_format\" target=\"_blank\">http://en.wikipedia.org/wiki/Audio_file_format</a>.<br />\n   * A very detailed list of file formats can be found at <a href=\"http://www.fileinfo.com/filetypes/audio\" target=\"_blank\">http://www.fileinfo.com/filetypes/audio</a>.\n   * @property SUPPORTED_EXTENSIONS\n   * @type {Array[String]}\n   * @default [\"mp3\", \"ogg\", \"opus\", \"mpeg\", \"wav\", \"m4a\", \"mp4\", \"aiff\", \"wma\", \"mid\"]\n   * @since 0.4.0\n   * @static\n   */\n\n  s.SUPPORTED_EXTENSIONS = [\"mp3\", \"ogg\", \"opus\", \"mpeg\", \"wav\", \"m4a\", \"mp4\", \"aiff\", \"wma\", \"mid\"];\n  /**\n   * Some extensions use another type of extension support to play (one of them is a codex).  This allows you to map\n   * that support so plugins can accurately determine if an extension is supported.  Adding to this list can help\n   * plugins determine more accurately if an extension is supported.\n   *\n  \t * A useful list of extensions for each format can be found at <a href=\"http://html5doctor.com/html5-audio-the-state-of-play/\" target=\"_blank\">http://html5doctor.com/html5-audio-the-state-of-play/</a>.\n   * @property EXTENSION_MAP\n   * @type {Object}\n   * @since 0.4.0\n   * @default {m4a:\"mp4\"}\n   * @static\n   */\n\n  s.EXTENSION_MAP = {\n    m4a: \"mp4\"\n  };\n  /**\n   * The RegExp pattern used to parse file URIs. This supports simple file names, as well as full domain URIs with\n   * query strings. The resulting match is: protocol:$1 domain:$2 path:$3 file:$4 extension:$5 query:$6.\n   * @property FILE_PATTERN\n   * @type {RegExp}\n   * @static\n   * @private\n   */\n\n  s.FILE_PATTERN = /^(?:(\\w+:)\\/{2}(\\w+(?:\\.\\w+)*\\/?))?([/.]*?(?:[^?]+)?\\/)?((?:[^/?]+)\\.(\\w+))(?:\\?(\\S+)?)?$/; // Class Public properties\n\n  /**\n   * Determines the default behavior for interrupting other currently playing instances with the same source, if the\n   * maximum number of instances of the sound are already playing.  Currently the default is {{#crossLink \"Sound/INTERRUPT_NONE:property\"}}{{/crossLink}}\n   * but this can be set and will change playback behavior accordingly.  This is only used when {{#crossLink \"Sound/play\"}}{{/crossLink}}\n   * is called without passing a value for interrupt.\n   * @property defaultInterruptBehavior\n   * @type {String}\n   * @default Sound.INTERRUPT_NONE, or \"none\"\n   * @static\n   * @since 0.4.0\n   */\n\n  s.defaultInterruptBehavior = s.INTERRUPT_NONE; // OJR does s.INTERRUPT_ANY make more sense as default?  Needs game dev testing to see which case makes more sense.\n\n  /**\n   * An array of extensions to attempt to use when loading sound, if the default is unsupported by the active plugin.\n   * These are applied in order, so if you try to Load Thunder.ogg in a browser that does not support ogg, and your\n   * extensions array is [\"mp3\", \"m4a\", \"wav\"] it will check mp3 support, then m4a, then wav. The audio files need\n   * to exist in the same location, as only the extension is altered.\n   *\n   * Note that regardless of which file is loaded, you can call {{#crossLink \"Sound/createInstance\"}}{{/crossLink}}\n   * and {{#crossLink \"Sound/play\"}}{{/crossLink}} using the same id or full source path passed for loading.\n   *\n   * <h4>Example</h4>\n   *\n   *\tvar sounds = [\n   *\t\t{src:\"myPath/mySound.ogg\", id:\"example\"},\n   *\t];\n   *\tcreatejs.Sound.alternateExtensions = [\"mp3\"]; // now if ogg is not supported, SoundJS will try asset0.mp3\n   *\tcreatejs.Sound.on(\"fileload\", handleLoad); // call handleLoad when each sound loads\n   *\tcreatejs.Sound.registerSounds(sounds, assetPath);\n   *\t// ...\n   *\tcreatejs.Sound.play(\"myPath/mySound.ogg\"); // works regardless of what extension is supported.  Note calling with ID is a better approach\n   *\n   * @property alternateExtensions\n   * @type {Array}\n   * @since 0.5.2\n   * @static\n   */\n\n  s.alternateExtensions = [];\n  /**\n   * The currently active plugin. If this is null, then no plugin could be initialized. If no plugin was specified,\n   * Sound attempts to apply the default plugins: {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}, followed by\n   * {{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}.\n   * @property activePlugin\n   * @type {Object}\n   * @static\n   */\n\n  s.activePlugin = null; // class getter / setter properties\n\n  /**\n   * Set the master volume of Sound. The master volume is multiplied against each sound's individual volume.  For\n   * example, if master volume is 0.5 and a sound's volume is 0.5, the resulting volume is 0.25. To set individual\n   * sound volume, use AbstractSoundInstance {{#crossLink \"AbstractSoundInstance/volume:property\"}}{{/crossLink}}\n   * instead.\n   *\n   * <h4>Example</h4>\n   *\n   *     createjs.Sound.volume = 0.5;\n   *\n   * @property volume\n   * @type {Number}\n   * @default 1\n   * @since 0.6.1\n   */\n\n  /**\n   * The internal volume level. Use {{#crossLink \"Sound/volume:property\"}}{{/crossLink}} to adjust the master volume.\n   * @property _masterVolume\n   * @type {number}\n   * @default 1\n   * @private\n   */\n\n  s._masterVolume = 1;\n  /**\n   * Use the {{#crossLink \"Sound/volume:property\"}}{{/crossLink}} property instead.\n   * @method _getMasterVolume\n   * @private\n   * @static\n   * @return {Number}\n   **/\n\n  s._getMasterVolume = function () {\n    return this._masterVolume;\n  }; // Sound.getMasterVolume is @deprecated. Remove for 1.1+\n\n\n  s.getVolume = createjs.deprecate(s._getMasterVolume, \"Sound.getVolume\");\n  /**\n   * Use the {{#crossLink \"Sound/volume:property\"}}{{/crossLink}} property instead.\n   * @method _setMasterVolume\n   * @static\n   * @private\n   **/\n\n  s._setMasterVolume = function (value) {\n    if (Number(value) == null) {\n      return;\n    }\n\n    value = Math.max(0, Math.min(1, value));\n    s._masterVolume = value;\n\n    if (!this.activePlugin || !this.activePlugin.setVolume || !this.activePlugin.setVolume(value)) {\n      var instances = this._instances;\n\n      for (var i = 0, l = instances.length; i < l; i++) {\n        instances[i].setMasterVolume(value);\n      }\n    }\n  }; // Sound.stMasterVolume is @deprecated. Remove for 1.1+\n\n\n  s.setVolume = createjs.deprecate(s._setMasterVolume, \"Sound.setVolume\");\n  /**\n   * Mute/Unmute all audio. Note that muted audio still plays at 0 volume. This global mute value is maintained\n   * separately and when set will override, but not change the mute property of individual instances. To mute an individual\n   * instance, use AbstractSoundInstance {{#crossLink \"AbstractSoundInstance/muted:property\"}}{{/crossLink}} instead.\n   *\n   * <h4>Example</h4>\n   *\n   *     createjs.Sound.muted = true;\n   *\n   *\n   * @property muted\n   * @type {Boolean}\n   * @default false\n   * @since 0.6.1\n   */\n\n  s._masterMute = false;\n  /**\n   * Use the {{#crossLink \"Sound/muted:property\"}}{{/crossLink}} property instead.\n   * @method _getMute\n   * @returns {Boolean}\n   * @static\n   * @private\n   */\n\n  s._getMute = function () {\n    return this._masterMute;\n  }; // Sound.getMute is @deprecated. Remove for 1.1+\n\n\n  s.getMute = createjs.deprecate(s._getMute, \"Sound.getMute\");\n  /**\n   * Use the {{#crossLink \"Sound/muted:property\"}}{{/crossLink}} property instead.\n   * @method _setMute\n   * @param {Boolean} value The muted value\n   * @static\n   * @private\n   */\n\n  s._setMute = function (value) {\n    if (value == null) {\n      return;\n    }\n\n    this._masterMute = value;\n\n    if (!this.activePlugin || !this.activePlugin.setMute || !this.activePlugin.setMute(value)) {\n      var instances = this._instances;\n\n      for (var i = 0, l = instances.length; i < l; i++) {\n        instances[i].setMasterMute(value);\n      }\n    }\n  }; // Sound.setMute is @deprecated. Remove for 1.1+\n\n\n  s.setMute = createjs.deprecate(s._setMute, \"Sound.setMute\");\n  /**\n   * Get the active plugins capabilities, which help determine if a plugin can be used in the current environment,\n   * or if the plugin supports a specific feature. Capabilities include:\n   * <ul>\n   *     <li><b>panning:</b> If the plugin can pan audio from left to right</li>\n   *     <li><b>volume;</b> If the plugin can control audio volume.</li>\n   *     <li><b>tracks:</b> The maximum number of audio tracks that can be played back at a time. This will be -1\n   *     if there is no known limit.</li>\n   * <br />An entry for each file type in {{#crossLink \"Sound/SUPPORTED_EXTENSIONS:property\"}}{{/crossLink}}:\n   *     <li><b>mp3:</b> If MP3 audio is supported.</li>\n   *     <li><b>ogg:</b> If OGG audio is supported.</li>\n   *     <li><b>wav:</b> If WAV audio is supported.</li>\n   *     <li><b>mpeg:</b> If MPEG audio is supported.</li>\n   *     <li><b>m4a:</b> If M4A audio is supported.</li>\n   *     <li><b>mp4:</b> If MP4 audio is supported.</li>\n   *     <li><b>aiff:</b> If aiff audio is supported.</li>\n   *     <li><b>wma:</b> If wma audio is supported.</li>\n   *     <li><b>mid:</b> If mid audio is supported.</li>\n   * </ul>\n   *\n   * You can get a specific capability of the active plugin using standard object notation\n   *\n   * <h4>Example</h4>\n   *\n   *      var mp3 = createjs.Sound.capabilities.mp3;\n   *\n   * Note this property is read only.\n   *\n   * @property capabilities\n   * @type {Object}\n   * @static\n   * @readOnly\n   * @since 0.6.1\n   */\n\n  /**\n   * Use the {{#crossLink \"Sound/capabilities:property\"}}{{/crossLink}} property instead.\n   * @returns {null}\n   * @private\n   */\n\n  s._getCapabilities = function () {\n    if (s.activePlugin == null) {\n      return null;\n    }\n\n    return s.activePlugin._capabilities;\n  }; // Sound.getCapabilities is @deprecated. Remove for 1.1+\n\n\n  s.getCapabilities = createjs.deprecate(s._getCapabilities, \"Sound.getCapabilities\");\n  Object.defineProperties(s, {\n    volume: {\n      get: s._getMasterVolume,\n      set: s._setMasterVolume\n    },\n    muted: {\n      get: s._getMute,\n      set: s._setMute\n    },\n    capabilities: {\n      get: s._getCapabilities\n    }\n  }); // Class Private properties\n\n  /**\n   * Determines if the plugins have been registered. If false, the first call to {{#crossLink \"play\"}}{{/crossLink}} will instantiate the default\n   * plugins ({{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}, followed by {{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}).\n   * If plugins have been registered, but none are applicable, then sound playback will fail.\n   * @property _pluginsRegistered\n   * @type {Boolean}\n   * @default false\n   * @static\n   * @private\n   */\n\n  s._pluginsRegistered = false;\n  /**\n   * Used internally to assign unique IDs to each AbstractSoundInstance.\n   * @property _lastID\n   * @type {Number}\n   * @static\n   * @private\n   */\n\n  s._lastID = 0;\n  /**\n   * An array containing all currently playing instances. This allows Sound to control the volume, mute, and playback of\n   * all instances when using static APIs like {{#crossLink \"Sound/stop\"}}{{/crossLink}} and {{#crossLink \"Sound/volume:property\"}}{{/crossLink}}.\n   * When an instance has finished playback, it gets removed via the {{#crossLink \"Sound/finishedPlaying\"}}{{/crossLink}}\n   * method. If the user replays an instance, it gets added back in via the {{#crossLink \"Sound/_beginPlaying\"}}{{/crossLink}}\n   * method.\n   * @property _instances\n   * @type {Array}\n   * @private\n   * @static\n   */\n\n  s._instances = [];\n  /**\n   * An object hash storing objects with sound sources, startTime, and duration via there corresponding ID.\n   * @property _idHash\n   * @type {Object}\n   * @private\n   * @static\n   */\n\n  s._idHash = {};\n  /**\n   * An object hash that stores preloading sound sources via the parsed source that is passed to the plugin.  Contains the\n   * source, id, and data that was passed in by the user.  Parsed sources can contain multiple instances of source, id,\n   * and data.\n   * @property _preloadHash\n   * @type {Object}\n   * @private\n   * @static\n   */\n\n  s._preloadHash = {};\n  /**\n   * An object hash storing {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}} via the parsed source that is passed as defaultPlayProps in\n   * {{#crossLink \"Sound/registerSound\"}}{{/crossLink}} and {{#crossLink \"Sound/registerSounds\"}}{{/crossLink}}.\n   * @property _defaultPlayPropsHash\n   * @type {Object}\n   * @private\n   * @static\n   * @since 0.6.1\n   */\n\n  s._defaultPlayPropsHash = {}; // EventDispatcher methods:\n\n  s.addEventListener = null;\n  s.removeEventListener = null;\n  s.removeAllEventListeners = null;\n  s.dispatchEvent = null;\n  s.hasEventListener = null;\n  s._listeners = null;\n  createjs.EventDispatcher.initialize(s); // inject EventDispatcher methods.\n  // Events\n\n  /**\n   * This event is fired when a file finishes loading internally. This event is fired for each loaded sound,\n   * so any handler methods should look up the <code>event.src</code> to handle a particular sound.\n   * @event fileload\n   * @param {Object} target The object that dispatched the event.\n   * @param {String} type The event type.\n   * @param {String} src The source of the sound that was loaded.\n   * @param {String} [id] The id passed in when the sound was registered. If one was not provided, it will be null.\n   * @param {Number|Object} [data] Any additional data associated with the item. If not provided, it will be undefined.\n   * @since 0.4.1\n   */\n\n  /**\n   * This event is fired when a file fails loading internally. This event is fired for each loaded sound,\n   * so any handler methods should look up the <code>event.src</code> to handle a particular sound.\n   * @event fileerror\n   * @param {Object} target The object that dispatched the event.\n   * @param {String} type The event type.\n   * @param {String} src The source of the sound that was loaded.\n   * @param {String} [id] The id passed in when the sound was registered. If one was not provided, it will be null.\n   * @param {Number|Object} [data] Any additional data associated with the item. If not provided, it will be undefined.\n   * @since 0.6.0\n   */\n  // Class Public Methods\n\n  /**\n   * Get the preload rules to allow Sound to be used as a plugin by <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>.\n   * Any load calls that have the matching type or extension will fire the callback method, and use the resulting\n   * object, which is potentially modified by Sound. This helps when determining the correct path, as well as\n   * registering the audio instance(s) with Sound. This method should not be called, except by PreloadJS.\n   * @method getPreloadHandlers\n   * @return {Object} An object containing:\n   * <ul><li>callback: A preload callback that is fired when a file is added to PreloadJS, which provides\n   *      Sound a mechanism to modify the load parameters, select the correct file format, register the sound, etc.</li>\n   *      <li>types: A list of file types that are supported by Sound (currently supports \"sound\").</li>\n   *      <li>extensions: A list of file extensions that are supported by Sound (see {{#crossLink \"Sound/SUPPORTED_EXTENSIONS:property\"}}{{/crossLink}}).</li></ul>\n   * @static\n   * @private\n   */\n\n  s.getPreloadHandlers = function () {\n    return {\n      callback: createjs.proxy(s.initLoad, s),\n      types: [\"sound\"],\n      extensions: s.SUPPORTED_EXTENSIONS\n    };\n  };\n  /**\n   * Used to dispatch fileload events from internal loading.\n   * @method _handleLoadComplete\n   * @param event A loader event.\n   * @private\n   * @static\n   * @since 0.6.0\n   */\n\n\n  s._handleLoadComplete = function (event) {\n    var src = event.target.getItem().src;\n\n    if (!s._preloadHash[src]) {\n      return;\n    }\n\n    for (var i = 0, l = s._preloadHash[src].length; i < l; i++) {\n      var item = s._preloadHash[src][i];\n      s._preloadHash[src][i] = true;\n\n      if (!s.hasEventListener(\"fileload\")) {\n        continue;\n      }\n\n      var event = new createjs.Event(\"fileload\");\n      event.src = item.src;\n      event.id = item.id;\n      event.data = item.data;\n      event.sprite = item.sprite;\n      s.dispatchEvent(event);\n    }\n  };\n  /**\n   * Used to dispatch error events from internal preloading.\n   * @param event\n   * @private\n   * @since 0.6.0\n   * @static\n   */\n\n\n  s._handleLoadError = function (event) {\n    var src = event.target.getItem().src;\n\n    if (!s._preloadHash[src]) {\n      return;\n    }\n\n    for (var i = 0, l = s._preloadHash[src].length; i < l; i++) {\n      var item = s._preloadHash[src][i];\n      s._preloadHash[src][i] = false;\n\n      if (!s.hasEventListener(\"fileerror\")) {\n        continue;\n      }\n\n      var event = new createjs.Event(\"fileerror\");\n      event.src = item.src;\n      event.id = item.id;\n      event.data = item.data;\n      event.sprite = item.sprite;\n      s.dispatchEvent(event);\n    }\n  };\n  /**\n   * Used by {{#crossLink \"Sound/registerPlugins\"}}{{/crossLink}} to register a Sound plugin.\n   *\n   * @method _registerPlugin\n   * @param {Object} plugin The plugin class to install.\n   * @return {Boolean} Whether the plugin was successfully initialized.\n   * @static\n   * @private\n   */\n\n\n  s._registerPlugin = function (plugin) {\n    // Note: Each plugin is passed in as a class reference, but we store the activePlugin as an instance\n    if (plugin.isSupported()) {\n      s.activePlugin = new plugin();\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * Register a list of Sound plugins, in order of precedence. To register a single plugin, pass a single element in the array.\n   *\n   * <h4>Example</h4>\n   *\n   *      createjs.FlashAudioPlugin.swfPath = \"../src/soundjs/flashaudio/\";\n   *      createjs.Sound.registerPlugins([createjs.WebAudioPlugin, createjs.HTMLAudioPlugin, createjs.FlashAudioPlugin]);\n   *\n   * @method registerPlugins\n   * @param {Array} plugins An array of plugins classes to install.\n   * @return {Boolean} Whether a plugin was successfully initialized.\n   * @static\n   */\n\n\n  s.registerPlugins = function (plugins) {\n    s._pluginsRegistered = true;\n\n    for (var i = 0, l = plugins.length; i < l; i++) {\n      if (s._registerPlugin(plugins[i])) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n  /**\n   * Initialize the default plugins. This method is automatically called when any audio is played or registered before\n   * the user has manually registered plugins, and enables Sound to work without manual plugin setup. Currently, the\n   * default plugins are {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}} followed by {{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}.\n   *\n   * <h4>Example</h4>\n   *\n   * \tif (!createjs.initializeDefaultPlugins()) { return; }\n   *\n   * @method initializeDefaultPlugins\n   * @returns {Boolean} True if a plugin was initialized, false otherwise.\n   * @since 0.4.0\n   * @static\n   */\n\n\n  s.initializeDefaultPlugins = function () {\n    if (s.activePlugin != null) {\n      return true;\n    }\n\n    if (s._pluginsRegistered) {\n      return false;\n    }\n\n    if (s.registerPlugins([createjs.WebAudioPlugin, createjs.HTMLAudioPlugin])) {\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * Determines if Sound has been initialized, and a plugin has been activated.\n   *\n   * <h4>Example</h4>\n   * This example sets up a Flash fallback, but only if there is no plugin specified yet.\n   *\n   * \tif (!createjs.Sound.isReady()) {\n   *\t\tcreatejs.FlashAudioPlugin.swfPath = \"../src/soundjs/flashaudio/\";\n   * \t\tcreatejs.Sound.registerPlugins([createjs.WebAudioPlugin, createjs.HTMLAudioPlugin, createjs.FlashAudioPlugin]);\n   *\t}\n   *\n   * @method isReady\n   * @return {Boolean} If Sound has initialized a plugin.\n   * @static\n   */\n\n\n  s.isReady = function () {\n    return s.activePlugin != null;\n  };\n  /**\n   * Process manifest items from <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>. This method is intended\n   * for usage by a plugin, and not for direct interaction.\n   * @method initLoad\n   * @param {Object} src The object to load.\n   * @return {Object|AbstractLoader} An instance of AbstractLoader.\n   * @private\n   * @static\n   */\n\n\n  s.initLoad = function (loadItem) {\n    if (loadItem.type == \"video\") {\n      return true;\n    } // Don't handle video. PreloadJS's plugin model is really aggressive.\n\n\n    return s._registerSound(loadItem);\n  };\n  /**\n   * Internal method for loading sounds.  This should not be called directly.\n   *\n   * @method _registerSound\n   * @param {Object} src The object to load, containing src property and optionally containing id and data.\n   * @return {Object} An object with the modified values that were passed in, which defines the sound.\n   * Returns false if the source cannot be parsed or no plugins can be initialized.\n   * Returns true if the source is already loaded.\n   * @static\n   * @private\n   * @since 0.6.0\n   */\n\n\n  s._registerSound = function (loadItem) {\n    if (!s.initializeDefaultPlugins()) {\n      return false;\n    }\n\n    var details;\n\n    if (loadItem.src instanceof Object) {\n      details = s._parseSrc(loadItem.src);\n      details.src = loadItem.path + details.src;\n    } else {\n      details = s._parsePath(loadItem.src);\n    }\n\n    if (details == null) {\n      return false;\n    }\n\n    loadItem.src = details.src;\n    loadItem.type = \"sound\";\n    var data = loadItem.data;\n    var numChannels = null;\n\n    if (data != null) {\n      if (!isNaN(data.channels)) {\n        numChannels = parseInt(data.channels);\n      } else if (!isNaN(data)) {\n        numChannels = parseInt(data);\n      }\n\n      if (data.audioSprite) {\n        var sp;\n\n        for (var i = data.audioSprite.length; i--;) {\n          sp = data.audioSprite[i];\n          s._idHash[sp.id] = {\n            src: loadItem.src,\n            startTime: parseInt(sp.startTime),\n            duration: parseInt(sp.duration)\n          };\n\n          if (sp.defaultPlayProps) {\n            s._defaultPlayPropsHash[sp.id] = createjs.PlayPropsConfig.create(sp.defaultPlayProps);\n          }\n        }\n      }\n    }\n\n    if (loadItem.id != null) {\n      s._idHash[loadItem.id] = {\n        src: loadItem.src\n      };\n    }\n\n    ;\n    var loader = s.activePlugin.register(loadItem);\n    SoundChannel.create(loadItem.src, numChannels); // return the number of instances to the user.  This will also be returned in the load event.\n\n    if (data == null || !isNaN(data)) {\n      loadItem.data = numChannels || SoundChannel.maxPerChannel();\n    } else {\n      loadItem.data.channels = numChannels || SoundChannel.maxPerChannel();\n    }\n\n    if (loader.type) {\n      loadItem.type = loader.type;\n    }\n\n    if (loadItem.defaultPlayProps) {\n      s._defaultPlayPropsHash[loadItem.src] = createjs.PlayPropsConfig.create(loadItem.defaultPlayProps);\n    }\n\n    return loader;\n  };\n  /**\n   * Register an audio file for loading and future playback in Sound. This is automatically called when using\n   * <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>.  It is recommended to register all sounds that\n   * need to be played back in order to properly prepare and preload them. Sound does internal preloading when required.\n   *\n   * <h4>Example</h4>\n   *\n   *      createjs.Sound.alternateExtensions = [\"mp3\"];\n   *      createjs.Sound.on(\"fileload\", handleLoad); // add an event listener for when load is completed\n   *      createjs.Sound.registerSound(\"myAudioPath/mySound.ogg\", \"myID\", 3);\n   *      createjs.Sound.registerSound({ogg:\"path1/mySound.ogg\", mp3:\"path2/mySoundNoExtension\"}, \"myID\", 3);\n   *\n   *\n   * @method registerSound\n   * @param {String | Object} src The source or an Object with a \"src\" property or an Object with multiple extension labeled src properties.\n   * @param {String} [id] An id specified by the user to play the sound later.  Note id is required for when src is multiple extension labeled src properties.\n   * @param {Number | Object} [data] Data associated with the item. Sound uses the data parameter as the number of\n   * channels for an audio instance, however a \"channels\" property can be appended to the data object if it is used\n   * for other information. The audio channels will set a default based on plugin if no value is found.\n   * Sound also uses the data property to hold an {{#crossLink \"AudioSprite\"}}{{/crossLink}} array of objects in the following format {id, startTime, duration}.<br/>\n   *   id used to play the sound later, in the same manner as a sound src with an id.<br/>\n   *   startTime is the initial offset to start playback and loop from, in milliseconds.<br/>\n   *   duration is the amount of time to play the clip for, in milliseconds.<br/>\n   * This allows Sound to support audio sprites that are played back by id.\n   * @param {string} basePath Set a path that will be prepended to src for loading.\n   * @param {Object | PlayPropsConfig} defaultPlayProps Optional Playback properties that will be set as the defaults on any new AbstractSoundInstance.\n   * See {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}} for options.\n   * @return {Object} An object with the modified values that were passed in, which defines the sound.\n   * Returns false if the source cannot be parsed or no plugins can be initialized.\n   * Returns true if the source is already loaded.\n   * @static\n   * @since 0.4.0\n   */\n\n\n  s.registerSound = function (src, id, data, basePath, defaultPlayProps) {\n    var loadItem = {\n      src: src,\n      id: id,\n      data: data,\n      defaultPlayProps: defaultPlayProps\n    };\n\n    if (src instanceof Object && src.src) {\n      basePath = id;\n      loadItem = src;\n    }\n\n    loadItem = createjs.LoadItem.create(loadItem);\n    loadItem.path = basePath;\n\n    if (basePath != null && !(loadItem.src instanceof Object)) {\n      loadItem.src = basePath + loadItem.src;\n    }\n\n    var loader = s._registerSound(loadItem);\n\n    if (!loader) {\n      return false;\n    }\n\n    if (!s._preloadHash[loadItem.src]) {\n      s._preloadHash[loadItem.src] = [];\n    }\n\n    s._preloadHash[loadItem.src].push(loadItem);\n\n    if (s._preloadHash[loadItem.src].length == 1) {\n      // OJR note this will disallow reloading a sound if loading fails or the source changes\n      loader.on(\"complete\", this._handleLoadComplete, this);\n      loader.on(\"error\", this._handleLoadError, this);\n      s.activePlugin.preload(loader);\n    } else {\n      if (s._preloadHash[loadItem.src][0] == true) {\n        return true;\n      }\n    }\n\n    return loadItem;\n  };\n  /**\n   * Register an array of audio files for loading and future playback in Sound. It is recommended to register all\n   * sounds that need to be played back in order to properly prepare and preload them. Sound does internal preloading\n   * when required.\n   *\n   * <h4>Example</h4>\n   *\n   * \t\tvar assetPath = \"./myAudioPath/\";\n   *      var sounds = [\n   *          {src:\"asset0.ogg\", id:\"example\"},\n   *          {src:\"asset1.ogg\", id:\"1\", data:6},\n   *          {src:\"asset2.mp3\", id:\"works\"}\n   *          {src:{mp3:\"path1/asset3.mp3\", ogg:\"path2/asset3NoExtension\"}, id:\"better\"}\n   *      ];\n   *      createjs.Sound.alternateExtensions = [\"mp3\"];\t// if the passed extension is not supported, try this extension\n   *      createjs.Sound.on(\"fileload\", handleLoad); // call handleLoad when each sound loads\n   *      createjs.Sound.registerSounds(sounds, assetPath);\n   *\n   * @method registerSounds\n   * @param {Array} sounds An array of objects to load. Objects are expected to be in the format needed for\n   * {{#crossLink \"Sound/registerSound\"}}{{/crossLink}}: <code>{src:srcURI, id:ID, data:Data}</code>\n   * with \"id\" and \"data\" being optional.\n   * You can also pass an object with path and manifest properties, where path is a basePath and manifest is an array of objects to load.\n   * Note id is required if src is an object with extension labeled src properties.\n   * @param {string} basePath Set a path that will be prepended to each src when loading.  When creating, playing, or removing\n   * audio that was loaded with a basePath by src, the basePath must be included.\n   * @return {Object} An array of objects with the modified values that were passed in, which defines each sound.\n   * Like registerSound, it will return false for any values when the source cannot be parsed or if no plugins can be initialized.\n   * Also, it will return true for any values when the source is already loaded.\n   * @static\n   * @since 0.6.0\n   */\n\n\n  s.registerSounds = function (sounds, basePath) {\n    var returnValues = [];\n\n    if (sounds.path) {\n      if (!basePath) {\n        basePath = sounds.path;\n      } else {\n        basePath = basePath + sounds.path;\n      }\n\n      sounds = sounds.manifest; // TODO document this feature\n    }\n\n    for (var i = 0, l = sounds.length; i < l; i++) {\n      returnValues[i] = createjs.Sound.registerSound(sounds[i].src, sounds[i].id, sounds[i].data, basePath, sounds[i].defaultPlayProps);\n    }\n\n    return returnValues;\n  };\n  /**\n   * Remove a sound that has been registered with {{#crossLink \"Sound/registerSound\"}}{{/crossLink}} or\n   * {{#crossLink \"Sound/registerSounds\"}}{{/crossLink}}.\n   * <br />Note this will stop playback on active instances playing this sound before deleting them.\n   * <br />Note if you passed in a basePath, you need to pass it or prepend it to the src here.\n   *\n   * <h4>Example</h4>\n   *\n   *      createjs.Sound.removeSound(\"myID\");\n   *      createjs.Sound.removeSound(\"myAudioBasePath/mySound.ogg\");\n   *      createjs.Sound.removeSound(\"myPath/myOtherSound.mp3\", \"myBasePath/\");\n   *      createjs.Sound.removeSound({mp3:\"musicNoExtension\", ogg:\"music.ogg\"}, \"myBasePath/\");\n   *\n   * @method removeSound\n   * @param {String | Object} src The src or ID of the audio, or an Object with a \"src\" property, or an Object with multiple extension labeled src properties.\n   * @param {string} basePath Set a path that will be prepended to each src when removing.\n   * @return {Boolean} True if sound is successfully removed.\n   * @static\n   * @since 0.4.1\n   */\n\n\n  s.removeSound = function (src, basePath) {\n    if (s.activePlugin == null) {\n      return false;\n    }\n\n    if (src instanceof Object && src.src) {\n      src = src.src;\n    }\n\n    var details;\n\n    if (src instanceof Object) {\n      details = s._parseSrc(src);\n    } else {\n      src = s._getSrcById(src).src;\n      details = s._parsePath(src);\n    }\n\n    if (details == null) {\n      return false;\n    }\n\n    src = details.src;\n\n    if (basePath != null) {\n      src = basePath + src;\n    }\n\n    for (var prop in s._idHash) {\n      if (s._idHash[prop].src == src) {\n        delete s._idHash[prop];\n      }\n    } // clear from SoundChannel, which also stops and deletes all instances\n\n\n    SoundChannel.removeSrc(src);\n    delete s._preloadHash[src];\n    s.activePlugin.removeSound(src);\n    return true;\n  };\n  /**\n   * Remove an array of audio files that have been registered with {{#crossLink \"Sound/registerSound\"}}{{/crossLink}} or\n   * {{#crossLink \"Sound/registerSounds\"}}{{/crossLink}}.\n   * <br />Note this will stop playback on active instances playing this audio before deleting them.\n   * <br />Note if you passed in a basePath, you need to pass it or prepend it to the src here.\n   *\n   * <h4>Example</h4>\n   *\n   * \t\tassetPath = \"./myPath/\";\n   *      var sounds = [\n   *          {src:\"asset0.ogg\", id:\"example\"},\n   *          {src:\"asset1.ogg\", id:\"1\", data:6},\n   *          {src:\"asset2.mp3\", id:\"works\"}\n   *      ];\n   *      createjs.Sound.removeSounds(sounds, assetPath);\n   *\n   * @method removeSounds\n   * @param {Array} sounds An array of objects to remove. Objects are expected to be in the format needed for\n   * {{#crossLink \"Sound/removeSound\"}}{{/crossLink}}: <code>{srcOrID:srcURIorID}</code>.\n   * You can also pass an object with path and manifest properties, where path is a basePath and manifest is an array of objects to remove.\n   * @param {string} basePath Set a path that will be prepended to each src when removing.\n   * @return {Object} An array of Boolean values representing if the sounds with the same array index were\n   * successfully removed.\n   * @static\n   * @since 0.4.1\n   */\n\n\n  s.removeSounds = function (sounds, basePath) {\n    var returnValues = [];\n\n    if (sounds.path) {\n      if (!basePath) {\n        basePath = sounds.path;\n      } else {\n        basePath = basePath + sounds.path;\n      }\n\n      sounds = sounds.manifest;\n    }\n\n    for (var i = 0, l = sounds.length; i < l; i++) {\n      returnValues[i] = createjs.Sound.removeSound(sounds[i].src, basePath);\n    }\n\n    return returnValues;\n  };\n  /**\n   * Remove all sounds that have been registered with {{#crossLink \"Sound/registerSound\"}}{{/crossLink}} or\n   * {{#crossLink \"Sound/registerSounds\"}}{{/crossLink}}.\n   * <br />Note this will stop playback on all active sound instances before deleting them.\n   *\n   * <h4>Example</h4>\n   *\n   *     createjs.Sound.removeAllSounds();\n   *\n   * @method removeAllSounds\n   * @static\n   * @since 0.4.1\n   */\n\n\n  s.removeAllSounds = function () {\n    s._idHash = {};\n    s._preloadHash = {};\n    SoundChannel.removeAll();\n\n    if (s.activePlugin) {\n      s.activePlugin.removeAllSounds();\n    }\n  };\n  /**\n   * Check if a source has been loaded by internal preloaders. This is necessary to ensure that sounds that are\n   * not completed preloading will not kick off a new internal preload if they are played.\n   *\n   * <h4>Example</h4>\n   *\n   *     var mySound = \"assetPath/asset0.ogg\";\n   *     if(createjs.Sound.loadComplete(mySound) {\n   *         createjs.Sound.play(mySound);\n   *     }\n   *\n   * @method loadComplete\n   * @param {String} src The src or id that is being loaded.\n   * @return {Boolean} If the src is already loaded.\n   * @since 0.4.0\n   * @static\n   */\n\n\n  s.loadComplete = function (src) {\n    if (!s.isReady()) {\n      return false;\n    }\n\n    var details = s._parsePath(src);\n\n    if (details) {\n      src = s._getSrcById(details.src).src;\n    } else {\n      src = s._getSrcById(src).src;\n    }\n\n    if (s._preloadHash[src] == undefined) {\n      return false;\n    }\n\n    return s._preloadHash[src][0] == true; // src only loads once, so if it's true for the first it's true for all\n  };\n  /**\n   * Parse the path of a sound. Alternate extensions will be attempted in order if the\n   * current extension is not supported\n   * @method _parsePath\n   * @param {String} value The path to an audio source.\n   * @return {Object} A formatted object that can be registered with the {{#crossLink \"Sound/activePlugin:property\"}}{{/crossLink}}\n   * and returned to a preloader like <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>.\n   * @private\n   * @static\n   */\n\n\n  s._parsePath = function (value) {\n    if (typeof value != \"string\") {\n      value = value.toString();\n    }\n\n    var match = value.match(s.FILE_PATTERN);\n\n    if (match == null) {\n      return false;\n    }\n\n    var name = match[4];\n    var ext = match[5];\n    var c = s.capabilities;\n    var i = 0;\n\n    while (!c[ext]) {\n      ext = s.alternateExtensions[i++];\n\n      if (i > s.alternateExtensions.length) {\n        return null;\n      } // no extensions are supported\n\n    }\n\n    value = value.replace(\".\" + match[5], \".\" + ext);\n    var ret = {\n      name: name,\n      src: value,\n      extension: ext\n    };\n    return ret;\n  };\n  /**\n   * Parse the path of a sound based on properties of src matching with supported extensions.\n   * Returns false if none of the properties are supported\n   * @method _parseSrc\n   * @param {Object} value The paths to an audio source, indexed by extension type.\n   * @return {Object} A formatted object that can be registered with the {{#crossLink \"Sound/activePlugin:property\"}}{{/crossLink}}\n   * and returned to a preloader like <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>.\n   * @private\n   * @static\n   */\n\n\n  s._parseSrc = function (value) {\n    var ret = {\n      name: undefined,\n      src: undefined,\n      extension: undefined\n    };\n    var c = s.capabilities;\n\n    for (var prop in value) {\n      if (value.hasOwnProperty(prop) && c[prop]) {\n        ret.src = value[prop];\n        ret.extension = prop;\n        break;\n      }\n    }\n\n    if (!ret.src) {\n      return false;\n    } // no matches\n\n\n    var i = ret.src.lastIndexOf(\"/\");\n\n    if (i != -1) {\n      ret.name = ret.src.slice(i + 1);\n    } else {\n      ret.name = ret.src;\n    }\n\n    return ret;\n  };\n  /* ---------------\n   Static API.\n   --------------- */\n\n  /**\n   * Play a sound and get a {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} to control. If the sound fails to\n   * play, an AbstractSoundInstance will still be returned, and have a playState of {{#crossLink \"Sound/PLAY_FAILED:property\"}}{{/crossLink}}.\n   * Note that even on sounds with failed playback, you may still be able to call the {{#crossLink \"AbstractSoundInstance/play\"}}{{/crossLink}},\n   * method, since the failure could be due to lack of available channels. If the src does not have a supported\n   * extension or if there is no available plugin, a default AbstractSoundInstance will still be returned, which will\n   * not play any audio, but will not generate errors.\n   *\n   * <h4>Example</h4>\n   *\n   *      createjs.Sound.on(\"fileload\", handleLoad);\n   *      createjs.Sound.registerSound(\"myAudioPath/mySound.mp3\", \"myID\", 3);\n   *      function handleLoad(event) {\n   *      \tcreatejs.Sound.play(\"myID\");\n   *      \t// store off AbstractSoundInstance for controlling\n   *      \tvar myInstance = createjs.Sound.play(\"myID\", {interrupt: createjs.Sound.INTERRUPT_ANY, loop:-1});\n   *      }\n   *\n   * NOTE: To create an audio sprite that has not already been registered, both startTime and duration need to be set.\n   * This is only when creating a new audio sprite, not when playing using the id of an already registered audio sprite.\n   *\n   * @method play\n   * @param {String} src The src or ID of the audio.\n   * @param {Object | PlayPropsConfig} props A PlayPropsConfig instance, or an object that contains the parameters to\n   * play a sound. See the {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}} for more info.\n   * @return {AbstractSoundInstance} A {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} that can be controlled\n   * after it is created.\n   * @static\n   */\n\n\n  s.play = function (src, props) {\n    var playProps = createjs.PlayPropsConfig.create(props);\n    var instance = s.createInstance(src, playProps.startTime, playProps.duration);\n\n    var ok = s._playInstance(instance, playProps);\n\n    if (!ok) {\n      instance._playFailed();\n    }\n\n    return instance;\n  };\n  /**\n   * Creates a {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} using the passed in src. If the src does not have a\n   * supported extension or if there is no available plugin, a default AbstractSoundInstance will be returned that can be\n   * called safely but does nothing.\n   *\n   * <h4>Example</h4>\n   *\n   *      var myInstance = null;\n   *      createjs.Sound.on(\"fileload\", handleLoad);\n   *      createjs.Sound.registerSound(\"myAudioPath/mySound.mp3\", \"myID\", 3);\n   *      function handleLoad(event) {\n   *      \tmyInstance = createjs.Sound.createInstance(\"myID\");\n   *      \t// alternately we could call the following\n   *      \tmyInstance = createjs.Sound.createInstance(\"myAudioPath/mySound.mp3\");\n   *      }\n   *\n   * NOTE to create an audio sprite that has not already been registered, both startTime and duration need to be set.\n   * This is only when creating a new audio sprite, not when playing using the id of an already registered audio sprite.\n   *\n   * @method createInstance\n   * @param {String} src The src or ID of the audio.\n   * @param {Number} [startTime=null] To create an audio sprite (with duration), the initial offset to start playback and loop from, in milliseconds.\n   * @param {Number} [duration=null] To create an audio sprite (with startTime), the amount of time to play the clip for, in milliseconds.\n   * @return {AbstractSoundInstance} A {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} that can be controlled after it is created.\n   * Unsupported extensions will return the default AbstractSoundInstance.\n   * @since 0.4.0\n   * @static\n   */\n\n\n  s.createInstance = function (src, startTime, duration) {\n    if (!s.initializeDefaultPlugins()) {\n      return new createjs.DefaultSoundInstance(src, startTime, duration);\n    }\n\n    var defaultPlayProps = s._defaultPlayPropsHash[src]; // for audio sprites, which create and store defaults by id\n\n    src = s._getSrcById(src);\n\n    var details = s._parsePath(src.src);\n\n    var instance = null;\n\n    if (details != null && details.src != null) {\n      SoundChannel.create(details.src);\n\n      if (startTime == null) {\n        startTime = src.startTime;\n      }\n\n      instance = s.activePlugin.create(details.src, startTime, duration || src.duration);\n      defaultPlayProps = defaultPlayProps || s._defaultPlayPropsHash[details.src];\n\n      if (defaultPlayProps) {\n        instance.applyPlayProps(defaultPlayProps);\n      }\n    } else {\n      instance = new createjs.DefaultSoundInstance(src, startTime, duration);\n    }\n\n    instance.uniqueId = s._lastID++;\n    return instance;\n  };\n  /**\n   * Stop all audio (global stop). Stopped audio is reset, and not paused. To play audio that has been stopped,\n   * call AbstractSoundInstance {{#crossLink \"AbstractSoundInstance/play\"}}{{/crossLink}}.\n   *\n   * <h4>Example</h4>\n   *\n   *     createjs.Sound.stop();\n   *\n   * @method stop\n   * @static\n   */\n\n\n  s.stop = function () {\n    var instances = this._instances;\n\n    for (var i = instances.length; i--;) {\n      instances[i].stop(); // NOTE stop removes instance from this._instances\n    }\n  };\n  /**\n   * Set the default playback properties for all new SoundInstances of the passed in src or ID.\n   * See {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}} for available properties.\n   *\n   * @method setDefaultPlayProps\n   * @param {String} src The src or ID used to register the audio.\n   * @param {Object | PlayPropsConfig} playProps The playback properties you would like to set.\n   * @since 0.6.1\n   */\n\n\n  s.setDefaultPlayProps = function (src, playProps) {\n    src = s._getSrcById(src);\n    s._defaultPlayPropsHash[s._parsePath(src.src).src] = createjs.PlayPropsConfig.create(playProps);\n  };\n  /**\n   * Get the default playback properties for the passed in src or ID.  These properties are applied to all\n   * new SoundInstances.  Returns null if default does not exist.\n   *\n   * @method getDefaultPlayProps\n   * @param {String} src The src or ID used to register the audio.\n   * @returns {PlayPropsConfig} returns an existing PlayPropsConfig or null if one does not exist\n   * @since 0.6.1\n   */\n\n\n  s.getDefaultPlayProps = function (src) {\n    src = s._getSrcById(src);\n    return s._defaultPlayPropsHash[s._parsePath(src.src).src];\n  };\n  /* ---------------\n   Internal methods\n   --------------- */\n\n  /**\n   * Play an instance. This is called by the static API, as well as from plugins. This allows the core class to\n   * control delays.\n   * @method _playInstance\n   * @param {AbstractSoundInstance} instance The {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} to start playing.\n   * @param {PlayPropsConfig} playProps A PlayPropsConfig object.\n   * @return {Boolean} If the sound can start playing. Sounds that fail immediately will return false. Sounds that\n   * have a delay will return true, but may still fail to play.\n   * @private\n   * @static\n   */\n\n\n  s._playInstance = function (instance, playProps) {\n    var defaultPlayProps = s._defaultPlayPropsHash[instance.src] || {};\n\n    if (playProps.interrupt == null) {\n      playProps.interrupt = defaultPlayProps.interrupt || s.defaultInterruptBehavior;\n    }\n\n    ;\n\n    if (playProps.delay == null) {\n      playProps.delay = defaultPlayProps.delay || 0;\n    }\n\n    if (playProps.offset == null) {\n      playProps.offset = instance.position;\n    }\n\n    if (playProps.loop == null) {\n      playProps.loop = instance.loop;\n    }\n\n    if (playProps.volume == null) {\n      playProps.volume = instance.volume;\n    }\n\n    if (playProps.pan == null) {\n      playProps.pan = instance.pan;\n    }\n\n    if (playProps.delay == 0) {\n      var ok = s._beginPlaying(instance, playProps);\n\n      if (!ok) {\n        return false;\n      }\n    } else {\n      //Note that we can't pass arguments to proxy OR setTimeout (IE only), so just wrap the function call.\n      // OJR WebAudio may want to handle this differently, so it might make sense to move this functionality into the plugins in the future\n      var delayTimeoutId = setTimeout(function () {\n        s._beginPlaying(instance, playProps);\n      }, playProps.delay);\n      instance.delayTimeoutId = delayTimeoutId;\n    }\n\n    this._instances.push(instance);\n\n    return true;\n  };\n  /**\n   * Begin playback. This is called immediately or after delay by {{#crossLink \"Sound/playInstance\"}}{{/crossLink}}.\n   * @method _beginPlaying\n   * @param {AbstractSoundInstance} instance A {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} to begin playback.\n   * @param {PlayPropsConfig} playProps A PlayPropsConfig object.\n   * @return {Boolean} If the sound can start playing. If there are no available channels, or the instance fails to\n   * start, this will return false.\n   * @private\n   * @static\n   */\n\n\n  s._beginPlaying = function (instance, playProps) {\n    if (!SoundChannel.add(instance, playProps.interrupt)) {\n      return false;\n    }\n\n    var result = instance._beginPlaying(playProps);\n\n    if (!result) {\n      var index = createjs.indexOf(this._instances, instance);\n\n      if (index > -1) {\n        this._instances.splice(index, 1);\n      }\n\n      return false;\n    }\n\n    return true;\n  };\n  /**\n   * Get the source of a sound via the ID passed in with a register call. If no ID is found the value is returned\n   * instead.\n   * @method _getSrcById\n   * @param {String} value The ID the sound was registered with.\n   * @return {String} The source of the sound if it has been registered with this ID or the value that was passed in.\n   * @private\n   * @static\n   */\n\n\n  s._getSrcById = function (value) {\n    return s._idHash[value] || {\n      src: value\n    };\n  };\n  /**\n   * A sound has completed playback, been interrupted, failed, or been stopped. This method removes the instance from\n   * Sound management. It will be added again, if the sound re-plays. Note that this method is called from the\n   * instances themselves.\n   * @method _playFinished\n   * @param {AbstractSoundInstance} instance The instance that finished playback.\n   * @private\n   * @static\n   */\n\n\n  s._playFinished = function (instance) {\n    SoundChannel.remove(instance);\n    var index = createjs.indexOf(this._instances, instance);\n\n    if (index > -1) {\n      this._instances.splice(index, 1);\n    } // OJR this will always be > -1, there is no way for an instance to exist without being added to this._instances\n\n  };\n\n  createjs.Sound = Sound;\n  /**\n   * An internal class that manages the number of active {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} instances for\n   * each sound type. This method is only used internally by the {{#crossLink \"Sound\"}}{{/crossLink}} class.\n   *\n   * The number of sounds is artificially limited by Sound in order to prevent over-saturation of a\n   * single sound, as well as to stay within hardware limitations, although the latter may disappear with better\n   * browser support.\n   *\n   * When a sound is played, this class ensures that there is an available instance, or interrupts an appropriate\n   * sound that is already playing.\n   * #class SoundChannel\n   * @param {String} src The source of the instances\n   * @param {Number} [max=1] The number of instances allowed\n   * @constructor\n   * @protected\n   */\n\n  function SoundChannel(src, max) {\n    this.init(src, max);\n  }\n  /* ------------\n   Static API\n   ------------ */\n\n  /**\n   * A hash of channel instances indexed by source.\n   * #property channels\n   * @type {Object}\n   * @static\n   */\n\n\n  SoundChannel.channels = {};\n  /**\n   * Create a sound channel. Note that if the sound channel already exists, this will fail.\n   * #method create\n   * @param {String} src The source for the channel\n   * @param {Number} max The maximum amount this channel holds. The default is {{#crossLink \"SoundChannel.maxDefault\"}}{{/crossLink}}.\n   * @return {Boolean} If the channels were created.\n   * @static\n   */\n\n  SoundChannel.create = function (src, max) {\n    var channel = SoundChannel.get(src);\n\n    if (channel == null) {\n      SoundChannel.channels[src] = new SoundChannel(src, max);\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * Delete a sound channel, stop and delete all related instances. Note that if the sound channel does not exist, this will fail.\n   * #method remove\n   * @param {String} src The source for the channel\n   * @return {Boolean} If the channels were deleted.\n   * @static\n   */\n\n\n  SoundChannel.removeSrc = function (src) {\n    var channel = SoundChannel.get(src);\n\n    if (channel == null) {\n      return false;\n    }\n\n    channel._removeAll(); // this stops and removes all active instances\n\n\n    delete SoundChannel.channels[src];\n    return true;\n  };\n  /**\n   * Delete all sound channels, stop and delete all related instances.\n   * #method removeAll\n   * @static\n   */\n\n\n  SoundChannel.removeAll = function () {\n    for (var channel in SoundChannel.channels) {\n      SoundChannel.channels[channel]._removeAll(); // this stops and removes all active instances\n\n    }\n\n    SoundChannel.channels = {};\n  };\n  /**\n   * Add an instance to a sound channel.\n   * #method add\n   * @param {AbstractSoundInstance} instance The instance to add to the channel\n   * @param {String} interrupt The interrupt value to use. Please see the {{#crossLink \"Sound/play\"}}{{/crossLink}}\n   * for details on interrupt modes.\n   * @return {Boolean} The success of the method call. If the channel is full, it will return false.\n   * @static\n   */\n\n\n  SoundChannel.add = function (instance, interrupt) {\n    var channel = SoundChannel.get(instance.src);\n\n    if (channel == null) {\n      return false;\n    }\n\n    return channel._add(instance, interrupt);\n  };\n  /**\n   * Remove an instance from the channel.\n   * #method remove\n   * @param {AbstractSoundInstance} instance The instance to remove from the channel\n   * @return The success of the method call. If there is no channel, it will return false.\n   * @static\n   */\n\n\n  SoundChannel.remove = function (instance) {\n    var channel = SoundChannel.get(instance.src);\n\n    if (channel == null) {\n      return false;\n    }\n\n    channel._remove(instance);\n\n    return true;\n  };\n  /**\n   * Get the maximum number of sounds you can have in a channel.\n   * #method maxPerChannel\n   * @return {Number} The maximum number of sounds you can have in a channel.\n   */\n\n\n  SoundChannel.maxPerChannel = function () {\n    return p.maxDefault;\n  };\n  /**\n   * Get a channel instance by its src.\n   * #method get\n   * @param {String} src The src to use to look up the channel\n   * @static\n   */\n\n\n  SoundChannel.get = function (src) {\n    return SoundChannel.channels[src];\n  };\n\n  var p = SoundChannel.prototype;\n  p.constructor = SoundChannel;\n  /**\n   * The source of the channel.\n   * #property src\n   * @type {String}\n   */\n\n  p.src = null;\n  /**\n   * The maximum number of instances in this channel.  -1 indicates no limit\n   * #property max\n   * @type {Number}\n   */\n\n  p.max = null;\n  /**\n   * The default value to set for max, if it isn't passed in.  Also used if -1 is passed.\n   * #property maxDefault\n   * @type {Number}\n   * @default 100\n   * @since 0.4.0\n   */\n\n  p.maxDefault = 100;\n  /**\n   * The current number of active instances.\n   * #property length\n   * @type {Number}\n   */\n\n  p.length = 0;\n  /**\n   * Initialize the channel.\n   * #method init\n   * @param {String} src The source of the channel\n   * @param {Number} max The maximum number of instances in the channel\n   * @protected\n   */\n\n  p.init = function (src, max) {\n    this.src = src;\n    this.max = max || this.maxDefault;\n\n    if (this.max == -1) {\n      this.max = this.maxDefault;\n    }\n\n    this._instances = [];\n  };\n  /**\n   * Get an instance by index.\n   * #method get\n   * @param {Number} index The index to return.\n   * @return {AbstractSoundInstance} The AbstractSoundInstance at a specific instance.\n   */\n\n\n  p._get = function (index) {\n    return this._instances[index];\n  };\n  /**\n   * Add a new instance to the channel.\n   * #method add\n   * @param {AbstractSoundInstance} instance The instance to add.\n   * @return {Boolean} The success of the method call. If the channel is full, it will return false.\n   */\n\n\n  p._add = function (instance, interrupt) {\n    if (!this._getSlot(interrupt, instance)) {\n      return false;\n    }\n\n    this._instances.push(instance);\n\n    this.length++;\n    return true;\n  };\n  /**\n   * Remove an instance from the channel, either when it has finished playing, or it has been interrupted.\n   * #method remove\n   * @param {AbstractSoundInstance} instance The instance to remove\n   * @return {Boolean} The success of the remove call. If the instance is not found in this channel, it will\n   * return false.\n   */\n\n\n  p._remove = function (instance) {\n    var index = createjs.indexOf(this._instances, instance);\n\n    if (index == -1) {\n      return false;\n    }\n\n    this._instances.splice(index, 1);\n\n    this.length--;\n    return true;\n  };\n  /**\n   * Stop playback and remove all instances from the channel.  Usually in response to a delete call.\n   * #method removeAll\n   */\n\n\n  p._removeAll = function () {\n    // Note that stop() removes the item from the list\n    for (var i = this.length - 1; i >= 0; i--) {\n      this._instances[i].stop();\n    }\n  };\n  /**\n   * Get an available slot depending on interrupt value and if slots are available.\n   * #method getSlot\n   * @param {String} interrupt The interrupt value to use.\n   * @param {AbstractSoundInstance} instance The sound instance that will go in the channel if successful.\n   * @return {Boolean} Determines if there is an available slot. Depending on the interrupt mode, if there are no slots,\n   * an existing AbstractSoundInstance may be interrupted. If there are no slots, this method returns false.\n   */\n\n\n  p._getSlot = function (interrupt, instance) {\n    var target, replacement;\n\n    if (interrupt != Sound.INTERRUPT_NONE) {\n      // First replacement candidate\n      replacement = this._get(0);\n\n      if (replacement == null) {\n        return true;\n      }\n    }\n\n    for (var i = 0, l = this.max; i < l; i++) {\n      target = this._get(i); // Available Space\n\n      if (target == null) {\n        return true;\n      } // Audio is complete or not playing\n\n\n      if (target.playState == Sound.PLAY_FINISHED || target.playState == Sound.PLAY_INTERRUPTED || target.playState == Sound.PLAY_FAILED) {\n        replacement = target;\n        break;\n      }\n\n      if (interrupt == Sound.INTERRUPT_NONE) {\n        continue;\n      } // Audio is a better candidate than the current target, according to playhead\n\n\n      if (interrupt == Sound.INTERRUPT_EARLY && target.position < replacement.position || interrupt == Sound.INTERRUPT_LATE && target.position > replacement.position) {\n        replacement = target;\n      }\n    }\n\n    if (replacement != null) {\n      replacement._interrupt();\n\n      this._remove(replacement);\n\n      return true;\n    }\n\n    return false;\n  };\n\n  p.toString = function () {\n    return \"[Sound SoundChannel]\";\n  }; // do not add SoundChannel to namespace\n\n})(); //##############################################################################\n// AbstractSoundInstance.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n/**\n * A AbstractSoundInstance is created when any calls to the Sound API method {{#crossLink \"Sound/play\"}}{{/crossLink}} or\n * {{#crossLink \"Sound/createInstance\"}}{{/crossLink}} are made. The AbstractSoundInstance is returned by the active plugin\n * for control by the user.\n *\n * <h4>Example</h4>\n *\n *      var myInstance = createjs.Sound.play(\"myAssetPath/mySrcFile.mp3\");\n *\n * A number of additional parameters provide a quick way to determine how a sound is played. Please see the Sound\n * API method {{#crossLink \"Sound/play\"}}{{/crossLink}} for a list of arguments.\n *\n * Once a AbstractSoundInstance is created, a reference can be stored that can be used to control the audio directly through\n * the AbstractSoundInstance. If the reference is not stored, the AbstractSoundInstance will play out its audio (and any loops), and\n * is then de-referenced from the {{#crossLink \"Sound\"}}{{/crossLink}} class so that it can be cleaned up. If audio\n * playback has completed, a simple call to the {{#crossLink \"AbstractSoundInstance/play\"}}{{/crossLink}} instance method\n * will rebuild the references the Sound class need to control it.\n *\n *      var myInstance = createjs.Sound.play(\"myAssetPath/mySrcFile.mp3\", {loop:2});\n *      myInstance.on(\"loop\", handleLoop);\n *      function handleLoop(event) {\n *          myInstance.volume = myInstance.volume * 0.5;\n *      }\n *\n * Events are dispatched from the instance to notify when the sound has completed, looped, or when playback fails\n *\n *      var myInstance = createjs.Sound.play(\"myAssetPath/mySrcFile.mp3\");\n *      myInstance.on(\"complete\", handleComplete);\n *      myInstance.on(\"loop\", handleLoop);\n *      myInstance.on(\"failed\", handleFailed);\n *\n *\n * @class AbstractSoundInstance\n * @param {String} src The path to and file name of the sound.\n * @param {Number} startTime Audio sprite property used to apply an offset, in milliseconds.\n * @param {Number} duration Audio sprite property used to set the time the clip plays for, in milliseconds.\n * @param {Object} playbackResource Any resource needed by plugin to support audio playback.\n * @extends EventDispatcher\n * @constructor\n */\n\n(function () {\n  \"use strict\"; // Constructor:\n\n  var AbstractSoundInstance = function (src, startTime, duration, playbackResource) {\n    this.EventDispatcher_constructor(); // public properties:\n\n    /**\n     * The source of the sound.\n     * @property src\n     * @type {String}\n     * @default null\n     */\n\n    this.src = src;\n    /**\n     * The unique ID of the instance. This is set by {{#crossLink \"Sound\"}}{{/crossLink}}.\n     * @property uniqueId\n     * @type {String} | Number\n     * @default -1\n     */\n\n    this.uniqueId = -1;\n    /**\n     * The play state of the sound. Play states are defined as constants on {{#crossLink \"Sound\"}}{{/crossLink}}.\n     * @property playState\n     * @type {String}\n     * @default null\n     */\n\n    this.playState = null;\n    /**\n     * A Timeout created by {{#crossLink \"Sound\"}}{{/crossLink}} when this AbstractSoundInstance is played with a delay.\n     * This allows AbstractSoundInstance to remove the delay if stop, pause, or cleanup are called before playback begins.\n     * @property delayTimeoutId\n     * @type {timeoutVariable}\n     * @default null\n     * @protected\n     * @since 0.4.0\n     */\n\n    this.delayTimeoutId = null; // TODO consider moving delay into AbstractSoundInstance so it can be handled by plugins\n    // private properties\n    // Getter / Setter Properties\n    // OJR TODO find original reason that we didn't use defined functions.  I think it was performance related\n\n    /**\n     * The volume of the sound, between 0 and 1.\n     *\n     * The actual output volume of a sound can be calculated using:\n     * <code>myInstance.volume * createjs.Sound._getVolume();</code>\n     *\n     * @property volume\n     * @type {Number}\n     * @default 1\n     */\n\n    this._volume = 1;\n    Object.defineProperty(this, \"volume\", {\n      get: this._getVolume,\n      set: this._setVolume\n    });\n    /**\n     * The pan of the sound, between -1 (left) and 1 (right). Note that pan is not supported by HTML Audio.\n     *\n     * Note in WebAudioPlugin this only gives us the \"x\" value of what is actually 3D audio\n     * @property pan\n     * @type {Number}\n     * @default 0\n     */\n\n    this._pan = 0;\n    Object.defineProperty(this, \"pan\", {\n      get: this._getPan,\n      set: this._setPan\n    });\n    /**\n     * Audio sprite property used to determine the starting offset.\n     * @property startTime\n     * @type {Number}\n     * @default 0\n     * @since 0.6.1\n     */\n\n    this._startTime = Math.max(0, startTime || 0);\n    Object.defineProperty(this, \"startTime\", {\n      get: this._getStartTime,\n      set: this._setStartTime\n    });\n    /**\n     * Sets or gets the length of the audio clip, value is in milliseconds.\n     *\n     * @property duration\n     * @type {Number}\n     * @default 0\n     * @since 0.6.0\n     */\n\n    this._duration = Math.max(0, duration || 0);\n    Object.defineProperty(this, \"duration\", {\n      get: this._getDuration,\n      set: this._setDuration\n    });\n    /**\n     * Object that holds plugin specific resource need for audio playback.\n     * This is set internally by the plugin.  For example, WebAudioPlugin will set an array buffer,\n     * HTMLAudioPlugin will set a tag, FlashAudioPlugin will set a flash reference.\n     *\n     * @property playbackResource\n     * @type {Object}\n     * @default null\n     */\n\n    this._playbackResource = null;\n    Object.defineProperty(this, \"playbackResource\", {\n      get: this._getPlaybackResource,\n      set: this._setPlaybackResource\n    });\n\n    if (playbackResource !== false && playbackResource !== true) {\n      this._setPlaybackResource(playbackResource);\n    }\n    /**\n     * The position of the playhead in milliseconds. This can be set while a sound is playing, paused, or stopped.\n     *\n     * @property position\n     * @type {Number}\n     * @default 0\n     * @since 0.6.0\n     */\n\n\n    this._position = 0;\n    Object.defineProperty(this, \"position\", {\n      get: this._getPosition,\n      set: this._setPosition\n    });\n    /**\n     * The number of play loops remaining. Negative values will loop infinitely.\n     *\n     * @property loop\n     * @type {Number}\n     * @default 0\n     * @public\n     * @since 0.6.0\n     */\n\n    this._loop = 0;\n    Object.defineProperty(this, \"loop\", {\n      get: this._getLoop,\n      set: this._setLoop\n    });\n    /**\n     * Mutes or unmutes the current audio instance.\n     *\n     * @property muted\n     * @type {Boolean}\n     * @default false\n     * @since 0.6.0\n     */\n\n    this._muted = false;\n    Object.defineProperty(this, \"muted\", {\n      get: this._getMuted,\n      set: this._setMuted\n    });\n    /**\n     * Pauses or resumes the current audio instance.\n     *\n     * @property paused\n     * @type {Boolean}\n     */\n\n    this._paused = false;\n    Object.defineProperty(this, \"paused\", {\n      get: this._getPaused,\n      set: this._setPaused\n    }); // Events\n\n    /**\n     * The event that is fired when playback has started successfully.\n     * @event succeeded\n     * @param {Object} target The object that dispatched the event.\n     * @param {String} type The event type.\n     * @since 0.4.0\n     */\n\n    /**\n     * The event that is fired when playback is interrupted. This happens when another sound with the same\n     * src property is played using an interrupt value that causes this instance to stop playing.\n     * @event interrupted\n     * @param {Object} target The object that dispatched the event.\n     * @param {String} type The event type.\n     * @since 0.4.0\n     */\n\n    /**\n     * The event that is fired when playback has failed. This happens when there are too many channels with the same\n     * src property already playing (and the interrupt value doesn't cause an interrupt of another instance), or\n     * the sound could not be played, perhaps due to a 404 error.\n     * @event failed\n     * @param {Object} target The object that dispatched the event.\n     * @param {String} type The event type.\n     * @since 0.4.0\n     */\n\n    /**\n     * The event that is fired when a sound has completed playing but has loops remaining.\n     * @event loop\n     * @param {Object} target The object that dispatched the event.\n     * @param {String} type The event type.\n     * @since 0.4.0\n     */\n\n    /**\n     * The event that is fired when playback completes. This means that the sound has finished playing in its\n     * entirety, including its loop iterations.\n     * @event complete\n     * @param {Object} target The object that dispatched the event.\n     * @param {String} type The event type.\n     * @since 0.4.0\n     */\n  };\n\n  var p = createjs.extend(AbstractSoundInstance, createjs.EventDispatcher); // Public Methods:\n\n  /**\n   * Play an instance. This method is intended to be called on SoundInstances that already exist (created\n   * with the Sound API {{#crossLink \"Sound/createInstance\"}}{{/crossLink}} or {{#crossLink \"Sound/play\"}}{{/crossLink}}).\n   *\n   * <h4>Example</h4>\n   *\n   *      var myInstance = createjs.Sound.createInstance(mySrc);\n   *      myInstance.play({interrupt:createjs.Sound.INTERRUPT_ANY, loop:2, pan:0.5});\n   *\n   * Note that if this sound is already playing, this call will still set the passed in parameters.\n  \t * <b>Parameters Deprecated</b><br />\n   * The parameters for this method are deprecated in favor of a single parameter that is an Object or {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}}.\n   *\n   * @method play\n   * @param {Object | PlayPropsConfig} props A PlayPropsConfig instance, or an object that contains the parameters to\n   * play a sound. See the {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}} for more info.\n   * @return {AbstractSoundInstance} A reference to itself, intended for chaining calls.\n   */\n\n  p.play = function (props) {\n    var playProps = createjs.PlayPropsConfig.create(props);\n\n    if (this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n      this.applyPlayProps(playProps);\n\n      if (this._paused) {\n        this._setPaused(false);\n      }\n\n      return;\n    }\n\n    this._cleanUp();\n\n    createjs.Sound._playInstance(this, playProps); // make this an event dispatch??\n\n\n    return this;\n  };\n  /**\n   * Stop playback of the instance. Stopped sounds will reset their position to 0, and calls to {{#crossLink \"AbstractSoundInstance/resume\"}}{{/crossLink}}\n   * will fail. To start playback again, call {{#crossLink \"AbstractSoundInstance/play\"}}{{/crossLink}}.\n      *\n      * If you don't want to lose your position use yourSoundInstance.paused = true instead. {{#crossLink \"AbstractSoundInstance/paused\"}}{{/crossLink}}.\n   *\n   * <h4>Example</h4>\n   *\n   *     myInstance.stop();\n   *\n   * @method stop\n   * @return {AbstractSoundInstance} A reference to itself, intended for chaining calls.\n   */\n\n\n  p.stop = function () {\n    this._position = 0;\n    this._paused = false;\n\n    this._handleStop();\n\n    this._cleanUp();\n\n    this.playState = createjs.Sound.PLAY_FINISHED;\n    return this;\n  };\n  /**\n   * Remove all external references and resources from AbstractSoundInstance.  Note this is irreversible and AbstractSoundInstance will no longer work\n   * @method destroy\n   * @since 0.6.0\n   */\n\n\n  p.destroy = function () {\n    this._cleanUp();\n\n    this.src = null;\n    this.playbackResource = null;\n    this.removeAllEventListeners();\n  };\n  /**\n   * Takes an PlayPropsConfig or Object with the same properties and sets them on this instance.\n   * @method applyPlayProps\n   * @param {PlayPropsConfig | Object} playProps A PlayPropsConfig or object containing the same properties.\n   * @since 0.6.1\n   * @return {AbstractSoundInstance} A reference to itself, intended for chaining calls.\n   */\n\n\n  p.applyPlayProps = function (playProps) {\n    if (playProps.offset != null) {\n      this._setPosition(playProps.offset);\n    }\n\n    if (playProps.loop != null) {\n      this._setLoop(playProps.loop);\n    }\n\n    if (playProps.volume != null) {\n      this._setVolume(playProps.volume);\n    }\n\n    if (playProps.pan != null) {\n      this._setPan(playProps.pan);\n    }\n\n    if (playProps.startTime != null) {\n      this._setStartTime(playProps.startTime);\n\n      this._setDuration(playProps.duration);\n    }\n\n    return this;\n  };\n\n  p.toString = function () {\n    return \"[AbstractSoundInstance]\";\n  }; // get/set methods that allow support for IE8\n\n  /**\n   * Please use {{#crossLink \"AbstractSoundInstance/paused:property\"}}{{/crossLink}} directly as a property.\n   * @method _getPaused\n   * @protected\n   * @return {boolean} If the instance is currently paused\n   * @since 0.6.0\n   */\n\n\n  p._getPaused = function () {\n    return this._paused;\n  };\n  /**\n   * Please use {{#crossLink \"AbstractSoundInstance/paused:property\"}}{{/crossLink}} directly as a property\n   * @method _setPaused\n   * @protected\n   * @param {boolean} value\n   * @since 0.6.0\n   * @return {AbstractSoundInstance} A reference to itself, intended for chaining calls.\n   */\n\n\n  p._setPaused = function (value) {\n    if (value !== true && value !== false || this._paused == value) {\n      return;\n    }\n\n    if (value == true && this.playState != createjs.Sound.PLAY_SUCCEEDED) {\n      return;\n    }\n\n    this._paused = value;\n\n    if (value) {\n      this._pause();\n    } else {\n      this._resume();\n    }\n\n    clearTimeout(this.delayTimeoutId);\n    return this;\n  };\n  /**\n   * Please use {{#crossLink \"AbstractSoundInstance/volume:property\"}}{{/crossLink}} directly as a property\n   * @method _setVolume\n   * @protected\n   * @param {Number} value The volume to set, between 0 and 1.\n   * @return {AbstractSoundInstance} A reference to itself, intended for chaining calls.\n   */\n\n\n  p._setVolume = function (value) {\n    if (value == this._volume) {\n      return this;\n    }\n\n    this._volume = Math.max(0, Math.min(1, value));\n\n    if (!this._muted) {\n      this._updateVolume();\n    }\n\n    return this;\n  };\n  /**\n   * Please use {{#crossLink \"AbstractSoundInstance/volume:property\"}}{{/crossLink}} directly as a property\n   * @method _getVolume\n   * @protected\n   * @return {Number} The current volume of the sound instance.\n   */\n\n\n  p._getVolume = function () {\n    return this._volume;\n  };\n  /**\n   * Please use {{#crossLink \"AbstractSoundInstance/muted:property\"}}{{/crossLink}} directly as a property\n   * @method _setMuted\n   * @protected\n   * @param {Boolean} value If the sound should be muted.\n   * @return {AbstractSoundInstance} A reference to itself, intended for chaining calls.\n   * @since 0.6.0\n   */\n\n\n  p._setMuted = function (value) {\n    if (value !== true && value !== false) {\n      return;\n    }\n\n    this._muted = value;\n\n    this._updateVolume();\n\n    return this;\n  };\n  /**\n   * Please use {{#crossLink \"AbstractSoundInstance/muted:property\"}}{{/crossLink}} directly as a property\n   * @method _getMuted\n   * @protected\n   * @return {Boolean} If the sound is muted.\n   * @since 0.6.0\n   */\n\n\n  p._getMuted = function () {\n    return this._muted;\n  };\n  /**\n   * Please use {{#crossLink \"AbstractSoundInstance/pan:property\"}}{{/crossLink}} directly as a property\n   * @method _setPan\n   * @protected\n   * @param {Number} value The pan value, between -1 (left) and 1 (right).\n   * @return {AbstractSoundInstance} Returns reference to itself for chaining calls\n   */\n\n\n  p._setPan = function (value) {\n    if (value == this._pan) {\n      return this;\n    }\n\n    this._pan = Math.max(-1, Math.min(1, value));\n\n    this._updatePan();\n\n    return this;\n  };\n  /**\n   * Please use {{#crossLink \"AbstractSoundInstance/pan:property\"}}{{/crossLink}} directly as a property\n   * @method _getPan\n   * @protected\n   * @return {Number} The value of the pan, between -1 (left) and 1 (right).\n   */\n\n\n  p._getPan = function () {\n    return this._pan;\n  };\n  /**\n   * Please use {{#crossLink \"AbstractSoundInstance/position:property\"}}{{/crossLink}} directly as a property\n   * @method _getPosition\n   * @protected\n   * @return {Number} The position of the playhead in the sound, in milliseconds.\n   */\n\n\n  p._getPosition = function () {\n    if (!this._paused && this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n      this._position = this._calculateCurrentPosition();\n    }\n\n    return this._position;\n  };\n  /**\n   * Please use {{#crossLink \"AbstractSoundInstance/position:property\"}}{{/crossLink}} directly as a property\n   * @method _setPosition\n   * @protected\n   * @param {Number} value The position to place the playhead, in milliseconds.\n   * @return {AbstractSoundInstance} Returns reference to itself for chaining calls\n   */\n\n\n  p._setPosition = function (value) {\n    this._position = Math.max(0, value);\n\n    if (this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n      this._updatePosition();\n    }\n\n    return this;\n  };\n  /**\n   * Please use {{#crossLink \"AbstractSoundInstance/startTime:property\"}}{{/crossLink}} directly as a property\n   * @method _getStartTime\n   * @protected\n   * @return {Number} The startTime of the sound instance in milliseconds.\n   */\n\n\n  p._getStartTime = function () {\n    return this._startTime;\n  };\n  /**\n   * Please use {{#crossLink \"AbstractSoundInstance/startTime:property\"}}{{/crossLink}} directly as a property\n   * @method _setStartTime\n   * @protected\n   * @param {number} value The new startTime time in milli seconds.\n   * @return {AbstractSoundInstance} Returns reference to itself for chaining calls\n   */\n\n\n  p._setStartTime = function (value) {\n    if (value == this._startTime) {\n      return this;\n    }\n\n    this._startTime = Math.max(0, value || 0);\n\n    this._updateStartTime();\n\n    return this;\n  };\n  /**\n   * Please use {{#crossLink \"AbstractSoundInstance/duration:property\"}}{{/crossLink}} directly as a property\n   * @method _getDuration\n   * @protected\n   * @return {Number} The duration of the sound instance in milliseconds.\n   */\n\n\n  p._getDuration = function () {\n    return this._duration;\n  };\n  /**\n   * Please use {{#crossLink \"AbstractSoundInstance/duration:property\"}}{{/crossLink}} directly as a property\n   * @method _setDuration\n   * @protected\n   * @param {number} value The new duration time in milli seconds.\n   * @return {AbstractSoundInstance} Returns reference to itself for chaining calls\n   * @since 0.6.0\n   */\n\n\n  p._setDuration = function (value) {\n    if (value == this._duration) {\n      return this;\n    }\n\n    this._duration = Math.max(0, value || 0);\n\n    this._updateDuration();\n\n    return this;\n  };\n  /**\n   * Please use {{#crossLink \"AbstractSoundInstance/playbackResource:property\"}}{{/crossLink}} directly as a property\n   * @method _setPlaybackResource\n   * @protected\n   * @param {Object} value The new playback resource.\n   * @return {AbstractSoundInstance} Returns reference to itself for chaining calls\n   * @since 0.6.0\n   **/\n\n\n  p._setPlaybackResource = function (value) {\n    this._playbackResource = value;\n\n    if (this._duration == 0 && this._playbackResource) {\n      this._setDurationFromSource();\n    }\n\n    return this;\n  };\n  /**\n   * Please use {{#crossLink \"AbstractSoundInstance/playbackResource:property\"}}{{/crossLink}} directly as a property\n   * @method _getPlaybackResource\n   * @protected\n   * @param {Object} value The new playback resource.\n   * @return {Object} playback resource used for playing audio\n   * @since 0.6.0\n   **/\n\n\n  p._getPlaybackResource = function () {\n    return this._playbackResource;\n  };\n  /**\n   * Please use {{#crossLink \"AbstractSoundInstance/loop:property\"}}{{/crossLink}} directly as a property\n   * @method _getLoop\n   * @protected\n   * @return {number}\n   * @since 0.6.0\n   **/\n\n\n  p._getLoop = function () {\n    return this._loop;\n  };\n  /**\n   * Please use {{#crossLink \"AbstractSoundInstance/loop:property\"}}{{/crossLink}} directly as a property\n   * @method _setLoop\n   * @protected\n   * @param {number} value The number of times to loop after play.\n   * @since 0.6.0\n   */\n\n\n  p._setLoop = function (value) {\n    if (this._playbackResource != null) {\n      // remove looping\n      if (this._loop != 0 && value == 0) {\n        this._removeLooping(value);\n      } // add looping\n      else if (this._loop == 0 && value != 0) {\n          this._addLooping(value);\n        }\n    }\n\n    this._loop = value;\n  }; // Private Methods:\n\n  /**\n   * A helper method that dispatches all events for AbstractSoundInstance.\n   * @method _sendEvent\n   * @param {String} type The event type\n   * @protected\n   */\n\n\n  p._sendEvent = function (type) {\n    var event = new createjs.Event(type);\n    this.dispatchEvent(event);\n  };\n  /**\n   * Clean up the instance. Remove references and clean up any additional properties such as timers.\n   * @method _cleanUp\n   * @protected\n   */\n\n\n  p._cleanUp = function () {\n    clearTimeout(this.delayTimeoutId); // clear timeout that plays delayed sound\n\n    this._handleCleanUp();\n\n    this._paused = false;\n\n    createjs.Sound._playFinished(this); // TODO change to an event\n\n  };\n  /**\n   * The sound has been interrupted.\n   * @method _interrupt\n   * @protected\n   */\n\n\n  p._interrupt = function () {\n    this._cleanUp();\n\n    this.playState = createjs.Sound.PLAY_INTERRUPTED;\n\n    this._sendEvent(\"interrupted\");\n  };\n  /**\n   * Called by the Sound class when the audio is ready to play (delay has completed). Starts sound playing if the\n   * src is loaded, otherwise playback will fail.\n   * @method _beginPlaying\n   * @param {PlayPropsConfig} playProps A PlayPropsConfig object.\n   * @return {Boolean} If playback succeeded.\n   * @protected\n   */\n  // OJR FlashAudioSoundInstance overwrites\n\n\n  p._beginPlaying = function (playProps) {\n    this._setPosition(playProps.offset);\n\n    this._setLoop(playProps.loop);\n\n    this._setVolume(playProps.volume);\n\n    this._setPan(playProps.pan);\n\n    if (playProps.startTime != null) {\n      this._setStartTime(playProps.startTime);\n\n      this._setDuration(playProps.duration);\n    }\n\n    if (this._playbackResource != null && this._position < this._duration) {\n      this._paused = false;\n\n      this._handleSoundReady();\n\n      this.playState = createjs.Sound.PLAY_SUCCEEDED;\n\n      this._sendEvent(\"succeeded\");\n\n      return true;\n    } else {\n      this._playFailed();\n\n      return false;\n    }\n  };\n  /**\n   * Play has failed, which can happen for a variety of reasons.\n   * Cleans up instance and dispatches failed event\n   * @method _playFailed\n   * @private\n   */\n\n\n  p._playFailed = function () {\n    this._cleanUp();\n\n    this.playState = createjs.Sound.PLAY_FAILED;\n\n    this._sendEvent(\"failed\");\n  };\n  /**\n   * Audio has finished playing. Manually loop it if required.\n   * @method _handleSoundComplete\n   * @param event\n   * @protected\n   */\n\n\n  p._handleSoundComplete = function (event) {\n    this._position = 0; // have to set this as it can be set by pause during playback\n\n    if (this._loop != 0) {\n      this._loop--; // NOTE this introduces a theoretical limit on loops = float max size x 2 - 1\n\n      this._handleLoop();\n\n      this._sendEvent(\"loop\");\n\n      return;\n    }\n\n    this._cleanUp();\n\n    this.playState = createjs.Sound.PLAY_FINISHED;\n\n    this._sendEvent(\"complete\");\n  }; // Plugin specific code\n\n  /**\n   * Handles starting playback when the sound is ready for playing.\n   * @method _handleSoundReady\n   * @protected\n  \t */\n\n\n  p._handleSoundReady = function () {// plugin specific code\n  };\n  /**\n   * Internal function used to update the volume based on the instance volume, master volume, instance mute value,\n   * and master mute value.\n   * @method _updateVolume\n   * @protected\n   */\n\n\n  p._updateVolume = function () {// plugin specific code\n  };\n  /**\n   * Internal function used to update the pan\n   * @method _updatePan\n   * @protected\n   * @since 0.6.0\n   */\n\n\n  p._updatePan = function () {// plugin specific code\n  };\n  /**\n   * Internal function used to update the startTime of the audio.\n   * @method _updateStartTime\n   * @protected\n   * @since 0.6.1\n   */\n\n\n  p._updateStartTime = function () {// plugin specific code\n  };\n  /**\n   * Internal function used to update the duration of the audio.\n   * @method _updateDuration\n   * @protected\n   * @since 0.6.0\n   */\n\n\n  p._updateDuration = function () {// plugin specific code\n  };\n  /**\n   * Internal function used to get the duration of the audio from the source we'll be playing.\n   * @method _updateDuration\n   * @protected\n   * @since 0.6.0\n   */\n\n\n  p._setDurationFromSource = function () {// plugin specific code\n  };\n  /**\n   * Internal function that calculates the current position of the playhead and sets this._position to that value\n   * @method _calculateCurrentPosition\n   * @protected\n   * @since 0.6.0\n   */\n\n\n  p._calculateCurrentPosition = function () {// plugin specific code that sets this.position\n  };\n  /**\n   * Internal function used to update the position of the playhead.\n   * @method _updatePosition\n   * @protected\n   * @since 0.6.0\n   */\n\n\n  p._updatePosition = function () {// plugin specific code\n  };\n  /**\n   * Internal function called when looping is removed during playback.\n   * @method _removeLooping\n   * @param {number} value The number of times to loop after play.\n   * @protected\n   * @since 0.6.0\n   */\n\n\n  p._removeLooping = function (value) {// plugin specific code\n  };\n  /**\n   * Internal function called when looping is added during playback.\n   * @method _addLooping\n   * @param {number} value The number of times to loop after play.\n   * @protected\n   * @since 0.6.0\n   */\n\n\n  p._addLooping = function (value) {// plugin specific code\n  };\n  /**\n   * Internal function called when pausing playback\n   * @method _pause\n   * @protected\n   * @since 0.6.0\n   */\n\n\n  p._pause = function () {// plugin specific code\n  };\n  /**\n   * Internal function called when resuming playback\n   * @method _resume\n   * @protected\n   * @since 0.6.0\n   */\n\n\n  p._resume = function () {// plugin specific code\n  };\n  /**\n   * Internal function called when stopping playback\n   * @method _handleStop\n   * @protected\n   * @since 0.6.0\n   */\n\n\n  p._handleStop = function () {// plugin specific code\n  };\n  /**\n   * Internal function called when AbstractSoundInstance is being cleaned up\n   * @method _handleCleanUp\n   * @protected\n   * @since 0.6.0\n   */\n\n\n  p._handleCleanUp = function () {// plugin specific code\n  };\n  /**\n   * Internal function called when AbstractSoundInstance has played to end and is looping\n   * @method _handleLoop\n   * @protected\n   * @since 0.6.0\n   */\n\n\n  p._handleLoop = function () {// plugin specific code\n  };\n\n  createjs.AbstractSoundInstance = createjs.promote(AbstractSoundInstance, \"EventDispatcher\");\n  createjs.DefaultSoundInstance = createjs.AbstractSoundInstance; // used when no plugin is supported\n})(); //##############################################################################\n// AbstractPlugin.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\"; // constructor:\n\n  /**\n  * A default plugin class used as a base for all other plugins.\n  * @class AbstractPlugin\n  * @constructor\n  * @since 0.6.0\n  */\n\n  var AbstractPlugin = function () {\n    // private properties:\n\n    /**\n     * The capabilities of the plugin.\n     * method and is used internally.\n     * @property _capabilities\n     * @type {Object}\n     * @default null\n     * @protected\n     * @static\n     */\n    this._capabilities = null;\n    /**\n     * Object hash indexed by the source URI of all created loaders, used to properly destroy them if sources are removed.\n     * @type {Object}\n     * @protected\n     */\n\n    this._loaders = {};\n    /**\n     * Object hash indexed by the source URI of each file to indicate if an audio source has begun loading,\n     * is currently loading, or has completed loading.  Can be used to store non boolean data after loading\n     * is complete (for example arrayBuffers for web audio).\n     * @property _audioSources\n     * @type {Object}\n     * @protected\n     */\n\n    this._audioSources = {};\n    /**\n     * Object hash indexed by the source URI of all created SoundInstances, updates the playbackResource if it loads after they are created,\n     * and properly destroy them if sources are removed\n     * @type {Object}\n     * @protected\n     */\n\n    this._soundInstances = {};\n    /**\n     * The internal master volume value of the plugin.\n     * @property _volume\n     * @type {Number}\n     * @default 1\n     * @protected\n     */\n\n    this._volume = 1;\n    /**\n     * A reference to a loader class used by a plugin that must be set.\n     * @type {Object}\n     * @protected\n     */\n\n    this._loaderClass;\n    /**\n     * A reference to an AbstractSoundInstance class used by a plugin that must be set.\n     * @type {Object}\n     * @protected;\n     */\n\n    this._soundInstanceClass;\n  };\n\n  var p = AbstractPlugin.prototype; // Static Properties:\n  // NOTE THESE PROPERTIES NEED TO BE ADDED TO EACH PLUGIN\n\n  /**\n   * The capabilities of the plugin. This is generated via the _generateCapabilities method and is used internally.\n   * @property _capabilities\n   * @type {Object}\n   * @default null\n   * @private\n   * @static\n   */\n\n  AbstractPlugin._capabilities = null;\n  /**\n   * Determine if the plugin can be used in the current browser/OS.\n   * @method isSupported\n   * @return {Boolean} If the plugin can be initialized.\n   * @static\n   */\n\n  AbstractPlugin.isSupported = function () {\n    return true;\n  }; // public methods:\n\n  /**\n   * Pre-register a sound for preloading and setup. This is called by {{#crossLink \"Sound\"}}{{/crossLink}}.\n   * Note all plugins provide a <code>Loader</code> instance, which <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>\n   * can use to assist with preloading.\n   * @method register\n   * @param {String} loadItem An Object containing the source of the audio\n   * Note that not every plugin will manage this value.\n   * @return {Object} A result object, containing a \"tag\" for preloading purposes.\n   */\n\n\n  p.register = function (loadItem) {\n    var loader = this._loaders[loadItem.src];\n\n    if (loader && !loader.canceled) {\n      return this._loaders[loadItem.src];\n    } // already loading/loaded this, so don't load twice\n    // OJR potential issue that we won't be firing loaded event, might need to trigger if this is already loaded?\n\n\n    this._audioSources[loadItem.src] = true;\n    this._soundInstances[loadItem.src] = [];\n    loader = new this._loaderClass(loadItem);\n    loader.on(\"complete\", this._handlePreloadComplete, this);\n    this._loaders[loadItem.src] = loader;\n    return loader;\n  }; // note sound calls register before calling preload\n\n  /**\n   * Internally preload a sound.\n   * @method preload\n   * @param {Loader} loader The sound URI to load.\n   */\n\n\n  p.preload = function (loader) {\n    loader.on(\"error\", this._handlePreloadError, this);\n    loader.load();\n  };\n  /**\n   * Checks if preloading has started for a specific source. If the source is found, we can assume it is loading,\n   * or has already finished loading.\n   * @method isPreloadStarted\n   * @param {String} src The sound URI to check.\n   * @return {Boolean}\n   */\n\n\n  p.isPreloadStarted = function (src) {\n    return this._audioSources[src] != null;\n  };\n  /**\n   * Checks if preloading has finished for a specific source.\n   * @method isPreloadComplete\n   * @param {String} src The sound URI to load.\n   * @return {Boolean}\n   */\n\n\n  p.isPreloadComplete = function (src) {\n    return !(this._audioSources[src] == null || this._audioSources[src] == true);\n  };\n  /**\n   * Remove a sound added using {{#crossLink \"WebAudioPlugin/register\"}}{{/crossLink}}. Note this does not cancel a preload.\n   * @method removeSound\n   * @param {String} src The sound URI to unload.\n   */\n\n\n  p.removeSound = function (src) {\n    if (!this._soundInstances[src]) {\n      return;\n    }\n\n    for (var i = this._soundInstances[src].length; i--;) {\n      var item = this._soundInstances[src][i];\n      item.destroy();\n    }\n\n    delete this._soundInstances[src];\n    delete this._audioSources[src];\n\n    if (this._loaders[src]) {\n      this._loaders[src].destroy();\n    }\n\n    delete this._loaders[src];\n  };\n  /**\n   * Remove all sounds added using {{#crossLink \"WebAudioPlugin/register\"}}{{/crossLink}}. Note this does not cancel a preload.\n   * @method removeAllSounds\n   * @param {String} src The sound URI to unload.\n   */\n\n\n  p.removeAllSounds = function () {\n    for (var key in this._audioSources) {\n      this.removeSound(key);\n    }\n  };\n  /**\n   * Create a sound instance. If the sound has not been preloaded, it is internally preloaded here.\n   * @method create\n   * @param {String} src The sound source to use.\n   * @param {Number} startTime Audio sprite property used to apply an offset, in milliseconds.\n   * @param {Number} duration Audio sprite property used to set the time the clip plays for, in milliseconds.\n   * @return {AbstractSoundInstance} A sound instance for playback and control.\n   */\n\n\n  p.create = function (src, startTime, duration) {\n    if (!this.isPreloadStarted(src)) {\n      this.preload(this.register(src));\n    }\n\n    var si = new this._soundInstanceClass(src, startTime, duration, this._audioSources[src]);\n\n    if (this._soundInstances[src]) {\n      this._soundInstances[src].push(si);\n    } // Plugins that don't have a setVolume should implement a setMasterVolune/setMasterMute\n    // So we have to check that here.\n\n\n    si.setMasterVolume && si.setMasterVolume(createjs.Sound.volume);\n    si.setMasterMute && si.setMasterMute(createjs.Sound.muted);\n    return si;\n  }; // if a plugin does not support volume and mute, it should set these to null\n\n  /**\n   * Set the master volume of the plugin, which affects all SoundInstances.\n   * @method setVolume\n   * @param {Number} value The volume to set, between 0 and 1.\n   * @return {Boolean} If the plugin processes the setVolume call (true). The Sound class will affect all the\n   * instances manually otherwise.\n   */\n\n\n  p.setVolume = function (value) {\n    this._volume = value;\n\n    this._updateVolume();\n\n    return true;\n  };\n  /**\n   * Get the master volume of the plugin, which affects all SoundInstances.\n   * @method getVolume\n   * @return {Number} The volume level, between 0 and 1.\n   */\n\n\n  p.getVolume = function () {\n    return this._volume;\n  };\n  /**\n   * Mute all sounds via the plugin.\n   * @method setMute\n   * @param {Boolean} value If all sound should be muted or not. Note that plugin-level muting just looks up\n   * the mute value of Sound {{#crossLink \"Sound/muted:property\"}}{{/crossLink}}, so this property is not used here.\n   * @return {Boolean} If the mute call succeeds.\n   */\n\n\n  p.setMute = function (value) {\n    this._updateVolume();\n\n    return true;\n  }; // plugins should overwrite this method\n\n\n  p.toString = function () {\n    return \"[AbstractPlugin]\";\n  }; // private methods:\n\n  /**\n   * Handles internal preload completion.\n   * @method _handlePreloadComplete\n   * @param event\n   * @protected\n   */\n\n\n  p._handlePreloadComplete = function (event) {\n    var src = event.target.getItem().src;\n    this._audioSources[src] = event.result;\n\n    if (!this._soundInstances[src]) {\n      return;\n    }\n\n    for (var i = 0, l = this._soundInstances[src].length; i < l; i++) {\n      var item = this._soundInstances[src][i];\n      item.playbackResource = this._audioSources[src]; // ToDo consider adding play call here if playstate == playfailed\n\n      this._soundInstances[src] = null;\n    }\n  };\n  /**\n   * Handles internal preload errors\n   * @method _handlePreloadError\n   * @param event\n   * @protected\n   */\n\n\n  p._handlePreloadError = function (event) {//delete(this._audioSources[src]);\n  };\n  /**\n   * Set the gain value for master audio. Should not be called externally.\n   * @method _updateVolume\n   * @protected\n   */\n\n\n  p._updateVolume = function () {// Plugin Specific code\n  };\n\n  createjs.AbstractPlugin = AbstractPlugin;\n})(); //##############################################################################\n// WebAudioLoader.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n  /**\n   * Loader provides a mechanism to preload Web Audio content via PreloadJS or internally. Instances are returned to\n   * the preloader, and the load method is called when the asset needs to be requested.\n   *\n   * @class WebAudioLoader\n   * @param {String} loadItem The item to be loaded\n   * @extends XHRRequest\n   * @protected\n   */\n\n  function Loader(loadItem) {\n    this.AbstractLoader_constructor(loadItem, true, createjs.Types.SOUND);\n  }\n\n  ;\n  var p = createjs.extend(Loader, createjs.AbstractLoader);\n  /**\n   * web audio context required for decoding audio\n   * @property context\n   * @type {AudioContext}\n   * @static\n   */\n\n  Loader.context = null; // public methods\n\n  p.toString = function () {\n    return \"[WebAudioLoader]\";\n  }; // private methods\n\n\n  p._createRequest = function () {\n    this._request = new createjs.XHRRequest(this._item, false);\n\n    this._request.setResponseType(\"arraybuffer\");\n  };\n\n  p._sendComplete = function (event) {\n    // OJR we leave this wrapped in Loader because we need to reference src and the handler only receives a single argument, the decodedAudio\n    Loader.context.decodeAudioData(this._rawResult, createjs.proxy(this._handleAudioDecoded, this), createjs.proxy(this._sendError, this));\n  };\n  /**\n  * The audio has been decoded.\n  * @method handleAudioDecoded\n  * @param decoded\n  * @protected\n  */\n\n\n  p._handleAudioDecoded = function (decodedAudio) {\n    this._result = decodedAudio;\n    this.AbstractLoader__sendComplete();\n  };\n\n  createjs.WebAudioLoader = createjs.promote(Loader, \"AbstractLoader\");\n})(); //##############################################################################\n// WebAudioSoundInstance.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n/**\n * WebAudioSoundInstance extends the base api of {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} and is used by\n * {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}.\n *\n * WebAudioSoundInstance exposes audioNodes for advanced users.\n *\n * @param {String} src The path to and file name of the sound.\n * @param {Number} startTime Audio sprite property used to apply an offset, in milliseconds.\n * @param {Number} duration Audio sprite property used to set the time the clip plays for, in milliseconds.\n * @param {Object} playbackResource Any resource needed by plugin to support audio playback.\n * @class WebAudioSoundInstance\n * @extends AbstractSoundInstance\n * @constructor\n */\n\n(function () {\n  \"use strict\";\n\n  function WebAudioSoundInstance(src, startTime, duration, playbackResource) {\n    this.AbstractSoundInstance_constructor(src, startTime, duration, playbackResource); // public properties\n\n    /**\n     * NOTE this is only intended for use by advanced users.\n     * <br />GainNode for controlling <code>WebAudioSoundInstance</code> volume. Connected to the {{#crossLink \"WebAudioSoundInstance/destinationNode:property\"}}{{/crossLink}}.\n     * @property gainNode\n     * @type {AudioGainNode}\n     * @since 0.4.0\n     *\n     */\n\n    this.gainNode = s.context.createGain();\n    /**\n     * NOTE this is only intended for use by advanced users.\n     * <br />A panNode allowing left and right audio channel panning only. Connected to WebAudioSoundInstance {{#crossLink \"WebAudioSoundInstance/gainNode:property\"}}{{/crossLink}}.\n     * @property panNode\n     * @type {AudioPannerNode}\n     * @since 0.4.0\n     */\n\n    this.panNode = s.context.createPanner();\n    this.panNode.panningModel = s._panningModel;\n    this.panNode.connect(this.gainNode);\n\n    this._updatePan();\n    /**\n     * NOTE this is only intended for use by advanced users.\n     * <br />sourceNode is the audio source. Connected to WebAudioSoundInstance {{#crossLink \"WebAudioSoundInstance/panNode:property\"}}{{/crossLink}}.\n     * @property sourceNode\n     * @type {AudioNode}\n     * @since 0.4.0\n     *\n     */\n\n\n    this.sourceNode = null; // private properties\n\n    /**\n     * Timeout that is created internally to handle sound playing to completion.\n     * Stored so we can remove it when stop, pause, or cleanup are called\n     * @property _soundCompleteTimeout\n     * @type {timeoutVariable}\n     * @default null\n     * @protected\n     * @since 0.4.0\n     */\n\n    this._soundCompleteTimeout = null;\n    /**\n     * NOTE this is only intended for use by very advanced users.\n     * _sourceNodeNext is the audio source for the next loop, inserted in a look ahead approach to allow for smooth\n     * looping. Connected to {{#crossLink \"WebAudioSoundInstance/gainNode:property\"}}{{/crossLink}}.\n     * @property _sourceNodeNext\n     * @type {AudioNode}\n     * @default null\n     * @protected\n     * @since 0.4.1\n     *\n     */\n\n    this._sourceNodeNext = null;\n    /**\n     * Time audio started playback, in seconds. Used to handle set position, get position, and resuming from paused.\n     * @property _playbackStartTime\n     * @type {Number}\n     * @default 0\n     * @protected\n     * @since 0.4.0\n     */\n\n    this._playbackStartTime = 0; // Proxies, make removing listeners easier.\n\n    this._endedHandler = createjs.proxy(this._handleSoundComplete, this);\n  }\n\n  ;\n  var p = createjs.extend(WebAudioSoundInstance, createjs.AbstractSoundInstance);\n  var s = WebAudioSoundInstance;\n  /**\n   * Note this is only intended for use by advanced users.\n   * <br />Audio context used to create nodes.  This is and needs to be the same context used by {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}.\n   \t * @property context\n   * @type {AudioContext}\n   * @static\n   * @since 0.6.0\n   */\n\n  s.context = null;\n  /**\n   * Note this is only intended for use by advanced users.\n   * <br />The scratch buffer that will be assigned to the buffer property of a source node on close.  \n   * This is and should be the same scratch buffer referenced by {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}.\n   \t * @property _scratchBuffer\n   * @type {AudioBufferSourceNode}\n   * @static\n   */\n\n  s._scratchBuffer = null;\n  /**\n   * Note this is only intended for use by advanced users.\n   * <br /> Audio node from WebAudioPlugin that sequences to <code>context.destination</code>\n   * @property destinationNode\n   * @type {AudioNode}\n   * @static\n   * @since 0.6.0\n   */\n\n  s.destinationNode = null;\n  /**\n   * Value to set panning model to equal power for WebAudioSoundInstance.  Can be \"equalpower\" or 0 depending on browser implementation.\n   * @property _panningModel\n   * @type {Number / String}\n   * @protected\n   * @static\n   * @since 0.6.0\n   */\n\n  s._panningModel = \"equalpower\"; // Public methods\n\n  p.destroy = function () {\n    this.AbstractSoundInstance_destroy();\n    this.panNode.disconnect(0);\n    this.panNode = null;\n    this.gainNode.disconnect(0);\n    this.gainNode = null;\n  };\n\n  p.toString = function () {\n    return \"[WebAudioSoundInstance]\";\n  }; // Private Methods\n\n\n  p._updatePan = function () {\n    this.panNode.setPosition(this._pan, 0, -0.5); // z need to be -0.5 otherwise the sound only plays in left, right, or center\n  };\n\n  p._removeLooping = function (value) {\n    this._sourceNodeNext = this._cleanUpAudioNode(this._sourceNodeNext);\n  };\n\n  p._addLooping = function (value) {\n    if (this.playState != createjs.Sound.PLAY_SUCCEEDED) {\n      return;\n    }\n\n    this._sourceNodeNext = this._createAndPlayAudioNode(this._playbackStartTime, 0);\n  };\n\n  p._setDurationFromSource = function () {\n    this._duration = this.playbackResource.duration * 1000;\n  };\n\n  p._handleCleanUp = function () {\n    if (this.sourceNode && this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n      this.sourceNode = this._cleanUpAudioNode(this.sourceNode);\n      this._sourceNodeNext = this._cleanUpAudioNode(this._sourceNodeNext);\n    }\n\n    if (this.gainNode.numberOfOutputs != 0) {\n      this.gainNode.disconnect(0);\n    } // OJR there appears to be a bug that this doesn't always work in webkit (Chrome and Safari). According to the documentation, this should work.\n\n\n    clearTimeout(this._soundCompleteTimeout);\n    this._playbackStartTime = 0; // This is used by _getPosition\n  };\n  /**\n   * Turn off and disconnect an audioNode, then set reference to null to release it for garbage collection\n   * @method _cleanUpAudioNode\n   * @param audioNode\n   * @return {audioNode}\n   * @protected\n   * @since 0.4.1\n   */\n\n\n  p._cleanUpAudioNode = function (audioNode) {\n    if (audioNode) {\n      audioNode.stop(0);\n      audioNode.disconnect(0); // necessary to prevent leak on iOS Safari 7-9. will throw in almost all other\n      // browser implementations.\n\n      if (createjs.BrowserDetect.isIOS) {\n        try {\n          audioNode.buffer = s._scratchBuffer;\n        } catch (e) {}\n      }\n\n      audioNode = null;\n    }\n\n    return audioNode;\n  };\n\n  p._handleSoundReady = function (event) {\n    this.gainNode.connect(s.destinationNode); // this line can cause a memory leak.  Nodes need to be disconnected from the audioDestination or any sequence that leads to it.\n\n    var dur = this._duration * 0.001,\n        pos = Math.min(Math.max(0, this._position) * 0.001, dur);\n    this.sourceNode = this._createAndPlayAudioNode(s.context.currentTime - dur, pos);\n    this._playbackStartTime = this.sourceNode.startTime - pos;\n    this._soundCompleteTimeout = setTimeout(this._endedHandler, (dur - pos) * 1000);\n\n    if (this._loop != 0) {\n      this._sourceNodeNext = this._createAndPlayAudioNode(this._playbackStartTime, 0);\n    }\n  };\n  /**\n   * Creates an audio node using the current src and context, connects it to the gain node, and starts playback.\n   * @method _createAndPlayAudioNode\n   * @param {Number} startTime The time to add this to the web audio context, in seconds.\n   * @param {Number} offset The amount of time into the src audio to start playback, in seconds.\n   * @return {audioNode}\n   * @protected\n   * @since 0.4.1\n   */\n\n\n  p._createAndPlayAudioNode = function (startTime, offset) {\n    var audioNode = s.context.createBufferSource();\n    audioNode.buffer = this.playbackResource;\n    audioNode.connect(this.panNode);\n    var dur = this._duration * 0.001;\n    audioNode.startTime = startTime + dur;\n    audioNode.start(audioNode.startTime, offset + this._startTime * 0.001, dur - offset);\n    return audioNode;\n  };\n\n  p._pause = function () {\n    this._position = (s.context.currentTime - this._playbackStartTime) * 1000; // * 1000 to give milliseconds, lets us restart at same point\n\n    this.sourceNode = this._cleanUpAudioNode(this.sourceNode);\n    this._sourceNodeNext = this._cleanUpAudioNode(this._sourceNodeNext);\n\n    if (this.gainNode.numberOfOutputs != 0) {\n      this.gainNode.disconnect(0);\n    }\n\n    clearTimeout(this._soundCompleteTimeout);\n  };\n\n  p._resume = function () {\n    this._handleSoundReady();\n  };\n  /*\n  p._handleStop = function () {\n  \t// web audio does not need to do anything extra\n  };\n  */\n\n\n  p._updateVolume = function () {\n    var newVolume = this._muted ? 0 : this._volume;\n\n    if (newVolume != this.gainNode.gain.value) {\n      this.gainNode.gain.value = newVolume;\n    }\n  };\n\n  p._calculateCurrentPosition = function () {\n    return (s.context.currentTime - this._playbackStartTime) * 1000; // pos in seconds * 1000 to give milliseconds\n  };\n\n  p._updatePosition = function () {\n    this.sourceNode = this._cleanUpAudioNode(this.sourceNode);\n    this._sourceNodeNext = this._cleanUpAudioNode(this._sourceNodeNext);\n    clearTimeout(this._soundCompleteTimeout);\n\n    if (!this._paused) {\n      this._handleSoundReady();\n    }\n  }; // OJR we are using a look ahead approach to ensure smooth looping.\n  // We add _sourceNodeNext to the audio context so that it starts playing even if this callback is delayed.\n  // This technique is described here:  http://www.html5rocks.com/en/tutorials/audio/scheduling/\n  // NOTE the cost of this is that our audio loop may not always match the loop event timing precisely.\n\n\n  p._handleLoop = function () {\n    this._cleanUpAudioNode(this.sourceNode);\n\n    this.sourceNode = this._sourceNodeNext;\n    this._playbackStartTime = this.sourceNode.startTime;\n    this._sourceNodeNext = this._createAndPlayAudioNode(this._playbackStartTime, 0);\n    this._soundCompleteTimeout = setTimeout(this._endedHandler, this._duration);\n  };\n\n  p._updateDuration = function () {\n    if (this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n      this._pause();\n\n      this._resume();\n    }\n  };\n\n  createjs.WebAudioSoundInstance = createjs.promote(WebAudioSoundInstance, \"AbstractSoundInstance\");\n})(); //##############################################################################\n// WebAudioPlugin.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n  /**\n   * Play sounds using Web Audio in the browser. The WebAudioPlugin is currently the default plugin, and will be used\n   * anywhere that it is supported. To change plugin priority, check out the Sound API\n   * {{#crossLink \"Sound/registerPlugins\"}}{{/crossLink}} method.\n  \t * <h4>Known Browser and OS issues for Web Audio</h4>\n   * <b>Firefox 25</b>\n   * <li>\n   *     mp3 audio files do not load properly on all windows machines, reported <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=929969\" target=\"_blank\">here</a>.\n   *     <br />For this reason it is recommended to pass another FireFox-supported type (i.e. ogg) as the default\n   *     extension, until this bug is resolved\n   * </li>\n   *\n   * <b>Webkit (Chrome and Safari)</b>\n   * <li>\n   *     AudioNode.disconnect does not always seem to work.  This can cause the file size to grow over time if you\n   * \t   are playing a lot of audio files.\n   * </li>\n   *\n   * <b>iOS 6 limitations</b>\n   * <ul>\n   *     <li>\n   *         Sound is initially muted and will only unmute through play being called inside a user initiated event\n   *         (touch/click). Please read the mobile playback notes in the the {{#crossLink \"Sound\"}}{{/crossLink}}\n   *         class for a full overview of the limitations, and how to get around them.\n   *     </li>\n   *\t   <li>\n   *\t       A bug exists that will distort un-cached audio when a video element is present in the DOM. You can avoid\n   *\t       this bug by ensuring the audio and video audio share the same sample rate.\n   *\t   </li>\n   * </ul>\n   * @class WebAudioPlugin\n   * @extends AbstractPlugin\n   * @constructor\n   * @since 0.4.0\n   */\n\n  function WebAudioPlugin() {\n    this.AbstractPlugin_constructor(); // Private Properties\n\n    /**\n     * Value to set panning model to equal power for WebAudioSoundInstance.  Can be \"equalpower\" or 0 depending on browser implementation.\n     * @property _panningModel\n     * @type {Number / String}\n     * @protected\n     */\n\n    this._panningModel = s._panningModel;\n    ;\n    /**\n     * The web audio context, which WebAudio uses to play audio. All nodes that interact with the WebAudioPlugin\n     * need to be created within this context.\n     * @property context\n     * @type {AudioContext}\n     */\n\n    this.context = s.context;\n    /**\n     * A DynamicsCompressorNode, which is used to improve sound quality and prevent audio distortion.\n     * It is connected to <code>context.destination</code>.\n     *\n     * Can be accessed by advanced users through createjs.Sound.activePlugin.dynamicsCompressorNode.\n     * @property dynamicsCompressorNode\n     * @type {AudioNode}\n     */\n\n    this.dynamicsCompressorNode = this.context.createDynamicsCompressor();\n    this.dynamicsCompressorNode.connect(this.context.destination);\n    /**\n     * A GainNode for controlling master volume. It is connected to {{#crossLink \"WebAudioPlugin/dynamicsCompressorNode:property\"}}{{/crossLink}}.\n     *\n     * Can be accessed by advanced users through createjs.Sound.activePlugin.gainNode.\n     * @property gainNode\n     * @type {AudioGainNode}\n     */\n\n    this.gainNode = this.context.createGain();\n    this.gainNode.connect(this.dynamicsCompressorNode);\n    createjs.WebAudioSoundInstance.destinationNode = this.gainNode;\n    this._capabilities = s._capabilities;\n    this._loaderClass = createjs.WebAudioLoader;\n    this._soundInstanceClass = createjs.WebAudioSoundInstance;\n\n    this._addPropsToClasses();\n  }\n\n  var p = createjs.extend(WebAudioPlugin, createjs.AbstractPlugin); // Static Properties\n\n  var s = WebAudioPlugin;\n  /**\n   * The capabilities of the plugin. This is generated via the {{#crossLink \"WebAudioPlugin/_generateCapabilities:method\"}}{{/crossLink}}\n   * method and is used internally.\n   * @property _capabilities\n   * @type {Object}\n   * @default null\n   * @private\n   * @static\n   */\n\n  s._capabilities = null;\n  /**\n   * Value to set panning model to equal power for WebAudioSoundInstance.  Can be \"equalpower\" or 0 depending on browser implementation.\n   * @property _panningModel\n   * @type {Number / String}\n   * @private\n   * @static\n   */\n\n  s._panningModel = \"equalpower\";\n  /**\n   * The web audio context, which WebAudio uses to play audio. All nodes that interact with the WebAudioPlugin\n   * need to be created within this context.\n   *\n   * Advanced users can set this to an existing context, but <b>must</b> do so before they call\n   * {{#crossLink \"Sound/registerPlugins\"}}{{/crossLink}} or {{#crossLink \"Sound/initializeDefaultPlugins\"}}{{/crossLink}}.\n   *\n   * @property context\n   * @type {AudioContext}\n   * @static\n   */\n\n  s.context = null;\n  /**\n   * The scratch buffer that will be assigned to the buffer property of a source node on close.\n   * Works around an iOS Safari bug: https://github.com/CreateJS/SoundJS/issues/102\n   *\n   * Advanced users can set this to an existing source node, but <b>must</b> do so before they call\n   * {{#crossLink \"Sound/registerPlugins\"}}{{/crossLink}} or {{#crossLink \"Sound/initializeDefaultPlugins\"}}{{/crossLink}}.\n   *\n   * @property _scratchBuffer\n   * @type {AudioBuffer}\n   * @private\n   * @static\n   */\n\n  s._scratchBuffer = null;\n  /**\n   * Indicated whether audio on iOS has been unlocked, which requires a touchend/mousedown event that plays an\n   * empty sound.\n   * @property _unlocked\n   * @type {boolean}\n   * @since 0.6.2\n   * @private\n   */\n\n  s._unlocked = false;\n  /**\n   * The default sample rate used when checking for iOS compatibility. See {{#crossLink \"WebAudioPlugin/_createAudioContext\"}}{{/crossLink}}.\n   * @property DEFAULT_SAMPLE_REATE\n   * @type {number}\n   * @default 44100\n   * @static\n   */\n\n  s.DEFAULT_SAMPLE_RATE = 44100; // Static Public Methods\n\n  /**\n   * Determine if the plugin can be used in the current browser/OS.\n   * @method isSupported\n   * @return {Boolean} If the plugin can be initialized.\n   * @static\n   */\n\n  s.isSupported = function () {\n    // check if this is some kind of mobile device, Web Audio works with local protocol under PhoneGap and it is unlikely someone is trying to run a local file\n    var isMobilePhoneGap = createjs.BrowserDetect.isIOS || createjs.BrowserDetect.isAndroid || createjs.BrowserDetect.isBlackberry; // OJR isMobile may be redundant with _isFileXHRSupported available.  Consider removing.\n\n    if (location.protocol == \"file:\" && !isMobilePhoneGap && !this._isFileXHRSupported()) {\n      return false;\n    } // Web Audio requires XHR, which is not usually available locally\n\n\n    s._generateCapabilities();\n\n    if (s.context == null) {\n      return false;\n    }\n\n    return true;\n  };\n  /**\n   * Plays an empty sound in the web audio context.  This is used to enable web audio on iOS devices, as they\n   * require the first sound to be played inside of a user initiated event (touch/click).  This is called when\n   * {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}} is initialized (by Sound {{#crossLink \"Sound/initializeDefaultPlugins\"}}{{/crossLink}}\n   * for example).\n   *\n   * <h4>Example</h4>\n   *\n   *     function handleTouch(event) {\n   *         createjs.WebAudioPlugin.playEmptySound();\n   *     }\n   *\n   * @method playEmptySound\n   * @static\n   * @since 0.4.1\n   */\n\n\n  s.playEmptySound = function () {\n    if (s.context == null) {\n      return;\n    }\n\n    var source = s.context.createBufferSource();\n    source.buffer = s._scratchBuffer;\n    source.connect(s.context.destination);\n    source.start(0, 0, 0);\n  }; // Static Private Methods\n\n  /**\n   * Determine if XHR is supported, which is necessary for web audio.\n   * @method _isFileXHRSupported\n   * @return {Boolean} If XHR is supported.\n   * @since 0.4.2\n   * @private\n   * @static\n   */\n\n\n  s._isFileXHRSupported = function () {\n    // it's much easier to detect when something goes wrong, so let's start optimistically\n    var supported = true;\n    var xhr = new XMLHttpRequest();\n\n    try {\n      xhr.open(\"GET\", \"WebAudioPluginTest.fail\", false); // loading non-existant file triggers 404 only if it could load (synchronous call)\n    } catch (error) {\n      // catch errors in cases where the onerror is passed by\n      supported = false;\n      return supported;\n    }\n\n    xhr.onerror = function () {\n      supported = false;\n    }; // cause irrelevant\n    // with security turned off, we can get empty success results, which is actually a failed read (status code 0?)\n\n\n    xhr.onload = function () {\n      supported = this.status == 404 || this.status == 200 || this.status == 0 && this.response != \"\";\n    };\n\n    try {\n      xhr.send();\n    } catch (error) {\n      // catch errors in cases where the onerror is passed by\n      supported = false;\n    }\n\n    return supported;\n  };\n  /**\n   * Determine the capabilities of the plugin. Used internally. Please see the Sound API {{#crossLink \"Sound/capabilities:property\"}}{{/crossLink}}\n   * method for an overview of plugin capabilities.\n   * @method _generateCapabilities\n   * @static\n   * @private\n   */\n\n\n  s._generateCapabilities = function () {\n    if (s._capabilities != null) {\n      return;\n    } // Web Audio can be in any formats supported by the audio element, from http://www.w3.org/TR/webaudio/#AudioContext-section\n\n\n    var t = document.createElement(\"audio\");\n\n    if (t.canPlayType == null) {\n      return null;\n    }\n\n    if (s.context == null) {\n      s.context = s._createAudioContext();\n\n      if (s.context == null) {\n        return null;\n      }\n    }\n\n    if (s._scratchBuffer == null) {\n      s._scratchBuffer = s.context.createBuffer(1, 1, 22050);\n    }\n\n    s._compatibilitySetUp(); // Listen for document level clicks to unlock WebAudio on iOS. See the _unlock method.\n\n\n    if (\"ontouchstart\" in window && s.context.state != \"running\") {\n      s._unlock(); // When played inside of a touch event, this will enable audio on iOS immediately.\n\n\n      document.addEventListener(\"mousedown\", s._unlock, true);\n      document.addEventListener(\"touchstart\", s._unlock, true);\n      document.addEventListener(\"touchend\", s._unlock, true);\n    }\n\n    s._capabilities = {\n      panning: true,\n      volume: true,\n      tracks: -1\n    }; // determine which extensions our browser supports for this plugin by iterating through Sound.SUPPORTED_EXTENSIONS\n\n    var supportedExtensions = createjs.Sound.SUPPORTED_EXTENSIONS;\n    var extensionMap = createjs.Sound.EXTENSION_MAP;\n\n    for (var i = 0, l = supportedExtensions.length; i < l; i++) {\n      var ext = supportedExtensions[i];\n      var playType = extensionMap[ext] || ext;\n      s._capabilities[ext] = t.canPlayType(\"audio/\" + ext) != \"no\" && t.canPlayType(\"audio/\" + ext) != \"\" || t.canPlayType(\"audio/\" + playType) != \"no\" && t.canPlayType(\"audio/\" + playType) != \"\";\n    } // OJR another way to do this might be canPlayType:\"m4a\", codex: mp4\n    // 0=no output, 1=mono, 2=stereo, 4=surround, 6=5.1 surround.\n    // See http://www.w3.org/TR/webaudio/#AudioChannelSplitter for more details on channels.\n\n\n    if (s.context.destination.numberOfChannels < 2) {\n      s._capabilities.panning = false;\n    }\n  };\n  /**\n   * Create an audio context for the sound.\n   *\n   * This method handles both vendor prefixes (specifically webkit support), as well as a case on iOS where\n   * audio played with a different sample rate may play garbled when first started. The default sample rate is\n   * 44,100, however it can be changed using the {{#crossLink \"WebAudioPlugin/DEFAULT_SAMPLE_RATE:property\"}}{{/crossLink}}.\n   * @method _createAudioContext\n   * @return {AudioContext | webkitAudioContext}\n   * @private\n   * @static\n   * @since 1.0.0\n   */\n\n\n  s._createAudioContext = function () {\n    // Slightly modified version of https://github.com/Jam3/ios-safe-audio-context\n    // Resolves issues with first-run contexts playing garbled on iOS.\n    var AudioCtor = window.AudioContext || window.webkitAudioContext;\n\n    if (AudioCtor == null) {\n      return null;\n    }\n\n    var context = new AudioCtor(); // Check if hack is necessary. Only occurs in iOS6+ devices\n    // and only when you first boot the iPhone, or play a audio/video\n    // with a different sample rate\n\n    if (/(iPhone|iPad)/i.test(navigator.userAgent) && context.sampleRate !== s.DEFAULT_SAMPLE_RATE) {\n      var buffer = context.createBuffer(1, 1, s.DEFAULT_SAMPLE_RATE),\n          dummy = context.createBufferSource();\n      dummy.buffer = buffer;\n      dummy.connect(context.destination);\n      dummy.start(0);\n      dummy.disconnect();\n      context.close(); // dispose old context\n\n      context = new AudioCtor();\n    }\n\n    return context;\n  };\n  /**\n   * Set up compatibility if only deprecated web audio calls are supported.\n   * See http://www.w3.org/TR/webaudio/#DeprecationNotes\n   * Needed so we can support new browsers that don't support deprecated calls (Firefox) as well as old browsers that\n   * don't support new calls.\n   *\n   * @method _compatibilitySetUp\n   * @static\n   * @private\n   * @since 0.4.2\n   */\n\n\n  s._compatibilitySetUp = function () {\n    s._panningModel = \"equalpower\"; //assume that if one new call is supported, they all are\n\n    if (s.context.createGain) {\n      return;\n    } // simple name change, functionality the same\n\n\n    s.context.createGain = s.context.createGainNode; // source node, add to prototype\n\n    var audioNode = s.context.createBufferSource();\n    audioNode.__proto__.start = audioNode.__proto__.noteGrainOn; // note that noteGrainOn requires all 3 parameters\n\n    audioNode.__proto__.stop = audioNode.__proto__.noteOff; // panningModel\n\n    s._panningModel = 0;\n  };\n  /**\n   * Try to unlock audio on iOS. This is triggered from either WebAudio plugin setup (which will work if inside of\n   * a `mousedown` or `touchend` event stack), or the first document touchend/mousedown event. If it fails (touchend\n   * will fail if the user presses for too long, indicating a scroll event instead of a click event.\n   *\n   * Note that earlier versions of iOS supported `touchstart` for this, but iOS9 removed this functionality. Adding\n   * a `touchstart` event to support older platforms may preclude a `mousedown` even from getting fired on iOS9, so we\n   * stick with `mousedown` and `touchend`.\n   * @method _unlock\n   * @since 0.6.2\n   * @private\n   */\n\n\n  s._unlock = function () {\n    if (s._unlocked) {\n      return;\n    }\n\n    s.playEmptySound();\n\n    if (s.context.state == \"running\") {\n      document.removeEventListener(\"mousedown\", s._unlock, true);\n      document.removeEventListener(\"touchend\", s._unlock, true);\n      document.removeEventListener(\"touchstart\", s._unlock, true);\n      s._unlocked = true;\n    }\n  }; // Public Methods\n\n\n  p.toString = function () {\n    return \"[WebAudioPlugin]\";\n  }; // Private Methods\n\n  /**\n   * Set up needed properties on supported classes WebAudioSoundInstance and WebAudioLoader.\n   * @method _addPropsToClasses\n   * @static\n   * @protected\n   * @since 0.6.0\n   */\n\n\n  p._addPropsToClasses = function () {\n    var c = this._soundInstanceClass;\n    c.context = this.context;\n    c._scratchBuffer = s._scratchBuffer;\n    c.destinationNode = this.gainNode;\n    c._panningModel = this._panningModel;\n    this._loaderClass.context = this.context;\n  };\n  /**\n   * Set the gain value for master audio. Should not be called externally.\n   * @method _updateVolume\n   * @protected\n   */\n\n\n  p._updateVolume = function () {\n    var newVolume = createjs.Sound._masterMute ? 0 : this._volume;\n\n    if (newVolume != this.gainNode.gain.value) {\n      this.gainNode.gain.value = newVolume;\n    }\n  };\n\n  createjs.WebAudioPlugin = createjs.promote(WebAudioPlugin, \"AbstractPlugin\");\n})(); //##############################################################################\n// HTMLAudioTagPool.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n  /**\n   * HTMLAudioTagPool is an object pool for HTMLAudio tag instances.\n   * @class HTMLAudioTagPool\n   * @param {String} src The source of the channel.\n   * @protected\n   */\n\n  function HTMLAudioTagPool() {\n    throw \"HTMLAudioTagPool cannot be instantiated\";\n  }\n\n  var s = HTMLAudioTagPool; // Static Properties\n\n  /**\n   * A hash lookup of each base audio tag, indexed by the audio source.\n   * @property _tags\n   * @type {{}}\n   * @static\n   * @private\n   */\n\n  s._tags = {};\n  /**\n   * An object pool for html audio tags\n   * @property _tagPool\n   * @type {TagPool}\n   * @static\n   * @private\n   */\n\n  s._tagPool = new TagPool();\n  /**\n   * A hash lookup of if a base audio tag is available, indexed by the audio source\n   * @property _tagsUsed\n   * @type {{}}\n   * @private\n   * @static\n   */\n\n  s._tagUsed = {}; // Static Methods\n\n  /**\n    * Get an audio tag with the given source.\n    * @method get\n    * @param {String} src The source file used by the audio tag.\n    * @static\n    */\n\n  s.get = function (src) {\n    var t = s._tags[src];\n\n    if (t == null) {\n      // create new base tag\n      t = s._tags[src] = s._tagPool.get();\n      t.src = src;\n    } else {\n      // get base or pool\n      if (s._tagUsed[src]) {\n        t = s._tagPool.get();\n        t.src = src;\n      } else {\n        s._tagUsed[src] = true;\n      }\n    }\n\n    return t;\n  };\n  /**\n   * Return an audio tag to the pool.\n   * @method set\n   * @param {String} src The source file used by the audio tag.\n   * @param {HTMLElement} tag Audio tag to set.\n   * @static\n   */\n\n\n  s.set = function (src, tag) {\n    // check if this is base, if yes set boolean if not return to pool\n    if (tag == s._tags[src]) {\n      s._tagUsed[src] = false;\n    } else {\n      s._tagPool.set(tag);\n    }\n  };\n  /**\n   * Delete stored tag reference and return them to pool. Note that if the tag reference does not exist, this will fail.\n   * @method remove\n   * @param {String} src The source for the tag\n   * @return {Boolean} If the TagPool was deleted.\n   * @static\n   */\n\n\n  s.remove = function (src) {\n    var tag = s._tags[src];\n\n    if (tag == null) {\n      return false;\n    }\n\n    s._tagPool.set(tag);\n\n    delete s._tags[src];\n    delete s._tagUsed[src];\n    return true;\n  };\n  /**\n   * Gets the duration of the src audio in milliseconds\n   * @method getDuration\n   * @param {String} src The source file used by the audio tag.\n   * @return {Number} Duration of src in milliseconds\n   * @static\n   */\n\n\n  s.getDuration = function (src) {\n    var t = s._tags[src];\n\n    if (t == null || !t.duration) {\n      return 0;\n    } // OJR duration is NaN if loading has not completed\n\n\n    return t.duration * 1000;\n  };\n\n  createjs.HTMLAudioTagPool = HTMLAudioTagPool; // ************************************************************************************************************\n\n  /**\n   * The TagPool is an object pool for HTMLAudio tag instances.\n   * #class TagPool\n   * @param {String} src The source of the channel.\n   * @protected\n   */\n\n  function TagPool(src) {\n    // Public Properties\n\n    /**\n     * A list of all available tags in the pool.\n     * #property tags\n     * @type {Array}\n     * @protected\n     */\n    this._tags = [];\n  }\n\n  ;\n  var p = TagPool.prototype;\n  p.constructor = TagPool; // Public Methods\n\n  /**\n   * Get an HTMLAudioElement for immediate playback. This takes it out of the pool.\n   * #method get\n   * @return {HTMLAudioElement} An HTML audio tag.\n   */\n\n  p.get = function () {\n    var tag;\n\n    if (this._tags.length == 0) {\n      tag = this._createTag();\n    } else {\n      tag = this._tags.pop();\n    }\n\n    if (tag.parentNode == null) {\n      document.body.appendChild(tag);\n    }\n\n    return tag;\n  };\n  /**\n   * Put an HTMLAudioElement back in the pool for use.\n   * #method set\n   * @param {HTMLAudioElement} tag HTML audio tag\n   */\n\n\n  p.set = function (tag) {\n    // OJR this first step seems unnecessary\n    var index = createjs.indexOf(this._tags, tag);\n\n    if (index == -1) {\n      this._tags.src = null;\n\n      this._tags.push(tag);\n    }\n  };\n\n  p.toString = function () {\n    return \"[TagPool]\";\n  }; // Private Methods\n\n  /**\n   * Create an HTML audio tag.\n   * #method _createTag\n   * @param {String} src The source file to set for the audio tag.\n   * @return {HTMLElement} Returns an HTML audio tag.\n   * @protected\n   */\n\n\n  p._createTag = function () {\n    var tag = document.createElement(\"audio\");\n    tag.autoplay = false;\n    tag.preload = \"none\"; //LM: Firefox fails when this the preload=\"none\" for other tags, but it needs to be \"none\" to ensure PreloadJS works.\n\n    return tag;\n  };\n})(); //##############################################################################\n// HTMLAudioSoundInstance.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n  /**\n   * HTMLAudioSoundInstance extends the base api of {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} and is used by\n   * {{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}.\n   *\n   * @param {String} src The path to and file name of the sound.\n   * @param {Number} startTime Audio sprite property used to apply an offset, in milliseconds.\n   * @param {Number} duration Audio sprite property used to set the time the clip plays for, in milliseconds.\n   * @param {Object} playbackResource Any resource needed by plugin to support audio playback.\n   * @class HTMLAudioSoundInstance\n   * @extends AbstractSoundInstance\n   * @constructor\n   */\n\n  function HTMLAudioSoundInstance(src, startTime, duration, playbackResource) {\n    this.AbstractSoundInstance_constructor(src, startTime, duration, playbackResource); // Private Properties\n\n    this._audioSpriteStopTime = null;\n    this._delayTimeoutId = null; // Proxies, make removing listeners easier.\n\n    this._endedHandler = createjs.proxy(this._handleSoundComplete, this);\n    this._readyHandler = createjs.proxy(this._handleTagReady, this);\n    this._stalledHandler = createjs.proxy(this._playFailed, this);\n    this._audioSpriteEndHandler = createjs.proxy(this._handleAudioSpriteLoop, this);\n    this._loopHandler = createjs.proxy(this._handleSoundComplete, this);\n\n    if (duration) {\n      this._audioSpriteStopTime = (startTime + duration) * 0.001;\n    } else {\n      this._duration = createjs.HTMLAudioTagPool.getDuration(this.src);\n    }\n  }\n\n  var p = createjs.extend(HTMLAudioSoundInstance, createjs.AbstractSoundInstance); // Public Methods\n\n  /**\n   * Called by {{#crossLink \"Sound\"}}{{/crossLink}} when plugin does not handle master volume.\n   * undoc'd because it is not meant to be used outside of Sound\n   * #method setMasterVolume\n   * @param value\n   */\n\n  p.setMasterVolume = function (value) {\n    this._updateVolume();\n  };\n  /**\n   * Called by {{#crossLink \"Sound\"}}{{/crossLink}} when plugin does not handle master mute.\n   * undoc'd because it is not meant to be used outside of Sound\n   * #method setMasterMute\n   * @param value\n   */\n\n\n  p.setMasterMute = function (isMuted) {\n    this._updateVolume();\n  };\n\n  p.toString = function () {\n    return \"[HTMLAudioSoundInstance]\";\n  }; //Private Methods\n\n\n  p._removeLooping = function () {\n    if (this._playbackResource == null) {\n      return;\n    }\n\n    this._playbackResource.loop = false;\n\n    this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n  };\n\n  p._addLooping = function () {\n    if (this._playbackResource == null || this._audioSpriteStopTime) {\n      return;\n    }\n\n    this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n\n    this._playbackResource.loop = true;\n  };\n\n  p._handleCleanUp = function () {\n    var tag = this._playbackResource;\n\n    if (tag != null) {\n      tag.pause();\n      tag.loop = false;\n      tag.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED, this._endedHandler, false);\n      tag.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_READY, this._readyHandler, false);\n      tag.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_STALLED, this._stalledHandler, false);\n      tag.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n      tag.removeEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE, this._audioSpriteEndHandler, false);\n\n      try {\n        tag.currentTime = this._startTime;\n      } catch (e) {} // Reset Position\n\n\n      createjs.HTMLAudioTagPool.set(this.src, tag);\n      this._playbackResource = null;\n    }\n  };\n\n  p._beginPlaying = function (playProps) {\n    this._playbackResource = createjs.HTMLAudioTagPool.get(this.src);\n    return this.AbstractSoundInstance__beginPlaying(playProps);\n  };\n\n  p._handleSoundReady = function (event) {\n    if (this._playbackResource.readyState !== 4) {\n      var tag = this._playbackResource;\n      tag.addEventListener(createjs.HTMLAudioPlugin._AUDIO_READY, this._readyHandler, false);\n      tag.addEventListener(createjs.HTMLAudioPlugin._AUDIO_STALLED, this._stalledHandler, false);\n      tag.preload = \"auto\"; // This is necessary for Firefox, as it won't ever \"load\" until this is set.\n\n      tag.load();\n      return;\n    }\n\n    this._updateVolume();\n\n    this._playbackResource.currentTime = (this._startTime + this._position) * 0.001;\n\n    if (this._audioSpriteStopTime) {\n      this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE, this._audioSpriteEndHandler, false);\n    } else {\n      this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED, this._endedHandler, false);\n\n      if (this._loop != 0) {\n        this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n\n        this._playbackResource.loop = true;\n      }\n    }\n\n    this._playbackResource.play();\n  };\n  /**\n   * Used to handle when a tag is not ready for immediate playback when it is returned from the HTMLAudioTagPool.\n   * @method _handleTagReady\n   * @param event\n   * @protected\n   */\n\n\n  p._handleTagReady = function (event) {\n    this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_READY, this._readyHandler, false);\n\n    this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_STALLED, this._stalledHandler, false);\n\n    this._handleSoundReady();\n  };\n\n  p._pause = function () {\n    this._playbackResource.pause();\n  };\n\n  p._resume = function () {\n    this._playbackResource.play();\n  };\n\n  p._updateVolume = function () {\n    if (this._playbackResource != null) {\n      var newVolume = this._muted || createjs.Sound._masterMute ? 0 : this._volume * createjs.Sound._masterVolume;\n\n      if (newVolume != this._playbackResource.volume) {\n        this._playbackResource.volume = newVolume;\n      }\n    }\n  };\n\n  p._calculateCurrentPosition = function () {\n    return this._playbackResource.currentTime * 1000 - this._startTime;\n  };\n\n  p._updatePosition = function () {\n    this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n\n    this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._handleSetPositionSeek, false);\n\n    try {\n      this._playbackResource.currentTime = (this._position + this._startTime) * 0.001;\n    } catch (error) {\n      // Out of range\n      this._handleSetPositionSeek(null);\n    }\n  };\n  /**\n   * Used to enable setting position, as we need to wait for that seek to be done before we add back our loop handling seek listener\n   * @method _handleSetPositionSeek\n   * @param event\n   * @protected\n   */\n\n\n  p._handleSetPositionSeek = function (event) {\n    if (this._playbackResource == null) {\n      return;\n    }\n\n    this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._handleSetPositionSeek, false);\n\n    this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n  };\n  /**\n   * Timer used to loop audio sprites.\n   * NOTE because of the inaccuracies in the timeupdate event (15 - 250ms) and in setting the tag to the desired timed\n   * (up to 300ms), it is strongly recommended not to loop audio sprites with HTML Audio if smooth looping is desired\n   *\n   * @method _handleAudioSpriteLoop\n   * @param event\n   * @private\n   */\n\n\n  p._handleAudioSpriteLoop = function (event) {\n    if (this._playbackResource.currentTime <= this._audioSpriteStopTime) {\n      return;\n    }\n\n    this._playbackResource.pause();\n\n    if (this._loop == 0) {\n      this._handleSoundComplete(null);\n    } else {\n      this._position = 0;\n      this._loop--;\n      this._playbackResource.currentTime = this._startTime * 0.001;\n\n      if (!this._paused) {\n        this._playbackResource.play();\n      }\n\n      this._sendEvent(\"loop\");\n    }\n  }; // NOTE with this approach audio will loop as reliably as the browser allows\n  // but we could end up sending the loop event after next loop playback begins\n\n\n  p._handleLoop = function (event) {\n    if (this._loop == 0) {\n      this._playbackResource.loop = false;\n\n      this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n    }\n  };\n\n  p._updateStartTime = function () {\n    this._audioSpriteStopTime = (this._startTime + this._duration) * 0.001;\n\n    if (this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n      this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED, this._endedHandler, false);\n\n      this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE, this._audioSpriteEndHandler, false);\n    }\n  };\n\n  p._updateDuration = function () {\n    this._audioSpriteStopTime = (this._startTime + this._duration) * 0.001;\n\n    if (this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n      this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED, this._endedHandler, false);\n\n      this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE, this._audioSpriteEndHandler, false);\n    }\n  };\n\n  p._setDurationFromSource = function () {\n    this._duration = createjs.HTMLAudioTagPool.getDuration(this.src);\n    this._playbackResource = null;\n  };\n\n  createjs.HTMLAudioSoundInstance = createjs.promote(HTMLAudioSoundInstance, \"AbstractSoundInstance\");\n})(); //##############################################################################\n// HTMLAudioPlugin.js\n//##############################################################################\n\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n  /**\n   * Play sounds using HTML &lt;audio&gt; tags in the browser. This plugin is the second priority plugin installed\n   * by default, after the {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}.  For older browsers that do not support html\n   * audio, include and install the {{#crossLink \"FlashAudioPlugin\"}}{{/crossLink}}.\n   *\n   * <h4>Known Browser and OS issues for HTML Audio</h4>\n   * <b>All browsers</b><br />\n   * Testing has shown in all browsers there is a limit to how many audio tag instances you are allowed.  If you exceed\n   * this limit, you can expect to see unpredictable results. Please use {{#crossLink \"Sound.MAX_INSTANCES\"}}{{/crossLink}} as\n   * a guide to how many total audio tags you can safely use in all browsers.  This issue is primarily limited to IE9.\n   *\n      * <b>IE html limitations</b><br />\n      * <ul><li>There is a delay in applying volume changes to tags that occurs once playback is started. So if you have\n      * muted all sounds, they will all play during this delay until the mute applies internally. This happens regardless of\n      * when or how you apply the volume change, as the tag seems to need to play to apply it.</li>\n      * <li>MP3 encoding will not always work for audio tags if it's not default.  We've found default encoding with\n      * 64kbps works.</li>\n   * <li>Occasionally very short samples will get cut off.</li>\n   * <li>There is a limit to how many audio tags you can load or play at once, which appears to be determined by\n   * hardware and browser settings.  See {{#crossLink \"HTMLAudioPlugin.MAX_INSTANCES\"}}{{/crossLink}} for a safe estimate.\n   * Note that audio sprites can be used as a solution to this issue.</li></ul>\n   *\n   * <b>Safari limitations</b><br />\n   * <ul><li>Safari requires Quicktime to be installed for audio playback.</li></ul>\n   *\n   * <b>iOS 6 limitations</b><br />\n   * <ul><li>can only have one &lt;audio&gt; tag</li>\n   * \t\t<li>can not preload or autoplay the audio</li>\n   * \t\t<li>can not cache the audio</li>\n   * \t\t<li>can not play the audio except inside a user initiated event.</li>\n   *\t\t<li>Note it is recommended to use {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}} for iOS (6+)</li>\n   * \t\t<li>audio sprites can be used to mitigate some of these issues and are strongly recommended on iOS</li>\n   * </ul>\n   *\n   * <b>Android Native Browser limitations</b><br />\n   * <ul><li>We have no control over audio volume. Only the user can set volume on their device.</li>\n   *      <li>We can only play audio inside a user event (touch/click).  This currently means you cannot loop sound or use a delay.</li></ul>\n   * <b> Android Chrome 26.0.1410.58 specific limitations</b><br />\n   * <ul> <li>Can only play 1 sound at a time.</li>\n   *      <li>Sound is not cached.</li>\n   *      <li>Sound can only be loaded in a user initiated touch/click event.</li>\n   *      <li>There is a delay before a sound is played, presumably while the src is loaded.</li>\n   * </ul>\n   *\n   * See {{#crossLink \"Sound\"}}{{/crossLink}} for general notes on known issues.\n   *\n   * @class HTMLAudioPlugin\n   * @extends AbstractPlugin\n   * @constructor\n   */\n\n  function HTMLAudioPlugin() {\n    this.AbstractPlugin_constructor(); // Public Properties\n\n    this._capabilities = s._capabilities;\n    this._loaderClass = createjs.SoundLoader;\n    this._soundInstanceClass = createjs.HTMLAudioSoundInstance;\n  }\n\n  var p = createjs.extend(HTMLAudioPlugin, createjs.AbstractPlugin);\n  var s = HTMLAudioPlugin; // Static Properties\n\n  /**\n   * The maximum number of instances that can be loaded or played. This is a browser limitation, primarily limited to IE9.\n   * The actual number varies from browser to browser (and is largely hardware dependant), but this is a safe estimate.\n   * Audio sprites work around this limitation.\n   * @property MAX_INSTANCES\n   * @type {Number}\n   * @default 30\n   * @static\n   */\n\n  s.MAX_INSTANCES = 30;\n  /**\n   * Event constant for the \"canPlayThrough\" event for cleaner code.\n   * @property _AUDIO_READY\n   * @type {String}\n   * @default canplaythrough\n   * @static\n   * @private\n   */\n\n  s._AUDIO_READY = \"canplaythrough\";\n  /**\n   * Event constant for the \"ended\" event for cleaner code.\n   * @property _AUDIO_ENDED\n   * @type {String}\n   * @default ended\n   * @static\n   * @private\n   */\n\n  s._AUDIO_ENDED = \"ended\";\n  /**\n   * Event constant for the \"seeked\" event for cleaner code.  We utilize this event for maintaining loop events.\n   * @property _AUDIO_SEEKED\n   * @type {String}\n   * @default seeked\n   * @static\n   * @private\n   */\n\n  s._AUDIO_SEEKED = \"seeked\";\n  /**\n   * Event constant for the \"stalled\" event for cleaner code.\n   * @property _AUDIO_STALLED\n   * @type {String}\n   * @default stalled\n   * @static\n   * @private\n   */\n\n  s._AUDIO_STALLED = \"stalled\";\n  /**\n   * Event constant for the \"timeupdate\" event for cleaner code.  Utilized for looping audio sprites.\n   * This event callsback ever 15 to 250ms and can be dropped by the browser for performance.\n   * @property _TIME_UPDATE\n   * @type {String}\n   * @default timeupdate\n   * @static\n   * @private\n   */\n\n  s._TIME_UPDATE = \"timeupdate\";\n  /**\n   * The capabilities of the plugin. This is generated via the {{#crossLink \"HTMLAudioPlugin/_generateCapabilities\"}}{{/crossLink}}\n   * method. Please see the Sound {{#crossLink \"Sound/capabilities:property\"}}{{/crossLink}} method for an overview of all\n   * of the available properties.\n   * @property _capabilities\n   * @type {Object}\n   * @private\n   * @static\n   */\n\n  s._capabilities = null; // Static Methods\n\n  /**\n   * Determine if the plugin can be used in the current browser/OS. Note that HTML audio is available in most modern\n   * browsers, but is disabled in iOS because of its limitations.\n   * @method isSupported\n   * @return {Boolean} If the plugin can be initialized.\n   * @static\n   */\n\n  s.isSupported = function () {\n    s._generateCapabilities();\n\n    return s._capabilities != null;\n  };\n  /**\n   * Determine the capabilities of the plugin. Used internally. Please see the Sound API {{#crossLink \"Sound/capabilities:property\"}}{{/crossLink}}\n   * method for an overview of plugin capabilities.\n   * @method _generateCapabilities\n   * @static\n   * @private\n   */\n\n\n  s._generateCapabilities = function () {\n    if (s._capabilities != null) {\n      return;\n    }\n\n    var t = document.createElement(\"audio\");\n\n    if (t.canPlayType == null) {\n      return null;\n    }\n\n    s._capabilities = {\n      panning: false,\n      volume: true,\n      tracks: -1\n    }; // determine which extensions our browser supports for this plugin by iterating through Sound.SUPPORTED_EXTENSIONS\n\n    var supportedExtensions = createjs.Sound.SUPPORTED_EXTENSIONS;\n    var extensionMap = createjs.Sound.EXTENSION_MAP;\n\n    for (var i = 0, l = supportedExtensions.length; i < l; i++) {\n      var ext = supportedExtensions[i];\n      var playType = extensionMap[ext] || ext;\n      s._capabilities[ext] = t.canPlayType(\"audio/\" + ext) != \"no\" && t.canPlayType(\"audio/\" + ext) != \"\" || t.canPlayType(\"audio/\" + playType) != \"no\" && t.canPlayType(\"audio/\" + playType) != \"\";\n    } // OJR another way to do this might be canPlayType:\"m4a\", codex: mp4\n\n  }; // public methods\n\n\n  p.register = function (loadItem) {\n    var tag = createjs.HTMLAudioTagPool.get(loadItem.src);\n    var loader = this.AbstractPlugin_register(loadItem);\n    loader.setTag(tag);\n    return loader;\n  };\n\n  p.removeSound = function (src) {\n    this.AbstractPlugin_removeSound(src);\n    createjs.HTMLAudioTagPool.remove(src);\n  };\n\n  p.create = function (src, startTime, duration) {\n    var si = this.AbstractPlugin_create(src, startTime, duration);\n    si.playbackResource = null;\n    return si;\n  };\n\n  p.toString = function () {\n    return \"[HTMLAudioPlugin]\";\n  }; // plugin does not support these\n\n\n  p.setVolume = p.getVolume = p.setMute = null;\n  createjs.HTMLAudioPlugin = createjs.promote(HTMLAudioPlugin, \"AbstractPlugin\");\n})();","map":{"version":3,"sources":["/home/luong/kobuki_web/node_modules/latest-createjs/lib/soundjs/soundjs.js"],"names":["window","createjs","s","SoundJS","version","buildDate","extend","subclass","superclass","o","constructor","prototype","promote","prefix","subP","supP","Object","getPrototypeOf","__proto__","n","hasOwnProperty","deprecate","fallbackMethod","name","msg","console","warn","log","apply","arguments","indexOf","array","searchElement","i","l","length","proxy","method","scope","aArgs","Array","slice","call","concat","BrowserDetect","agent","navigator","userAgent","isWindowPhone","isFirefox","isOpera","opera","isChrome","isIOS","isAndroid","isBlackberry","EventDispatcher","_listeners","_captureListeners","p","initialize","target","addEventListener","on","removeEventListener","off","removeAllEventListeners","hasEventListener","dispatchEvent","_dispatchEvent","willTrigger","type","listener","useCapture","listeners","arr","push","once","data","handleEvent","evt","remove","splice","eventObj","bubbles","cancelable","Event","clone","e","parent","top","list","propagationStopped","defaultPrevented","captureListeners","toString","eventPhase","currentTarget","removed","immediatePropagationStopped","timeStamp","Date","getTime","preventDefault","stopPropagation","stopImmediatePropagation","set","props","ErrorEvent","title","message","Event_constructor","ProgressEvent","loaded","total","progress","LoadItem","src","id","maintainOrder","callback","Methods","GET","values","headers","withCredentials","mimeType","crossOrigin","loadTimeout","LOAD_TIMEOUT_DEFAULT","create","value","item","Error","POST","BINARY","CSS","FONT","FONTCSS","IMAGE","JAVASCRIPT","JSON","JSONP","MANIFEST","SOUND","VIDEO","SPRITESHEET","SVG","TEXT","XML","Types","a","el","svg","object","image","img","style","link","script","audio","video","text","document","createTextNode","createElement","Elements","container","appendToHead","getHead","appendChild","appendToBody","visibility","position","width","height","overflow","transform","msTransform","webkitTransform","oTransform","getBody","head","getElementsByTagName","body","removeChild","isImageTag","HTMLImageElement","isAudioTag","HTMLAudioElement","isVideoTag","HTMLVideoElement","DomUtils","isBinary","isText","getTypeByExtension","extension","toLowerCase","RequestUtils","ABSOLUTE_PATT","RELATIVE_PATT","EXTENSION_PATT","parseURI","path","info","absolute","relative","protocol","hostname","port","pathname","search","hash","host","parser","href","queryIndex","substr","match","test","formatQueryString","query","params","escape","join","buildURI","idx","q","split","isCrossDomain","location","crossdomain","isLocal","URLUtils","AbstractLoader","loadItem","preferXHR","EventDispatcher_constructor","canceled","resultFormatter","_item","_preferXHR","_result","_rawResult","_loadedItems","_tagSrcAttribute","_tag","defineProperties","get","getItem","getResult","raw","getTag","setTag","tag","load","_createRequest","_request","loader","cancel","destroy","_loadItems","getLoadedItems","TagRequest","_createTag","XHRRequest","_sendLoadStart","_isCanceled","_sendProgress","event","isNaN","Infinity","_sendComplete","rawResult","result","_sendError","_response","Function","_resultFormatSuccess","_resultFormatFailed","toUpperCase","AbstractMediaLoader","AbstractLoader_constructor","_formatResult","_updateXHR","preload","AbstractLoader_load","MediaTagRequest","setResponseType","_loadedHandler","onstalled","URL","webkitURL","createObjectURL","AbstractRequest","srcAttribute","AbstractRequest_constructor","_handleTagComplete","_addedToDOM","onload","onreadystatechange","_handleReadyStateChange","onerror","_handleError","_loadTimeout","setTimeout","_handleTimeout","parentNode","_clean","AbstractRequest_destroy","clearTimeout","readyState","_handleStalled","sc","_stalledCallback","pc","_handleProgress","TagRequest_load","newEvent","_progressCallback","TagRequest__clean","_xhrLevel","_rawResponse","_canceled","_handleLoadStartProxy","_handleLoadStart","_handleProgressProxy","_handleAbortProxy","_handleAbort","_handleErrorProxy","_handleTimeoutProxy","_handleLoadProxy","_handleLoad","_handleReadyStateChangeProxy","_createXHR","ACTIVEX_VERSIONS","abort","onloadstart","onprogress","onabort","ontimeout","send","error","_responseType","responseType","getAllResponseHeaders","getResponseHeader","header","_checkError","_getResponse","Blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","builder","append","getBlob","status","parseInt","response","responseText","responseXML","req","XMLHttpRequest","undefined","XDomainRequest","axVersion","ActiveXObject","overrideMimeType","open","origin","setRequestHeader","SoundLoader","AbstractMediaLoader_constructor","canLoadItem","autoplay","PlayPropsConfig","interrupt","delay","offset","loop","volume","pan","startTime","duration","Sound","INTERRUPT_ANY","INTERRUPT_EARLY","INTERRUPT_LATE","INTERRUPT_NONE","PLAY_INITED","PLAY_SUCCEEDED","PLAY_INTERRUPTED","PLAY_FINISHED","PLAY_FAILED","SUPPORTED_EXTENSIONS","EXTENSION_MAP","m4a","FILE_PATTERN","defaultInterruptBehavior","alternateExtensions","activePlugin","_masterVolume","_getMasterVolume","getVolume","_setMasterVolume","Number","Math","max","min","setVolume","instances","_instances","setMasterVolume","_masterMute","_getMute","getMute","_setMute","setMute","setMasterMute","_getCapabilities","_capabilities","getCapabilities","muted","capabilities","_pluginsRegistered","_lastID","_idHash","_preloadHash","_defaultPlayPropsHash","getPreloadHandlers","initLoad","types","extensions","_handleLoadComplete","sprite","_handleLoadError","_registerPlugin","plugin","isSupported","registerPlugins","plugins","initializeDefaultPlugins","WebAudioPlugin","HTMLAudioPlugin","isReady","_registerSound","details","_parseSrc","_parsePath","numChannels","channels","audioSprite","sp","defaultPlayProps","register","SoundChannel","maxPerChannel","registerSound","basePath","registerSounds","sounds","returnValues","manifest","removeSound","_getSrcById","prop","removeSrc","removeSounds","removeAllSounds","removeAll","loadComplete","ext","c","replace","ret","lastIndexOf","play","playProps","instance","createInstance","ok","_playInstance","_playFailed","DefaultSoundInstance","applyPlayProps","uniqueId","stop","setDefaultPlayProps","getDefaultPlayProps","_beginPlaying","delayTimeoutId","add","index","_playFinished","init","channel","_removeAll","_add","_remove","maxDefault","_get","_getSlot","replacement","playState","_interrupt","AbstractSoundInstance","playbackResource","_volume","defineProperty","_getVolume","_setVolume","_pan","_getPan","_setPan","_startTime","_getStartTime","_setStartTime","_duration","_getDuration","_setDuration","_playbackResource","_getPlaybackResource","_setPlaybackResource","_position","_getPosition","_setPosition","_loop","_getLoop","_setLoop","_muted","_getMuted","_setMuted","_paused","_getPaused","_setPaused","_cleanUp","_handleStop","_pause","_resume","_updateVolume","_updatePan","_calculateCurrentPosition","_updatePosition","_updateStartTime","_updateDuration","_setDurationFromSource","_removeLooping","_addLooping","_sendEvent","_handleCleanUp","_handleSoundReady","_handleSoundComplete","_handleLoop","AbstractPlugin","_loaders","_audioSources","_soundInstances","_loaderClass","_soundInstanceClass","_handlePreloadComplete","_handlePreloadError","isPreloadStarted","isPreloadComplete","key","si","Loader","context","decodeAudioData","_handleAudioDecoded","decodedAudio","AbstractLoader__sendComplete","WebAudioLoader","WebAudioSoundInstance","AbstractSoundInstance_constructor","gainNode","createGain","panNode","createPanner","panningModel","_panningModel","connect","sourceNode","_soundCompleteTimeout","_sourceNodeNext","_playbackStartTime","_endedHandler","_scratchBuffer","destinationNode","AbstractSoundInstance_destroy","disconnect","setPosition","_cleanUpAudioNode","_createAndPlayAudioNode","numberOfOutputs","audioNode","buffer","dur","pos","currentTime","createBufferSource","start","newVolume","gain","AbstractPlugin_constructor","dynamicsCompressorNode","createDynamicsCompressor","destination","_addPropsToClasses","_unlocked","DEFAULT_SAMPLE_RATE","isMobilePhoneGap","_isFileXHRSupported","_generateCapabilities","playEmptySound","source","supported","xhr","t","canPlayType","_createAudioContext","createBuffer","_compatibilitySetUp","state","_unlock","panning","tracks","supportedExtensions","extensionMap","playType","numberOfChannels","AudioCtor","AudioContext","webkitAudioContext","sampleRate","dummy","close","createGainNode","noteGrainOn","noteOff","HTMLAudioTagPool","_tags","_tagPool","TagPool","_tagUsed","getDuration","pop","HTMLAudioSoundInstance","_audioSpriteStopTime","_delayTimeoutId","_readyHandler","_handleTagReady","_stalledHandler","_audioSpriteEndHandler","_handleAudioSpriteLoop","_loopHandler","isMuted","_AUDIO_SEEKED","pause","_AUDIO_ENDED","_AUDIO_READY","_AUDIO_STALLED","_TIME_UPDATE","AbstractSoundInstance__beginPlaying","_handleSetPositionSeek","MAX_INSTANCES","AbstractPlugin_register","AbstractPlugin_removeSound","AbstractPlugin_create"],"mappings":"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","sourcesContent":["/*!\n* SoundJS\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2010 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n\n//##############################################################################\n// version.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\n\t/**\n\t * Static class holding library specific information such as the version and buildDate of the library.\n\t * The SoundJS class has been renamed {{#crossLink \"Sound\"}}{{/crossLink}}.  Please see {{#crossLink \"Sound\"}}{{/crossLink}}\n\t * for information on using sound.\n\t * @class SoundJS\n\t **/\n\tvar s = createjs.SoundJS = createjs.SoundJS || {};\n\n\t/**\n\t * The version string for this release.\n\t * @property version\n\t * @type String\n\t * @static\n\t **/\n\ts.version = /*=version*/\"1.0.0\"; // injected by build process\n\n\t/**\n\t * The build date for this release in UTC format.\n\t * @property buildDate\n\t * @type String\n\t * @static\n\t **/\n\ts.buildDate = /*=date*/\"Tue, 10 Oct 2017 12:24:35 GMT\"; // injected by build process\n\n})();\n\n//##############################################################################\n// extend.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n/**\n * @class Utility Methods\n */\n\n/**\n * Sets up the prototype chain and constructor property for a new class.\n *\n * This should be called right after creating the class constructor.\n *\n * \tfunction MySubClass() {}\n * \tcreatejs.extend(MySubClass, MySuperClass);\n * \tMySubClass.prototype.doSomething = function() { }\n *\n * \tvar foo = new MySubClass();\n * \tconsole.log(foo instanceof MySuperClass); // true\n * \tconsole.log(foo.prototype.constructor === MySubClass); // true\n *\n * @method extend\n * @param {Function} subclass The subclass.\n * @param {Function} superclass The superclass to extend.\n * @return {Function} Returns the subclass's new prototype.\n */\ncreatejs.extend = function(subclass, superclass) {\n\t\"use strict\";\n\n\tfunction o() { this.constructor = subclass; }\n\to.prototype = superclass.prototype;\n\treturn (subclass.prototype = new o());\n};\n\n//##############################################################################\n// promote.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n/**\n * @class Utility Methods\n */\n\n/**\n * Promotes any methods on the super class that were overridden, by creating an alias in the format `prefix_methodName`.\n * It is recommended to use the super class's name as the prefix.\n * An alias to the super class's constructor is always added in the format `prefix_constructor`.\n * This allows the subclass to call super class methods without using `function.call`, providing better performance.\n *\n * For example, if `MySubClass` extends `MySuperClass`, and both define a `draw` method, then calling `promote(MySubClass, \"MySuperClass\")`\n * would add a `MySuperClass_constructor` method to MySubClass and promote the `draw` method on `MySuperClass` to the\n * prototype of `MySubClass` as `MySuperClass_draw`.\n *\n * This should be called after the class's prototype is fully defined.\n *\n * \tfunction ClassA(name) {\n * \t\tthis.name = name;\n * \t}\n * \tClassA.prototype.greet = function() {\n * \t\treturn \"Hello \"+this.name;\n * \t}\n *\n * \tfunction ClassB(name, punctuation) {\n * \t\tthis.ClassA_constructor(name);\n * \t\tthis.punctuation = punctuation;\n * \t}\n * \tcreatejs.extend(ClassB, ClassA);\n * \tClassB.prototype.greet = function() {\n * \t\treturn this.ClassA_greet()+this.punctuation;\n * \t}\n * \tcreatejs.promote(ClassB, \"ClassA\");\n *\n * \tvar foo = new ClassB(\"World\", \"!?!\");\n * \tconsole.log(foo.greet()); // Hello World!?!\n *\n * @method promote\n * @param {Function} subclass The class to promote super class methods on.\n * @param {String} prefix The prefix to add to the promoted method names. Usually the name of the superclass.\n * @return {Function} Returns the subclass.\n */\ncreatejs.promote = function(subclass, prefix) {\n\t\"use strict\";\n\n\tvar subP = subclass.prototype, supP = (Object.getPrototypeOf&&Object.getPrototypeOf(subP))||subP.__proto__;\n\tif (supP) {\n\t\tsubP[(prefix+=\"_\") + \"constructor\"] = supP.constructor; // constructor is not always innumerable\n\t\tfor (var n in supP) {\n\t\t\tif (subP.hasOwnProperty(n) && (typeof supP[n] == \"function\")) { subP[prefix + n] = supP[n]; }\n\t\t}\n\t}\n\treturn subclass;\n};\n\n//##############################################################################\n// deprecate.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n/**\n * @class Utility Methods\n */\n\n/**\n * Wraps deprecated methods so they still be used, but throw warnings to developers.\n *\n *\tobj.deprecatedMethod = createjs.deprecate(\"Old Method Name\", obj._fallbackMethod);\n *\n * The recommended approach for deprecated properties is:\n *\n *\ttry {\n *\t\tObj\tect.defineProperties(object, {\n *\t\t\treadyOnlyProp: { get: createjs.deprecate(\"readOnlyProp\", function() { return this.alternateProp; }) },\n *\t\t\treadWriteProp: {\n *\t\t\t\tget: createjs.deprecate(\"readOnlyProp\", function() { return this.alternateProp; }),\n *\t\t\t\tset: createjs.deprecate(\"readOnlyProp\", function(val) { this.alternateProp = val; })\n *\t\t});\n *\t} catch (e) {}\n *\n * @method deprecate\n * @param {Function} [fallbackMethod=null] A method to call when the deprecated method is used. See the example for how\n * @param {String} [name=null] The name of the method or property to display in the console warning.\n * to deprecate properties.\n * @return {Function} If a fallbackMethod is supplied, returns a closure that will call the fallback method after\n * logging the warning in the console.\n */\ncreatejs.deprecate = function(fallbackMethod, name) {\n\t\"use strict\";\n\treturn function() {\n\t\tvar msg = \"Deprecated property or method '\"+name+\"'. See docs for info.\";\n\t\tconsole && (console.warn ? console.warn(msg) : console.log(msg));\n\t\treturn fallbackMethod && fallbackMethod.apply(this, arguments);\n\t}\n};\n\n//##############################################################################\n// indexOf.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n/**\n * @class Utility Methods\n */\n\n/**\n * Finds the first occurrence of a specified value searchElement in the passed in array, and returns the index of\n * that value.  Returns -1 if value is not found.\n *\n *      var i = createjs.indexOf(myArray, myElementToFind);\n *\n * @method indexOf\n * @param {Array} array Array to search for searchElement\n * @param searchElement Element to find in array.\n * @return {Number} The first index of searchElement in array.\n */\ncreatejs.indexOf = function (array, searchElement){\n\t\"use strict\";\n\n\tfor (var i = 0,l=array.length; i < l; i++) {\n\t\tif (searchElement === array[i]) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\n\n//##############################################################################\n// proxy.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n/**\n * Various utilities that the CreateJS Suite uses. Utilities are created as separate files, and will be available on the\n * createjs namespace directly.\n *\n * <h4>Example</h4>\n *\n *      myObject.addEventListener(\"change\", createjs.proxy(myMethod, scope));\n *\n * @class Utility Methods\n * @main Utility Methods\n */\n\n(function() {\n\t\"use strict\";\n\n\t/**\n\t * A function proxy for methods. By default, JavaScript methods do not maintain scope, so passing a method as a\n\t * callback will result in the method getting called in the scope of the caller. Using a proxy ensures that the\n\t * method gets called in the correct scope.\n\t *\n\t * Additional arguments can be passed that will be applied to the function when it is called.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      myObject.addEventListener(\"event\", createjs.proxy(myHandler, this, arg1, arg2));\n\t *\n\t *      function myHandler(arg1, arg2) {\n\t *           // This gets called when myObject.myCallback is executed.\n\t *      }\n\t *\n\t * @method proxy\n\t * @param {Function} method The function to call\n\t * @param {Object} scope The scope to call the method name on\n\t * @param {mixed} [arg] * Arguments that are appended to the callback for additional params.\n\t * @public\n\t * @static\n\t */\n\tcreatejs.proxy = function (method, scope) {\n\t\tvar aArgs = Array.prototype.slice.call(arguments, 2);\n\t\treturn function () {\n\t\t\treturn method.apply(scope, Array.prototype.slice.call(arguments, 0).concat(aArgs));\n\t\t};\n\t}\n\n}());\n\n//##############################################################################\n// BrowserDetect.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n/**\n * @class Utility Methods\n */\n(function() {\n\t\"use strict\";\n\n\t/**\n\t * An object that determines the current browser, version, operating system, and other environment\n\t * variables via user agent string.\n\t *\n\t * Used for audio because feature detection is unable to detect the many limitations of mobile devices.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      if (createjs.BrowserDetect.isIOS) { // do stuff }\n\t *\n\t * @property BrowserDetect\n\t * @type {Object}\n\t * @param {Boolean} isFirefox True if our browser is Firefox.\n\t * @param {Boolean} isOpera True if our browser is opera.\n\t * @param {Boolean} isChrome True if our browser is Chrome.  Note that Chrome for Android returns true, but is a\n\t * completely different browser with different abilities.\n\t * @param {Boolean} isIOS True if our browser is safari for iOS devices (iPad, iPhone, and iPod).\n\t * @param {Boolean} isAndroid True if our browser is Android.\n\t * @param {Boolean} isBlackberry True if our browser is Blackberry.\n\t * @constructor\n\t * @static\n\t */\n\tfunction BrowserDetect() {\n\t\tthrow \"BrowserDetect cannot be instantiated\";\n\t};\n\n\tvar agent = BrowserDetect.agent = window.navigator.userAgent;\n\tBrowserDetect.isWindowPhone = (agent.indexOf(\"IEMobile\") > -1) || (agent.indexOf(\"Windows Phone\") > -1);\n\tBrowserDetect.isFirefox = (agent.indexOf(\"Firefox\") > -1);\n\tBrowserDetect.isOpera = (window.opera != null);\n\tBrowserDetect.isChrome = (agent.indexOf(\"Chrome\") > -1);  // NOTE that Chrome on Android returns true but is a completely different browser with different abilities\n\tBrowserDetect.isIOS = (agent.indexOf(\"iPod\") > -1 || agent.indexOf(\"iPhone\") > -1 || agent.indexOf(\"iPad\") > -1) && !BrowserDetect.isWindowPhone;\n\tBrowserDetect.isAndroid = (agent.indexOf(\"Android\") > -1) && !BrowserDetect.isWindowPhone;\n\tBrowserDetect.isBlackberry = (agent.indexOf(\"Blackberry\") > -1);\n\n\tcreatejs.BrowserDetect = BrowserDetect;\n\n}());\n\n//##############################################################################\n// EventDispatcher.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\r\n\r\n(function() {\r\n\t\"use strict\";\r\n\r\n\r\n// constructor:\r\n\t/**\r\n\t * EventDispatcher provides methods for managing queues of event listeners and dispatching events.\r\n\t *\r\n\t * You can either extend EventDispatcher or mix its methods into an existing prototype or instance by using the\r\n\t * EventDispatcher {{#crossLink \"EventDispatcher/initialize\"}}{{/crossLink}} method.\r\n\t * \r\n\t * Together with the CreateJS Event class, EventDispatcher provides an extended event model that is based on the\r\n\t * DOM Level 2 event model, including addEventListener, removeEventListener, and dispatchEvent. It supports\r\n\t * bubbling / capture, preventDefault, stopPropagation, stopImmediatePropagation, and handleEvent.\r\n\t * \r\n\t * EventDispatcher also exposes a {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}} method, which makes it easier\r\n\t * to create scoped listeners, listeners that only run once, and listeners with associated arbitrary data. The \r\n\t * {{#crossLink \"EventDispatcher/off\"}}{{/crossLink}} method is merely an alias to\r\n\t * {{#crossLink \"EventDispatcher/removeEventListener\"}}{{/crossLink}}.\r\n\t * \r\n\t * Another addition to the DOM Level 2 model is the {{#crossLink \"EventDispatcher/removeAllEventListeners\"}}{{/crossLink}}\r\n\t * method, which can be used to listeners for all events, or listeners for a specific event. The Event object also \r\n\t * includes a {{#crossLink \"Event/remove\"}}{{/crossLink}} method which removes the active listener.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t * Add EventDispatcher capabilities to the \"MyClass\" class.\r\n\t *\r\n\t *      EventDispatcher.initialize(MyClass.prototype);\r\n\t *\r\n\t * Add an event (see {{#crossLink \"EventDispatcher/addEventListener\"}}{{/crossLink}}).\r\n\t *\r\n\t *      instance.addEventListener(\"eventName\", handlerMethod);\r\n\t *      function handlerMethod(event) {\r\n\t *          console.log(event.target + \" Was Clicked\");\r\n\t *      }\r\n\t *\r\n\t * <b>Maintaining proper scope</b><br />\r\n\t * Scope (ie. \"this\") can be be a challenge with events. Using the {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}}\r\n\t * method to subscribe to events simplifies this.\r\n\t *\r\n\t *      instance.addEventListener(\"click\", function(event) {\r\n\t *          console.log(instance == this); // false, scope is ambiguous.\r\n\t *      });\r\n\t *      \r\n\t *      instance.on(\"click\", function(event) {\r\n\t *          console.log(instance == this); // true, \"on\" uses dispatcher scope by default.\r\n\t *      });\r\n\t * \r\n\t * If you want to use addEventListener instead, you may want to use function.bind() or a similar proxy to manage\r\n\t * scope.\r\n\t *\r\n\t * <b>Browser support</b>\r\n\t * The event model in CreateJS can be used separately from the suite in any project, however the inheritance model\r\n\t * requires modern browsers (IE9+).\r\n\t *      \r\n\t *\r\n\t * @class EventDispatcher\r\n\t * @constructor\r\n\t **/\r\n\tfunction EventDispatcher() {\r\n\t\r\n\t\r\n\t// private properties:\r\n\t\t/**\r\n\t\t * @protected\r\n\t\t * @property _listeners\r\n\t\t * @type Object\r\n\t\t **/\r\n\t\tthis._listeners = null;\r\n\t\t\r\n\t\t/**\r\n\t\t * @protected\r\n\t\t * @property _captureListeners\r\n\t\t * @type Object\r\n\t\t **/\r\n\t\tthis._captureListeners = null;\r\n\t}\r\n\tvar p = EventDispatcher.prototype;\r\n\r\n// static public methods:\r\n\t/**\r\n\t * Static initializer to mix EventDispatcher methods into a target object or prototype.\r\n\t * \r\n\t * \t\tEventDispatcher.initialize(MyClass.prototype); // add to the prototype of the class\r\n\t * \t\tEventDispatcher.initialize(myObject); // add to a specific instance\r\n\t * \r\n\t * @method initialize\r\n\t * @static\r\n\t * @param {Object} target The target object to inject EventDispatcher methods into. This can be an instance or a\r\n\t * prototype.\r\n\t **/\r\n\tEventDispatcher.initialize = function(target) {\r\n\t\ttarget.addEventListener = p.addEventListener;\r\n\t\ttarget.on = p.on;\r\n\t\ttarget.removeEventListener = target.off =  p.removeEventListener;\r\n\t\ttarget.removeAllEventListeners = p.removeAllEventListeners;\r\n\t\ttarget.hasEventListener = p.hasEventListener;\r\n\t\ttarget.dispatchEvent = p.dispatchEvent;\r\n\t\ttarget._dispatchEvent = p._dispatchEvent;\r\n\t\ttarget.willTrigger = p.willTrigger;\r\n\t};\r\n\t\r\n\r\n// public methods:\r\n\t/**\r\n\t * Adds the specified event listener. Note that adding multiple listeners to the same function will result in\r\n\t * multiple callbacks getting fired.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      displayObject.addEventListener(\"click\", handleClick);\r\n\t *      function handleClick(event) {\r\n\t *         // Click happened.\r\n\t *      }\r\n\t *\r\n\t * @method addEventListener\r\n\t * @param {String} type The string type of the event.\r\n\t * @param {Function | Object} listener An object with a handleEvent method, or a function that will be called when\r\n\t * the event is dispatched.\r\n\t * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n\t * @return {Function | Object} Returns the listener for chaining or assignment.\r\n\t **/\r\n\tp.addEventListener = function(type, listener, useCapture) {\r\n\t\tvar listeners;\r\n\t\tif (useCapture) {\r\n\t\t\tlisteners = this._captureListeners = this._captureListeners||{};\r\n\t\t} else {\r\n\t\t\tlisteners = this._listeners = this._listeners||{};\r\n\t\t}\r\n\t\tvar arr = listeners[type];\r\n\t\tif (arr) { this.removeEventListener(type, listener, useCapture); }\r\n\t\tarr = listeners[type]; // remove may have deleted the array\r\n\t\tif (!arr) { listeners[type] = [listener];  }\r\n\t\telse { arr.push(listener); }\r\n\t\treturn listener;\r\n\t};\r\n\t\r\n\t/**\r\n\t * A shortcut method for using addEventListener that makes it easier to specify an execution scope, have a listener\r\n\t * only run once, associate arbitrary data with the listener, and remove the listener.\r\n\t * \r\n\t * This method works by creating an anonymous wrapper function and subscribing it with addEventListener.\r\n\t * The wrapper function is returned for use with `removeEventListener` (or `off`).\r\n\t * \r\n\t * <b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener, or use\r\n\t * {{#crossLink \"Event/remove\"}}{{/crossLink}}. Likewise, each time you call `on` a NEW wrapper function is subscribed, so multiple calls\r\n\t * to `on` with the same params will create multiple listeners.\r\n\t * \r\n\t * <h4>Example</h4>\r\n\t * \r\n\t * \t\tvar listener = myBtn.on(\"click\", handleClick, null, false, {count:3});\r\n\t * \t\tfunction handleClick(evt, data) {\r\n\t * \t\t\tdata.count -= 1;\r\n\t * \t\t\tconsole.log(this == myBtn); // true - scope defaults to the dispatcher\r\n\t * \t\t\tif (data.count == 0) {\r\n\t * \t\t\t\talert(\"clicked 3 times!\");\r\n\t * \t\t\t\tmyBtn.off(\"click\", listener);\r\n\t * \t\t\t\t// alternately: evt.remove();\r\n\t * \t\t\t}\r\n\t * \t\t}\r\n\t * \r\n\t * @method on\r\n\t * @param {String} type The string type of the event.\r\n\t * @param {Function | Object} listener An object with a handleEvent method, or a function that will be called when\r\n\t * the event is dispatched.\r\n\t * @param {Object} [scope] The scope to execute the listener in. Defaults to the dispatcher/currentTarget for function listeners, and to the listener itself for object listeners (ie. using handleEvent).\r\n\t * @param {Boolean} [once=false] If true, the listener will remove itself after the first time it is triggered.\r\n\t * @param {*} [data] Arbitrary data that will be included as the second parameter when the listener is called.\r\n\t * @param {Boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n\t * @return {Function} Returns the anonymous function that was created and assigned as the listener. This is needed to remove the listener later using .removeEventListener.\r\n\t **/\r\n\tp.on = function(type, listener, scope, once, data, useCapture) {\r\n\t\tif (listener.handleEvent) {\r\n\t\t\tscope = scope||listener;\r\n\t\t\tlistener = listener.handleEvent;\r\n\t\t}\r\n\t\tscope = scope||this;\r\n\t\treturn this.addEventListener(type, function(evt) {\r\n\t\t\t\tlistener.call(scope, evt, data);\r\n\t\t\t\tonce&&evt.remove();\r\n\t\t\t}, useCapture);\r\n\t};\r\n\r\n\t/**\r\n\t * Removes the specified event listener.\r\n\t *\r\n\t * <b>Important Note:</b> that you must pass the exact function reference used when the event was added. If a proxy\r\n\t * function, or function closure is used as the callback, the proxy/closure reference must be used - a new proxy or\r\n\t * closure will not work.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      displayObject.removeEventListener(\"click\", handleClick);\r\n\t *\r\n\t * @method removeEventListener\r\n\t * @param {String} type The string type of the event.\r\n\t * @param {Function | Object} listener The listener function or object.\r\n\t * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n\t **/\r\n\tp.removeEventListener = function(type, listener, useCapture) {\r\n\t\tvar listeners = useCapture ? this._captureListeners : this._listeners;\r\n\t\tif (!listeners) { return; }\r\n\t\tvar arr = listeners[type];\r\n\t\tif (!arr) { return; }\r\n\t\tfor (var i=0,l=arr.length; i<l; i++) {\r\n\t\t\tif (arr[i] == listener) {\r\n\t\t\t\tif (l==1) { delete(listeners[type]); } // allows for faster checks.\r\n\t\t\t\telse { arr.splice(i,1); }\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t\r\n\t/**\r\n\t * A shortcut to the removeEventListener method, with the same parameters and return value. This is a companion to the\r\n\t * .on method.\r\n\t * \r\n\t * <b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener. See \r\n\t * {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}} for an example.\r\n\t *\r\n\t * @method off\r\n\t * @param {String} type The string type of the event.\r\n\t * @param {Function | Object} listener The listener function or object.\r\n\t * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n\t **/\r\n\tp.off = p.removeEventListener;\r\n\r\n\t/**\r\n\t * Removes all listeners for the specified type, or all listeners of all types.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      // Remove all listeners\r\n\t *      displayObject.removeAllEventListeners();\r\n\t *\r\n\t *      // Remove all click listeners\r\n\t *      displayObject.removeAllEventListeners(\"click\");\r\n\t *\r\n\t * @method removeAllEventListeners\r\n\t * @param {String} [type] The string type of the event. If omitted, all listeners for all types will be removed.\r\n\t **/\r\n\tp.removeAllEventListeners = function(type) {\r\n\t\tif (!type) { this._listeners = this._captureListeners = null; }\r\n\t\telse {\r\n\t\t\tif (this._listeners) { delete(this._listeners[type]); }\r\n\t\t\tif (this._captureListeners) { delete(this._captureListeners[type]); }\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Dispatches the specified event to all listeners.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      // Use a string event\r\n\t *      this.dispatchEvent(\"complete\");\r\n\t *\r\n\t *      // Use an Event instance\r\n\t *      var event = new createjs.Event(\"progress\");\r\n\t *      this.dispatchEvent(event);\r\n\t *\r\n\t * @method dispatchEvent\r\n\t * @param {Object | String | Event} eventObj An object with a \"type\" property, or a string type.\r\n\t * While a generic object will work, it is recommended to use a CreateJS Event instance. If a string is used,\r\n\t * dispatchEvent will construct an Event instance if necessary with the specified type. This latter approach can\r\n\t * be used to avoid event object instantiation for non-bubbling events that may not have any listeners.\r\n\t * @param {Boolean} [bubbles] Specifies the `bubbles` value when a string was passed to eventObj.\r\n\t * @param {Boolean} [cancelable] Specifies the `cancelable` value when a string was passed to eventObj.\r\n\t * @return {Boolean} Returns false if `preventDefault()` was called on a cancelable event, true otherwise.\r\n\t **/\r\n\tp.dispatchEvent = function(eventObj, bubbles, cancelable) {\r\n\t\tif (typeof eventObj == \"string\") {\r\n\t\t\t// skip everything if there's no listeners and it doesn't bubble:\r\n\t\t\tvar listeners = this._listeners;\r\n\t\t\tif (!bubbles && (!listeners || !listeners[eventObj])) { return true; }\r\n\t\t\teventObj = new createjs.Event(eventObj, bubbles, cancelable);\r\n\t\t} else if (eventObj.target && eventObj.clone) {\r\n\t\t\t// redispatching an active event object, so clone it:\r\n\t\t\teventObj = eventObj.clone();\r\n\t\t}\r\n\t\t\r\n\t\t// TODO: it would be nice to eliminate this. Maybe in favour of evtObj instanceof Event? Or !!evtObj.createEvent\r\n\t\ttry { eventObj.target = this; } catch (e) {} // try/catch allows redispatching of native events\r\n\r\n\t\tif (!eventObj.bubbles || !this.parent) {\r\n\t\t\tthis._dispatchEvent(eventObj, 2);\r\n\t\t} else {\r\n\t\t\tvar top=this, list=[top];\r\n\t\t\twhile (top.parent) { list.push(top = top.parent); }\r\n\t\t\tvar i, l=list.length;\r\n\r\n\t\t\t// capture & atTarget\r\n\t\t\tfor (i=l-1; i>=0 && !eventObj.propagationStopped; i--) {\r\n\t\t\t\tlist[i]._dispatchEvent(eventObj, 1+(i==0));\r\n\t\t\t}\r\n\t\t\t// bubbling\r\n\t\t\tfor (i=1; i<l && !eventObj.propagationStopped; i++) {\r\n\t\t\t\tlist[i]._dispatchEvent(eventObj, 3);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn !eventObj.defaultPrevented;\r\n\t};\r\n\r\n\t/**\r\n\t * Indicates whether there is at least one listener for the specified event type.\r\n\t * @method hasEventListener\r\n\t * @param {String} type The string type of the event.\r\n\t * @return {Boolean} Returns true if there is at least one listener for the specified event.\r\n\t **/\r\n\tp.hasEventListener = function(type) {\r\n\t\tvar listeners = this._listeners, captureListeners = this._captureListeners;\r\n\t\treturn !!((listeners && listeners[type]) || (captureListeners && captureListeners[type]));\r\n\t};\r\n\t\r\n\t/**\r\n\t * Indicates whether there is at least one listener for the specified event type on this object or any of its\r\n\t * ancestors (parent, parent's parent, etc). A return value of true indicates that if a bubbling event of the\r\n\t * specified type is dispatched from this object, it will trigger at least one listener.\r\n\t * \r\n\t * This is similar to {{#crossLink \"EventDispatcher/hasEventListener\"}}{{/crossLink}}, but it searches the entire\r\n\t * event flow for a listener, not just this object.\r\n\t * @method willTrigger\r\n\t * @param {String} type The string type of the event.\r\n\t * @return {Boolean} Returns `true` if there is at least one listener for the specified event.\r\n\t **/\r\n\tp.willTrigger = function(type) {\r\n\t\tvar o = this;\r\n\t\twhile (o) {\r\n\t\t\tif (o.hasEventListener(type)) { return true; }\r\n\t\t\to = o.parent;\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\r\n\t/**\r\n\t * @method toString\r\n\t * @return {String} a string representation of the instance.\r\n\t **/\r\n\tp.toString = function() {\r\n\t\treturn \"[EventDispatcher]\";\r\n\t};\r\n\r\n\r\n// private methods:\r\n\t/**\r\n\t * @method _dispatchEvent\r\n\t * @param {Object | Event} eventObj\r\n\t * @param {Object} eventPhase\r\n\t * @protected\r\n\t **/\r\n\tp._dispatchEvent = function(eventObj, eventPhase) {\r\n\t\tvar l, arr, listeners = (eventPhase <= 2) ? this._captureListeners : this._listeners;\r\n\t\tif (eventObj && listeners && (arr = listeners[eventObj.type]) && (l=arr.length)) {\r\n\t\t\ttry { eventObj.currentTarget = this; } catch (e) {}\r\n\t\t\ttry { eventObj.eventPhase = eventPhase|0; } catch (e) {}\r\n\t\t\teventObj.removed = false;\r\n\t\t\t\r\n\t\t\tarr = arr.slice(); // to avoid issues with items being removed or added during the dispatch\r\n\t\t\tfor (var i=0; i<l && !eventObj.immediatePropagationStopped; i++) {\r\n\t\t\t\tvar o = arr[i];\r\n\t\t\t\tif (o.handleEvent) { o.handleEvent(eventObj); }\r\n\t\t\t\telse { o(eventObj); }\r\n\t\t\t\tif (eventObj.removed) {\r\n\t\t\t\t\tthis.off(eventObj.type, o, eventPhase==1);\r\n\t\t\t\t\teventObj.removed = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (eventPhase === 2) { this._dispatchEvent(eventObj, 2.1); }\r\n\t};\r\n\r\n\r\n\tcreatejs.EventDispatcher = EventDispatcher;\r\n}());\n\n//##############################################################################\n// Event.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n// constructor:\n\t/**\n\t * Contains properties and methods shared by all events for use with\n\t * {{#crossLink \"EventDispatcher\"}}{{/crossLink}}.\n\t * \n\t * Note that Event objects are often reused, so you should never\n\t * rely on an event object's state outside of the call stack it was received in.\n\t * @class Event\n\t * @param {String} type The event type.\n\t * @param {Boolean} bubbles Indicates whether the event will bubble through the display list.\n\t * @param {Boolean} cancelable Indicates whether the default behaviour of this event can be cancelled.\n\t * @constructor\n\t **/\n\tfunction Event(type, bubbles, cancelable) {\n\t\t\n\t\n\t// public properties:\n\t\t/**\n\t\t * The type of event.\n\t\t * @property type\n\t\t * @type String\n\t\t **/\n\t\tthis.type = type;\n\t\n\t\t/**\n\t\t * The object that generated an event.\n\t\t * @property target\n\t\t * @type Object\n\t\t * @default null\n\t\t * @readonly\n\t\t*/\n\t\tthis.target = null;\n\t\n\t\t/**\n\t\t * The current target that a bubbling event is being dispatched from. For non-bubbling events, this will\n\t\t * always be the same as target. For example, if childObj.parent = parentObj, and a bubbling event\n\t\t * is generated from childObj, then a listener on parentObj would receive the event with\n\t\t * target=childObj (the original target) and currentTarget=parentObj (where the listener was added).\n\t\t * @property currentTarget\n\t\t * @type Object\n\t\t * @default null\n\t\t * @readonly\n\t\t*/\n\t\tthis.currentTarget = null;\n\t\n\t\t/**\n\t\t * For bubbling events, this indicates the current event phase:<OL>\n\t\t * \t<LI> capture phase: starting from the top parent to the target</LI>\n\t\t * \t<LI> at target phase: currently being dispatched from the target</LI>\n\t\t * \t<LI> bubbling phase: from the target to the top parent</LI>\n\t\t * </OL>\n\t\t * @property eventPhase\n\t\t * @type Number\n\t\t * @default 0\n\t\t * @readonly\n\t\t*/\n\t\tthis.eventPhase = 0;\n\t\n\t\t/**\n\t\t * Indicates whether the event will bubble through the display list.\n\t\t * @property bubbles\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n\t\tthis.bubbles = !!bubbles;\n\t\n\t\t/**\n\t\t * Indicates whether the default behaviour of this event can be cancelled via\n\t\t * {{#crossLink \"Event/preventDefault\"}}{{/crossLink}}. This is set via the Event constructor.\n\t\t * @property cancelable\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n\t\tthis.cancelable = !!cancelable;\n\t\n\t\t/**\n\t\t * The epoch time at which this event was created.\n\t\t * @property timeStamp\n\t\t * @type Number\n\t\t * @default 0\n\t\t * @readonly\n\t\t*/\n\t\tthis.timeStamp = (new Date()).getTime();\n\t\n\t\t/**\n\t\t * Indicates if {{#crossLink \"Event/preventDefault\"}}{{/crossLink}} has been called\n\t\t * on this event.\n\t\t * @property defaultPrevented\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n\t\tthis.defaultPrevented = false;\n\t\n\t\t/**\n\t\t * Indicates if {{#crossLink \"Event/stopPropagation\"}}{{/crossLink}} or\n\t\t * {{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called on this event.\n\t\t * @property propagationStopped\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n\t\tthis.propagationStopped = false;\n\t\n\t\t/**\n\t\t * Indicates if {{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called\n\t\t * on this event.\n\t\t * @property immediatePropagationStopped\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n\t\tthis.immediatePropagationStopped = false;\n\t\t\n\t\t/**\n\t\t * Indicates if {{#crossLink \"Event/remove\"}}{{/crossLink}} has been called on this event.\n\t\t * @property removed\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n\t\tthis.removed = false;\n\t}\n\tvar p = Event.prototype;\n\n// public methods:\n\t/**\n\t * Sets {{#crossLink \"Event/defaultPrevented\"}}{{/crossLink}} to true if the event is cancelable.\n\t * Mirrors the DOM level 2 event standard. In general, cancelable events that have `preventDefault()` called will\n\t * cancel the default behaviour associated with the event.\n\t * @method preventDefault\n\t **/\n\tp.preventDefault = function() {\n\t\tthis.defaultPrevented = this.cancelable&&true;\n\t};\n\n\t/**\n\t * Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} to true.\n\t * Mirrors the DOM event standard.\n\t * @method stopPropagation\n\t **/\n\tp.stopPropagation = function() {\n\t\tthis.propagationStopped = true;\n\t};\n\n\t/**\n\t * Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} and\n\t * {{#crossLink \"Event/immediatePropagationStopped\"}}{{/crossLink}} to true.\n\t * Mirrors the DOM event standard.\n\t * @method stopImmediatePropagation\n\t **/\n\tp.stopImmediatePropagation = function() {\n\t\tthis.immediatePropagationStopped = this.propagationStopped = true;\n\t};\n\t\n\t/**\n\t * Causes the active listener to be removed via removeEventListener();\n\t * \n\t * \t\tmyBtn.addEventListener(\"click\", function(evt) {\n\t * \t\t\t// do stuff...\n\t * \t\t\tevt.remove(); // removes this listener.\n\t * \t\t});\n\t * \n\t * @method remove\n\t **/\n\tp.remove = function() {\n\t\tthis.removed = true;\n\t};\n\t\n\t/**\n\t * Returns a clone of the Event instance.\n\t * @method clone\n\t * @return {Event} a clone of the Event instance.\n\t **/\n\tp.clone = function() {\n\t\treturn new Event(this.type, this.bubbles, this.cancelable);\n\t};\n\t\n\t/**\n\t * Provides a chainable shortcut method for setting a number of properties on the instance.\n\t *\n\t * @method set\n\t * @param {Object} props A generic object containing properties to copy to the instance.\n\t * @return {Event} Returns the instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t*/\n\tp.set = function(props) {\n\t\tfor (var n in props) { this[n] = props[n]; }\n\t\treturn this;\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[Event (type=\"+this.type+\")]\";\n\t};\n\n\tcreatejs.Event = Event;\n}());\n\n//##############################################################################\n// ErrorEvent.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\t/**\n\t * A general error {{#crossLink \"Event\"}}{{/crossLink}}, that describes an error that occurred, as well as any details.\n\t * @class ErrorEvent\n\t * @param {String} [title] The error title\n\t * @param {String} [message] The error description\n\t * @param {Object} [data] Additional error data\n\t * @constructor\n\t */\n\tfunction ErrorEvent(title, message, data) {\n\t\tthis.Event_constructor(\"error\");\n\n\t\t/**\n\t\t * The short error title, which indicates the type of error that occurred.\n\t\t * @property title\n\t\t * @type String\n\t\t */\n\t\tthis.title = title;\n\n\t\t/**\n\t\t * The verbose error message, containing details about the error.\n\t\t * @property message\n\t\t * @type String\n\t\t */\n\t\tthis.message = message;\n\n\t\t/**\n\t\t * Additional data attached to an error.\n\t\t * @property data\n\t\t * @type {Object}\n\t\t */\n\t\tthis.data = data;\n\t}\n\n\tvar p = createjs.extend(ErrorEvent, createjs.Event);\n\n\tp.clone = function() {\n\t\treturn new createjs.ErrorEvent(this.title, this.message, this.data);\n\t};\n\n\tcreatejs.ErrorEvent = createjs.promote(ErrorEvent, \"Event\");\n\n}());\n\n//##############################################################################\n// ProgressEvent.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function (scope) {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * A CreateJS {{#crossLink \"Event\"}}{{/crossLink}} that is dispatched when progress changes.\n\t * @class ProgressEvent\n\t * @param {Number} loaded The amount that has been loaded. This can be any number relative to the total.\n\t * @param {Number} [total=1] The total amount that will load. This will default to 1, so if the `loaded` value is\n\t * a percentage (between 0 and 1), it can be omitted.\n\t * @todo Consider having this event be a \"fileprogress\" event as well\n\t * @constructor\n\t */\n\tfunction ProgressEvent(loaded, total) {\n\t\tthis.Event_constructor(\"progress\");\n\n\t\t/**\n\t\t * The amount that has been loaded (out of a total amount)\n\t\t * @property loaded\n\t\t * @type {Number}\n\t\t */\n\t\tthis.loaded = loaded;\n\n\t\t/**\n\t\t * The total \"size\" of the load.\n\t\t * @property total\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t */\n\t\tthis.total = (total == null) ? 1 : total;\n\n\t\t/**\n\t\t * The percentage (out of 1) that the load has been completed. This is calculated using `loaded/total`.\n\t\t * @property progress\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.progress = (total == 0) ? 0 : this.loaded / this.total;\n\t};\n\n\tvar p = createjs.extend(ProgressEvent, createjs.Event);\n\n\t/**\n\t * Returns a clone of the ProgressEvent instance.\n\t * @method clone\n\t * @return {ProgressEvent} a clone of the Event instance.\n\t **/\n\tp.clone = function() {\n\t\treturn new createjs.ProgressEvent(this.loaded, this.total);\n\t};\n\n\tcreatejs.ProgressEvent = createjs.promote(ProgressEvent, \"Event\");\n\n}(window));\n\n//##############################################################################\n// LoadItem.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\t/**\n\t * All loaders accept an item containing the properties defined in this class. If a raw object is passed instead,\n\t * it will not be affected, but it must contain at least a {{#crossLink \"src:property\"}}{{/crossLink}} property. A\n\t * string path or HTML tag is also acceptable, but it will be automatically converted to a LoadItem using the\n\t * {{#crossLink \"create\"}}{{/crossLink}} method by {{#crossLink \"AbstractLoader\"}}{{/crossLink}}\n\t * @class LoadItem\n\t * @constructor\n\t * @since 0.6.0\n\t */\n\tfunction LoadItem() {\n\t\t/**\n\t\t * The source of the file that is being loaded. This property is <b>required</b>. The source can either be a\n\t\t * string (recommended), or an HTML tag.\n\t\t * This can also be an object, but in that case it has to include a type and be handled by a plugin.\n\t\t * @property src\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.src = null;\n\n\t\t/**\n\t\t * The type file that is being loaded. The type of the file is usually inferred by the extension, but can also\n\t\t * be set manually. This is helpful in cases where a file does not have an extension.\n\t\t * @property type\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.type = null;\n\n\t\t/**\n\t\t * A string identifier which can be used to reference the loaded object. If none is provided, this will be\n\t\t * automatically set to the {{#crossLink \"src:property\"}}{{/crossLink}}.\n\t\t * @property id\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.id = null;\n\n\t\t/**\n\t\t * Determines if a manifest will maintain the order of this item, in relation to other items in the manifest\n\t\t * that have also set the `maintainOrder` property to `true`. This only applies when the max connections has\n\t\t * been set above 1 (using {{#crossLink \"LoadQueue/setMaxConnections\"}}{{/crossLink}}). Everything with this\n\t\t * property set to `false` will finish as it is loaded. Ordered items are combined with script tags loading in\n\t\t * order when {{#crossLink \"LoadQueue/maintainScriptOrder:property\"}}{{/crossLink}} is set to `true`.\n\t\t * @property maintainOrder\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.maintainOrder = false;\n\n\t\t/**\n\t\t * A callback used by JSONP requests that defines what global method to call when the JSONP content is loaded.\n\t\t * @property callback\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.callback = null;\n\n\t\t/**\n\t\t * An arbitrary data object, which is included with the loaded object.\n\t\t * @property data\n\t\t * @type {Object}\n\t\t * @default null\n\t\t */\n\t\tthis.data = null;\n\n\t\t/**\n\t\t * The request method used for HTTP calls. Both {{#crossLink \"Methods/GET:property\"}}{{/crossLink}} or\n\t\t * {{#crossLink \"Methods/POST:property\"}}{{/crossLink}} request types are supported, and are defined as\n\t\t * constants on {{#crossLink \"AbstractLoader\"}}{{/crossLink}}.\n\t\t * @property method\n\t\t * @type {String}\n\t\t * @default GET\n\t\t */\n\t\tthis.method = createjs.Methods.GET;\n\n\t\t/**\n\t\t * An object hash of name/value pairs to send to the server.\n\t\t * @property values\n\t\t * @type {Object}\n\t\t * @default null\n\t\t */\n\t\tthis.values = null;\n\n\t\t/**\n\t\t * An object hash of headers to attach to an XHR request. PreloadJS will automatically attach some default\n\t\t * headers when required, including \"Origin\", \"Content-Type\", and \"X-Requested-With\". You may override the\n\t\t * default headers by including them in your headers object.\n\t\t * @property headers\n\t\t * @type {Object}\n\t\t * @default null\n\t\t */\n\t\tthis.headers = null;\n\n\t\t/**\n\t\t * Enable credentials for XHR requests.\n\t\t * @property withCredentials\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.withCredentials = false;\n\n\t\t/**\n\t\t * Set the mime type of XHR-based requests. This is automatically set to \"text/plain; charset=utf-8\" for text\n\t\t * based files (json, xml, text, css, js).\n\t\t * @property mimeType\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.mimeType = null;\n\n\t\t/**\n\t\t * Sets the crossOrigin attribute for CORS-enabled images loading cross-domain.\n\t\t * @property crossOrigin\n\t\t * @type {boolean}\n\t\t * @default Anonymous\n\t\t */\n\t\tthis.crossOrigin = null;\n\n\t\t/**\n\t\t * The duration in milliseconds to wait before a request times out. This only applies to tag-based and and XHR\n\t\t * (level one) loading, as XHR (level 2) provides its own timeout event.\n\t\t * @property loadTimeout\n\t\t * @type {Number}\n\t\t * @default 8000 (8 seconds)\n\t\t */\n\t\tthis.loadTimeout = s.LOAD_TIMEOUT_DEFAULT;\n\t};\n\n\tvar p = LoadItem.prototype = {};\n\tvar s = LoadItem;\n\n\t/**\n\t * Default duration in milliseconds to wait before a request times out. This only applies to tag-based and and XHR\n\t * (level one) loading, as XHR (level 2) provides its own timeout event.\n\t * @property LOAD_TIMEOUT_DEFAULT\n\t * @type {number}\n\t * @static\n\t */\n\ts.LOAD_TIMEOUT_DEFAULT = 8000;\n\n\t/**\n\t * Create a LoadItem.\n\t * <ul>\n\t *     <li>String-based items are converted to a LoadItem with a populated {{#crossLink \"src:property\"}}{{/crossLink}}.</li>\n\t *     <li>LoadItem instances are returned as-is</li>\n\t *     <li>Objects are returned with any needed properties added</li>\n\t * </ul>\n\t * @method create\n\t * @param {LoadItem|String|Object} value The load item value\n\t * @returns {LoadItem|Object}\n\t * @static\n\t */\n\ts.create = function (value) {\n\t\tif (typeof value == \"string\") {\n\t\t\tvar item = new LoadItem();\n\t\t\titem.src = value;\n\t\t\treturn item;\n\t\t} else if (value instanceof s) {\n\t\t\treturn value;\n\t\t} else if (value instanceof Object && value.src) {\n\t\t\tif (value.loadTimeout == null) {\n\t\t\t\tvalue.loadTimeout = s.LOAD_TIMEOUT_DEFAULT;\n\t\t\t}\n\t\t\treturn value;\n\t\t} else {\n\t\t\tthrow new Error(\"Type not recognized.\");\n\t\t}\n\t};\n\n\t/**\n\t * Provides a chainable shortcut method for setting a number of properties on the instance.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var loadItem = new createjs.LoadItem().set({src:\"image.png\", maintainOrder:true});\n\t *\n\t * @method set\n\t * @param {Object} props A generic object containing properties to copy to the LoadItem instance.\n\t * @return {LoadItem} Returns the instance the method is called on (useful for chaining calls.)\n\t*/\n\tp.set = function(props) {\n\t\tfor (var n in props) { this[n] = props[n]; }\n\t\treturn this;\n\t};\n\n\tcreatejs.LoadItem = s;\n\n}());\n\n//##############################################################################\n// Methods.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function() {\n\tvar s = {};\n\n\t/**\n\t * Defines a POST request, use for a method value when loading data.\n\t * @property POST\n\t * @type {string}\n\t * @default post\n\t * @static\n\t */\n\ts.POST = \"POST\";\n\n\t/**\n\t * Defines a GET request, use for a method value when loading data.\n\t * @property GET\n\t * @type {string}\n\t * @default get\n\t * @static\n\t */\n\ts.GET = \"GET\";\n\n\tcreatejs.Methods = s;\n}());\n\n//##############################################################################\n// Types.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function() {\n\tvar s = {};\n\n\t/**\n\t * The preload type for generic binary types. Note that images are loaded as binary files when using XHR.\n\t * @property BINARY\n\t * @type {String}\n\t * @default binary\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.BINARY = \"binary\";\n\n\t/**\n\t * The preload type for css files. CSS files are loaded using a &lt;link&gt; when loaded with XHR, or a\n\t * &lt;style&gt; tag when loaded with tags.\n\t * @property CSS\n\t * @type {String}\n\t * @default css\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.CSS = \"css\";\n\n\t/**\n\t * The preload type for font files.\n\t * @property FONT\n\t * @type {String}\n\t * @default font\n\t * @static\n\t * @since 0.9.0\n\t */\n\ts.FONT = \"font\";\n\n\t/**\n\t * The preload type for fonts specified with CSS (such as Google fonts)\n\t * @property FONTCSS\n\t * @type {String}\n\t * @default fontcss\n\t * @static\n\t * @since 0.9.0\n\t */\n\ts.FONTCSS = \"fontcss\";\n\n\t/**\n\t * The preload type for image files, usually png, gif, or jpg/jpeg. Images are loaded into an &lt;image&gt; tag.\n\t * @property IMAGE\n\t * @type {String}\n\t * @default image\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.IMAGE = \"image\";\n\n\t/**\n\t * The preload type for javascript files, usually with the \"js\" file extension. JavaScript files are loaded into a\n\t * &lt;script&gt; tag.\n\t *\n\t * Since version 0.4.1+, due to how tag-loaded scripts work, all JavaScript files are automatically injected into\n\t * the body of the document to maintain parity between XHR and tag-loaded scripts. In version 0.4.0 and earlier,\n\t * only tag-loaded scripts are injected.\n\t * @property JAVASCRIPT\n\t * @type {String}\n\t * @default javascript\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.JAVASCRIPT = \"javascript\";\n\n\t/**\n\t * The preload type for json files, usually with the \"json\" file extension. JSON data is loaded and parsed into a\n\t * JavaScript object. Note that if a `callback` is present on the load item, the file will be loaded with JSONP,\n\t * no matter what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}} property is set to, and the JSON\n\t * must contain a matching wrapper function.\n\t * @property JSON\n\t * @type {String}\n\t * @default json\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.JSON = \"json\";\n\n\t/**\n\t * The preload type for jsonp files, usually with the \"json\" file extension. JSON data is loaded and parsed into a\n\t * JavaScript object. You are required to pass a callback parameter that matches the function wrapper in the JSON.\n\t * Note that JSONP will always be used if there is a callback present, no matter what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}}\n\t * property is set to.\n\t * @property JSONP\n\t * @type {String}\n\t * @default jsonp\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.JSONP = \"jsonp\";\n\n\t/**\n\t * The preload type for json-based manifest files, usually with the \"json\" file extension. The JSON data is loaded\n\t * and parsed into a JavaScript object. PreloadJS will then look for a \"manifest\" property in the JSON, which is an\n\t * Array of files to load, following the same format as the {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}\n\t * method. If a \"callback\" is specified on the manifest object, then it will be loaded using JSONP instead,\n\t * regardless of what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}} property is set to.\n\t * @property MANIFEST\n\t * @type {String}\n\t * @default manifest\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.MANIFEST = \"manifest\";\n\n\t/**\n\t * The preload type for sound files, usually mp3, ogg, or wav. When loading via tags, audio is loaded into an\n\t * &lt;audio&gt; tag.\n\t * @property SOUND\n\t * @type {String}\n\t * @default sound\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.SOUND = \"sound\";\n\n\t/**\n\t * The preload type for video files, usually mp4, ts, or ogg. When loading via tags, video is loaded into an\n\t * &lt;video&gt; tag.\n\t * @property VIDEO\n\t * @type {String}\n\t * @default video\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.VIDEO = \"video\";\n\n\t/**\n\t * The preload type for SpriteSheet files. SpriteSheet files are JSON files that contain string image paths.\n\t * @property SPRITESHEET\n\t * @type {String}\n\t * @default spritesheet\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.SPRITESHEET = \"spritesheet\";\n\n\t/**\n\t * The preload type for SVG files.\n\t * @property SVG\n\t * @type {String}\n\t * @default svg\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.SVG = \"svg\";\n\n\t/**\n\t * The preload type for text files, which is also the default file type if the type can not be determined. Text is\n\t * loaded as raw text.\n\t * @property TEXT\n\t * @type {String}\n\t * @default text\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.TEXT = \"text\";\n\n\t/**\n\t * The preload type for xml files. XML is loaded into an XML document.\n\t * @property XML\n\t * @type {String}\n\t * @default xml\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.XML = \"xml\";\n\n\tcreatejs.Types = s;\n}());\n\n//##############################################################################\n// Elements.js\n//##############################################################################\n\n(function () {\n\n\t/**\n\t * Convenience methods for creating various elements used by PrelaodJS.\n\t *\n\t * @class DomUtils\n\t */\n\tvar s = {};\n\n\ts.a = function() {\n\t\treturn s.el(\"a\");\n\t}\n\n\ts.svg = function() {\n\t\treturn s.el(\"svg\");\n\t}\n\n\ts.object = function() {\n\t\treturn s.el(\"object\");\n\t}\n\n\ts.image = function() {\n\t\treturn s.el(\"image\");\n\t}\n\n\ts.img = function() {\n\t\treturn s.el(\"img\");\n\t}\n\n\ts.style = function() {\n\t\treturn s.el(\"style\");\n\t}\n\n\ts.link = function() {\n\t\treturn s.el(\"link\");\n\t}\n\n\ts.script = function() {\n\t\treturn s.el(\"script\");\n\t}\n\n\ts.audio = function() {\n\t\treturn s.el(\"audio\");\n\t}\n\n\ts.video = function() {\n\t\treturn s.el(\"video\");\n\t}\n\n\ts.text = function(value) {\n\t\treturn document.createTextNode(value);\n\t}\n\n\ts.el = function(name) {\n\t\treturn document.createElement(name);\n\t}\n\n\tcreatejs.Elements = s;\n\n}());\n\n//##############################################################################\n// DomUtils.js\n//##############################################################################\n\n(function () {\n\n\t/**\n\t * A few utilities for interacting with the dom.\n\t * @class DomUtils\n\t */\n\tvar s = {\n\t\tcontainer: null\n\t};\n\n\ts.appendToHead = function (el) {\n\t\ts.getHead().appendChild(el);\n\t}\n\n\ts.appendToBody = function (el) {\n\t\tif (s.container == null) {\n\t\t\ts.container = document.createElement(\"div\");\n\t\t\ts.container.id = \"preloadjs-container\";\n\t\t\tvar style = s.container.style;\n\t\t\tstyle.visibility = \"hidden\";\n\t\t\tstyle.position = \"absolute\";\n\t\t\tstyle.width = s.container.style.height = \"10px\";\n\t\t\tstyle.overflow = \"hidden\";\n\t\t\tstyle.transform = style.msTransform = style.webkitTransform = style.oTransform = \"translate(-10px, -10px)\"; //LM: Not working\n\t\t\ts.getBody().appendChild(s.container);\n\t\t}\n\t\ts.container.appendChild(el);\n\t}\n\n\ts.getHead = function () {\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t}\n\n\ts.getBody = function () {\n\t\treturn document.body || document.getElementsByTagName(\"body\")[0];\n\t}\n\n\ts.removeChild = function(el) {\n\t\tif (el.parent) {\n\t\t\tel.parent.removeChild(el);\n\t\t}\n\t}\n\n\t/**\n\t * Check if item is a valid HTMLImageElement\n\t * @method isImageTag\n\t * @param {Object} item\n\t * @returns {Boolean}\n\t * @static\n\t */\n\ts.isImageTag = function(item) {\n\t\treturn item instanceof HTMLImageElement;\n\t};\n\n\t/**\n\t * Check if item is a valid HTMLAudioElement\n\t * @method isAudioTag\n\t * @param {Object} item\n\t * @returns {Boolean}\n\t * @static\n\t */\n\ts.isAudioTag = function(item) {\n\t\tif (window.HTMLAudioElement) {\n\t\t\treturn item instanceof HTMLAudioElement;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\t/**\n\t * Check if item is a valid HTMLVideoElement\n\t * @method isVideoTag\n\t * @param {Object} item\n\t * @returns {Boolean}\n\t * @static\n\t */\n\ts.isVideoTag = function(item) {\n\t\tif (window.HTMLVideoElement) {\n\t\t\treturn item instanceof HTMLVideoElement;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tcreatejs.DomUtils = s;\n\n}());\n\n//##############################################################################\n// RequestUtils.js\n//##############################################################################\n\n(function () {\n\n\t/**\n\t * Utilities that assist with parsing load items, and determining file types, etc.\n\t * @class RequestUtils\n\t */\n\tvar s = {};\n\n\t/**\n\t * Determine if a specific type should be loaded as a binary file. Currently, only images and items marked\n\t * specifically as \"binary\" are loaded as binary. Note that audio is <b>not</b> a binary type, as we can not play\n\t * back using an audio tag if it is loaded as binary. Plugins can change the item type to binary to ensure they get\n\t * a binary result to work with. Binary files are loaded using XHR2. Types are defined as static constants on\n\t * {{#crossLink \"AbstractLoader\"}}{{/crossLink}}.\n\t * @method isBinary\n\t * @param {String} type The item type.\n\t * @return {Boolean} If the specified type is binary.\n\t * @static\n\t */\n\ts.isBinary = function (type) {\n\t\tswitch (type) {\n\t\t\tcase createjs.Types.IMAGE:\n\t\t\tcase createjs.Types.BINARY:\n\t\t\t\treturn true;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t};\n\n\t/**\n\t * Determine if a specific type is a text-based asset, and should be loaded as UTF-8.\n\t * @method isText\n\t * @param {String} type The item type.\n\t * @return {Boolean} If the specified type is text.\n\t * @static\n\t */\n\ts.isText = function (type) {\n\t\tswitch (type) {\n\t\t\tcase createjs.Types.TEXT:\n\t\t\tcase createjs.Types.JSON:\n\t\t\tcase createjs.Types.MANIFEST:\n\t\t\tcase createjs.Types.XML:\n\t\t\tcase createjs.Types.CSS:\n\t\t\tcase createjs.Types.SVG:\n\t\t\tcase createjs.Types.JAVASCRIPT:\n\t\t\tcase createjs.Types.SPRITESHEET:\n\t\t\t\treturn true;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t};\n\n\t/**\n\t * Determine the type of the object using common extensions. Note that the type can be passed in with the load item\n\t * if it is an unusual extension.\n\t * @method getTypeByExtension\n\t * @param {String} extension The file extension to use to determine the load type.\n\t * @return {String} The determined load type (for example, `createjs.Types.IMAGE`). Will return `null` if\n\t * the type can not be determined by the extension.\n\t * @static\n\t */\n\ts.getTypeByExtension = function (extension) {\n\t\tif (extension == null) {\n\t\t\treturn createjs.Types.TEXT;\n\t\t}\n\n\t\tswitch (extension.toLowerCase()) {\n\t\t\tcase \"jpeg\":\n\t\t\tcase \"jpg\":\n\t\t\tcase \"gif\":\n\t\t\tcase \"png\":\n\t\t\tcase \"webp\":\n\t\t\tcase \"bmp\":\n\t\t\t\treturn createjs.Types.IMAGE;\n\t\t\tcase \"ogg\":\n\t\t\tcase \"mp3\":\n\t\t\tcase \"webm\":\n\t\t\t\treturn createjs.Types.SOUND;\n\t\t\tcase \"mp4\":\n\t\t\tcase \"webm\":\n\t\t\tcase \"ts\":\n\t\t\t\treturn createjs.Types.VIDEO;\n\t\t\tcase \"json\":\n\t\t\t\treturn createjs.Types.JSON;\n\t\t\tcase \"xml\":\n\t\t\t\treturn createjs.Types.XML;\n\t\t\tcase \"css\":\n\t\t\t\treturn createjs.Types.CSS;\n\t\t\tcase \"js\":\n\t\t\t\treturn createjs.Types.JAVASCRIPT;\n\t\t\tcase 'svg':\n\t\t\t\treturn createjs.Types.SVG;\n\t\t\tdefault:\n\t\t\t\treturn createjs.Types.TEXT;\n\t\t}\n\t};\n\n\tcreatejs.RequestUtils = s;\n\n}());\n\n//##############################################################################\n// URLUtils.js\n//##############################################################################\n\n(function () {\n\n\t/**\n\t * Utilities that assist with parsing load items, and determining file types, etc.\n\t * @class URLUtils\n\t */\n\tvar s = {};\n\n\t/**\n\t * The Regular Expression used to test file URLS for an absolute path.\n\t * @property ABSOLUTE_PATH\n\t * @type {RegExp}\n\t * @static\n\t */\n\ts.ABSOLUTE_PATT = /^(?:\\w+:)?\\/{2}/i;\n\n\t/**\n\t * The Regular Expression used to test file URLS for a relative path.\n\t * @property RELATIVE_PATH\n\t * @type {RegExp}\n\t * @static\n\t */\n\ts.RELATIVE_PATT = (/^[./]*?\\//i);\n\n\t/**\n\t * The Regular Expression used to test file URLS for an extension. Note that URIs must already have the query string\n\t * removed.\n\t * @property EXTENSION_PATT\n\t * @type {RegExp}\n\t * @static\n\t */\n\ts.EXTENSION_PATT = /\\/?[^/]+\\.(\\w{1,5})$/i;\n\n\t/**\n\t * Parse a file path to determine the information we need to work with it. Currently, PreloadJS needs to know:\n\t * <ul>\n\t *     <li>If the path is absolute. Absolute paths start with a protocol (such as `http://`, `file://`, or\n\t *     `//networkPath`)</li>\n\t *     <li>If the path is relative. Relative paths start with `../` or `/path` (or similar)</li>\n\t *     <li>The file extension. This is determined by the filename with an extension. Query strings are dropped, and\n\t *     the file path is expected to follow the format `name.ext`.</li>\n\t * </ul>\n\t *\n\t * @method parseURI\n\t * @param {String} path\n\t * @returns {Object} An Object with an `absolute` and `relative` Boolean values,\n\t * \tthe pieces of the path (protocol, hostname, port, pathname, search, hash, host)\n\t * \tas well as an optional 'extension` property, which is the lowercase extension.\n\t *\n\t * @static\n\t */\n\ts.parseURI = function (path) {\n\t\tvar info = {\n\t\t\tabsolute: false,\n\t\t\trelative: false,\n\t\t\tprotocol: null,\n\t\t\thostname: null,\n\t\t\tport: null,\n\t\t\tpathname: null,\n\t\t\tsearch: null,\n\t\t\thash: null,\n\t\t\thost: null\n\t\t};\n\n\t\tif (path == null) { return info; }\n\n\t\t// Inject the path parts.\n\t\tvar parser = createjs.Elements.a();\n\t\tparser.href = path;\n\n\t\tfor (var n in info) {\n\t\t\tif (n in parser) {\n\t\t\t\tinfo[n] = parser[n];\n\t\t\t}\n\t\t}\n\n\t\t// Drop the query string\n\t\tvar queryIndex = path.indexOf(\"?\");\n\t\tif (queryIndex > -1) {\n\t\t\tpath = path.substr(0, queryIndex);\n\t\t}\n\n\t\t// Absolute\n\t\tvar match;\n\t\tif (s.ABSOLUTE_PATT.test(path)) {\n\t\t\tinfo.absolute = true;\n\n\t\t\t// Relative\n\t\t} else if (s.RELATIVE_PATT.test(path)) {\n\t\t\tinfo.relative = true;\n\t\t}\n\n\t\t// Extension\n\t\tif (match = path.match(s.EXTENSION_PATT)) {\n\t\t\tinfo.extension = match[1].toLowerCase();\n\t\t}\n\n\t\treturn info;\n\t};\n\n\t/**\n\t * Formats an object into a query string for either a POST or GET request.\n\t * @method formatQueryString\n\t * @param {Object} data The data to convert to a query string.\n\t * @param {Array} [query] Existing name/value pairs to append on to this query.\n\t * @static\n\t */\n\ts.formatQueryString = function (data, query) {\n\t\tif (data == null) {\n\t\t\tthrow new Error(\"You must specify data.\");\n\t\t}\n\t\tvar params = [];\n\t\tfor (var n in data) {\n\t\t\tparams.push(n + \"=\" + escape(data[n]));\n\t\t}\n\t\tif (query) {\n\t\t\tparams = params.concat(query);\n\t\t}\n\t\treturn params.join(\"&\");\n\t};\n\n\t/**\n\t * A utility method that builds a file path using a source and a data object, and formats it into a new path.\n\t * @method buildURI\n\t * @param {String} src The source path to add values to.\n\t * @param {Object} [data] Object used to append values to this request as a query string. Existing parameters on the\n\t * path will be preserved.\n\t * @returns {string} A formatted string that contains the path and the supplied parameters.\n\t * @static\n\t */\n\ts.buildURI = function (src, data) {\n\t\tif (data == null) {\n\t\t\treturn src;\n\t\t}\n\n\t\tvar query = [];\n\t\tvar idx = src.indexOf(\"?\");\n\n\t\tif (idx != -1) {\n\t\t\tvar q = src.slice(idx + 1);\n\t\t\tquery = query.concat(q.split(\"&\"));\n\t\t}\n\n\t\tif (idx != -1) {\n\t\t\treturn src.slice(0, idx) + \"?\" + this.formatQueryString(data, query);\n\t\t} else {\n\t\t\treturn src + \"?\" + this.formatQueryString(data, query);\n\t\t}\n\t};\n\n\t/**\n\t * @method isCrossDomain\n\t * @param {LoadItem|Object} item A load item with a `src` property.\n\t * @return {Boolean} If the load item is loading from a different domain than the current location.\n\t * @static\n\t */\n\ts.isCrossDomain = function (item) {\n\t\tvar target = createjs.Elements.a();\n\t\ttarget.href = item.src;\n\n\t\tvar host = createjs.Elements.a();\n\t\thost.href = location.href;\n\n\t\tvar crossdomain = (target.hostname != \"\") &&\n\t\t\t(target.port != host.port ||\n\t\t\ttarget.protocol != host.protocol ||\n\t\t\ttarget.hostname != host.hostname);\n\t\treturn crossdomain;\n\t};\n\n\t/**\n\t * @method isLocal\n\t * @param {LoadItem|Object} item A load item with a `src` property\n\t * @return {Boolean} If the load item is loading from the \"file:\" protocol. Assume that the host must be local as\n\t * well.\n\t * @static\n\t */\n\ts.isLocal = function (item) {\n\t\tvar target = createjs.Elements.a();\n\t\ttarget.href = item.src;\n\t\treturn target.hostname == \"\" && target.protocol == \"file:\";\n\t};\n\n\tcreatejs.URLUtils = s;\n\n}());\n\n//##############################################################################\n// AbstractLoader.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n// constructor\n\t/**\n\t * The base loader, which defines all the generic methods, properties, and events. All loaders extend this class,\n\t * including the {{#crossLink \"LoadQueue\"}}{{/crossLink}}.\n\t * @class AbstractLoader\n\t * @param {LoadItem|object|string} loadItem The item to be loaded.\n\t * @param {Boolean} [preferXHR] Determines if the LoadItem should <em>try</em> and load using XHR, or take a\n\t * tag-based approach, which can be better in cross-domain situations. Not all loaders can load using one or the\n\t * other, so this is a suggested directive.\n\t * @param {String} [type] The type of loader. Loader types are defined as constants on the AbstractLoader class,\n\t * such as {{#crossLink \"IMAGE:property\"}}{{/crossLink}}, {{#crossLink \"CSS:property\"}}{{/crossLink}}, etc.\n\t * @extends EventDispatcher\n\t */\n\tfunction AbstractLoader(loadItem, preferXHR, type) {\n\t\tthis.EventDispatcher_constructor();\n\n\t\t// public properties\n\t\t/**\n\t\t * If the loader has completed loading. This provides a quick check, but also ensures that the different approaches\n\t\t * used for loading do not pile up resulting in more than one `complete` {{#crossLink \"Event\"}}{{/crossLink}}.\n\t\t * @property loaded\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.loaded = false;\n\n\t\t/**\n\t\t * Determine if the loader was canceled. Canceled loads will not fire complete events. Note that this property\n\t\t * is readonly, so {{#crossLink \"LoadQueue\"}}{{/crossLink}} queues should be closed using {{#crossLink \"LoadQueue/close\"}}{{/crossLink}}\n\t\t * instead.\n\t\t * @property canceled\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t * @readonly\n\t\t */\n\t\tthis.canceled = false;\n\n\t\t/**\n\t\t * The current load progress (percentage) for this item. This will be a number between 0 and 1.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *     var queue = new createjs.LoadQueue();\n\t\t *     queue.loadFile(\"largeImage.png\");\n\t\t *     queue.on(\"progress\", function() {\n\t\t *         console.log(\"Progress:\", queue.progress, event.progress);\n\t\t *     });\n\t\t *\n\t\t * @property progress\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.progress = 0;\n\n\t\t/**\n\t\t * The type of item this loader will load. See {{#crossLink \"AbstractLoader\"}}{{/crossLink}} for a full list of\n\t\t * supported types.\n\t\t * @property type\n\t\t * @type {String}\n\t\t */\n\t\tthis.type = type;\n\n\t\t/**\n\t\t * A formatter function that converts the loaded raw result into the final result. For example, the JSONLoader\n\t\t * converts a string of text into a JavaScript object. Not all loaders have a resultFormatter, and this property\n\t\t * can be overridden to provide custom formatting.\n\t\t *\n\t\t * Optionally, a resultFormatter can return a callback function in cases where the formatting needs to be\n\t\t * asynchronous, such as creating a new image. The callback function is passed 2 parameters, which are callbacks\n\t\t * to handle success and error conditions in the resultFormatter. Note that the resultFormatter method is\n\t\t * called in the current scope, as well as the success and error callbacks.\n\t\t *\n\t\t * <h4>Example asynchronous resultFormatter</h4>\n\t\t *\n\t\t * \tfunction _formatResult(loader) {\n\t\t * \t\treturn function(success, error) {\n\t\t * \t\t\tif (errorCondition) { error(errorDetailEvent); }\n\t\t * \t\t\tsuccess(result);\n\t\t * \t\t}\n\t\t * \t}\n\t\t * @property resultFormatter\n\t\t * @type {Function}\n\t\t * @default null\n\t\t */\n\t\tthis.resultFormatter = null;\n\n\t\t// protected properties\n\t\t/**\n\t\t * The {{#crossLink \"LoadItem\"}}{{/crossLink}} this loader represents. Note that this is null in a {{#crossLink \"LoadQueue\"}}{{/crossLink}},\n\t\t * but will be available on loaders such as {{#crossLink \"XMLLoader\"}}{{/crossLink}} and {{#crossLink \"ImageLoader\"}}{{/crossLink}}.\n\t\t * @property _item\n\t\t * @type {LoadItem|Object}\n\t\t * @private\n\t\t */\n\t\tif (loadItem) {\n\t\t\tthis._item = createjs.LoadItem.create(loadItem);\n\t\t} else {\n\t\t\tthis._item = null;\n\t\t}\n\n\t\t/**\n\t\t * Whether the loader will try and load content using XHR (true) or HTML tags (false).\n\t\t * @property _preferXHR\n\t\t * @type {Boolean}\n\t\t * @private\n\t\t */\n\t\tthis._preferXHR = preferXHR;\n\n\t\t/**\n\t\t * The loaded result after it is formatted by an optional {{#crossLink \"resultFormatter\"}}{{/crossLink}}. For\n\t\t * items that are not formatted, this will be the same as the {{#crossLink \"_rawResult:property\"}}{{/crossLink}}.\n\t\t * The result is accessed using the {{#crossLink \"getResult\"}}{{/crossLink}} method.\n\t\t * @property _result\n\t\t * @type {Object|String}\n\t\t * @private\n\t\t */\n\t\tthis._result = null;\n\n\t\t/**\n\t\t * The loaded result before it is formatted. The rawResult is accessed using the {{#crossLink \"getResult\"}}{{/crossLink}}\n\t\t * method, and passing `true`.\n\t\t * @property _rawResult\n\t\t * @type {Object|String}\n\t\t * @private\n\t\t */\n\t\tthis._rawResult = null;\n\n\t\t/**\n\t\t * A list of items that loaders load behind the scenes. This does not include the main item the loader is\n\t\t * responsible for loading. Examples of loaders that have sub-items include the {{#crossLink \"SpriteSheetLoader\"}}{{/crossLink}} and\n\t\t * {{#crossLink \"ManifestLoader\"}}{{/crossLink}}.\n\t\t * @property _loadItems\n\t\t * @type {null}\n\t\t * @protected\n\t\t */\n\t\tthis._loadedItems = null;\n\n\t\t/**\n\t\t * The attribute the items loaded using tags use for the source.\n\t\t * @type {string}\n\t\t * @default null\n\t\t * @private\n\t\t */\n\t\tthis._tagSrcAttribute = null;\n\n\t\t/**\n\t\t * An HTML tag (or similar) that a loader may use to load HTML content, such as images, scripts, etc.\n\t\t * @property _tag\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n\t\tthis._tag = null;\n\t};\n\n\tvar p = createjs.extend(AbstractLoader, createjs.EventDispatcher);\n\tvar s = AbstractLoader;\n\n\t// Remove these @deprecated properties after 1.0\n\ttry {\n\t\tObject.defineProperties(s, {\n\t\t\tPOST: { get: createjs.deprecate(function() { return createjs.Methods.POST; }, \"AbstractLoader.POST\") },\n\t\t\tGET: { get: createjs.deprecate(function() { return createjs.Methods.GET; }, \"AbstractLoader.GET\") },\n\n\t\t\tBINARY: { get: createjs.deprecate(function() { return createjs.Types.BINARY; }, \"AbstractLoader.BINARY\") },\n\t\t\tCSS: { get: createjs.deprecate(function() { return createjs.Types.CSS; }, \"AbstractLoader.CSS\") },\n\t\t\tFONT: { get: createjs.deprecate(function() { return createjs.Types.FONT; }, \"AbstractLoader.FONT\") },\n\t\t\tFONTCSS: { get: createjs.deprecate(function() { return createjs.Types.FONTCSS; }, \"AbstractLoader.FONTCSS\") },\n\t\t\tIMAGE: { get: createjs.deprecate(function() { return createjs.Types.IMAGE; }, \"AbstractLoader.IMAGE\") },\n\t\t\tJAVASCRIPT: { get: createjs.deprecate(function() { return createjs.Types.JAVASCRIPT; }, \"AbstractLoader.JAVASCRIPT\") },\n\t\t\tJSON: { get: createjs.deprecate(function() { return createjs.Types.JSON; }, \"AbstractLoader.JSON\") },\n\t\t\tJSONP: { get: createjs.deprecate(function() { return createjs.Types.JSONP; }, \"AbstractLoader.JSONP\") },\n\t\t\tMANIFEST: { get: createjs.deprecate(function() { return createjs.Types.MANIFEST; }, \"AbstractLoader.MANIFEST\") },\n\t\t\tSOUND: { get: createjs.deprecate(function() { return createjs.Types.SOUND; }, \"AbstractLoader.SOUND\") },\n\t\t\tVIDEO: { get: createjs.deprecate(function() { return createjs.Types.VIDEO; }, \"AbstractLoader.VIDEO\") },\n\t\t\tSPRITESHEET: { get: createjs.deprecate(function() { return createjs.Types.SPRITESHEET; }, \"AbstractLoader.SPRITESHEET\") },\n\t\t\tSVG: { get: createjs.deprecate(function() { return createjs.Types.SVG; }, \"AbstractLoader.SVG\") },\n\t\t\tTEXT: { get: createjs.deprecate(function() { return createjs.Types.TEXT; }, \"AbstractLoader.TEXT\") },\n\t\t\tXML: { get: createjs.deprecate(function() { return createjs.Types.XML; }, \"AbstractLoader.XML\") }\n\t\t});\n\t} catch (e) {}\n\n// Events\n\t/**\n\t * The {{#crossLink \"ProgressEvent\"}}{{/crossLink}} that is fired when the overall progress changes. Prior to\n\t * version 0.6.0, this was just a regular {{#crossLink \"Event\"}}{{/crossLink}}.\n\t * @event progress\n\t * @since 0.3.0\n\t */\n\n\t/**\n\t * The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when a load starts.\n\t * @event loadstart\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @since 0.3.1\n\t */\n\n\t/**\n\t * The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when the entire queue has been loaded.\n\t * @event complete\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @since 0.3.0\n\t */\n\n\t/**\n\t * The {{#crossLink \"ErrorEvent\"}}{{/crossLink}} that is fired when the loader encounters an error. If the error was\n\t * encountered by a file, the event will contain the item that caused the error. Prior to version 0.6.0, this was\n\t * just a regular {{#crossLink \"Event\"}}{{/crossLink}}.\n\t * @event error\n\t * @since 0.3.0\n\t */\n\n\t/**\n\t * The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when the loader encounters an internal file load error.\n\t * This enables loaders to maintain internal queues, and surface file load errors.\n\t * @event fileerror\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type (\"fileerror\")\n\t * @param {LoadItem|object} The item that encountered the error\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when a loader internally loads a file. This enables\n\t * loaders such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}} to maintain internal {{#crossLink \"LoadQueue\"}}{{/crossLink}}s\n\t * and notify when they have loaded a file. The {{#crossLink \"LoadQueue\"}}{{/crossLink}} class dispatches a\n\t * slightly different {{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}} event.\n\t * @event fileload\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type (\"fileload\")\n\t * @param {Object} item The file item which was specified in the {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}}\n\t * or {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}} call. If only a string path or tag was specified, the\n\t * object will contain that value as a `src` property.\n\t * @param {Object} result The HTML tag or parsed result of the loaded item.\n\t * @param {Object} rawResult The unprocessed result, usually the raw text or binary data before it is converted\n\t * to a usable object.\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * The {{#crossLink \"Event\"}}{{/crossLink}} that is fired after the internal request is created, but before a load.\n\t * This allows updates to the loader for specific loading needs, such as binary or XHR image loading.\n\t * @event initialize\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type (\"initialize\")\n\t * @param {AbstractLoader} loader The loader that has been initialized.\n\t */\n\n\n\t/**\n\t * Get a reference to the manifest item that is loaded by this loader. In some cases this will be the value that was\n\t * passed into {{#crossLink \"LoadQueue\"}}{{/crossLink}} using {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}} or\n\t * {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}. However if only a String path was passed in, then it will\n\t * be a {{#crossLink \"LoadItem\"}}{{/crossLink}}.\n\t * @method getItem\n\t * @return {Object} The manifest item that this loader is responsible for loading.\n\t * @since 0.6.0\n\t */\n\tp.getItem = function () {\n\t\treturn this._item;\n\t};\n\n\t/**\n\t * Get a reference to the content that was loaded by the loader (only available after the {{#crossLink \"complete:event\"}}{{/crossLink}}\n\t * event is dispatched.\n\t * @method getResult\n\t * @param {Boolean} [raw=false] Determines if the returned result will be the formatted content, or the raw loaded\n\t * data (if it exists).\n\t * @return {Object}\n\t * @since 0.6.0\n\t */\n\tp.getResult = function (raw) {\n\t\treturn raw ? this._rawResult : this._result;\n\t};\n\n\t/**\n\t * Return the `tag` this object creates or uses for loading.\n\t * @method getTag\n\t * @return {Object} The tag instance\n\t * @since 0.6.0\n\t */\n\tp.getTag = function () {\n\t\treturn this._tag;\n\t};\n\n\t/**\n\t * Set the `tag` this item uses for loading.\n\t * @method setTag\n\t * @param {Object} tag The tag instance\n\t * @since 0.6.0\n\t */\n\tp.setTag = function(tag) {\n\t  this._tag = tag;\n\t};\n\n\t/**\n\t * Begin loading the item. This method is required when using a loader by itself.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var queue = new createjs.LoadQueue();\n\t *      queue.on(\"complete\", handleComplete);\n\t *      queue.loadManifest(fileArray, false); // Note the 2nd argument that tells the queue not to start loading yet\n\t *      queue.load();\n\t *\n\t * @method load\n\t */\n\tp.load = function () {\n\t\tthis._createRequest();\n\n\t\tthis._request.on(\"complete\", this, this);\n\t\tthis._request.on(\"progress\", this, this);\n\t\tthis._request.on(\"loadStart\", this, this);\n\t\tthis._request.on(\"abort\", this, this);\n\t\tthis._request.on(\"timeout\", this, this);\n\t\tthis._request.on(\"error\", this, this);\n\n\t\tvar evt = new createjs.Event(\"initialize\");\n\t\tevt.loader = this._request;\n\t\tthis.dispatchEvent(evt);\n\n\t\tthis._request.load();\n\t};\n\n\t/**\n\t * Close the the item. This will stop any open requests (although downloads using HTML tags may still continue in\n\t * the background), but events will not longer be dispatched.\n\t * @method cancel\n\t */\n\tp.cancel = function () {\n\t\tthis.canceled = true;\n\t\tthis.destroy();\n\t};\n\n\t/**\n\t * Clean up the loader.\n\t * @method destroy\n\t */\n\tp.destroy = function() {\n\t\tif (this._request) {\n\t\t\tthis._request.removeAllEventListeners();\n\t\t\tthis._request.destroy();\n\t\t}\n\n\t\tthis._request = null;\n\n\t\tthis._item = null;\n\t\tthis._rawResult = null;\n\t\tthis._result = null;\n\n\t\tthis._loadItems = null;\n\n\t\tthis.removeAllEventListeners();\n\t};\n\n\t/**\n\t * Get any items loaded internally by the loader. The enables loaders such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}}\n\t * to expose items it loads internally.\n\t * @method getLoadedItems\n\t * @return {Array} A list of the items loaded by the loader.\n\t * @since 0.6.0\n\t */\n\tp.getLoadedItems = function () {\n\t\treturn this._loadedItems;\n\t};\n\n\n\t// Private methods\n\t/**\n\t * Create an internal request used for loading. By default, an {{#crossLink \"XHRRequest\"}}{{/crossLink}} or\n\t * {{#crossLink \"TagRequest\"}}{{/crossLink}} is created, depending on the value of {{#crossLink \"preferXHR:property\"}}{{/crossLink}}.\n\t * Other loaders may override this to use different request types, such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}},\n\t * which uses {{#crossLink \"JSONLoader\"}}{{/crossLink}} or {{#crossLink \"JSONPLoader\"}}{{/crossLink}} under the hood.\n\t * @method _createRequest\n\t * @protected\n\t */\n\tp._createRequest = function() {\n\t\tif (!this._preferXHR) {\n\t\t\tthis._request = new createjs.TagRequest(this._item, this._tag || this._createTag(), this._tagSrcAttribute);\n\t\t} else {\n\t\t\tthis._request = new createjs.XHRRequest(this._item);\n\t\t}\n\t};\n\n\t/**\n\t * Create the HTML tag used for loading. This method does nothing by default, and needs to be implemented\n\t * by loaders that require tag loading.\n\t * @method _createTag\n\t * @param {String} src The tag source\n\t * @return {HTMLElement} The tag that was created\n\t * @protected\n\t */\n\tp._createTag = function(src) { return null; };\n\n\t/**\n\t * Dispatch a loadstart {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"AbstractLoader/loadstart:event\"}}{{/crossLink}}\n\t * event for details on the event payload.\n\t * @method _sendLoadStart\n\t * @protected\n\t */\n\tp._sendLoadStart = function () {\n\t\tif (this._isCanceled()) { return; }\n\t\tthis.dispatchEvent(\"loadstart\");\n\t};\n\n\t/**\n\t * Dispatch a {{#crossLink \"ProgressEvent\"}}{{/crossLink}}.\n\t * @method _sendProgress\n\t * @param {Number | Object} value The progress of the loaded item, or an object containing <code>loaded</code>\n\t * and <code>total</code> properties.\n\t * @protected\n\t */\n\tp._sendProgress = function (value) {\n\t\tif (this._isCanceled()) { return; }\n\t\tvar event = null;\n\t\tif (typeof(value) == \"number\") {\n\t\t\tthis.progress = value;\n\t\t\tevent = new createjs.ProgressEvent(this.progress);\n\t\t} else {\n\t\t\tevent = value;\n\t\t\tthis.progress = value.loaded / value.total;\n\t\t\tevent.progress = this.progress;\n\t\t\tif (isNaN(this.progress) || this.progress == Infinity) { this.progress = 0; }\n\t\t}\n\t\tthis.hasEventListener(\"progress\") && this.dispatchEvent(event);\n\t};\n\n\t/**\n\t * Dispatch a complete {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"AbstractLoader/complete:event\"}}{{/crossLink}} event\n\t * @method _sendComplete\n\t * @protected\n\t */\n\tp._sendComplete = function () {\n\t\tif (this._isCanceled()) { return; }\n\n\t\tthis.loaded = true;\n\n\t\tvar event = new createjs.Event(\"complete\");\n\t\tevent.rawResult = this._rawResult;\n\n\t\tif (this._result != null) {\n\t\t\tevent.result = this._result;\n\t\t}\n\n\t\tthis.dispatchEvent(event);\n\t};\n\n\t/**\n\t * Dispatch an error {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"AbstractLoader/error:event\"}}{{/crossLink}}\n\t * event for details on the event payload.\n\t * @method _sendError\n\t * @param {ErrorEvent} event The event object containing specific error properties.\n\t * @protected\n\t */\n\tp._sendError = function (event) {\n\t\tif (this._isCanceled() || !this.hasEventListener(\"error\")) { return; }\n\t\tif (event == null) {\n\t\t\tevent = new createjs.ErrorEvent(\"PRELOAD_ERROR_EMPTY\"); // TODO: Populate error\n\t\t}\n\t\tthis.dispatchEvent(event);\n\t};\n\n\t/**\n\t * Determine if the load has been canceled. This is important to ensure that method calls or asynchronous events\n\t * do not cause issues after the queue has been cleaned up.\n\t * @method _isCanceled\n\t * @return {Boolean} If the loader has been canceled.\n\t * @protected\n\t */\n\tp._isCanceled = function () {\n\t\tif (window.createjs == null || this.canceled) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\t/**\n\t * A custom result formatter function, which is called just before a request dispatches its complete event. Most\n\t * loader types already have an internal formatter, but this can be user-overridden for custom formatting. The\n\t * formatted result will be available on Loaders using {{#crossLink \"getResult\"}}{{/crossLink}}, and passing `true`.\n\t * @property resultFormatter\n\t * @type Function\n\t * @return {Object} The formatted result\n\t * @since 0.6.0\n\t */\n\tp.resultFormatter = null;\n\n\t/**\n\t * Handle events from internal requests. By default, loaders will handle, and redispatch the necessary events, but\n\t * this method can be overridden for custom behaviours.\n\t * @method handleEvent\n\t * @param {Event} event The event that the internal request dispatches.\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp.handleEvent = function (event) {\n\t\tswitch (event.type) {\n\t\t\tcase \"complete\":\n\t\t\t\tthis._rawResult = event.target._response;\n\t\t\t\tvar result = this.resultFormatter && this.resultFormatter(this);\n\t\t\t\t// The resultFormatter is asynchronous\n\t\t\t\tif (result instanceof Function) {\n\t\t\t\t\tresult.call(this,\n\t\t\t\t\t\t\tcreatejs.proxy(this._resultFormatSuccess, this),\n\t\t\t\t\t\t\tcreatejs.proxy(this._resultFormatFailed, this)\n\t\t\t\t\t);\n\t\t\t\t// The result formatter is synchronous\n\t\t\t\t} else {\n\t\t\t\t\tthis._result =  result || this._rawResult;\n\t\t\t\t\tthis._sendComplete();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"progress\":\n\t\t\t\tthis._sendProgress(event);\n\t\t\t\tbreak;\n\t\t\tcase \"error\":\n\t\t\t\tthis._sendError(event);\n\t\t\t\tbreak;\n\t\t\tcase \"loadstart\":\n\t\t\t\tthis._sendLoadStart();\n\t\t\t\tbreak;\n\t\t\tcase \"abort\":\n\t\t\tcase \"timeout\":\n\t\t\t\tif (!this._isCanceled()) {\n\t\t\t\t\tthis.dispatchEvent(new createjs.ErrorEvent(\"PRELOAD_\" + event.type.toUpperCase() + \"_ERROR\"));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\t/**\n\t * The \"success\" callback passed to {{#crossLink \"AbstractLoader/resultFormatter\"}}{{/crossLink}} asynchronous\n\t * functions.\n\t * @method _resultFormatSuccess\n\t * @param {Object} result The formatted result\n\t * @private\n\t */\n\tp._resultFormatSuccess = function (result) {\n\t\tthis._result = result;\n\t\tthis._sendComplete();\n\t};\n\n\t/**\n\t * The \"error\" callback passed to {{#crossLink \"AbstractLoader/resultFormatter\"}}{{/crossLink}} asynchronous\n\t * functions.\n\t * @method _resultFormatSuccess\n\t * @param {Object} error The error event\n\t * @private\n\t */\n\tp._resultFormatFailed = function (event) {\n\t\tthis._sendError(event);\n\t};\n\n\t/**\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\tp.toString = function () {\n\t\treturn \"[PreloadJS AbstractLoader]\";\n\t};\n\n\tcreatejs.AbstractLoader = createjs.promote(AbstractLoader, \"EventDispatcher\");\n\n}());\n\n//##############################################################################\n// AbstractMediaLoader.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * The AbstractMediaLoader is a base class that handles some of the shared methods and properties of loaders that\n\t * handle HTML media elements, such as Video and Audio.\n\t * @class AbstractMediaLoader\n\t * @param {LoadItem|Object} loadItem\n\t * @param {Boolean} preferXHR\n\t * @param {String} type The type of media to load. Usually \"video\" or \"audio\".\n\t * @extends AbstractLoader\n\t * @constructor\n\t */\n\tfunction AbstractMediaLoader(loadItem, preferXHR, type) {\n\t\tthis.AbstractLoader_constructor(loadItem, preferXHR, type);\n\n\t\t// public properties\n\t\tthis.resultFormatter = this._formatResult;\n\n\t\t// protected properties\n\t\tthis._tagSrcAttribute = \"src\";\n\n        this.on(\"initialize\", this._updateXHR, this);\n\t};\n\n\tvar p = createjs.extend(AbstractMediaLoader, createjs.AbstractLoader);\n\n\t// static properties\n\t// public methods\n\tp.load = function () {\n\t\t// TagRequest will handle most of this, but Sound / Video need a few custom properties, so just handle them here.\n\t\tif (!this._tag) {\n\t\t\tthis._tag = this._createTag(this._item.src);\n\t\t}\n\n\t\tthis._tag.preload = \"auto\";\n\t\tthis._tag.load();\n\n\t\tthis.AbstractLoader_load();\n\t};\n\n\t// protected methods\n\t/**\n\t * Creates a new tag for loading if it doesn't exist yet.\n\t * @method _createTag\n\t * @private\n\t */\n\tp._createTag = function () {};\n\n\n\tp._createRequest = function() {\n\t\tif (!this._preferXHR) {\n\t\t\tthis._request = new createjs.MediaTagRequest(this._item, this._tag || this._createTag(), this._tagSrcAttribute);\n\t\t} else {\n\t\t\tthis._request = new createjs.XHRRequest(this._item);\n\t\t}\n\t};\n\n    // protected methods\n    /**\n     * Before the item loads, set its mimeType and responseType.\n     * @property _updateXHR\n     * @param {Event} event\n     * @private\n     */\n    p._updateXHR = function (event) {\n        // Only exists for XHR\n        if (event.loader.setResponseType) {\n            event.loader.setResponseType(\"blob\");\n        }\n    };\n\n\t/**\n\t * The result formatter for media files.\n\t * @method _formatResult\n\t * @param {AbstractLoader} loader\n\t * @returns {HTMLVideoElement|HTMLAudioElement}\n\t * @private\n\t */\n\tp._formatResult = function (loader) {\n\t\tthis._tag.removeEventListener && this._tag.removeEventListener(\"canplaythrough\", this._loadedHandler);\n\t\tthis._tag.onstalled = null;\n\t\tif (this._preferXHR) {\n            var URL = window.URL || window.webkitURL;\n            var result = loader.getResult(true);\n\n\t\t\tloader.getTag().src = URL.createObjectURL(result);\n\t\t}\n\t\treturn loader.getTag();\n\t};\n\n\tcreatejs.AbstractMediaLoader = createjs.promote(AbstractMediaLoader, \"AbstractLoader\");\n\n}());\n\n//##############################################################################\n// AbstractRequest.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\t/**\n\t * A base class for actual data requests, such as {{#crossLink \"XHRRequest\"}}{{/crossLink}}, {{#crossLink \"TagRequest\"}}{{/crossLink}},\n\t * and {{#crossLink \"MediaRequest\"}}{{/crossLink}}. PreloadJS loaders will typically use a data loader under the\n\t * hood to get data.\n\t * @class AbstractRequest\n\t * @param {LoadItem} item\n\t * @constructor\n\t */\n\tvar AbstractRequest = function (item) {\n\t\tthis._item = item;\n\t};\n\n\tvar p = createjs.extend(AbstractRequest, createjs.EventDispatcher);\n\n\t// public methods\n\t/**\n\t * Begin a load.\n\t * @method load\n\t */\n\tp.load =  function() {};\n\n\t/**\n\t * Clean up a request.\n\t * @method destroy\n\t */\n\tp.destroy = function() {};\n\n\t/**\n\t * Cancel an in-progress request.\n\t * @method cancel\n\t */\n\tp.cancel = function() {};\n\n\tcreatejs.AbstractRequest = createjs.promote(AbstractRequest, \"EventDispatcher\");\n\n}());\n\n//##############################################################################\n// TagRequest.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * An {{#crossLink \"AbstractRequest\"}}{{/crossLink}} that loads HTML tags, such as images and scripts.\n\t * @class TagRequest\n\t * @param {LoadItem} loadItem\n\t * @param {HTMLElement} tag\n\t * @param {String} srcAttribute The tag attribute that specifies the source, such as \"src\", \"href\", etc.\n\t */\n\tfunction TagRequest(loadItem, tag, srcAttribute) {\n\t\tthis.AbstractRequest_constructor(loadItem);\n\n\t\t// protected properties\n\t\t/**\n\t\t * The HTML tag instance that is used to load.\n\t\t * @property _tag\n\t\t * @type {HTMLElement}\n\t\t * @protected\n\t\t */\n\t\tthis._tag = tag;\n\n\t\t/**\n\t\t * The tag attribute that specifies the source, such as \"src\", \"href\", etc.\n\t\t * @property _tagSrcAttribute\n\t\t * @type {String}\n\t\t * @protected\n\t\t */\n\t\tthis._tagSrcAttribute = srcAttribute;\n\n\t\t/**\n\t\t * A method closure used for handling the tag load event.\n\t\t * @property _loadedHandler\n\t\t * @type {Function}\n\t\t * @private\n\t\t */\n\t\tthis._loadedHandler = createjs.proxy(this._handleTagComplete, this);\n\n\t\t/**\n\t\t * Determines if the element was added to the DOM automatically by PreloadJS, so it can be cleaned up after.\n\t\t * @property _addedToDOM\n\t\t * @type {Boolean}\n\t\t * @private\n\t\t */\n\t\tthis._addedToDOM = false;\n\n\t};\n\n\tvar p = createjs.extend(TagRequest, createjs.AbstractRequest);\n\n\t// public methods\n\tp.load = function () {\n\t\tthis._tag.onload = createjs.proxy(this._handleTagComplete, this);\n\t\tthis._tag.onreadystatechange = createjs.proxy(this._handleReadyStateChange, this);\n\t\tthis._tag.onerror = createjs.proxy(this._handleError, this);\n\n\t\tvar evt = new createjs.Event(\"initialize\");\n\t\tevt.loader = this._tag;\n\n\t\tthis.dispatchEvent(evt);\n\n\t\tthis._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), this._item.loadTimeout);\n\n\t\tthis._tag[this._tagSrcAttribute] = this._item.src;\n\n\t\t// wdg:: Append the tag AFTER setting the src, or SVG loading on iOS will fail.\n\t\tif (this._tag.parentNode == null) {\n\t\t\tcreatejs.DomUtils.appendToBody(this._tag);\n\t\t\tthis._addedToDOM = true;\n\t\t}\n\t};\n\n\tp.destroy = function() {\n\t\tthis._clean();\n\t\tthis._tag = null;\n\n\t\tthis.AbstractRequest_destroy();\n\t};\n\n\t// private methods\n\t/**\n\t * Handle the readyStateChange event from a tag. We need this in place of the `onload` callback (mainly SCRIPT\n\t * and LINK tags), but other cases may exist.\n\t * @method _handleReadyStateChange\n\t * @private\n\t */\n\tp._handleReadyStateChange = function () {\n\t\tclearTimeout(this._loadTimeout);\n\t\t// This is strictly for tags in browsers that do not support onload.\n\t\tvar tag = this._tag;\n\n\t\t// Complete is for old IE support.\n\t\tif (tag.readyState == \"loaded\" || tag.readyState == \"complete\") {\n\t\t\tthis._handleTagComplete();\n\t\t}\n\t};\n\n\t/**\n\t * Handle any error events from the tag.\n\t * @method _handleError\n\t * @protected\n\t */\n\tp._handleError = function() {\n\t\tthis._clean();\n\t\tthis.dispatchEvent(\"error\");\n\t};\n\n\t/**\n\t * Handle the tag's onload callback.\n\t * @method _handleTagComplete\n\t * @private\n\t */\n\tp._handleTagComplete = function () {\n\t\tthis._rawResult = this._tag;\n\t\tthis._result = this.resultFormatter && this.resultFormatter(this) || this._rawResult;\n\n\t\tthis._clean();\n\n\t\tthis.dispatchEvent(\"complete\");\n\t};\n\n\t/**\n\t * The tag request has not loaded within the time specified in loadTimeout.\n\t * @method _handleError\n\t * @param {Object} event The XHR error event.\n\t * @private\n\t */\n\tp._handleTimeout = function () {\n\t\tthis._clean();\n\t\tthis.dispatchEvent(new createjs.Event(\"timeout\"));\n\t};\n\n\t/**\n\t * Remove event listeners, but don't destroy the request object\n\t * @method _clean\n\t * @private\n\t */\n\tp._clean = function() {\n\t\tthis._tag.onload = null;\n\t\tthis._tag.onreadystatechange = null;\n\t\tthis._tag.onerror = null;\n\t\tif (this._addedToDOM && this._tag.parentNode != null) {\n\t\t\tthis._tag.parentNode.removeChild(this._tag);\n\t\t}\n\t\tclearTimeout(this._loadTimeout);\n\t};\n\n\t/**\n\t * Handle a stalled audio event. The main place this happens is with HTMLAudio in Chrome when playing back audio\n\t * that is already in a load, but not complete.\n\t * @method _handleStalled\n\t * @private\n\t */\n\tp._handleStalled = function () {\n\t\t//Ignore, let the timeout take care of it. Sometimes its not really stopped.\n\t};\n\n\tcreatejs.TagRequest = createjs.promote(TagRequest, \"AbstractRequest\");\n\n}());\n\n//##############################################################################\n// MediaTagRequest.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * An {{#crossLink \"TagRequest\"}}{{/crossLink}} that loads HTML tags for video and audio.\n\t * @class MediaTagRequest\n\t * @param {LoadItem} loadItem\n\t * @param {HTMLAudioElement|HTMLVideoElement} tag\n\t * @param {String} srcAttribute The tag attribute that specifies the source, such as \"src\", \"href\", etc.\n\t * @constructor\n\t */\n\tfunction MediaTagRequest(loadItem, tag, srcAttribute) {\n\t\tthis.AbstractRequest_constructor(loadItem);\n\n\t\t// protected properties\n\t\tthis._tag = tag;\n\t\tthis._tagSrcAttribute = srcAttribute;\n\t\tthis._loadedHandler = createjs.proxy(this._handleTagComplete, this);\n\t};\n\n\tvar p = createjs.extend(MediaTagRequest, createjs.TagRequest);\n\tvar s = MediaTagRequest;\n\n\t// public methods\n\tp.load = function () {\n\t\tvar sc = createjs.proxy(this._handleStalled, this);\n\t\tthis._stalledCallback = sc;\n\n\t\tvar pc = createjs.proxy(this._handleProgress, this);\n\t\tthis._handleProgress = pc;\n\n\t\tthis._tag.addEventListener(\"stalled\", sc);\n\t\tthis._tag.addEventListener(\"progress\", pc);\n\n\t\t// This will tell us when audio is buffered enough to play through, but not when its loaded.\n\t\t// The tag doesn't keep loading in Chrome once enough has buffered, and we have decided that behaviour is sufficient.\n\t\tthis._tag.addEventListener && this._tag.addEventListener(\"canplaythrough\", this._loadedHandler, false); // canplaythrough callback doesn't work in Chrome, so we use an event.\n\n\t\tthis.TagRequest_load();\n\t};\n\n\t// private methods\n\tp._handleReadyStateChange = function () {\n\t\tclearTimeout(this._loadTimeout);\n\t\t// This is strictly for tags in browsers that do not support onload.\n\t\tvar tag = this._tag;\n\n\t\t// Complete is for old IE support.\n\t\tif (tag.readyState == \"loaded\" || tag.readyState == \"complete\") {\n\t\t\tthis._handleTagComplete();\n\t\t}\n\t};\n\n\tp._handleStalled = function () {\n\t\t//Ignore, let the timeout take care of it. Sometimes its not really stopped.\n\t};\n\n\t/**\n\t * An XHR request has reported progress.\n\t * @method _handleProgress\n\t * @param {Object} event The XHR progress event.\n\t * @private\n\t */\n\tp._handleProgress = function (event) {\n\t\tif (!event || event.loaded > 0 && event.total == 0) {\n\t\t\treturn; // Sometimes we get no \"total\", so just ignore the progress event.\n\t\t}\n\n\t\tvar newEvent = new createjs.ProgressEvent(event.loaded, event.total);\n\t\tthis.dispatchEvent(newEvent);\n\t};\n\n\t// protected methods\n\tp._clean = function () {\n\t\tthis._tag.removeEventListener && this._tag.removeEventListener(\"canplaythrough\", this._loadedHandler);\n\t\tthis._tag.removeEventListener(\"stalled\", this._stalledCallback);\n\t\tthis._tag.removeEventListener(\"progress\", this._progressCallback);\n\n\t\tthis.TagRequest__clean();\n\t};\n\n\tcreatejs.MediaTagRequest = createjs.promote(MediaTagRequest, \"TagRequest\");\n\n}());\n\n//##############################################################################\n// XHRRequest.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n// constructor\n\t/**\n\t * A preloader that loads items using XHR requests, usually XMLHttpRequest. However XDomainRequests will be used\n\t * for cross-domain requests if possible, and older versions of IE fall back on to ActiveX objects when necessary.\n\t * XHR requests load the content as text or binary data, provide progress and consistent completion events, and\n\t * can be canceled during load. Note that XHR is not supported in IE 6 or earlier, and is not recommended for\n\t * cross-domain loading.\n\t * @class XHRRequest\n\t * @constructor\n\t * @param {Object} item The object that defines the file to load. Please see the {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}}\n\t * for an overview of supported file properties.\n\t * @extends AbstractLoader\n\t */\n\tfunction XHRRequest (item) {\n\t\tthis.AbstractRequest_constructor(item);\n\n\t\t// protected properties\n\t\t/**\n\t\t * A reference to the XHR request used to load the content.\n\t\t * @property _request\n\t\t * @type {XMLHttpRequest | XDomainRequest | ActiveX.XMLHTTP}\n\t\t * @private\n\t\t */\n\t\tthis._request = null;\n\n\t\t/**\n\t\t * A manual load timeout that is used for browsers that do not support the onTimeout event on XHR (XHR level 1,\n\t\t * typically IE9).\n\t\t * @property _loadTimeout\n\t\t * @type {Number}\n\t\t * @private\n\t\t */\n\t\tthis._loadTimeout = null;\n\n\t\t/**\n\t\t * The browser's XHR (XMLHTTPRequest) version. Supported versions are 1 and 2. There is no official way to detect\n\t\t * the version, so we use capabilities to make a best guess.\n\t\t * @property _xhrLevel\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t * @private\n\t\t */\n\t\tthis._xhrLevel = 1;\n\n\t\t/**\n\t\t * The response of a loaded file. This is set because it is expensive to look up constantly. This property will be\n\t\t * null until the file is loaded.\n\t\t * @property _response\n\t\t * @type {mixed}\n\t\t * @private\n\t\t */\n\t\tthis._response = null;\n\n\t\t/**\n\t\t * The response of the loaded file before it is modified. In most cases, content is converted from raw text to\n\t\t * an HTML tag or a formatted object which is set to the <code>result</code> property, but the developer may still\n\t\t * want to access the raw content as it was loaded.\n\t\t * @property _rawResponse\n\t\t * @type {String|Object}\n\t\t * @private\n\t\t */\n\t\tthis._rawResponse = null;\n\n\t\tthis._canceled = false;\n\n\t\t// Setup our event handlers now.\n\t\tthis._handleLoadStartProxy = createjs.proxy(this._handleLoadStart, this);\n\t\tthis._handleProgressProxy = createjs.proxy(this._handleProgress, this);\n\t\tthis._handleAbortProxy = createjs.proxy(this._handleAbort, this);\n\t\tthis._handleErrorProxy = createjs.proxy(this._handleError, this);\n\t\tthis._handleTimeoutProxy = createjs.proxy(this._handleTimeout, this);\n\t\tthis._handleLoadProxy = createjs.proxy(this._handleLoad, this);\n\t\tthis._handleReadyStateChangeProxy = createjs.proxy(this._handleReadyStateChange, this);\n\n\t\tif (!this._createXHR(item)) {\n\t\t\t//TODO: Throw error?\n\t\t}\n\t};\n\n\tvar p = createjs.extend(XHRRequest, createjs.AbstractRequest);\n\n// static properties\n\t/**\n\t * A list of XMLHTTP object IDs to try when building an ActiveX object for XHR requests in earlier versions of IE.\n\t * @property ACTIVEX_VERSIONS\n\t * @type {Array}\n\t * @since 0.4.2\n\t * @private\n\t */\n\tXHRRequest.ACTIVEX_VERSIONS = [\n\t\t\"Msxml2.XMLHTTP.6.0\",\n\t\t\"Msxml2.XMLHTTP.5.0\",\n\t\t\"Msxml2.XMLHTTP.4.0\",\n\t\t\"MSXML2.XMLHTTP.3.0\",\n\t\t\"MSXML2.XMLHTTP\",\n\t\t\"Microsoft.XMLHTTP\"\n\t];\n\n// Public methods\n\t/**\n\t * Look up the loaded result.\n\t * @method getResult\n\t * @param {Boolean} [raw=false] Return a raw result instead of a formatted result. This applies to content\n\t * loaded via XHR such as scripts, XML, CSS, and Images. If there is no raw result, the formatted result will be\n\t * returned instead.\n\t * @return {Object} A result object containing the content that was loaded, such as:\n\t * <ul>\n\t *      <li>An image tag (&lt;image /&gt;) for images</li>\n\t *      <li>A script tag for JavaScript (&lt;script /&gt;). Note that scripts loaded with tags may be added to the\n\t *      HTML head.</li>\n\t *      <li>A style tag for CSS (&lt;style /&gt;)</li>\n\t *      <li>Raw text for TEXT</li>\n\t *      <li>A formatted JavaScript object defined by JSON</li>\n\t *      <li>An XML document</li>\n\t *      <li>An binary arraybuffer loaded by XHR</li>\n\t * </ul>\n\t * Note that if a raw result is requested, but not found, the result will be returned instead.\n\t */\n\tp.getResult = function (raw) {\n\t\tif (raw && this._rawResponse) {\n\t\t\treturn this._rawResponse;\n\t\t}\n\t\treturn this._response;\n\t};\n\n\t// Overrides abstract method in AbstractRequest\n\tp.cancel = function () {\n\t\tthis.canceled = true;\n\t\tthis._clean();\n\t\tthis._request.abort();\n\t};\n\n\t// Overrides abstract method in AbstractLoader\n\tp.load = function () {\n\t\tif (this._request == null) {\n\t\t\tthis._handleError();\n\t\t\treturn;\n\t\t}\n\n\t\t//Events\n\t\tif (this._request.addEventListener != null) {\n\t\t\tthis._request.addEventListener(\"loadstart\", this._handleLoadStartProxy, false);\n\t\t\tthis._request.addEventListener(\"progress\", this._handleProgressProxy, false);\n\t\t\tthis._request.addEventListener(\"abort\", this._handleAbortProxy, false);\n\t\t\tthis._request.addEventListener(\"error\", this._handleErrorProxy, false);\n\t\t\tthis._request.addEventListener(\"timeout\", this._handleTimeoutProxy, false);\n\n\t\t\t// Note: We don't get onload in all browsers (earlier FF and IE). onReadyStateChange handles these.\n\t\t\tthis._request.addEventListener(\"load\", this._handleLoadProxy, false);\n\t\t\tthis._request.addEventListener(\"readystatechange\", this._handleReadyStateChangeProxy, false);\n\t\t} else {\n\t\t\t// IE9 support\n\t\t\tthis._request.onloadstart = this._handleLoadStartProxy;\n\t\t\tthis._request.onprogress = this._handleProgressProxy;\n\t\t\tthis._request.onabort = this._handleAbortProxy;\n\t\t\tthis._request.onerror = this._handleErrorProxy;\n\t\t\tthis._request.ontimeout = this._handleTimeoutProxy;\n\n\t\t\t// Note: We don't get onload in all browsers (earlier FF and IE). onReadyStateChange handles these.\n\t\t\tthis._request.onload = this._handleLoadProxy;\n\t\t\tthis._request.onreadystatechange = this._handleReadyStateChangeProxy;\n\t\t}\n\n\t\t// Set up a timeout if we don't have XHR2\n\t\tif (this._xhrLevel == 1) {\n\t\t\tthis._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), this._item.loadTimeout);\n\t\t}\n\n\t\t// Sometimes we get back 404s immediately, particularly when there is a cross origin request.  // note this does not catch in Chrome\n\t\ttry {\n\t\t\tif (!this._item.values) {\n\t\t\t\tthis._request.send();\n\t\t\t} else {\n\t\t\t\tthis._request.send(createjs.URLUtils.formatQueryString(this._item.values));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.dispatchEvent(new createjs.ErrorEvent(\"XHR_SEND\", null, error));\n\t\t}\n\t};\n\n\tp.setResponseType = function (type) {\n\t\t// Some old browsers doesn't support blob, so we convert arraybuffer to blob after response is downloaded\n\t\tif (type === 'blob') {\n\t\t\ttype = window.URL ? 'blob' : 'arraybuffer';\n\t\t\tthis._responseType = type;\n\t\t}\n\t\tthis._request.responseType = type;\n\t};\n\n\t/**\n\t * Get all the response headers from the XmlHttpRequest.\n\t *\n\t * <strong>From the docs:</strong> Return all the HTTP headers, excluding headers that are a case-insensitive match\n\t * for Set-Cookie or Set-Cookie2, as a single string, with each header line separated by a U+000D CR U+000A LF pair,\n\t * excluding the status line, and with each header name and header value separated by a U+003A COLON U+0020 SPACE\n\t * pair.\n\t * @method getAllResponseHeaders\n\t * @return {String}\n\t * @since 0.4.1\n\t */\n\tp.getAllResponseHeaders = function () {\n\t\tif (this._request.getAllResponseHeaders instanceof Function) {\n\t\t\treturn this._request.getAllResponseHeaders();\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t};\n\n\t/**\n\t * Get a specific response header from the XmlHttpRequest.\n\t *\n\t * <strong>From the docs:</strong> Returns the header field value from the response of which the field name matches\n\t * header, unless the field name is Set-Cookie or Set-Cookie2.\n\t * @method getResponseHeader\n\t * @param {String} header The header name to retrieve.\n\t * @return {String}\n\t * @since 0.4.1\n\t */\n\tp.getResponseHeader = function (header) {\n\t\tif (this._request.getResponseHeader instanceof Function) {\n\t\t\treturn this._request.getResponseHeader(header);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t};\n\n// protected methods\n\t/**\n\t * The XHR request has reported progress.\n\t * @method _handleProgress\n\t * @param {Object} event The XHR progress event.\n\t * @private\n\t */\n\tp._handleProgress = function (event) {\n\t\tif (!event || event.loaded > 0 && event.total == 0) {\n\t\t\treturn; // Sometimes we get no \"total\", so just ignore the progress event.\n\t\t}\n\n\t\tvar newEvent = new createjs.ProgressEvent(event.loaded, event.total);\n\t\tthis.dispatchEvent(newEvent);\n\t};\n\n\t/**\n\t * The XHR request has reported a load start.\n\t * @method _handleLoadStart\n\t * @param {Object} event The XHR loadStart event.\n\t * @private\n\t */\n\tp._handleLoadStart = function (event) {\n\t\tclearTimeout(this._loadTimeout);\n\t\tthis.dispatchEvent(\"loadstart\");\n\t};\n\n\t/**\n\t * The XHR request has reported an abort event.\n\t * @method handleAbort\n\t * @param {Object} event The XHR abort event.\n\t * @private\n\t */\n\tp._handleAbort = function (event) {\n\t\tthis._clean();\n\t\tthis.dispatchEvent(new createjs.ErrorEvent(\"XHR_ABORTED\", null, event));\n\t};\n\n\t/**\n\t * The XHR request has reported an error event.\n\t * @method _handleError\n\t * @param {Object} event The XHR error event.\n\t * @private\n\t */\n\tp._handleError = function (event) {\n\t\tthis._clean();\n\t\tthis.dispatchEvent(new createjs.ErrorEvent(event.message));\n\t};\n\n\t/**\n\t * The XHR request has reported a readyState change. Note that older browsers (IE 7 & 8) do not provide an onload\n\t * event, so we must monitor the readyStateChange to determine if the file is loaded.\n\t * @method _handleReadyStateChange\n\t * @param {Object} event The XHR readyStateChange event.\n\t * @private\n\t */\n\tp._handleReadyStateChange = function (event) {\n\t\tif (this._request.readyState == 4) {\n\t\t\tthis._handleLoad();\n\t\t}\n\t};\n\n\t/**\n\t * The XHR request has completed. This is called by the XHR request directly, or by a readyStateChange that has\n\t * <code>request.readyState == 4</code>. Only the first call to this method will be processed.\n\t *\n\t * Note that This method uses {{#crossLink \"_checkError\"}}{{/crossLink}} to determine if the server has returned an\n\t * error code.\n\t * @method _handleLoad\n\t * @param {Object} event The XHR load event.\n\t * @private\n\t */\n\tp._handleLoad = function (event) {\n\t\tif (this.loaded) {\n\t\t\treturn;\n\t\t}\n\t\tthis.loaded = true;\n\n\t\tvar error = this._checkError();\n\t\tif (error) {\n\t\t\tthis._handleError(error);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._response = this._getResponse();\n\t\t// Convert arraybuffer back to blob\n\t\tif (this._responseType === 'arraybuffer') {\n\t\t\ttry {\n\t\t\t\tthis._response = new Blob([this._response]);\n\t\t\t} catch (e) {\n\t\t\t\t// Fallback to use BlobBuilder if Blob constructor is not supported\n\t\t\t\t// Tested on Android 2.3 ~ 4.2 and iOS5 safari\n\t\t\t\twindow.BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n\t\t\t\tif (e.name === 'TypeError' && window.BlobBuilder) {\n\t\t\t\t\tvar builder = new BlobBuilder();\n\t\t\t\t\tbuilder.append(this._response);\n\t\t\t\t\tthis._response = builder.getBlob();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._clean();\n\n\t\tthis.dispatchEvent(new createjs.Event(\"complete\"));\n\t};\n\n\t/**\n\t * The XHR request has timed out. This is called by the XHR request directly, or via a <code>setTimeout</code>\n\t * callback.\n\t * @method _handleTimeout\n\t * @param {Object} [event] The XHR timeout event. This is occasionally null when called by the backup setTimeout.\n\t * @private\n\t */\n\tp._handleTimeout = function (event) {\n\t\tthis._clean();\n\t\tthis.dispatchEvent(new createjs.ErrorEvent(\"PRELOAD_TIMEOUT\", null, event));\n\t};\n\n// Protected\n\t/**\n\t * Determine if there is an error in the current load.\n\t * Currently this checks the status of the request for problem codes, and not actual response content:\n\t * <ul>\n\t *     <li>Status codes between 400 and 599 (HTTP error range)</li>\n\t *     <li>A status of 0, but *only when the application is running on a server*. If the application is running\n\t *     on `file:`, then it may incorrectly treat an error on local (or embedded applications) as a successful\n\t *     load.</li>\n\t * </ul>\n\t * @method _checkError\n\t * @return {Error} An error with the status code in the `message` argument.\n\t * @private\n\t */\n\tp._checkError = function () {\n\t\tvar status = parseInt(this._request.status);\n\t\tif (status >= 400 && status <= 599) {\n\t\t\treturn new Error(status);\n\t\t} else if (status == 0) {\n\t\t\tif ((/^https?:/).test(location.protocol)) { return new Error(0); }\n\t\t\treturn null; // Likely an embedded app.\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t};\n\n\n\t/**\n\t * Validate the response. Different browsers have different approaches, some of which throw errors when accessed\n\t * in other browsers. If there is no response, the <code>_response</code> property will remain null.\n\t * @method _getResponse\n\t * @private\n\t */\n\tp._getResponse = function () {\n\t\tif (this._response != null) {\n\t\t\treturn this._response;\n\t\t}\n\n\t\tif (this._request.response != null) {\n\t\t\treturn this._request.response;\n\t\t}\n\n\t\t// Android 2.2 uses .responseText\n\t\ttry {\n\t\t\tif (this._request.responseText != null) {\n\t\t\t\treturn this._request.responseText;\n\t\t\t}\n\t\t} catch (e) {\n\t\t}\n\n\t\t// When loading XML, IE9 does not return .response, instead it returns responseXML.xml\n\t\ttry {\n\t\t\tif (this._request.responseXML != null) {\n\t\t\t\treturn this._request.responseXML;\n\t\t\t}\n\t\t} catch (e) {\n\t\t}\n\n\t\treturn null;\n\t};\n\n\t/**\n\t * Create an XHR request. Depending on a number of factors, we get totally different results.\n\t * <ol><li>Some browsers get an <code>XDomainRequest</code> when loading cross-domain.</li>\n\t *      <li>XMLHttpRequest are created when available.</li>\n\t *      <li>ActiveX.XMLHTTP objects are used in older IE browsers.</li>\n\t *      <li>Text requests override the mime type if possible</li>\n\t *      <li>Origin headers are sent for crossdomain requests in some browsers.</li>\n\t *      <li>Binary loads set the response type to \"arraybuffer\"</li></ol>\n\t * @method _createXHR\n\t * @param {Object} item The requested item that is being loaded.\n\t * @return {Boolean} If an XHR request or equivalent was successfully created.\n\t * @private\n\t */\n\tp._createXHR = function (item) {\n\t\t// Check for cross-domain loads. We can't fully support them, but we can try.\n\t\tvar crossdomain = createjs.URLUtils.isCrossDomain(item);\n\t\tvar headers = {};\n\n\t\t// Create the request. Fallback to whatever support we have.\n\t\tvar req = null;\n\t\tif (window.XMLHttpRequest) {\n\t\t\treq = new XMLHttpRequest();\n\t\t\t// This is 8 or 9, so use XDomainRequest instead.\n\t\t\tif (crossdomain && req.withCredentials === undefined && window.XDomainRequest) {\n\t\t\t\treq = new XDomainRequest();\n\t\t\t}\n\t\t} else { // Old IE versions use a different approach\n\t\t\tfor (var i = 0, l = s.ACTIVEX_VERSIONS.length; i < l; i++) {\n\t\t\t\tvar axVersion = s.ACTIVEX_VERSIONS[i];\n\t\t\t\ttry {\n\t\t\t\t\treq = new ActiveXObject(axVersion);\n\t\t\t\t\tbreak;\n\t\t\t\t} catch (e) {\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (req == null) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Default to utf-8 for Text requests.\n\t\tif (item.mimeType == null && createjs.RequestUtils.isText(item.type)) {\n\t\t\titem.mimeType = \"text/plain; charset=utf-8\";\n\t\t}\n\n\t\t// IE9 doesn't support overrideMimeType(), so we need to check for it.\n\t\tif (item.mimeType && req.overrideMimeType) {\n\t\t\treq.overrideMimeType(item.mimeType);\n\t\t}\n\n\t\t// Determine the XHR level\n\t\tthis._xhrLevel = (typeof req.responseType === \"string\") ? 2 : 1;\n\n\t\tvar src = null;\n\t\tif (item.method == createjs.Methods.GET) {\n\t\t\tsrc = createjs.URLUtils.buildURI(item.src, item.values);\n\t\t} else {\n\t\t\tsrc = item.src;\n\t\t}\n\n\t\t// Open the request.  Set cross-domain flags if it is supported (XHR level 1 only)\n\t\treq.open(item.method || createjs.Methods.GET, src, true);\n\n\t\tif (crossdomain && req instanceof XMLHttpRequest && this._xhrLevel == 1) {\n\t\t\theaders[\"Origin\"] = location.origin;\n\t\t}\n\n\t\t// To send data we need to set the Content-type header)\n\t\tif (item.values && item.method == createjs.Methods.POST) {\n\t\t\theaders[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n\t\t}\n\n\t\tif (!crossdomain && !headers[\"X-Requested-With\"]) {\n\t\t\theaders[\"X-Requested-With\"] = \"XMLHttpRequest\";\n\t\t}\n\n\t\tif (item.headers) {\n\t\t\tfor (var n in item.headers) {\n\t\t\t\theaders[n] = item.headers[n];\n\t\t\t}\n\t\t}\n\n\t\tfor (n in headers) {\n\t\t\treq.setRequestHeader(n, headers[n])\n\t\t}\n\n\t\tif (req instanceof XMLHttpRequest && item.withCredentials !== undefined) {\n\t\t\treq.withCredentials = item.withCredentials;\n\t\t}\n\n\t\tthis._request = req;\n\n\t\treturn true;\n\t};\n\n\t/**\n\t * A request has completed (or failed or canceled), and needs to be disposed.\n\t * @method _clean\n\t * @private\n\t */\n\tp._clean = function () {\n\t\tclearTimeout(this._loadTimeout);\n\n\t\tif (this._request.removeEventListener != null) {\n\t\t\tthis._request.removeEventListener(\"loadstart\", this._handleLoadStartProxy);\n\t\t\tthis._request.removeEventListener(\"progress\", this._handleProgressProxy);\n\t\t\tthis._request.removeEventListener(\"abort\", this._handleAbortProxy);\n\t\t\tthis._request.removeEventListener(\"error\", this._handleErrorProxy);\n\t\t\tthis._request.removeEventListener(\"timeout\", this._handleTimeoutProxy);\n\t\t\tthis._request.removeEventListener(\"load\", this._handleLoadProxy);\n\t\t\tthis._request.removeEventListener(\"readystatechange\", this._handleReadyStateChangeProxy);\n\t\t} else {\n\t\t\tthis._request.onloadstart = null;\n\t\t\tthis._request.onprogress = null;\n\t\t\tthis._request.onabort = null;\n\t\t\tthis._request.onerror = null;\n\t\t\tthis._request.ontimeout = null;\n\t\t\tthis._request.onload = null;\n\t\t\tthis._request.onreadystatechange = null;\n\t\t}\n\t};\n\n\tp.toString = function () {\n\t\treturn \"[PreloadJS XHRRequest]\";\n\t};\n\n\tcreatejs.XHRRequest = createjs.promote(XHRRequest, \"AbstractRequest\");\n\n}());\n\n//##############################################################################\n// SoundLoader.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * A loader for HTML audio files. PreloadJS can not load WebAudio files, as a WebAudio context is required, which\n\t * should be created by either a library playing the sound (such as <a href=\"http://soundjs.com\">SoundJS</a>, or an\n\t * external framework that handles audio playback. To load content that can be played by WebAudio, use the\n\t * {{#crossLink \"BinaryLoader\"}}{{/crossLink}}, and handle the audio context decoding manually.\n\t * @class SoundLoader\n\t * @param {LoadItem|Object} loadItem\n\t * @param {Boolean} preferXHR\n\t * @extends AbstractMediaLoader\n\t * @constructor\n\t */\n\tfunction SoundLoader(loadItem, preferXHR) {\n\t\tthis.AbstractMediaLoader_constructor(loadItem, preferXHR, createjs.Types.SOUND);\n\n\t\t// protected properties\n\t\tif (createjs.DomUtils.isAudioTag(loadItem)) {\n\t\t\tthis._tag = loadItem;\n\t\t} else if (createjs.DomUtils.isAudioTag(loadItem.src)) {\n\t\t\tthis._tag = loadItem;\n\t\t} else if (createjs.DomUtils.isAudioTag(loadItem.tag)) {\n\t\t\tthis._tag = createjs.DomUtils.isAudioTag(loadItem) ? loadItem : loadItem.src;\n\t\t}\n\n\t\tif (this._tag != null) {\n\t\t\tthis._preferXHR = false;\n\t\t}\n\t};\n\n\tvar p = createjs.extend(SoundLoader, createjs.AbstractMediaLoader);\n\tvar s = SoundLoader;\n\n\t// static methods\n\t/**\n\t * Determines if the loader can load a specific item. This loader can only load items that are of type\n\t * {{#crossLink \"Types/SOUND:property\"}}{{/crossLink}}.\n\t * @method canLoadItem\n\t * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n\t * @returns {Boolean} Whether the loader can load the item.\n\t * @static\n\t */\n\ts.canLoadItem = function (item) {\n\t\treturn item.type == createjs.Types.SOUND;\n\t};\n\n\t// protected methods\n\tp._createTag = function (src) {\n\t\tvar tag = createjs.Elements.audio();\n\t\ttag.autoplay = false;\n\t\ttag.preload = \"none\";\n\n\t\t//LM: Firefox fails when this the preload=\"none\" for other tags, but it needs to be \"none\" to ensure PreloadJS works.\n\t\ttag.src = src;\n\t\treturn tag;\n\t};\n\n\tcreatejs.SoundLoader = createjs.promote(SoundLoader, \"AbstractMediaLoader\");\n\n}());\n\n//##############################################################################\n// AudioSprite.js\n//##############################################################################\n\n//  NOTE this is \"Class\" is purely to document audioSprite Setup and usage.\n\n\n/**\n * <strong>Note: AudioSprite is not a class, but its usage is easily lost in the documentation, so it has been called\n * out here for quick reference.</strong>\n *\n * Audio sprites are much like CSS sprites or image sprite sheets: multiple audio assets grouped into a single file.\n * Audio sprites work around limitations in certain browsers, where only a single sound can be loaded and played at a\n * time. We recommend at least 300ms of silence between audio clips to deal with HTML audio tag inaccuracy, and to prevent\n * accidentally playing bits of the neighbouring clips.\n *\n * <strong>Benefits of Audio Sprites:</strong>\n * <ul>\n *     <li>More robust support for older browsers and devices that only allow a single audio instance, such as iOS 5.</li>\n *     <li>They provide a work around for the Internet Explorer 9 audio tag limit, which restricts how many different\n *     sounds that could be loaded at once.</li>\n *     <li>Faster loading by only requiring a single network request for several sounds, especially on mobile devices\n * where the network round trip for each file can add significant latency.</li>\n * </ul>\n *\n * <strong>Drawbacks of Audio Sprites</strong>\n * <ul>\n *     <li>No guarantee of smooth looping when using HTML or Flash audio. If you have a track that needs to loop\n * \t\tsmoothly and you are supporting non-web audio browsers, do not use audio sprites for that sound if you can avoid\n * \t\tit.</li>\n *     <li>No guarantee that HTML audio will play back immediately, especially the first time. In some browsers\n *     (Chrome!), HTML audio will only load enough to play through at the current download speed – so we rely on the\n *     `canplaythrough` event to determine if the audio is loaded. Since audio sprites must jump ahead to play specific\n *     sounds, the audio may not yet have downloaded fully.</li>\n *     <li>Audio sprites share the same core source, so if you have a sprite with 5 sounds and are limited to 2\n * \t\tconcurrently playing instances, you can only play 2 of the sounds at the same time.</li>\n * </ul>\n *\n * <h4>Example</h4>\n *\n *\t\tcreatejs.Sound.initializeDefaultPlugins();\n *\t\tvar assetsPath = \"./assets/\";\n *\t\tvar sounds = [{\n *\t\t\tsrc:\"MyAudioSprite.ogg\", data: {\n *\t\t\t\taudioSprite: [\n *\t\t\t\t\t{id:\"sound1\", startTime:0, duration:500},\n *\t\t\t\t\t{id:\"sound2\", startTime:1000, duration:400},\n *\t\t\t\t\t{id:\"sound3\", startTime:1700, duration: 1000}\n *\t\t\t\t]}\n *\t\t\t}\n *\t\t];\n *\t\tcreatejs.Sound.alternateExtensions = [\"mp3\"];\n *\t\tcreatejs.Sound.on(\"fileload\", loadSound);\n *\t\tcreatejs.Sound.registerSounds(sounds, assetsPath);\n *\t\t// after load is complete\n *\t\tcreatejs.Sound.play(\"sound2\");\n *\n * You can also create audio sprites on the fly by setting the startTime and duration when creating an new AbstractSoundInstance.\n *\n * \t\tcreatejs.Sound.play(\"MyAudioSprite\", {startTime: 1000, duration: 400});\n *\n * The excellent CreateJS community has created a tool to create audio sprites, available at\n * <a href=\"https://github.com/tonistiigi/audiosprite\" target=\"_blank\">https://github.com/tonistiigi/audiosprite</a>,\n * as well as a <a href=\"http://jsfiddle.net/bharat_battu/g8fFP/12/\" target=\"_blank\">jsfiddle</a> to convert the output\n * to SoundJS format.\n *\n * @class AudioSprite\n * @since 0.6.0\n */\n\n//##############################################################################\n// PlayPropsConfig.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\t/**\n\t * A class to store the optional play properties passed in {{#crossLink \"Sound/play\"}}{{/crossLink}} and\n\t * {{#crossLink \"AbstractSoundInstance/play\"}}{{/crossLink}} calls.\n\t *\n\t * Optional Play Properties Include:\n\t * <ul>\n\t * <li>interrupt - How to interrupt any currently playing instances of audio with the same source,\n\t * if the maximum number of instances of the sound are already playing. Values are defined as <code>INTERRUPT_TYPE</code>\n\t * constants on the Sound class, with the default defined by {{#crossLink \"Sound/defaultInterruptBehavior:property\"}}{{/crossLink}}.</li>\n\t * <li>delay - The amount of time to delay the start of audio playback, in milliseconds.</li>\n\t * <li>offset - The offset from the start of the audio to begin playback, in milliseconds.</li>\n\t * <li>loop - How many times the audio loops when it reaches the end of playback. The default is 0 (no\n\t * loops), and -1 can be used for infinite playback.</li>\n\t * <li>volume - The volume of the sound, between 0 and 1. Note that the master volume is applied\n\t * against the individual volume.</li>\n\t * <li>pan - The left-right pan of the sound (if supported), between -1 (left) and 1 (right).</li>\n\t * <li>startTime - To create an audio sprite (with duration), the initial offset to start playback and loop from, in milliseconds.</li>\n\t * <li>duration - To create an audio sprite (with startTime), the amount of time to play the clip for, in milliseconds.</li>\n\t * </ul>\n\t *\n\t * <h4>Example</h4>\n\t *\n\t * \tvar props = new createjs.PlayPropsConfig().set({interrupt: createjs.Sound.INTERRUPT_ANY, loop: -1, volume: 0.5})\n\t * \tcreatejs.Sound.play(\"mySound\", props);\n\t * \t// OR\n\t * \tmySoundInstance.play(props);\n\t *\n\t * @class PlayPropsConfig\n\t * @constructor\n\t * @since 0.6.1\n\t */\n\t// TODO think of a better name for this class\n\tvar PlayPropsConfig = function () {\n// Public Properties\n\t\t/**\n\t\t * How to interrupt any currently playing instances of audio with the same source,\n\t\t * if the maximum number of instances of the sound are already playing. Values are defined as\n\t\t * <code>INTERRUPT_TYPE</code> constants on the Sound class, with the default defined by\n\t\t * {{#crossLink \"Sound/defaultInterruptBehavior:property\"}}{{/crossLink}}.\n\t\t * @property interrupt\n\t\t * @type {string}\n\t\t * @default null\n\t\t */\n\t\tthis.interrupt = null;\n\n\t\t/**\n\t\t * The amount of time to delay the start of audio playback, in milliseconds.\n\t\t * @property delay\n\t\t * @type {Number}\n\t\t * @default null\n\t\t */\n\t\tthis.delay = null;\n\n\t\t/**\n\t\t * The offset from the start of the audio to begin playback, in milliseconds.\n\t\t * @property offset\n\t\t * @type {number}\n\t\t * @default null\n\t\t */\n\t\tthis.offset = null;\n\n\t\t/**\n\t\t * How many times the audio loops when it reaches the end of playback. The default is 0 (no\n\t\t * loops), and -1 can be used for infinite playback.\n\t\t * @property loop\n\t\t * @type {number}\n\t\t * @default null\n\t\t */\n\t\tthis.loop = null;\n\n\t\t/**\n\t\t * The volume of the sound, between 0 and 1. Note that the master volume is applied\n\t\t * against the individual volume.\n\t\t * @property volume\n\t\t * @type {number}\n\t\t * @default null\n\t\t */\n\t\tthis.volume = null;\n\n\t\t/**\n\t\t * The left-right pan of the sound (if supported), between -1 (left) and 1 (right).\n\t\t * @property pan\n\t\t * @type {number}\n\t\t * @default null\n\t\t */\n\t\tthis.pan = null;\n\n\t\t/**\n\t\t * Used to create an audio sprite (with duration), the initial offset to start playback and loop from, in milliseconds.\n\t\t * @property startTime\n\t\t * @type {number}\n\t\t * @default null\n\t\t */\n\t\tthis.startTime = null;\n\n\t\t/**\n\t\t * Used to create an audio sprite (with startTime), the amount of time to play the clip for, in milliseconds.\n\t\t * @property duration\n\t\t * @type {number}\n\t\t * @default null\n\t\t */\n\t\tthis.duration = null;\n\t};\n\tvar p = PlayPropsConfig.prototype = {};\n\tvar s = PlayPropsConfig;\n\n\n// Static Methods\n\t/**\n\t * Creates a PlayPropsConfig from another PlayPropsConfig or an Object.\n\t *\n\t * @method create\n\t * @param {PlayPropsConfig|Object} value The play properties\n\t * @returns {PlayPropsConfig}\n\t * @static\n\t */\n\ts.create = function (value) {\n\t\tif (typeof(value) === \"string\") {\n\t\t\t// Handle the old API gracefully.\n\t\t\tconsole && (console.warn || console.log)(\"Deprecated behaviour. Sound.play takes a configuration object instead of individual arguments. See docs for info.\");\n\t\t\treturn new createjs.PlayPropsConfig().set({interrupt:value});\n\t\t} else if (value == null || value instanceof s || value instanceof Object) {\n\t\t\treturn new createjs.PlayPropsConfig().set(value);\n\t\t} else if (value == null) {\n\t\t\tthrow new Error(\"PlayProps configuration not recognized.\");\n\t\t}\n\t};\n\n// Public Methods\n\t/**\n\t * Provides a chainable shortcut method for setting a number of properties on the instance.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var PlayPropsConfig = new createjs.PlayPropsConfig().set({loop:-1, volume:0.7});\n\t *\n\t * @method set\n\t * @param {Object} props A generic object containing properties to copy to the PlayPropsConfig instance.\n\t * @return {PlayPropsConfig} Returns the instance the method is called on (useful for chaining calls.)\n\t*/\n\tp.set = function(props) {\n\t\tif (props != null) {\n\t\t\tfor (var n in props) { this[n] = props[n]; }\n\t\t}\n\t\treturn this;\n\t};\n\n\tp.toString = function() {\n\t\treturn \"[PlayPropsConfig]\";\n\t};\n\n\tcreatejs.PlayPropsConfig = s;\n\n}());\n\n//##############################################################################\n// Sound.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n\n\n(function () {\n\t\"use strict\";\n\n\t/**\n\t * The Sound class is the public API for creating sounds, controlling the overall sound levels, and managing plugins.\n\t * All Sound APIs on this class are static.\n\t *\n\t * <b>Registering and Preloading</b><br />\n\t * Before you can play a sound, it <b>must</b> be registered. You can do this with {{#crossLink \"Sound/registerSound\"}}{{/crossLink}},\n\t * or register multiple sounds using {{#crossLink \"Sound/registerSounds\"}}{{/crossLink}}. If you don't register a\n\t * sound prior to attempting to play it using {{#crossLink \"Sound/play\"}}{{/crossLink}} or create it using {{#crossLink \"Sound/createInstance\"}}{{/crossLink}},\n\t * the sound source will be automatically registered but playback will fail as the source will not be ready. If you use\n\t * <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>, registration is handled for you when the sound is\n\t * preloaded. It is recommended to preload sounds either internally using the register functions or externally using\n\t * PreloadJS so they are ready when you want to use them.\n\t *\n\t * <b>Playback</b><br />\n\t * To play a sound once it's been registered and preloaded, use the {{#crossLink \"Sound/play\"}}{{/crossLink}} method.\n\t * This method returns a {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} which can be paused, resumed, muted, etc.\n\t * Please see the {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} documentation for more on the instance control APIs.\n\t *\n\t * <b>Plugins</b><br />\n\t * By default, the {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}} or the {{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}\n\t * are used (when available), although developers can change plugin priority or add new plugins (such as the\n\t * provided {{#crossLink \"FlashAudioPlugin\"}}{{/crossLink}}). Please see the {{#crossLink \"Sound\"}}{{/crossLink}} API\n\t * methods for more on the playback and plugin APIs. To install plugins, or specify a different plugin order, see\n\t * {{#crossLink \"Sound/installPlugins\"}}{{/crossLink}}.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      createjs.FlashAudioPlugin.swfPath = \"../src/soundjs/flashaudio\";\n\t *      createjs.Sound.registerPlugins([createjs.WebAudioPlugin, createjs.FlashAudioPlugin]);\n\t *      createjs.Sound.alternateExtensions = [\"mp3\"];\n\t *      createjs.Sound.on(\"fileload\", this.loadHandler, this);\n\t *      createjs.Sound.registerSound(\"path/to/mySound.ogg\", \"sound\");\n\t *      function loadHandler(event) {\n     *          // This is fired for each sound that is registered.\n     *          var instance = createjs.Sound.play(\"sound\");  // play using id.  Could also use full source path or event.src.\n     *          instance.on(\"complete\", this.handleComplete, this);\n     *          instance.volume = 0.5;\n\t *      }\n\t *\n\t * The maximum number of concurrently playing instances of the same sound can be specified in the \"data\" argument\n\t * of {{#crossLink \"Sound/registerSound\"}}{{/crossLink}}.  Note that if not specified, the active plugin will apply\n\t * a default limit.  Currently HTMLAudioPlugin sets a default limit of 2, while WebAudioPlugin and FlashAudioPlugin set a\n\t * default limit of 100.\n\t *\n\t *      createjs.Sound.registerSound(\"sound.mp3\", \"soundId\", 4);\n\t *\n\t * Sound can be used as a plugin with PreloadJS to help preload audio properly. Audio preloaded with PreloadJS is\n\t * automatically registered with the Sound class. When audio is not preloaded, Sound will do an automatic internal\n\t * load. As a result, it may fail to play the first time play is called if the audio is not finished loading. Use\n\t * the {{#crossLink \"Sound/fileload:event\"}}{{/crossLink}} event to determine when a sound has finished internally\n\t * preloading. It is recommended that all audio is preloaded before it is played.\n\t *\n\t *      var queue = new createjs.LoadQueue();\n\t *\t\tqueue.installPlugin(createjs.Sound);\n\t *\n\t * <b>Audio Sprites</b><br />\n\t * SoundJS has added support for {{#crossLink \"AudioSprite\"}}{{/crossLink}}, available as of version 0.6.0.\n\t * For those unfamiliar with audio sprites, they are much like CSS sprites or sprite sheets: multiple audio assets\n\t * grouped into a single file.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *\t\tvar assetsPath = \"./assets/\";\n\t *\t\tvar sounds = [{\n\t *\t\t\tsrc:\"MyAudioSprite.ogg\", data: {\n\t *\t\t\t\taudioSprite: [\n\t *\t\t\t\t\t{id:\"sound1\", startTime:0, duration:500},\n\t *\t\t\t\t\t{id:\"sound2\", startTime:1000, duration:400},\n\t *\t\t\t\t\t{id:\"sound3\", startTime:1700, duration: 1000}\n\t *\t\t\t\t]}\n \t *\t\t\t}\n\t *\t\t];\n\t *\t\tcreatejs.Sound.alternateExtensions = [\"mp3\"];\n\t *\t\tcreatejs.Sound.on(\"fileload\", loadSound);\n\t *\t\tcreatejs.Sound.registerSounds(sounds, assetsPath);\n\t *\t\t// after load is complete\n\t *\t\tcreatejs.Sound.play(\"sound2\");\n\t *\n\t * <b>Mobile Playback</b><br />\n\t * Devices running iOS require the WebAudio context to be \"unlocked\" by playing at least one sound inside of a user-\n\t * initiated event (such as touch/click). Earlier versions of SoundJS included a \"MobileSafe\" sample, but this is no\n\t * longer necessary as of SoundJS 0.6.2.\n\t * <ul>\n\t *     <li>\n\t *         In SoundJS 0.4.1 and above, you can either initialize plugins or use the {{#crossLink \"WebAudioPlugin/playEmptySound\"}}{{/crossLink}}\n\t *         method in the call stack of a user input event to manually unlock the audio context.\n\t *     </li>\n\t *     <li>\n\t *         In SoundJS 0.6.2 and above, SoundJS will automatically listen for the first document-level \"mousedown\"\n\t *         and \"touchend\" event, and unlock WebAudio. This will continue to check these events until the WebAudio\n\t *         context becomes \"unlocked\" (changes from \"suspended\" to \"running\")\n\t *     </li>\n\t *     <li>\n\t *         Both the \"mousedown\" and \"touchend\" events can be used to unlock audio in iOS9+, the \"touchstart\" event\n\t *         will work in iOS8 and below. The \"touchend\" event will only work in iOS9 when the gesture is interpreted\n\t *         as a \"click\", so if the user long-presses the button, it will no longer work.\n\t *     </li>\n\t *     <li>\n\t *         When using the <a href=\"http://www.createjs.com/docs/easeljs/classes/Touch.html\">EaselJS Touch class</a>,\n\t *         the \"mousedown\" event will not fire when a canvas is clicked, since MouseEvents are prevented, to ensure\n\t *         only touch events fire. To get around this, you can either rely on \"touchend\", or:\n\t *         <ol>\n\t *             <li>Set the `allowDefault` property on the Touch class constructor to `true` (defaults to `false`).</li>\n\t *             <li>Set the `preventSelection` property on the EaselJS `Stage` to `false`.</li>\n\t *         </ol>\n\t *         These settings may change how your application behaves, and are not recommended.\n\t *     </li>\n\t * </ul>\n\t *\n\t * <b>Loading Alternate Paths and Extension-less Files</b><br />\n\t * SoundJS supports loading alternate paths and extension-less files by passing an object instead of a string for\n\t * the `src` property, which is a hash using the format `{extension:\"path\", extension2:\"path2\"}`. These labels are\n\t * how SoundJS determines if the browser will support the sound. This also enables multiple formats to live in\n\t * different folders, or on CDNs, which often has completely different filenames for each file.\n\t *\n\t * Priority is determined by the property order (first property is tried first).  This is supported by both internal loading\n\t * and loading with PreloadJS.\n\t *\n\t * <em>Note: an id is required for playback.</em>\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *\t\tvar sounds = {path:\"./audioPath/\",\n\t * \t\t\t\tmanifest: [\n\t *\t\t\t\t{id: \"cool\", src: {mp3:\"mp3/awesome.mp3\", ogg:\"noExtensionOggFile\"}}\n\t *\t\t]};\n\t *\n\t *\t\tcreatejs.Sound.alternateExtensions = [\"mp3\"];\n\t *\t\tcreatejs.Sound.addEventListener(\"fileload\", handleLoad);\n\t *\t\tcreatejs.Sound.registerSounds(sounds);\n\t *\n\t * <h3>Known Browser and OS issues</h3>\n\t * <b>IE 9 HTML Audio limitations</b><br />\n\t * <ul><li>There is a delay in applying volume changes to tags that occurs once playback is started. So if you have\n\t * muted all sounds, they will all play during this delay until the mute applies internally. This happens regardless of\n\t * when or how you apply the volume change, as the tag seems to need to play to apply it.</li>\n     * <li>MP3 encoding will not always work for audio tags, particularly in Internet Explorer. We've found default\n\t * encoding with 64kbps works.</li>\n\t * <li>Occasionally very short samples will get cut off.</li>\n\t * <li>There is a limit to how many audio tags you can load and play at once, which appears to be determined by\n\t * hardware and browser settings.  See {{#crossLink \"HTMLAudioPlugin.MAX_INSTANCES\"}}{{/crossLink}} for a safe\n\t * estimate.</li></ul>\n\t *\n\t * <b>Firefox 25 Web Audio limitations</b>\n\t * <ul><li>mp3 audio files do not load properly on all windows machines, reported\n\t * <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=929969\" target=\"_blank\">here</a>. </br>\n\t * For this reason it is recommended to pass another FF supported type (ie ogg) first until this bug is resolved, if\n\t * possible.</li></ul>\n\n\t * <b>Safari limitations</b><br />\n\t * <ul><li>Safari requires Quicktime to be installed for audio playback.</li></ul>\n\t *\n\t * <b>iOS 6 Web Audio limitations</b><br />\n\t * <ul><li>Sound is initially locked, and must be unlocked via a user-initiated event. Please see the section on\n\t * Mobile Playback above.</li>\n\t * <li>A bug exists that will distort un-cached web audio when a video element is present in the DOM that has audio\n\t * at a different sampleRate.</li>\n\t * </ul>\n\t *\n\t * <b>Android HTML Audio limitations</b><br />\n\t * <ul><li>We have no control over audio volume. Only the user can set volume on their device.</li>\n\t * <li>We can only play audio inside a user event (touch/click).  This currently means you cannot loop sound or use\n\t * a delay.</li></ul>\n\t *\n\t * <b>Web Audio and PreloadJS</b><br />\n\t * <ul><li>Web Audio must be loaded through XHR, therefore when used with PreloadJS, tag loading is not possible.\n\t * This means that tag loading can not be used to avoid cross domain issues.</li><ul>\n\t *\n\t * @class Sound\n\t * @static\n\t * @uses EventDispatcher\n\t */\n\tfunction Sound() {\n\t\tthrow \"Sound cannot be instantiated\";\n\t}\n\n\tvar s = Sound;\n\n\n// Static Properties\n\t/**\n\t * The interrupt value to interrupt any currently playing instance with the same source, if the maximum number of\n\t * instances of the sound are already playing.\n\t * @property INTERRUPT_ANY\n\t * @type {String}\n\t * @default any\n\t * @static\n\t */\n\ts.INTERRUPT_ANY = \"any\";\n\n\t/**\n\t * The interrupt value to interrupt the earliest currently playing instance with the same source that progressed the\n\t * least distance in the audio track, if the maximum number of instances of the sound are already playing.\n\t * @property INTERRUPT_EARLY\n\t * @type {String}\n\t * @default early\n\t * @static\n\t */\n\ts.INTERRUPT_EARLY = \"early\";\n\n\t/**\n\t * The interrupt value to interrupt the currently playing instance with the same source that progressed the most\n\t * distance in the audio track, if the maximum number of instances of the sound are already playing.\n\t * @property INTERRUPT_LATE\n\t * @type {String}\n\t * @default late\n\t * @static\n\t */\n\ts.INTERRUPT_LATE = \"late\";\n\n\t/**\n\t * The interrupt value to not interrupt any currently playing instances with the same source, if the maximum number of\n\t * instances of the sound are already playing.\n\t * @property INTERRUPT_NONE\n\t * @type {String}\n\t * @default none\n\t * @static\n\t */\n\ts.INTERRUPT_NONE = \"none\";\n\n\t/**\n\t * Defines the playState of an instance that is still initializing.\n\t * @property PLAY_INITED\n\t * @type {String}\n\t * @default playInited\n\t * @static\n\t */\n\ts.PLAY_INITED = \"playInited\";\n\n\t/**\n\t * Defines the playState of an instance that is currently playing or paused.\n\t * @property PLAY_SUCCEEDED\n\t * @type {String}\n\t * @default playSucceeded\n\t * @static\n\t */\n\ts.PLAY_SUCCEEDED = \"playSucceeded\";\n\n\t/**\n\t * Defines the playState of an instance that was interrupted by another instance.\n\t * @property PLAY_INTERRUPTED\n\t * @type {String}\n\t * @default playInterrupted\n\t * @static\n\t */\n\ts.PLAY_INTERRUPTED = \"playInterrupted\";\n\n\t/**\n\t * Defines the playState of an instance that completed playback.\n\t * @property PLAY_FINISHED\n\t * @type {String}\n\t * @default playFinished\n\t * @static\n\t */\n\ts.PLAY_FINISHED = \"playFinished\";\n\n\t/**\n\t * Defines the playState of an instance that failed to play. This is usually caused by a lack of available channels\n\t * when the interrupt mode was \"INTERRUPT_NONE\", the playback stalled, or the sound could not be found.\n\t * @property PLAY_FAILED\n\t * @type {String}\n\t * @default playFailed\n\t * @static\n\t */\n\ts.PLAY_FAILED = \"playFailed\";\n\n\t/**\n\t * A list of the default supported extensions that Sound will <i>try</i> to play. Plugins will check if the browser\n\t * can play these types, so modifying this list before a plugin is initialized will allow the plugins to try to\n\t * support additional media types.\n\t *\n\t * NOTE this does not currently work for {{#crossLink \"FlashAudioPlugin\"}}{{/crossLink}}.\n\t *\n\t * More details on file formats can be found at <a href=\"http://en.wikipedia.org/wiki/Audio_file_format\" target=\"_blank\">http://en.wikipedia.org/wiki/Audio_file_format</a>.<br />\n\t * A very detailed list of file formats can be found at <a href=\"http://www.fileinfo.com/filetypes/audio\" target=\"_blank\">http://www.fileinfo.com/filetypes/audio</a>.\n\t * @property SUPPORTED_EXTENSIONS\n\t * @type {Array[String]}\n\t * @default [\"mp3\", \"ogg\", \"opus\", \"mpeg\", \"wav\", \"m4a\", \"mp4\", \"aiff\", \"wma\", \"mid\"]\n\t * @since 0.4.0\n\t * @static\n\t */\n\ts.SUPPORTED_EXTENSIONS = [\"mp3\", \"ogg\", \"opus\", \"mpeg\", \"wav\", \"m4a\", \"mp4\", \"aiff\", \"wma\", \"mid\"];\n\n\t/**\n\t * Some extensions use another type of extension support to play (one of them is a codex).  This allows you to map\n\t * that support so plugins can accurately determine if an extension is supported.  Adding to this list can help\n\t * plugins determine more accurately if an extension is supported.\n\t *\n \t * A useful list of extensions for each format can be found at <a href=\"http://html5doctor.com/html5-audio-the-state-of-play/\" target=\"_blank\">http://html5doctor.com/html5-audio-the-state-of-play/</a>.\n\t * @property EXTENSION_MAP\n\t * @type {Object}\n\t * @since 0.4.0\n\t * @default {m4a:\"mp4\"}\n\t * @static\n\t */\n\ts.EXTENSION_MAP = {\n\t\tm4a:\"mp4\"\n\t};\n\n\t/**\n\t * The RegExp pattern used to parse file URIs. This supports simple file names, as well as full domain URIs with\n\t * query strings. The resulting match is: protocol:$1 domain:$2 path:$3 file:$4 extension:$5 query:$6.\n\t * @property FILE_PATTERN\n\t * @type {RegExp}\n\t * @static\n\t * @private\n\t */\n\ts.FILE_PATTERN = /^(?:(\\w+:)\\/{2}(\\w+(?:\\.\\w+)*\\/?))?([/.]*?(?:[^?]+)?\\/)?((?:[^/?]+)\\.(\\w+))(?:\\?(\\S+)?)?$/;\n\n\n// Class Public properties\n\t/**\n\t * Determines the default behavior for interrupting other currently playing instances with the same source, if the\n\t * maximum number of instances of the sound are already playing.  Currently the default is {{#crossLink \"Sound/INTERRUPT_NONE:property\"}}{{/crossLink}}\n\t * but this can be set and will change playback behavior accordingly.  This is only used when {{#crossLink \"Sound/play\"}}{{/crossLink}}\n\t * is called without passing a value for interrupt.\n\t * @property defaultInterruptBehavior\n\t * @type {String}\n\t * @default Sound.INTERRUPT_NONE, or \"none\"\n\t * @static\n\t * @since 0.4.0\n\t */\n\ts.defaultInterruptBehavior = s.INTERRUPT_NONE;  // OJR does s.INTERRUPT_ANY make more sense as default?  Needs game dev testing to see which case makes more sense.\n\n\t/**\n\t * An array of extensions to attempt to use when loading sound, if the default is unsupported by the active plugin.\n\t * These are applied in order, so if you try to Load Thunder.ogg in a browser that does not support ogg, and your\n\t * extensions array is [\"mp3\", \"m4a\", \"wav\"] it will check mp3 support, then m4a, then wav. The audio files need\n\t * to exist in the same location, as only the extension is altered.\n\t *\n\t * Note that regardless of which file is loaded, you can call {{#crossLink \"Sound/createInstance\"}}{{/crossLink}}\n\t * and {{#crossLink \"Sound/play\"}}{{/crossLink}} using the same id or full source path passed for loading.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *\tvar sounds = [\n\t *\t\t{src:\"myPath/mySound.ogg\", id:\"example\"},\n\t *\t];\n\t *\tcreatejs.Sound.alternateExtensions = [\"mp3\"]; // now if ogg is not supported, SoundJS will try asset0.mp3\n\t *\tcreatejs.Sound.on(\"fileload\", handleLoad); // call handleLoad when each sound loads\n\t *\tcreatejs.Sound.registerSounds(sounds, assetPath);\n\t *\t// ...\n\t *\tcreatejs.Sound.play(\"myPath/mySound.ogg\"); // works regardless of what extension is supported.  Note calling with ID is a better approach\n\t *\n\t * @property alternateExtensions\n\t * @type {Array}\n\t * @since 0.5.2\n\t * @static\n\t */\n\ts.alternateExtensions = [];\n\n\t/**\n\t * The currently active plugin. If this is null, then no plugin could be initialized. If no plugin was specified,\n\t * Sound attempts to apply the default plugins: {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}, followed by\n\t * {{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}.\n\t * @property activePlugin\n\t * @type {Object}\n\t * @static\n\t */\n    s.activePlugin = null;\n\n\n// class getter / setter properties\n\n\t/**\n\t * Set the master volume of Sound. The master volume is multiplied against each sound's individual volume.  For\n\t * example, if master volume is 0.5 and a sound's volume is 0.5, the resulting volume is 0.25. To set individual\n\t * sound volume, use AbstractSoundInstance {{#crossLink \"AbstractSoundInstance/volume:property\"}}{{/crossLink}}\n\t * instead.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *     createjs.Sound.volume = 0.5;\n\t *\n\t * @property volume\n\t * @type {Number}\n\t * @default 1\n\t * @since 0.6.1\n\t */\n\n\t/**\n\t * The internal volume level. Use {{#crossLink \"Sound/volume:property\"}}{{/crossLink}} to adjust the master volume.\n\t * @property _masterVolume\n\t * @type {number}\n\t * @default 1\n\t * @private\n\t */\n\ts._masterVolume = 1;\n\n\t/**\n\t * Use the {{#crossLink \"Sound/volume:property\"}}{{/crossLink}} property instead.\n\t * @method _getMasterVolume\n\t * @private\n\t * @static\n\t * @return {Number}\n\t **/\n\ts._getMasterVolume = function() {\n\t\treturn this._masterVolume;\n\t};\n\t// Sound.getMasterVolume is @deprecated. Remove for 1.1+\n\ts.getVolume = createjs.deprecate(s._getMasterVolume, \"Sound.getVolume\");\n\t/**\n\t * Use the {{#crossLink \"Sound/volume:property\"}}{{/crossLink}} property instead.\n\t * @method _setMasterVolume\n\t * @static\n\t * @private\n\t **/\n\ts._setMasterVolume = function(value) {\n\t\tif (Number(value) == null) { return; }\n\t\tvalue = Math.max(0, Math.min(1, value));\n\t\ts._masterVolume = value;\n\t\tif (!this.activePlugin || !this.activePlugin.setVolume || !this.activePlugin.setVolume(value)) {\n\t\t\tvar instances = this._instances;\n\t\t\tfor (var i = 0, l = instances.length; i < l; i++) {\n\t\t\t\tinstances[i].setMasterVolume(value);\n\t\t\t}\n\t\t}\n\t};\n\t// Sound.stMasterVolume is @deprecated. Remove for 1.1+\n\ts.setVolume = createjs.deprecate(s._setMasterVolume, \"Sound.setVolume\");\n\n\t/**\n\t * Mute/Unmute all audio. Note that muted audio still plays at 0 volume. This global mute value is maintained\n\t * separately and when set will override, but not change the mute property of individual instances. To mute an individual\n\t * instance, use AbstractSoundInstance {{#crossLink \"AbstractSoundInstance/muted:property\"}}{{/crossLink}} instead.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *     createjs.Sound.muted = true;\n\t *\n\t *\n\t * @property muted\n\t * @type {Boolean}\n\t * @default false\n\t * @since 0.6.1\n\t */\n\ts._masterMute = false;\n\n\t/**\n\t * Use the {{#crossLink \"Sound/muted:property\"}}{{/crossLink}} property instead.\n\t * @method _getMute\n\t * @returns {Boolean}\n\t * @static\n\t * @private\n\t */\n\ts._getMute = function () {\n\t\treturn this._masterMute;\n\t};\n\t// Sound.getMute is @deprecated. Remove for 1.1+\n\ts.getMute = createjs.deprecate(s._getMute, \"Sound.getMute\");\n\n\t/**\n\t * Use the {{#crossLink \"Sound/muted:property\"}}{{/crossLink}} property instead.\n\t * @method _setMute\n\t * @param {Boolean} value The muted value\n\t * @static\n\t * @private\n\t */\n\ts._setMute = function (value) {\n\t\tif (value == null) { return; }\n\t\tthis._masterMute = value;\n\t\tif (!this.activePlugin || !this.activePlugin.setMute || !this.activePlugin.setMute(value)) {\n\t\t\tvar instances = this._instances;\n\t\t\tfor (var i = 0, l = instances.length; i < l; i++) {\n\t\t\t\tinstances[i].setMasterMute(value);\n\t\t\t}\n\t\t}\n\t};\n\t// Sound.setMute is @deprecated. Remove for 1.1+\n\ts.setMute = createjs.deprecate(s._setMute, \"Sound.setMute\");\n\n\t/**\n\t * Get the active plugins capabilities, which help determine if a plugin can be used in the current environment,\n\t * or if the plugin supports a specific feature. Capabilities include:\n\t * <ul>\n\t *     <li><b>panning:</b> If the plugin can pan audio from left to right</li>\n\t *     <li><b>volume;</b> If the plugin can control audio volume.</li>\n\t *     <li><b>tracks:</b> The maximum number of audio tracks that can be played back at a time. This will be -1\n\t *     if there is no known limit.</li>\n\t * <br />An entry for each file type in {{#crossLink \"Sound/SUPPORTED_EXTENSIONS:property\"}}{{/crossLink}}:\n\t *     <li><b>mp3:</b> If MP3 audio is supported.</li>\n\t *     <li><b>ogg:</b> If OGG audio is supported.</li>\n\t *     <li><b>wav:</b> If WAV audio is supported.</li>\n\t *     <li><b>mpeg:</b> If MPEG audio is supported.</li>\n\t *     <li><b>m4a:</b> If M4A audio is supported.</li>\n\t *     <li><b>mp4:</b> If MP4 audio is supported.</li>\n\t *     <li><b>aiff:</b> If aiff audio is supported.</li>\n\t *     <li><b>wma:</b> If wma audio is supported.</li>\n\t *     <li><b>mid:</b> If mid audio is supported.</li>\n\t * </ul>\n\t *\n\t * You can get a specific capability of the active plugin using standard object notation\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var mp3 = createjs.Sound.capabilities.mp3;\n\t *\n\t * Note this property is read only.\n\t *\n\t * @property capabilities\n\t * @type {Object}\n\t * @static\n\t * @readOnly\n\t * @since 0.6.1\n\t */\n\n\t/**\n\t * Use the {{#crossLink \"Sound/capabilities:property\"}}{{/crossLink}} property instead.\n\t * @returns {null}\n\t * @private\n\t */\n\ts._getCapabilities = function() {\n\t\tif (s.activePlugin == null) { return null; }\n\t\treturn s.activePlugin._capabilities;\n\t};\n\t// Sound.getCapabilities is @deprecated. Remove for 1.1+\n\ts.getCapabilities = createjs.deprecate(s._getCapabilities, \"Sound.getCapabilities\");\n\n\tObject.defineProperties(s, {\n\t\tvolume: { get: s._getMasterVolume, set: s._setMasterVolume },\n\t\tmuted: { get: s._getMute, set: s._setMute },\n\t\tcapabilities: { get: s._getCapabilities }\n\t});\n\n\n// Class Private properties\n\t/**\n\t * Determines if the plugins have been registered. If false, the first call to {{#crossLink \"play\"}}{{/crossLink}} will instantiate the default\n\t * plugins ({{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}, followed by {{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}).\n\t * If plugins have been registered, but none are applicable, then sound playback will fail.\n\t * @property _pluginsRegistered\n\t * @type {Boolean}\n\t * @default false\n\t * @static\n\t * @private\n\t */\n\ts._pluginsRegistered = false;\n\n\t/**\n\t * Used internally to assign unique IDs to each AbstractSoundInstance.\n\t * @property _lastID\n\t * @type {Number}\n\t * @static\n\t * @private\n\t */\n\ts._lastID = 0;\n\n\t/**\n\t * An array containing all currently playing instances. This allows Sound to control the volume, mute, and playback of\n\t * all instances when using static APIs like {{#crossLink \"Sound/stop\"}}{{/crossLink}} and {{#crossLink \"Sound/volume:property\"}}{{/crossLink}}.\n\t * When an instance has finished playback, it gets removed via the {{#crossLink \"Sound/finishedPlaying\"}}{{/crossLink}}\n\t * method. If the user replays an instance, it gets added back in via the {{#crossLink \"Sound/_beginPlaying\"}}{{/crossLink}}\n\t * method.\n\t * @property _instances\n\t * @type {Array}\n\t * @private\n\t * @static\n\t */\n\ts._instances = [];\n\n\t/**\n\t * An object hash storing objects with sound sources, startTime, and duration via there corresponding ID.\n\t * @property _idHash\n\t * @type {Object}\n\t * @private\n\t * @static\n\t */\n\ts._idHash = {};\n\n\t/**\n\t * An object hash that stores preloading sound sources via the parsed source that is passed to the plugin.  Contains the\n\t * source, id, and data that was passed in by the user.  Parsed sources can contain multiple instances of source, id,\n\t * and data.\n\t * @property _preloadHash\n\t * @type {Object}\n\t * @private\n\t * @static\n\t */\n\ts._preloadHash = {};\n\n\t/**\n\t * An object hash storing {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}} via the parsed source that is passed as defaultPlayProps in\n\t * {{#crossLink \"Sound/registerSound\"}}{{/crossLink}} and {{#crossLink \"Sound/registerSounds\"}}{{/crossLink}}.\n\t * @property _defaultPlayPropsHash\n\t * @type {Object}\n\t * @private\n\t * @static\n\t * @since 0.6.1\n\t */\n\ts._defaultPlayPropsHash = {};\n\n\n// EventDispatcher methods:\n\ts.addEventListener = null;\n\ts.removeEventListener = null;\n\ts.removeAllEventListeners = null;\n\ts.dispatchEvent = null;\n\ts.hasEventListener = null;\n\ts._listeners = null;\n\n\tcreatejs.EventDispatcher.initialize(s); // inject EventDispatcher methods.\n\n\n// Events\n\t/**\n\t * This event is fired when a file finishes loading internally. This event is fired for each loaded sound,\n\t * so any handler methods should look up the <code>event.src</code> to handle a particular sound.\n\t * @event fileload\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @param {String} src The source of the sound that was loaded.\n\t * @param {String} [id] The id passed in when the sound was registered. If one was not provided, it will be null.\n\t * @param {Number|Object} [data] Any additional data associated with the item. If not provided, it will be undefined.\n\t * @since 0.4.1\n\t */\n\n\t/**\n\t * This event is fired when a file fails loading internally. This event is fired for each loaded sound,\n\t * so any handler methods should look up the <code>event.src</code> to handle a particular sound.\n\t * @event fileerror\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @param {String} src The source of the sound that was loaded.\n\t * @param {String} [id] The id passed in when the sound was registered. If one was not provided, it will be null.\n\t * @param {Number|Object} [data] Any additional data associated with the item. If not provided, it will be undefined.\n\t * @since 0.6.0\n\t */\n\n\n// Class Public Methods\n\t/**\n\t * Get the preload rules to allow Sound to be used as a plugin by <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>.\n\t * Any load calls that have the matching type or extension will fire the callback method, and use the resulting\n\t * object, which is potentially modified by Sound. This helps when determining the correct path, as well as\n\t * registering the audio instance(s) with Sound. This method should not be called, except by PreloadJS.\n\t * @method getPreloadHandlers\n\t * @return {Object} An object containing:\n\t * <ul><li>callback: A preload callback that is fired when a file is added to PreloadJS, which provides\n\t *      Sound a mechanism to modify the load parameters, select the correct file format, register the sound, etc.</li>\n\t *      <li>types: A list of file types that are supported by Sound (currently supports \"sound\").</li>\n\t *      <li>extensions: A list of file extensions that are supported by Sound (see {{#crossLink \"Sound/SUPPORTED_EXTENSIONS:property\"}}{{/crossLink}}).</li></ul>\n\t * @static\n\t * @private\n\t */\n\ts.getPreloadHandlers = function () {\n\t\treturn {\n\t\t\tcallback:createjs.proxy(s.initLoad, s),\n\t\t\ttypes:[\"sound\"],\n\t\t\textensions:s.SUPPORTED_EXTENSIONS\n\t\t};\n\t};\n\n\t/**\n\t * Used to dispatch fileload events from internal loading.\n\t * @method _handleLoadComplete\n\t * @param event A loader event.\n\t * @private\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts._handleLoadComplete = function(event) {\n\t\tvar src = event.target.getItem().src;\n\t\tif (!s._preloadHash[src]) {return;}\n\n\t\tfor (var i = 0, l = s._preloadHash[src].length; i < l; i++) {\n\t\t\tvar item = s._preloadHash[src][i];\n\t\t\ts._preloadHash[src][i] = true;\n\n\t\t\tif (!s.hasEventListener(\"fileload\")) { continue; }\n\n\t\t\tvar event = new createjs.Event(\"fileload\");\n\t\t\tevent.src = item.src;\n\t\t\tevent.id = item.id;\n\t\t\tevent.data = item.data;\n\t\t\tevent.sprite = item.sprite;\n\n\t\t\ts.dispatchEvent(event);\n\t\t}\n\t};\n\n\t/**\n\t * Used to dispatch error events from internal preloading.\n\t * @param event\n\t * @private\n\t * @since 0.6.0\n\t * @static\n\t */\n\ts._handleLoadError = function(event) {\n\t\tvar src = event.target.getItem().src;\n\t\tif (!s._preloadHash[src]) {return;}\n\n\t\tfor (var i = 0, l = s._preloadHash[src].length; i < l; i++) {\n\t\t\tvar item = s._preloadHash[src][i];\n\t\t\ts._preloadHash[src][i] = false;\n\n\t\t\tif (!s.hasEventListener(\"fileerror\")) { continue; }\n\n\t\t\tvar event = new createjs.Event(\"fileerror\");\n\t\t\tevent.src = item.src;\n\t\t\tevent.id = item.id;\n\t\t\tevent.data = item.data;\n\t\t\tevent.sprite = item.sprite;\n\n\t\t\ts.dispatchEvent(event);\n\t\t}\n\t};\n\n\t/**\n\t * Used by {{#crossLink \"Sound/registerPlugins\"}}{{/crossLink}} to register a Sound plugin.\n\t *\n\t * @method _registerPlugin\n\t * @param {Object} plugin The plugin class to install.\n\t * @return {Boolean} Whether the plugin was successfully initialized.\n\t * @static\n\t * @private\n\t */\n\ts._registerPlugin = function (plugin) {\n\t\t// Note: Each plugin is passed in as a class reference, but we store the activePlugin as an instance\n\t\tif (plugin.isSupported()) {\n\t\t\ts.activePlugin = new plugin();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\t/**\n\t * Register a list of Sound plugins, in order of precedence. To register a single plugin, pass a single element in the array.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      createjs.FlashAudioPlugin.swfPath = \"../src/soundjs/flashaudio/\";\n\t *      createjs.Sound.registerPlugins([createjs.WebAudioPlugin, createjs.HTMLAudioPlugin, createjs.FlashAudioPlugin]);\n\t *\n\t * @method registerPlugins\n\t * @param {Array} plugins An array of plugins classes to install.\n\t * @return {Boolean} Whether a plugin was successfully initialized.\n\t * @static\n\t */\n\ts.registerPlugins = function (plugins) {\n\t\ts._pluginsRegistered = true;\n\t\tfor (var i = 0, l = plugins.length; i < l; i++) {\n\t\t\tif (s._registerPlugin(plugins[i])) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t};\n\n\t/**\n\t * Initialize the default plugins. This method is automatically called when any audio is played or registered before\n\t * the user has manually registered plugins, and enables Sound to work without manual plugin setup. Currently, the\n\t * default plugins are {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}} followed by {{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t * \tif (!createjs.initializeDefaultPlugins()) { return; }\n\t *\n\t * @method initializeDefaultPlugins\n\t * @returns {Boolean} True if a plugin was initialized, false otherwise.\n\t * @since 0.4.0\n\t * @static\n\t */\n\ts.initializeDefaultPlugins = function () {\n\t\tif (s.activePlugin != null) {return true;}\n\t\tif (s._pluginsRegistered) {return false;}\n\t\tif (s.registerPlugins([createjs.WebAudioPlugin, createjs.HTMLAudioPlugin])) {return true;}\n\t\treturn false;\n\t};\n\n\t/**\n\t * Determines if Sound has been initialized, and a plugin has been activated.\n\t *\n\t * <h4>Example</h4>\n\t * This example sets up a Flash fallback, but only if there is no plugin specified yet.\n\t *\n\t * \tif (!createjs.Sound.isReady()) {\n\t *\t\tcreatejs.FlashAudioPlugin.swfPath = \"../src/soundjs/flashaudio/\";\n\t * \t\tcreatejs.Sound.registerPlugins([createjs.WebAudioPlugin, createjs.HTMLAudioPlugin, createjs.FlashAudioPlugin]);\n\t *\t}\n\t *\n\t * @method isReady\n\t * @return {Boolean} If Sound has initialized a plugin.\n\t * @static\n\t */\n\ts.isReady = function () {\n\t\treturn (s.activePlugin != null);\n\t};\n\n\t/**\n\t * Process manifest items from <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>. This method is intended\n\t * for usage by a plugin, and not for direct interaction.\n\t * @method initLoad\n\t * @param {Object} src The object to load.\n\t * @return {Object|AbstractLoader} An instance of AbstractLoader.\n\t * @private\n\t * @static\n\t */\n\ts.initLoad = function (loadItem) {\n\t\tif (loadItem.type == \"video\") { return true; } // Don't handle video. PreloadJS's plugin model is really aggressive.\n\t\treturn s._registerSound(loadItem);\n\t};\n\n\t/**\n\t * Internal method for loading sounds.  This should not be called directly.\n\t *\n\t * @method _registerSound\n\t * @param {Object} src The object to load, containing src property and optionally containing id and data.\n\t * @return {Object} An object with the modified values that were passed in, which defines the sound.\n\t * Returns false if the source cannot be parsed or no plugins can be initialized.\n\t * Returns true if the source is already loaded.\n\t * @static\n\t * @private\n\t * @since 0.6.0\n\t */\n\n\ts._registerSound = function (loadItem) {\n\t\tif (!s.initializeDefaultPlugins()) {return false;}\n\n\t\tvar details;\n\t\tif (loadItem.src instanceof Object) {\n\t\t\tdetails = s._parseSrc(loadItem.src);\n\t\t\tdetails.src = loadItem.path + details.src;\n\t\t} else {\n\t\t\tdetails = s._parsePath(loadItem.src);\n\t\t}\n\t\tif (details == null) {return false;}\n\t\tloadItem.src = details.src;\n\t\tloadItem.type = \"sound\";\n\n\t\tvar data = loadItem.data;\n\t\tvar numChannels = null;\n\t\tif (data != null) {\n\t\t\tif (!isNaN(data.channels)) {\n\t\t\t\tnumChannels = parseInt(data.channels);\n\t\t\t} else if (!isNaN(data)) {\n\t\t\t\tnumChannels = parseInt(data);\n\t\t\t}\n\n\t\t\tif(data.audioSprite) {\n\t\t\t\tvar sp;\n\t\t\t\tfor(var i = data.audioSprite.length; i--; ) {\n\t\t\t\t\tsp = data.audioSprite[i];\n\t\t\t\t\ts._idHash[sp.id] = {src: loadItem.src, startTime: parseInt(sp.startTime), duration: parseInt(sp.duration)};\n\n\t\t\t\t\tif (sp.defaultPlayProps) {\n\t\t\t\t\t\ts._defaultPlayPropsHash[sp.id] = createjs.PlayPropsConfig.create(sp.defaultPlayProps);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (loadItem.id != null) {s._idHash[loadItem.id] = {src: loadItem.src}};\n\t\tvar loader = s.activePlugin.register(loadItem);\n\n\t\tSoundChannel.create(loadItem.src, numChannels);\n\n\t\t// return the number of instances to the user.  This will also be returned in the load event.\n\t\tif (data == null || !isNaN(data)) {\n\t\t\tloadItem.data = numChannels || SoundChannel.maxPerChannel();\n\t\t} else {\n\t\t\tloadItem.data.channels = numChannels || SoundChannel.maxPerChannel();\n\t\t}\n\n\t\tif (loader.type) {loadItem.type = loader.type;}\n\n\t\tif (loadItem.defaultPlayProps) {\n\t\t\ts._defaultPlayPropsHash[loadItem.src] = createjs.PlayPropsConfig.create(loadItem.defaultPlayProps);\n\t\t}\n\t\treturn loader;\n\t};\n\n\t/**\n\t * Register an audio file for loading and future playback in Sound. This is automatically called when using\n\t * <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>.  It is recommended to register all sounds that\n\t * need to be played back in order to properly prepare and preload them. Sound does internal preloading when required.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      createjs.Sound.alternateExtensions = [\"mp3\"];\n\t *      createjs.Sound.on(\"fileload\", handleLoad); // add an event listener for when load is completed\n\t *      createjs.Sound.registerSound(\"myAudioPath/mySound.ogg\", \"myID\", 3);\n\t *      createjs.Sound.registerSound({ogg:\"path1/mySound.ogg\", mp3:\"path2/mySoundNoExtension\"}, \"myID\", 3);\n\t *\n\t *\n\t * @method registerSound\n\t * @param {String | Object} src The source or an Object with a \"src\" property or an Object with multiple extension labeled src properties.\n\t * @param {String} [id] An id specified by the user to play the sound later.  Note id is required for when src is multiple extension labeled src properties.\n\t * @param {Number | Object} [data] Data associated with the item. Sound uses the data parameter as the number of\n\t * channels for an audio instance, however a \"channels\" property can be appended to the data object if it is used\n\t * for other information. The audio channels will set a default based on plugin if no value is found.\n\t * Sound also uses the data property to hold an {{#crossLink \"AudioSprite\"}}{{/crossLink}} array of objects in the following format {id, startTime, duration}.<br/>\n\t *   id used to play the sound later, in the same manner as a sound src with an id.<br/>\n\t *   startTime is the initial offset to start playback and loop from, in milliseconds.<br/>\n\t *   duration is the amount of time to play the clip for, in milliseconds.<br/>\n\t * This allows Sound to support audio sprites that are played back by id.\n\t * @param {string} basePath Set a path that will be prepended to src for loading.\n\t * @param {Object | PlayPropsConfig} defaultPlayProps Optional Playback properties that will be set as the defaults on any new AbstractSoundInstance.\n\t * See {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}} for options.\n\t * @return {Object} An object with the modified values that were passed in, which defines the sound.\n\t * Returns false if the source cannot be parsed or no plugins can be initialized.\n\t * Returns true if the source is already loaded.\n\t * @static\n\t * @since 0.4.0\n\t */\n\ts.registerSound = function (src, id, data, basePath, defaultPlayProps) {\n\t\tvar loadItem = {src: src, id: id, data:data, defaultPlayProps:defaultPlayProps};\n\t\tif (src instanceof Object && src.src) {\n\t\t\tbasePath = id;\n\t\t\tloadItem = src;\n\t\t}\n\t\tloadItem = createjs.LoadItem.create(loadItem);\n\t\tloadItem.path = basePath;\n\n\t\tif (basePath != null && !(loadItem.src instanceof Object)) {loadItem.src = basePath + loadItem.src;}\n\n\t\tvar loader = s._registerSound(loadItem);\n\t\tif(!loader) {return false;}\n\n\t\tif (!s._preloadHash[loadItem.src]) { s._preloadHash[loadItem.src] = [];}\n\t\ts._preloadHash[loadItem.src].push(loadItem);\n\t\tif (s._preloadHash[loadItem.src].length == 1) {\n\t\t\t// OJR note this will disallow reloading a sound if loading fails or the source changes\n\t\t\tloader.on(\"complete\", this._handleLoadComplete, this);\n\t\t\tloader.on(\"error\", this._handleLoadError, this);\n\t\t\ts.activePlugin.preload(loader);\n\t\t} else {\n\t\t\tif (s._preloadHash[loadItem.src][0] == true) {return true;}\n\t\t}\n\n\t\treturn loadItem;\n\t};\n\n\t/**\n\t * Register an array of audio files for loading and future playback in Sound. It is recommended to register all\n\t * sounds that need to be played back in order to properly prepare and preload them. Sound does internal preloading\n\t * when required.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t * \t\tvar assetPath = \"./myAudioPath/\";\n\t *      var sounds = [\n\t *          {src:\"asset0.ogg\", id:\"example\"},\n\t *          {src:\"asset1.ogg\", id:\"1\", data:6},\n\t *          {src:\"asset2.mp3\", id:\"works\"}\n\t *          {src:{mp3:\"path1/asset3.mp3\", ogg:\"path2/asset3NoExtension\"}, id:\"better\"}\n\t *      ];\n\t *      createjs.Sound.alternateExtensions = [\"mp3\"];\t// if the passed extension is not supported, try this extension\n\t *      createjs.Sound.on(\"fileload\", handleLoad); // call handleLoad when each sound loads\n\t *      createjs.Sound.registerSounds(sounds, assetPath);\n\t *\n\t * @method registerSounds\n\t * @param {Array} sounds An array of objects to load. Objects are expected to be in the format needed for\n\t * {{#crossLink \"Sound/registerSound\"}}{{/crossLink}}: <code>{src:srcURI, id:ID, data:Data}</code>\n\t * with \"id\" and \"data\" being optional.\n\t * You can also pass an object with path and manifest properties, where path is a basePath and manifest is an array of objects to load.\n\t * Note id is required if src is an object with extension labeled src properties.\n\t * @param {string} basePath Set a path that will be prepended to each src when loading.  When creating, playing, or removing\n\t * audio that was loaded with a basePath by src, the basePath must be included.\n\t * @return {Object} An array of objects with the modified values that were passed in, which defines each sound.\n\t * Like registerSound, it will return false for any values when the source cannot be parsed or if no plugins can be initialized.\n\t * Also, it will return true for any values when the source is already loaded.\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.registerSounds = function (sounds, basePath) {\n\t\tvar returnValues = [];\n\t\tif (sounds.path) {\n\t\t\tif (!basePath) {\n\t\t\t\tbasePath = sounds.path;\n\t\t\t} else {\n\t\t\t\tbasePath = basePath + sounds.path;\n\t\t\t}\n\t\t\tsounds = sounds.manifest;\n\t\t\t// TODO document this feature\n\t\t}\n\t\tfor (var i = 0, l = sounds.length; i < l; i++) {\n\t\t\treturnValues[i] = createjs.Sound.registerSound(sounds[i].src, sounds[i].id, sounds[i].data, basePath, sounds[i].defaultPlayProps);\n\t\t}\n\t\treturn returnValues;\n\t};\n\n\t/**\n\t * Remove a sound that has been registered with {{#crossLink \"Sound/registerSound\"}}{{/crossLink}} or\n\t * {{#crossLink \"Sound/registerSounds\"}}{{/crossLink}}.\n\t * <br />Note this will stop playback on active instances playing this sound before deleting them.\n\t * <br />Note if you passed in a basePath, you need to pass it or prepend it to the src here.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      createjs.Sound.removeSound(\"myID\");\n\t *      createjs.Sound.removeSound(\"myAudioBasePath/mySound.ogg\");\n\t *      createjs.Sound.removeSound(\"myPath/myOtherSound.mp3\", \"myBasePath/\");\n\t *      createjs.Sound.removeSound({mp3:\"musicNoExtension\", ogg:\"music.ogg\"}, \"myBasePath/\");\n\t *\n\t * @method removeSound\n\t * @param {String | Object} src The src or ID of the audio, or an Object with a \"src\" property, or an Object with multiple extension labeled src properties.\n\t * @param {string} basePath Set a path that will be prepended to each src when removing.\n\t * @return {Boolean} True if sound is successfully removed.\n\t * @static\n\t * @since 0.4.1\n\t */\n\ts.removeSound = function(src, basePath) {\n\t\tif (s.activePlugin == null) {return false;}\n\n\t\tif (src instanceof Object && src.src) {src = src.src;}\n\n\t\tvar details;\n\t\tif (src instanceof Object) {\n\t\t\tdetails = s._parseSrc(src);\n\t\t} else {\n\t\t\tsrc = s._getSrcById(src).src;\n\t\t\tdetails = s._parsePath(src);\n\t\t}\n\t\tif (details == null) {return false;}\n\t\tsrc = details.src;\n\t\tif (basePath != null) {src = basePath + src;}\n\n\t\tfor(var prop in s._idHash){\n\t\t\tif(s._idHash[prop].src == src) {\n\t\t\t\tdelete(s._idHash[prop]);\n\t\t\t}\n\t\t}\n\n\t\t// clear from SoundChannel, which also stops and deletes all instances\n\t\tSoundChannel.removeSrc(src);\n\n\t\tdelete(s._preloadHash[src]);\n\n\t\ts.activePlugin.removeSound(src);\n\n\t\treturn true;\n\t};\n\n\t/**\n\t * Remove an array of audio files that have been registered with {{#crossLink \"Sound/registerSound\"}}{{/crossLink}} or\n\t * {{#crossLink \"Sound/registerSounds\"}}{{/crossLink}}.\n\t * <br />Note this will stop playback on active instances playing this audio before deleting them.\n\t * <br />Note if you passed in a basePath, you need to pass it or prepend it to the src here.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t * \t\tassetPath = \"./myPath/\";\n\t *      var sounds = [\n\t *          {src:\"asset0.ogg\", id:\"example\"},\n\t *          {src:\"asset1.ogg\", id:\"1\", data:6},\n\t *          {src:\"asset2.mp3\", id:\"works\"}\n\t *      ];\n\t *      createjs.Sound.removeSounds(sounds, assetPath);\n\t *\n\t * @method removeSounds\n\t * @param {Array} sounds An array of objects to remove. Objects are expected to be in the format needed for\n\t * {{#crossLink \"Sound/removeSound\"}}{{/crossLink}}: <code>{srcOrID:srcURIorID}</code>.\n\t * You can also pass an object with path and manifest properties, where path is a basePath and manifest is an array of objects to remove.\n\t * @param {string} basePath Set a path that will be prepended to each src when removing.\n\t * @return {Object} An array of Boolean values representing if the sounds with the same array index were\n\t * successfully removed.\n\t * @static\n\t * @since 0.4.1\n\t */\n\ts.removeSounds = function (sounds, basePath) {\n\t\tvar returnValues = [];\n\t\tif (sounds.path) {\n\t\t\tif (!basePath) {\n\t\t\t\tbasePath = sounds.path;\n\t\t\t} else {\n\t\t\t\tbasePath = basePath + sounds.path;\n\t\t\t}\n\t\t\tsounds = sounds.manifest;\n\t\t}\n\t\tfor (var i = 0, l = sounds.length; i < l; i++) {\n\t\t\treturnValues[i] = createjs.Sound.removeSound(sounds[i].src, basePath);\n\t\t}\n\t\treturn returnValues;\n\t};\n\n\t/**\n\t * Remove all sounds that have been registered with {{#crossLink \"Sound/registerSound\"}}{{/crossLink}} or\n\t * {{#crossLink \"Sound/registerSounds\"}}{{/crossLink}}.\n\t * <br />Note this will stop playback on all active sound instances before deleting them.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *     createjs.Sound.removeAllSounds();\n\t *\n\t * @method removeAllSounds\n\t * @static\n\t * @since 0.4.1\n\t */\n\ts.removeAllSounds = function() {\n\t\ts._idHash = {};\n\t\ts._preloadHash = {};\n\t\tSoundChannel.removeAll();\n\t\tif (s.activePlugin) {s.activePlugin.removeAllSounds();}\n\t};\n\n\t/**\n\t * Check if a source has been loaded by internal preloaders. This is necessary to ensure that sounds that are\n\t * not completed preloading will not kick off a new internal preload if they are played.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *     var mySound = \"assetPath/asset0.ogg\";\n\t *     if(createjs.Sound.loadComplete(mySound) {\n\t *         createjs.Sound.play(mySound);\n\t *     }\n\t *\n\t * @method loadComplete\n\t * @param {String} src The src or id that is being loaded.\n\t * @return {Boolean} If the src is already loaded.\n\t * @since 0.4.0\n\t * @static\n\t */\n\ts.loadComplete = function (src) {\n\t\tif (!s.isReady()) { return false; }\n\t\tvar details = s._parsePath(src);\n\t\tif (details) {\n\t\t\tsrc = s._getSrcById(details.src).src;\n\t\t} else {\n\t\t\tsrc = s._getSrcById(src).src;\n\t\t}\n\t\tif(s._preloadHash[src] == undefined) {return false;}\n\t\treturn (s._preloadHash[src][0] == true);  // src only loads once, so if it's true for the first it's true for all\n\t};\n\n\t/**\n\t * Parse the path of a sound. Alternate extensions will be attempted in order if the\n\t * current extension is not supported\n\t * @method _parsePath\n\t * @param {String} value The path to an audio source.\n\t * @return {Object} A formatted object that can be registered with the {{#crossLink \"Sound/activePlugin:property\"}}{{/crossLink}}\n\t * and returned to a preloader like <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>.\n\t * @private\n\t * @static\n\t */\n\ts._parsePath = function (value) {\n\t\tif (typeof(value) != \"string\") {value = value.toString();}\n\n\t\tvar match = value.match(s.FILE_PATTERN);\n\t\tif (match == null) {return false;}\n\n\t\tvar name = match[4];\n\t\tvar ext = match[5];\n\t\tvar c = s.capabilities;\n\t\tvar i = 0;\n\t\twhile (!c[ext]) {\n\t\t\text = s.alternateExtensions[i++];\n\t\t\tif (i > s.alternateExtensions.length) { return null;}\t// no extensions are supported\n\t\t}\n\t\tvalue = value.replace(\".\"+match[5], \".\"+ext);\n\n\t\tvar ret = {name:name, src:value, extension:ext};\n\t\treturn ret;\n\t};\n\n\t/**\n\t * Parse the path of a sound based on properties of src matching with supported extensions.\n\t * Returns false if none of the properties are supported\n\t * @method _parseSrc\n\t * @param {Object} value The paths to an audio source, indexed by extension type.\n\t * @return {Object} A formatted object that can be registered with the {{#crossLink \"Sound/activePlugin:property\"}}{{/crossLink}}\n\t * and returned to a preloader like <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>.\n\t * @private\n\t * @static\n\t */\n\ts._parseSrc = function (value) {\n\t\tvar ret = {name:undefined, src:undefined, extension:undefined};\n\t\tvar c = s.capabilities;\n\n\t\tfor (var prop in value) {\n\t\t  if(value.hasOwnProperty(prop) && c[prop]) {\n\t\t\t\tret.src = value[prop];\n\t\t\t\tret.extension = prop;\n\t\t\t\tbreak;\n\t\t  }\n\t\t}\n\t\tif (!ret.src) {return false;}\t// no matches\n\n\t\tvar i = ret.src.lastIndexOf(\"/\");\n\t\tif (i != -1) {\n\t\t\tret.name = ret.src.slice(i+1);\n\t\t} else {\n\t\t\tret.name = ret.src;\n\t\t}\n\n\t\treturn ret;\n\t};\n\n\t/* ---------------\n\t Static API.\n\t --------------- */\n\t/**\n\t * Play a sound and get a {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} to control. If the sound fails to\n\t * play, an AbstractSoundInstance will still be returned, and have a playState of {{#crossLink \"Sound/PLAY_FAILED:property\"}}{{/crossLink}}.\n\t * Note that even on sounds with failed playback, you may still be able to call the {{#crossLink \"AbstractSoundInstance/play\"}}{{/crossLink}},\n\t * method, since the failure could be due to lack of available channels. If the src does not have a supported\n\t * extension or if there is no available plugin, a default AbstractSoundInstance will still be returned, which will\n\t * not play any audio, but will not generate errors.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      createjs.Sound.on(\"fileload\", handleLoad);\n\t *      createjs.Sound.registerSound(\"myAudioPath/mySound.mp3\", \"myID\", 3);\n\t *      function handleLoad(event) {\n\t *      \tcreatejs.Sound.play(\"myID\");\n\t *      \t// store off AbstractSoundInstance for controlling\n\t *      \tvar myInstance = createjs.Sound.play(\"myID\", {interrupt: createjs.Sound.INTERRUPT_ANY, loop:-1});\n\t *      }\n\t *\n\t * NOTE: To create an audio sprite that has not already been registered, both startTime and duration need to be set.\n\t * This is only when creating a new audio sprite, not when playing using the id of an already registered audio sprite.\n\t *\n\t * @method play\n\t * @param {String} src The src or ID of the audio.\n\t * @param {Object | PlayPropsConfig} props A PlayPropsConfig instance, or an object that contains the parameters to\n\t * play a sound. See the {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}} for more info.\n\t * @return {AbstractSoundInstance} A {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} that can be controlled\n\t * after it is created.\n\t * @static\n\t */\n\ts.play = function (src, props) {\n\t\tvar playProps = createjs.PlayPropsConfig.create(props);\n\t\tvar instance = s.createInstance(src, playProps.startTime, playProps.duration);\n\t\tvar ok = s._playInstance(instance, playProps);\n\t\tif (!ok) {instance._playFailed();}\n\t\treturn instance;\n\t};\n\n\t/**\n\t * Creates a {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} using the passed in src. If the src does not have a\n\t * supported extension or if there is no available plugin, a default AbstractSoundInstance will be returned that can be\n\t * called safely but does nothing.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var myInstance = null;\n\t *      createjs.Sound.on(\"fileload\", handleLoad);\n\t *      createjs.Sound.registerSound(\"myAudioPath/mySound.mp3\", \"myID\", 3);\n\t *      function handleLoad(event) {\n\t *      \tmyInstance = createjs.Sound.createInstance(\"myID\");\n\t *      \t// alternately we could call the following\n\t *      \tmyInstance = createjs.Sound.createInstance(\"myAudioPath/mySound.mp3\");\n\t *      }\n\t *\n\t * NOTE to create an audio sprite that has not already been registered, both startTime and duration need to be set.\n\t * This is only when creating a new audio sprite, not when playing using the id of an already registered audio sprite.\n\t *\n\t * @method createInstance\n\t * @param {String} src The src or ID of the audio.\n\t * @param {Number} [startTime=null] To create an audio sprite (with duration), the initial offset to start playback and loop from, in milliseconds.\n\t * @param {Number} [duration=null] To create an audio sprite (with startTime), the amount of time to play the clip for, in milliseconds.\n\t * @return {AbstractSoundInstance} A {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} that can be controlled after it is created.\n\t * Unsupported extensions will return the default AbstractSoundInstance.\n\t * @since 0.4.0\n\t * @static\n\t */\n\ts.createInstance = function (src, startTime, duration) {\n\t\tif (!s.initializeDefaultPlugins()) { return new createjs.DefaultSoundInstance(src, startTime, duration); }\n\n\t\tvar defaultPlayProps = s._defaultPlayPropsHash[src];\t// for audio sprites, which create and store defaults by id\n\t\tsrc = s._getSrcById(src);\n\n\t\tvar details = s._parsePath(src.src);\n\n\t\tvar instance = null;\n\t\tif (details != null && details.src != null) {\n\t\t\tSoundChannel.create(details.src);\n\t\t\tif (startTime == null) { startTime = src.startTime; }\n\t\t\tinstance = s.activePlugin.create(details.src, startTime, duration || src.duration);\n\n\t\t\tdefaultPlayProps = defaultPlayProps || s._defaultPlayPropsHash[details.src];\n\t\t\tif (defaultPlayProps) {\n\t\t\t\tinstance.applyPlayProps(defaultPlayProps);\n\t\t\t}\n\t\t} else {\n\t\t\tinstance = new createjs.DefaultSoundInstance(src, startTime, duration);\n\t\t}\n\n\t\tinstance.uniqueId = s._lastID++;\n\n\t\treturn instance;\n\t};\n\n\t/**\n\t * Stop all audio (global stop). Stopped audio is reset, and not paused. To play audio that has been stopped,\n\t * call AbstractSoundInstance {{#crossLink \"AbstractSoundInstance/play\"}}{{/crossLink}}.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *     createjs.Sound.stop();\n\t *\n\t * @method stop\n\t * @static\n\t */\n\ts.stop = function () {\n\t\tvar instances = this._instances;\n\t\tfor (var i = instances.length; i--; ) {\n\t\t\tinstances[i].stop();  // NOTE stop removes instance from this._instances\n\t\t}\n\t};\n\n\t/**\n\t * Set the default playback properties for all new SoundInstances of the passed in src or ID.\n\t * See {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}} for available properties.\n\t *\n\t * @method setDefaultPlayProps\n\t * @param {String} src The src or ID used to register the audio.\n\t * @param {Object | PlayPropsConfig} playProps The playback properties you would like to set.\n\t * @since 0.6.1\n\t */\n\ts.setDefaultPlayProps = function(src, playProps) {\n\t\tsrc = s._getSrcById(src);\n\t\ts._defaultPlayPropsHash[s._parsePath(src.src).src] = createjs.PlayPropsConfig.create(playProps);\n\t};\n\n\t/**\n\t * Get the default playback properties for the passed in src or ID.  These properties are applied to all\n\t * new SoundInstances.  Returns null if default does not exist.\n\t *\n\t * @method getDefaultPlayProps\n\t * @param {String} src The src or ID used to register the audio.\n\t * @returns {PlayPropsConfig} returns an existing PlayPropsConfig or null if one does not exist\n\t * @since 0.6.1\n\t */\n\ts.getDefaultPlayProps = function(src) {\n\t\tsrc = s._getSrcById(src);\n\t\treturn s._defaultPlayPropsHash[s._parsePath(src.src).src];\n\t};\n\n\n\t/* ---------------\n\t Internal methods\n\t --------------- */\n\t/**\n\t * Play an instance. This is called by the static API, as well as from plugins. This allows the core class to\n\t * control delays.\n\t * @method _playInstance\n\t * @param {AbstractSoundInstance} instance The {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} to start playing.\n\t * @param {PlayPropsConfig} playProps A PlayPropsConfig object.\n\t * @return {Boolean} If the sound can start playing. Sounds that fail immediately will return false. Sounds that\n\t * have a delay will return true, but may still fail to play.\n\t * @private\n\t * @static\n\t */\n\ts._playInstance = function (instance, playProps) {\n\t\tvar defaultPlayProps = s._defaultPlayPropsHash[instance.src] || {};\n\t\tif (playProps.interrupt == null) {playProps.interrupt = defaultPlayProps.interrupt || s.defaultInterruptBehavior};\n\t\tif (playProps.delay == null) {playProps.delay = defaultPlayProps.delay || 0;}\n\t\tif (playProps.offset == null) {playProps.offset = instance.position;}\n\t\tif (playProps.loop == null) {playProps.loop = instance.loop;}\n\t\tif (playProps.volume == null) {playProps.volume = instance.volume;}\n\t\tif (playProps.pan == null) {playProps.pan = instance.pan;}\n\n\t\tif (playProps.delay == 0) {\n\t\t\tvar ok = s._beginPlaying(instance, playProps);\n\t\t\tif (!ok) {return false;}\n\t\t} else {\n\t\t\t//Note that we can't pass arguments to proxy OR setTimeout (IE only), so just wrap the function call.\n\t\t\t// OJR WebAudio may want to handle this differently, so it might make sense to move this functionality into the plugins in the future\n\t\t\tvar delayTimeoutId = setTimeout(function () {\n\t\t\t\ts._beginPlaying(instance, playProps);\n\t\t\t}, playProps.delay);\n\t\t\tinstance.delayTimeoutId = delayTimeoutId;\n\t\t}\n\n\t\tthis._instances.push(instance);\n\n\t\treturn true;\n\t};\n\n\t/**\n\t * Begin playback. This is called immediately or after delay by {{#crossLink \"Sound/playInstance\"}}{{/crossLink}}.\n\t * @method _beginPlaying\n\t * @param {AbstractSoundInstance} instance A {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} to begin playback.\n\t * @param {PlayPropsConfig} playProps A PlayPropsConfig object.\n\t * @return {Boolean} If the sound can start playing. If there are no available channels, or the instance fails to\n\t * start, this will return false.\n\t * @private\n\t * @static\n\t */\n\ts._beginPlaying = function (instance, playProps) {\n\t\tif (!SoundChannel.add(instance, playProps.interrupt)) {\n\t\t\treturn false;\n\t\t}\n\t\tvar result = instance._beginPlaying(playProps);\n\t\tif (!result) {\n\t\t\tvar index = createjs.indexOf(this._instances, instance);\n\t\t\tif (index > -1) {this._instances.splice(index, 1);}\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t};\n\n\t/**\n\t * Get the source of a sound via the ID passed in with a register call. If no ID is found the value is returned\n\t * instead.\n\t * @method _getSrcById\n\t * @param {String} value The ID the sound was registered with.\n\t * @return {String} The source of the sound if it has been registered with this ID or the value that was passed in.\n\t * @private\n\t * @static\n\t */\n\ts._getSrcById = function (value) {\n\t\treturn s._idHash[value] || {src: value};\n\t};\n\n\t/**\n\t * A sound has completed playback, been interrupted, failed, or been stopped. This method removes the instance from\n\t * Sound management. It will be added again, if the sound re-plays. Note that this method is called from the\n\t * instances themselves.\n\t * @method _playFinished\n\t * @param {AbstractSoundInstance} instance The instance that finished playback.\n\t * @private\n\t * @static\n\t */\n\ts._playFinished = function (instance) {\n\t\tSoundChannel.remove(instance);\n\t\tvar index = createjs.indexOf(this._instances, instance);\n\t\tif (index > -1) {this._instances.splice(index, 1);}\t// OJR this will always be > -1, there is no way for an instance to exist without being added to this._instances\n\t};\n\n\tcreatejs.Sound = Sound;\n\n\t/**\n\t * An internal class that manages the number of active {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} instances for\n\t * each sound type. This method is only used internally by the {{#crossLink \"Sound\"}}{{/crossLink}} class.\n\t *\n\t * The number of sounds is artificially limited by Sound in order to prevent over-saturation of a\n\t * single sound, as well as to stay within hardware limitations, although the latter may disappear with better\n\t * browser support.\n\t *\n\t * When a sound is played, this class ensures that there is an available instance, or interrupts an appropriate\n\t * sound that is already playing.\n\t * #class SoundChannel\n\t * @param {String} src The source of the instances\n\t * @param {Number} [max=1] The number of instances allowed\n\t * @constructor\n\t * @protected\n\t */\n\tfunction SoundChannel(src, max) {\n\t\tthis.init(src, max);\n\t}\n\n\t/* ------------\n\t Static API\n\t ------------ */\n\t/**\n\t * A hash of channel instances indexed by source.\n\t * #property channels\n\t * @type {Object}\n\t * @static\n\t */\n\tSoundChannel.channels = {};\n\n\t/**\n\t * Create a sound channel. Note that if the sound channel already exists, this will fail.\n\t * #method create\n\t * @param {String} src The source for the channel\n\t * @param {Number} max The maximum amount this channel holds. The default is {{#crossLink \"SoundChannel.maxDefault\"}}{{/crossLink}}.\n\t * @return {Boolean} If the channels were created.\n\t * @static\n\t */\n\tSoundChannel.create = function (src, max) {\n\t\tvar channel = SoundChannel.get(src);\n\t\tif (channel == null) {\n\t\t\tSoundChannel.channels[src] = new SoundChannel(src, max);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\t/**\n\t * Delete a sound channel, stop and delete all related instances. Note that if the sound channel does not exist, this will fail.\n\t * #method remove\n\t * @param {String} src The source for the channel\n\t * @return {Boolean} If the channels were deleted.\n\t * @static\n\t */\n\tSoundChannel.removeSrc = function (src) {\n\t\tvar channel = SoundChannel.get(src);\n\t\tif (channel == null) {return false;}\n\t\tchannel._removeAll();\t// this stops and removes all active instances\n\t\tdelete(SoundChannel.channels[src]);\n\t\treturn true;\n\t};\n\t/**\n\t * Delete all sound channels, stop and delete all related instances.\n\t * #method removeAll\n\t * @static\n\t */\n\tSoundChannel.removeAll = function () {\n\t\tfor(var channel in SoundChannel.channels) {\n\t\t\tSoundChannel.channels[channel]._removeAll();\t// this stops and removes all active instances\n\t\t}\n\t\tSoundChannel.channels = {};\n\t};\n\t/**\n\t * Add an instance to a sound channel.\n\t * #method add\n\t * @param {AbstractSoundInstance} instance The instance to add to the channel\n\t * @param {String} interrupt The interrupt value to use. Please see the {{#crossLink \"Sound/play\"}}{{/crossLink}}\n\t * for details on interrupt modes.\n\t * @return {Boolean} The success of the method call. If the channel is full, it will return false.\n\t * @static\n\t */\n\tSoundChannel.add = function (instance, interrupt) {\n\t\tvar channel = SoundChannel.get(instance.src);\n\t\tif (channel == null) {return false;}\n\t\treturn channel._add(instance, interrupt);\n\t};\n\t/**\n\t * Remove an instance from the channel.\n\t * #method remove\n\t * @param {AbstractSoundInstance} instance The instance to remove from the channel\n\t * @return The success of the method call. If there is no channel, it will return false.\n\t * @static\n\t */\n\tSoundChannel.remove = function (instance) {\n\t\tvar channel = SoundChannel.get(instance.src);\n\t\tif (channel == null) {return false;}\n\t\tchannel._remove(instance);\n\t\treturn true;\n\t};\n\t/**\n\t * Get the maximum number of sounds you can have in a channel.\n\t * #method maxPerChannel\n\t * @return {Number} The maximum number of sounds you can have in a channel.\n\t */\n\tSoundChannel.maxPerChannel = function () {\n\t\treturn p.maxDefault;\n\t};\n\t/**\n\t * Get a channel instance by its src.\n\t * #method get\n\t * @param {String} src The src to use to look up the channel\n\t * @static\n\t */\n\tSoundChannel.get = function (src) {\n\t\treturn SoundChannel.channels[src];\n\t};\n\n\tvar p = SoundChannel.prototype;\n\tp.constructor = SoundChannel;\n\n\t/**\n\t * The source of the channel.\n\t * #property src\n\t * @type {String}\n\t */\n\tp.src = null;\n\n\t/**\n\t * The maximum number of instances in this channel.  -1 indicates no limit\n\t * #property max\n\t * @type {Number}\n\t */\n\tp.max = null;\n\n\t/**\n\t * The default value to set for max, if it isn't passed in.  Also used if -1 is passed.\n\t * #property maxDefault\n\t * @type {Number}\n\t * @default 100\n\t * @since 0.4.0\n\t */\n\tp.maxDefault = 100;\n\n\t/**\n\t * The current number of active instances.\n\t * #property length\n\t * @type {Number}\n\t */\n\tp.length = 0;\n\n\t/**\n\t * Initialize the channel.\n\t * #method init\n\t * @param {String} src The source of the channel\n\t * @param {Number} max The maximum number of instances in the channel\n\t * @protected\n\t */\n\tp.init = function (src, max) {\n\t\tthis.src = src;\n\t\tthis.max = max || this.maxDefault;\n\t\tif (this.max == -1) {this.max = this.maxDefault;}\n\t\tthis._instances = [];\n\t};\n\n\t/**\n\t * Get an instance by index.\n\t * #method get\n\t * @param {Number} index The index to return.\n\t * @return {AbstractSoundInstance} The AbstractSoundInstance at a specific instance.\n\t */\n\tp._get = function (index) {\n\t\treturn this._instances[index];\n\t};\n\n\t/**\n\t * Add a new instance to the channel.\n\t * #method add\n\t * @param {AbstractSoundInstance} instance The instance to add.\n\t * @return {Boolean} The success of the method call. If the channel is full, it will return false.\n\t */\n\tp._add = function (instance, interrupt) {\n\t\tif (!this._getSlot(interrupt, instance)) {return false;}\n\t\tthis._instances.push(instance);\n\t\tthis.length++;\n\t\treturn true;\n\t};\n\n\t/**\n\t * Remove an instance from the channel, either when it has finished playing, or it has been interrupted.\n\t * #method remove\n\t * @param {AbstractSoundInstance} instance The instance to remove\n\t * @return {Boolean} The success of the remove call. If the instance is not found in this channel, it will\n\t * return false.\n\t */\n\tp._remove = function (instance) {\n\t\tvar index = createjs.indexOf(this._instances, instance);\n\t\tif (index == -1) {return false;}\n\t\tthis._instances.splice(index, 1);\n\t\tthis.length--;\n\t\treturn true;\n\t};\n\n\t/**\n\t * Stop playback and remove all instances from the channel.  Usually in response to a delete call.\n\t * #method removeAll\n\t */\n\tp._removeAll = function () {\n\t\t// Note that stop() removes the item from the list\n\t\tfor (var i=this.length-1; i>=0; i--) {\n\t\t\tthis._instances[i].stop();\n\t\t}\n\t};\n\n\t/**\n\t * Get an available slot depending on interrupt value and if slots are available.\n\t * #method getSlot\n\t * @param {String} interrupt The interrupt value to use.\n\t * @param {AbstractSoundInstance} instance The sound instance that will go in the channel if successful.\n\t * @return {Boolean} Determines if there is an available slot. Depending on the interrupt mode, if there are no slots,\n\t * an existing AbstractSoundInstance may be interrupted. If there are no slots, this method returns false.\n\t */\n\tp._getSlot = function (interrupt, instance) {\n\t\tvar target, replacement;\n\n\t\tif (interrupt != Sound.INTERRUPT_NONE) {\n\t\t\t// First replacement candidate\n\t\t\treplacement = this._get(0);\n\t\t\tif (replacement == null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0, l = this.max; i < l; i++) {\n\t\t\ttarget = this._get(i);\n\n\t\t\t// Available Space\n\t\t\tif (target == null) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Audio is complete or not playing\n\t\t\tif (target.playState == Sound.PLAY_FINISHED ||\n\t\t\t\ttarget.playState == Sound.PLAY_INTERRUPTED ||\n\t\t\t\ttarget.playState == Sound.PLAY_FAILED) {\n\t\t\t\treplacement = target;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (interrupt == Sound.INTERRUPT_NONE) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Audio is a better candidate than the current target, according to playhead\n\t\t\tif ((interrupt == Sound.INTERRUPT_EARLY && target.position < replacement.position) ||\n\t\t\t\t(interrupt == Sound.INTERRUPT_LATE && target.position > replacement.position)) {\n\t\t\t\t\treplacement = target;\n\t\t\t}\n\t\t}\n\n\t\tif (replacement != null) {\n\t\t\treplacement._interrupt();\n\t\t\tthis._remove(replacement);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\tp.toString = function () {\n\t\treturn \"[Sound SoundChannel]\";\n\t};\n\t// do not add SoundChannel to namespace\n\n}());\n\n//##############################################################################\n// AbstractSoundInstance.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n/**\n * A AbstractSoundInstance is created when any calls to the Sound API method {{#crossLink \"Sound/play\"}}{{/crossLink}} or\n * {{#crossLink \"Sound/createInstance\"}}{{/crossLink}} are made. The AbstractSoundInstance is returned by the active plugin\n * for control by the user.\n *\n * <h4>Example</h4>\n *\n *      var myInstance = createjs.Sound.play(\"myAssetPath/mySrcFile.mp3\");\n *\n * A number of additional parameters provide a quick way to determine how a sound is played. Please see the Sound\n * API method {{#crossLink \"Sound/play\"}}{{/crossLink}} for a list of arguments.\n *\n * Once a AbstractSoundInstance is created, a reference can be stored that can be used to control the audio directly through\n * the AbstractSoundInstance. If the reference is not stored, the AbstractSoundInstance will play out its audio (and any loops), and\n * is then de-referenced from the {{#crossLink \"Sound\"}}{{/crossLink}} class so that it can be cleaned up. If audio\n * playback has completed, a simple call to the {{#crossLink \"AbstractSoundInstance/play\"}}{{/crossLink}} instance method\n * will rebuild the references the Sound class need to control it.\n *\n *      var myInstance = createjs.Sound.play(\"myAssetPath/mySrcFile.mp3\", {loop:2});\n *      myInstance.on(\"loop\", handleLoop);\n *      function handleLoop(event) {\n *          myInstance.volume = myInstance.volume * 0.5;\n *      }\n *\n * Events are dispatched from the instance to notify when the sound has completed, looped, or when playback fails\n *\n *      var myInstance = createjs.Sound.play(\"myAssetPath/mySrcFile.mp3\");\n *      myInstance.on(\"complete\", handleComplete);\n *      myInstance.on(\"loop\", handleLoop);\n *      myInstance.on(\"failed\", handleFailed);\n *\n *\n * @class AbstractSoundInstance\n * @param {String} src The path to and file name of the sound.\n * @param {Number} startTime Audio sprite property used to apply an offset, in milliseconds.\n * @param {Number} duration Audio sprite property used to set the time the clip plays for, in milliseconds.\n * @param {Object} playbackResource Any resource needed by plugin to support audio playback.\n * @extends EventDispatcher\n * @constructor\n */\n\n(function () {\n\t\"use strict\";\n\n\n// Constructor:\n\tvar AbstractSoundInstance = function (src, startTime, duration, playbackResource) {\n\t\tthis.EventDispatcher_constructor();\n\n\n\t// public properties:\n\t\t/**\n\t\t * The source of the sound.\n\t\t * @property src\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.src = src;\n\n\t\t/**\n\t\t * The unique ID of the instance. This is set by {{#crossLink \"Sound\"}}{{/crossLink}}.\n\t\t * @property uniqueId\n\t\t * @type {String} | Number\n\t\t * @default -1\n\t\t */\n\t\tthis.uniqueId = -1;\n\n\t\t/**\n\t\t * The play state of the sound. Play states are defined as constants on {{#crossLink \"Sound\"}}{{/crossLink}}.\n\t\t * @property playState\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.playState = null;\n\n\t\t/**\n\t\t * A Timeout created by {{#crossLink \"Sound\"}}{{/crossLink}} when this AbstractSoundInstance is played with a delay.\n\t\t * This allows AbstractSoundInstance to remove the delay if stop, pause, or cleanup are called before playback begins.\n\t\t * @property delayTimeoutId\n\t\t * @type {timeoutVariable}\n\t\t * @default null\n\t\t * @protected\n\t\t * @since 0.4.0\n\t\t */\n\t\tthis.delayTimeoutId = null;\n\t\t// TODO consider moving delay into AbstractSoundInstance so it can be handled by plugins\n\n\n\t// private properties\n\t// Getter / Setter Properties\n\t\t// OJR TODO find original reason that we didn't use defined functions.  I think it was performance related\n\t\t/**\n\t\t * The volume of the sound, between 0 and 1.\n\t\t *\n\t\t * The actual output volume of a sound can be calculated using:\n\t\t * <code>myInstance.volume * createjs.Sound._getVolume();</code>\n\t\t *\n\t\t * @property volume\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t */\n\t\tthis._volume =  1;\n\t\tObject.defineProperty(this, \"volume\", {\n\t\t\tget: this._getVolume,\n\t\t\tset: this._setVolume\n\t\t});\n\n\t\t/**\n\t\t * The pan of the sound, between -1 (left) and 1 (right). Note that pan is not supported by HTML Audio.\n\t\t *\n\t\t * Note in WebAudioPlugin this only gives us the \"x\" value of what is actually 3D audio\n\t\t * @property pan\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis._pan =  0;\n\t\tObject.defineProperty(this, \"pan\", {\n\t\t\tget: this._getPan,\n\t\t\tset: this._setPan\n\t\t});\n\n\t\t/**\n\t\t * Audio sprite property used to determine the starting offset.\n\t\t * @property startTime\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @since 0.6.1\n\t\t */\n\t\tthis._startTime = Math.max(0, startTime || 0);\n\t\tObject.defineProperty(this, \"startTime\", {\n\t\t\tget: this._getStartTime,\n\t\t\tset: this._setStartTime\n\t\t});\n\n\t\t/**\n\t\t * Sets or gets the length of the audio clip, value is in milliseconds.\n\t\t *\n\t\t * @property duration\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @since 0.6.0\n\t\t */\n\t\tthis._duration = Math.max(0, duration || 0);\n\t\tObject.defineProperty(this, \"duration\", {\n\t\t\tget: this._getDuration,\n\t\t\tset: this._setDuration\n\t\t});\n\n\t\t/**\n\t\t * Object that holds plugin specific resource need for audio playback.\n\t\t * This is set internally by the plugin.  For example, WebAudioPlugin will set an array buffer,\n\t\t * HTMLAudioPlugin will set a tag, FlashAudioPlugin will set a flash reference.\n\t\t *\n\t\t * @property playbackResource\n\t\t * @type {Object}\n\t\t * @default null\n\t\t */\n\t\tthis._playbackResource = null;\n\t\tObject.defineProperty(this, \"playbackResource\", {\n\t\t\tget: this._getPlaybackResource,\n\t\t\tset: this._setPlaybackResource\n\t\t});\n\t\tif(playbackResource !== false && playbackResource !== true) { this._setPlaybackResource(playbackResource); }\n\n\t\t/**\n\t\t * The position of the playhead in milliseconds. This can be set while a sound is playing, paused, or stopped.\n\t\t *\n\t\t * @property position\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @since 0.6.0\n\t\t */\n\t\tthis._position = 0;\n\t\tObject.defineProperty(this, \"position\", {\n\t\t\tget: this._getPosition,\n\t\t\tset: this._setPosition\n\t\t});\n\n\t\t/**\n\t\t * The number of play loops remaining. Negative values will loop infinitely.\n\t\t *\n\t\t * @property loop\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @public\n\t\t * @since 0.6.0\n\t\t */\n\t\tthis._loop = 0;\n\t\tObject.defineProperty(this, \"loop\", {\n\t\t\tget: this._getLoop,\n\t\t\tset: this._setLoop\n\t\t});\n\n\t\t/**\n\t\t * Mutes or unmutes the current audio instance.\n\t\t *\n\t\t * @property muted\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t * @since 0.6.0\n\t\t */\n\t\tthis._muted = false;\n\t\tObject.defineProperty(this, \"muted\", {\n\t\t\tget: this._getMuted,\n\t\t\tset: this._setMuted\n\t\t});\n\n\t\t/**\n\t\t * Pauses or resumes the current audio instance.\n\t\t *\n\t\t * @property paused\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis._paused = false;\n\t\tObject.defineProperty(this, \"paused\", {\n\t\t\tget: this._getPaused,\n\t\t\tset: this._setPaused\n\t\t});\n\n\n\t// Events\n\t\t/**\n\t\t * The event that is fired when playback has started successfully.\n\t\t * @event succeeded\n\t\t * @param {Object} target The object that dispatched the event.\n\t\t * @param {String} type The event type.\n\t\t * @since 0.4.0\n\t\t */\n\n\t\t/**\n\t\t * The event that is fired when playback is interrupted. This happens when another sound with the same\n\t\t * src property is played using an interrupt value that causes this instance to stop playing.\n\t\t * @event interrupted\n\t\t * @param {Object} target The object that dispatched the event.\n\t\t * @param {String} type The event type.\n\t\t * @since 0.4.0\n\t\t */\n\n\t\t/**\n\t\t * The event that is fired when playback has failed. This happens when there are too many channels with the same\n\t\t * src property already playing (and the interrupt value doesn't cause an interrupt of another instance), or\n\t\t * the sound could not be played, perhaps due to a 404 error.\n\t\t * @event failed\n\t\t * @param {Object} target The object that dispatched the event.\n\t\t * @param {String} type The event type.\n\t\t * @since 0.4.0\n\t\t */\n\n\t\t/**\n\t\t * The event that is fired when a sound has completed playing but has loops remaining.\n\t\t * @event loop\n\t\t * @param {Object} target The object that dispatched the event.\n\t\t * @param {String} type The event type.\n\t\t * @since 0.4.0\n\t\t */\n\n\t\t/**\n\t\t * The event that is fired when playback completes. This means that the sound has finished playing in its\n\t\t * entirety, including its loop iterations.\n\t\t * @event complete\n\t\t * @param {Object} target The object that dispatched the event.\n\t\t * @param {String} type The event type.\n\t\t * @since 0.4.0\n\t\t */\n\t};\n\n\tvar p = createjs.extend(AbstractSoundInstance, createjs.EventDispatcher);\n\n// Public Methods:\n\t/**\n\t * Play an instance. This method is intended to be called on SoundInstances that already exist (created\n\t * with the Sound API {{#crossLink \"Sound/createInstance\"}}{{/crossLink}} or {{#crossLink \"Sound/play\"}}{{/crossLink}}).\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var myInstance = createjs.Sound.createInstance(mySrc);\n\t *      myInstance.play({interrupt:createjs.Sound.INTERRUPT_ANY, loop:2, pan:0.5});\n\t *\n\t * Note that if this sound is already playing, this call will still set the passed in parameters.\n\n\t * <b>Parameters Deprecated</b><br />\n\t * The parameters for this method are deprecated in favor of a single parameter that is an Object or {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}}.\n\t *\n\t * @method play\n\t * @param {Object | PlayPropsConfig} props A PlayPropsConfig instance, or an object that contains the parameters to\n\t * play a sound. See the {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}} for more info.\n\t * @return {AbstractSoundInstance} A reference to itself, intended for chaining calls.\n\t */\n\tp.play = function (props) {\n\t\tvar playProps = createjs.PlayPropsConfig.create(props);\n\t\tif (this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n\t\t\tthis.applyPlayProps(playProps);\n\t\t\tif (this._paused) {\tthis._setPaused(false); }\n\t\t\treturn;\n\t\t}\n\t\tthis._cleanUp();\n\t\tcreatejs.Sound._playInstance(this, playProps);\t// make this an event dispatch??\n\t\treturn this;\n\t};\n\n\t/**\n\t * Stop playback of the instance. Stopped sounds will reset their position to 0, and calls to {{#crossLink \"AbstractSoundInstance/resume\"}}{{/crossLink}}\n\t * will fail. To start playback again, call {{#crossLink \"AbstractSoundInstance/play\"}}{{/crossLink}}.\n     *\n     * If you don't want to lose your position use yourSoundInstance.paused = true instead. {{#crossLink \"AbstractSoundInstance/paused\"}}{{/crossLink}}.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *     myInstance.stop();\n\t *\n\t * @method stop\n\t * @return {AbstractSoundInstance} A reference to itself, intended for chaining calls.\n\t */\n\tp.stop = function () {\n\t\tthis._position = 0;\n\t\tthis._paused = false;\n\t\tthis._handleStop();\n\t\tthis._cleanUp();\n\t\tthis.playState = createjs.Sound.PLAY_FINISHED;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Remove all external references and resources from AbstractSoundInstance.  Note this is irreversible and AbstractSoundInstance will no longer work\n\t * @method destroy\n\t * @since 0.6.0\n\t */\n\tp.destroy = function() {\n\t\tthis._cleanUp();\n\t\tthis.src = null;\n\t\tthis.playbackResource = null;\n\n\t\tthis.removeAllEventListeners();\n\t};\n\n\t/**\n\t * Takes an PlayPropsConfig or Object with the same properties and sets them on this instance.\n\t * @method applyPlayProps\n\t * @param {PlayPropsConfig | Object} playProps A PlayPropsConfig or object containing the same properties.\n\t * @since 0.6.1\n\t * @return {AbstractSoundInstance} A reference to itself, intended for chaining calls.\n\t */\n\tp.applyPlayProps = function(playProps) {\n\t\tif (playProps.offset != null) { this._setPosition(playProps.offset) }\n\t\tif (playProps.loop != null) { this._setLoop(playProps.loop); }\n\t\tif (playProps.volume != null) { this._setVolume(playProps.volume); }\n\t\tif (playProps.pan != null) { this._setPan(playProps.pan); }\n\t\tif (playProps.startTime != null) {\n\t\t\tthis._setStartTime(playProps.startTime);\n\t\t\tthis._setDuration(playProps.duration);\n\t\t}\n\t\treturn this;\n\t};\n\n\tp.toString = function () {\n\t\treturn \"[AbstractSoundInstance]\";\n\t};\n\n// get/set methods that allow support for IE8\n\t/**\n\t * Please use {{#crossLink \"AbstractSoundInstance/paused:property\"}}{{/crossLink}} directly as a property.\n\t * @method _getPaused\n\t * @protected\n\t * @return {boolean} If the instance is currently paused\n\t * @since 0.6.0\n\t */\n\tp._getPaused = function() {\n\t\treturn this._paused;\n\t};\n\n\t/**\n\t * Please use {{#crossLink \"AbstractSoundInstance/paused:property\"}}{{/crossLink}} directly as a property\n\t * @method _setPaused\n\t * @protected\n\t * @param {boolean} value\n\t * @since 0.6.0\n\t * @return {AbstractSoundInstance} A reference to itself, intended for chaining calls.\n\t */\n\tp._setPaused = function (value) {\n\t\tif ((value !== true && value !== false) || this._paused == value) {return;}\n\t\tif (value == true && this.playState != createjs.Sound.PLAY_SUCCEEDED) {return;}\n\t\tthis._paused = value;\n\t\tif(value) {\n\t\t\tthis._pause();\n\t\t} else {\n\t\t\tthis._resume();\n\t\t}\n\t\tclearTimeout(this.delayTimeoutId);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Please use {{#crossLink \"AbstractSoundInstance/volume:property\"}}{{/crossLink}} directly as a property\n\t * @method _setVolume\n\t * @protected\n\t * @param {Number} value The volume to set, between 0 and 1.\n\t * @return {AbstractSoundInstance} A reference to itself, intended for chaining calls.\n\t */\n\tp._setVolume = function (value) {\n\t\tif (value == this._volume) { return this; }\n\t\tthis._volume = Math.max(0, Math.min(1, value));\n\t\tif (!this._muted) {\n\t\t\tthis._updateVolume();\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * Please use {{#crossLink \"AbstractSoundInstance/volume:property\"}}{{/crossLink}} directly as a property\n\t * @method _getVolume\n\t * @protected\n\t * @return {Number} The current volume of the sound instance.\n\t */\n\tp._getVolume = function () {\n\t\treturn this._volume;\n\t};\n\n\t/**\n\t * Please use {{#crossLink \"AbstractSoundInstance/muted:property\"}}{{/crossLink}} directly as a property\n\t * @method _setMuted\n\t * @protected\n\t * @param {Boolean} value If the sound should be muted.\n\t * @return {AbstractSoundInstance} A reference to itself, intended for chaining calls.\n\t * @since 0.6.0\n\t */\n\tp._setMuted = function (value) {\n\t\tif (value !== true && value !== false) {return;}\n\t\tthis._muted = value;\n\t\tthis._updateVolume();\n\t\treturn this;\n\t};\n\n\t/**\n\t * Please use {{#crossLink \"AbstractSoundInstance/muted:property\"}}{{/crossLink}} directly as a property\n\t * @method _getMuted\n\t * @protected\n\t * @return {Boolean} If the sound is muted.\n\t * @since 0.6.0\n\t */\n\tp._getMuted = function () {\n\t\treturn this._muted;\n\t};\n\n\t/**\n\t * Please use {{#crossLink \"AbstractSoundInstance/pan:property\"}}{{/crossLink}} directly as a property\n\t * @method _setPan\n\t * @protected\n\t * @param {Number} value The pan value, between -1 (left) and 1 (right).\n\t * @return {AbstractSoundInstance} Returns reference to itself for chaining calls\n\t */\n\tp._setPan = function (value) {\n\t\tif(value == this._pan) { return this; }\n\t\tthis._pan = Math.max(-1, Math.min(1, value));\n\t\tthis._updatePan();\n\t\treturn this;\n\t};\n\n\t/**\n\t * Please use {{#crossLink \"AbstractSoundInstance/pan:property\"}}{{/crossLink}} directly as a property\n\t * @method _getPan\n\t * @protected\n\t * @return {Number} The value of the pan, between -1 (left) and 1 (right).\n\t */\n\tp._getPan = function () {\n\t\treturn this._pan;\n\t};\n\n\t/**\n\t * Please use {{#crossLink \"AbstractSoundInstance/position:property\"}}{{/crossLink}} directly as a property\n\t * @method _getPosition\n\t * @protected\n\t * @return {Number} The position of the playhead in the sound, in milliseconds.\n\t */\n\tp._getPosition = function () {\n\t\tif (!this._paused && this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n\t\t\tthis._position = this._calculateCurrentPosition();\n\t\t}\n\t\treturn this._position;\n\t};\n\n\t/**\n\t * Please use {{#crossLink \"AbstractSoundInstance/position:property\"}}{{/crossLink}} directly as a property\n\t * @method _setPosition\n\t * @protected\n\t * @param {Number} value The position to place the playhead, in milliseconds.\n\t * @return {AbstractSoundInstance} Returns reference to itself for chaining calls\n\t */\n\tp._setPosition = function (value) {\n\t\tthis._position = Math.max(0, value);\n\t\tif (this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n\t\t\tthis._updatePosition();\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * Please use {{#crossLink \"AbstractSoundInstance/startTime:property\"}}{{/crossLink}} directly as a property\n\t * @method _getStartTime\n\t * @protected\n\t * @return {Number} The startTime of the sound instance in milliseconds.\n\t */\n\tp._getStartTime = function () {\n\t\treturn this._startTime;\n\t};\n\n\t/**\n\t * Please use {{#crossLink \"AbstractSoundInstance/startTime:property\"}}{{/crossLink}} directly as a property\n\t * @method _setStartTime\n\t * @protected\n\t * @param {number} value The new startTime time in milli seconds.\n\t * @return {AbstractSoundInstance} Returns reference to itself for chaining calls\n\t */\n\tp._setStartTime = function (value) {\n\t\tif (value == this._startTime) { return this; }\n\t\tthis._startTime = Math.max(0, value || 0);\n\t\tthis._updateStartTime();\n\t\treturn this;\n\t};\n\n\t/**\n\t * Please use {{#crossLink \"AbstractSoundInstance/duration:property\"}}{{/crossLink}} directly as a property\n\t * @method _getDuration\n\t * @protected\n\t * @return {Number} The duration of the sound instance in milliseconds.\n\t */\n\tp._getDuration = function () {\n\t\treturn this._duration;\n\t};\n\n\t/**\n\t * Please use {{#crossLink \"AbstractSoundInstance/duration:property\"}}{{/crossLink}} directly as a property\n\t * @method _setDuration\n\t * @protected\n\t * @param {number} value The new duration time in milli seconds.\n\t * @return {AbstractSoundInstance} Returns reference to itself for chaining calls\n\t * @since 0.6.0\n\t */\n\tp._setDuration = function (value) {\n\t\tif (value == this._duration) { return this; }\n\t\tthis._duration = Math.max(0, value || 0);\n\t\tthis._updateDuration();\n\t\treturn this;\n\t};\n\n\t/**\n\t * Please use {{#crossLink \"AbstractSoundInstance/playbackResource:property\"}}{{/crossLink}} directly as a property\n\t * @method _setPlaybackResource\n\t * @protected\n\t * @param {Object} value The new playback resource.\n\t * @return {AbstractSoundInstance} Returns reference to itself for chaining calls\n\t * @since 0.6.0\n\t **/\n\tp._setPlaybackResource = function (value) {\n\t\tthis._playbackResource = value;\n\t\tif (this._duration == 0 && this._playbackResource) { this._setDurationFromSource(); }\n\t\treturn this;\n\t};\n\n\t/**\n\t * Please use {{#crossLink \"AbstractSoundInstance/playbackResource:property\"}}{{/crossLink}} directly as a property\n\t * @method _getPlaybackResource\n\t * @protected\n\t * @param {Object} value The new playback resource.\n\t * @return {Object} playback resource used for playing audio\n\t * @since 0.6.0\n\t **/\n\tp._getPlaybackResource = function () {\n\t\treturn this._playbackResource;\n\t};\n\n\t/**\n\t * Please use {{#crossLink \"AbstractSoundInstance/loop:property\"}}{{/crossLink}} directly as a property\n\t * @method _getLoop\n\t * @protected\n\t * @return {number}\n\t * @since 0.6.0\n\t **/\n\tp._getLoop = function () {\n\t\treturn this._loop;\n\t};\n\n\t/**\n\t * Please use {{#crossLink \"AbstractSoundInstance/loop:property\"}}{{/crossLink}} directly as a property\n\t * @method _setLoop\n\t * @protected\n\t * @param {number} value The number of times to loop after play.\n\t * @since 0.6.0\n\t */\n\tp._setLoop = function (value) {\n\t\tif(this._playbackResource != null) {\n\t\t\t// remove looping\n\t\t\tif (this._loop != 0 && value == 0) {\n\t\t\t\tthis._removeLooping(value);\n\t\t\t}\n\t\t\t// add looping\n\t\t\telse if (this._loop == 0 && value != 0) {\n\t\t\t\tthis._addLooping(value);\n\t\t\t}\n\t\t}\n\t\tthis._loop = value;\n\t};\n\n\n// Private Methods:\n\t/**\n\t * A helper method that dispatches all events for AbstractSoundInstance.\n\t * @method _sendEvent\n\t * @param {String} type The event type\n\t * @protected\n\t */\n\tp._sendEvent = function (type) {\n\t\tvar event = new createjs.Event(type);\n\t\tthis.dispatchEvent(event);\n\t};\n\n\t/**\n\t * Clean up the instance. Remove references and clean up any additional properties such as timers.\n\t * @method _cleanUp\n\t * @protected\n\t */\n\tp._cleanUp = function () {\n\t\tclearTimeout(this.delayTimeoutId); // clear timeout that plays delayed sound\n\t\tthis._handleCleanUp();\n\t\tthis._paused = false;\n\n\t\tcreatejs.Sound._playFinished(this);\t// TODO change to an event\n\t};\n\n\t/**\n\t * The sound has been interrupted.\n\t * @method _interrupt\n\t * @protected\n\t */\n\tp._interrupt = function () {\n\t\tthis._cleanUp();\n\t\tthis.playState = createjs.Sound.PLAY_INTERRUPTED;\n\t\tthis._sendEvent(\"interrupted\");\n\t};\n\n\t/**\n\t * Called by the Sound class when the audio is ready to play (delay has completed). Starts sound playing if the\n\t * src is loaded, otherwise playback will fail.\n\t * @method _beginPlaying\n\t * @param {PlayPropsConfig} playProps A PlayPropsConfig object.\n\t * @return {Boolean} If playback succeeded.\n\t * @protected\n\t */\n\t// OJR FlashAudioSoundInstance overwrites\n\tp._beginPlaying = function (playProps) {\n\t\tthis._setPosition(playProps.offset);\n\t\tthis._setLoop(playProps.loop);\n\t\tthis._setVolume(playProps.volume);\n\t\tthis._setPan(playProps.pan);\n\t\tif (playProps.startTime != null) {\n\t\t\tthis._setStartTime(playProps.startTime);\n\t\t\tthis._setDuration(playProps.duration);\n\t\t}\n\n\t\tif (this._playbackResource != null && this._position < this._duration) {\n\t\t\tthis._paused = false;\n\t\t\tthis._handleSoundReady();\n\t\t\tthis.playState = createjs.Sound.PLAY_SUCCEEDED;\n\t\t\tthis._sendEvent(\"succeeded\");\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis._playFailed();\n\t\t\treturn false;\n\t\t}\n\t};\n\n\t/**\n\t * Play has failed, which can happen for a variety of reasons.\n\t * Cleans up instance and dispatches failed event\n\t * @method _playFailed\n\t * @private\n\t */\n\tp._playFailed = function () {\n\t\tthis._cleanUp();\n\t\tthis.playState = createjs.Sound.PLAY_FAILED;\n\t\tthis._sendEvent(\"failed\");\n\t};\n\n\t/**\n\t * Audio has finished playing. Manually loop it if required.\n\t * @method _handleSoundComplete\n\t * @param event\n\t * @protected\n\t */\n\tp._handleSoundComplete = function (event) {\n\t\tthis._position = 0;  // have to set this as it can be set by pause during playback\n\n\t\tif (this._loop != 0) {\n\t\t\tthis._loop--;  // NOTE this introduces a theoretical limit on loops = float max size x 2 - 1\n\t\t\tthis._handleLoop();\n\t\t\tthis._sendEvent(\"loop\");\n\t\t\treturn;\n\t\t}\n\n\t\tthis._cleanUp();\n\t\tthis.playState = createjs.Sound.PLAY_FINISHED;\n\t\tthis._sendEvent(\"complete\");\n\t};\n\n// Plugin specific code\n\t/**\n\t * Handles starting playback when the sound is ready for playing.\n\t * @method _handleSoundReady\n\t * @protected\n \t */\n\tp._handleSoundReady = function () {\n\t\t// plugin specific code\n\t};\n\n\t/**\n\t * Internal function used to update the volume based on the instance volume, master volume, instance mute value,\n\t * and master mute value.\n\t * @method _updateVolume\n\t * @protected\n\t */\n\tp._updateVolume = function () {\n\t\t// plugin specific code\n\t};\n\n\t/**\n\t * Internal function used to update the pan\n\t * @method _updatePan\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp._updatePan = function () {\n\t\t// plugin specific code\n\t};\n\n\t/**\n\t * Internal function used to update the startTime of the audio.\n\t * @method _updateStartTime\n\t * @protected\n\t * @since 0.6.1\n\t */\n\tp._updateStartTime = function () {\n\t\t// plugin specific code\n\t};\n\n\t/**\n\t * Internal function used to update the duration of the audio.\n\t * @method _updateDuration\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp._updateDuration = function () {\n\t\t// plugin specific code\n\t};\n\n\t/**\n\t * Internal function used to get the duration of the audio from the source we'll be playing.\n\t * @method _updateDuration\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp._setDurationFromSource = function () {\n\t\t// plugin specific code\n\t};\n\n\t/**\n\t * Internal function that calculates the current position of the playhead and sets this._position to that value\n\t * @method _calculateCurrentPosition\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp._calculateCurrentPosition = function () {\n\t\t// plugin specific code that sets this.position\n\t};\n\n\t/**\n\t * Internal function used to update the position of the playhead.\n\t * @method _updatePosition\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp._updatePosition = function () {\n\t\t// plugin specific code\n\t};\n\n\t/**\n\t * Internal function called when looping is removed during playback.\n\t * @method _removeLooping\n\t * @param {number} value The number of times to loop after play.\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp._removeLooping = function (value) {\n\t\t// plugin specific code\n\t};\n\n\t/**\n\t * Internal function called when looping is added during playback.\n\t * @method _addLooping\n\t * @param {number} value The number of times to loop after play.\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp._addLooping = function (value) {\n\t\t// plugin specific code\n\t};\n\n\t/**\n\t * Internal function called when pausing playback\n\t * @method _pause\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp._pause = function () {\n\t\t// plugin specific code\n\t};\n\n\t/**\n\t * Internal function called when resuming playback\n\t * @method _resume\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp._resume = function () {\n\t\t// plugin specific code\n\t};\n\n\t/**\n\t * Internal function called when stopping playback\n\t * @method _handleStop\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp._handleStop = function() {\n\t\t// plugin specific code\n\t};\n\n\t/**\n\t * Internal function called when AbstractSoundInstance is being cleaned up\n\t * @method _handleCleanUp\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp._handleCleanUp = function() {\n\t\t// plugin specific code\n\t};\n\n\t/**\n\t * Internal function called when AbstractSoundInstance has played to end and is looping\n\t * @method _handleLoop\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp._handleLoop = function () {\n\t\t// plugin specific code\n\t};\n\n\tcreatejs.AbstractSoundInstance = createjs.promote(AbstractSoundInstance, \"EventDispatcher\");\n\tcreatejs.DefaultSoundInstance = createjs.AbstractSoundInstance;\t// used when no plugin is supported\n}());\n\n//##############################################################################\n// AbstractPlugin.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\n// constructor:\n \t/**\n\t * A default plugin class used as a base for all other plugins.\n\t * @class AbstractPlugin\n\t * @constructor\n\t * @since 0.6.0\n\t */\n\n\tvar AbstractPlugin = function () {\n\t// private properties:\n\t\t/**\n\t\t * The capabilities of the plugin.\n\t\t * method and is used internally.\n\t\t * @property _capabilities\n\t\t * @type {Object}\n\t\t * @default null\n\t\t * @protected\n\t\t * @static\n\t\t */\n\t\tthis._capabilities = null;\n\n\t\t/**\n\t\t * Object hash indexed by the source URI of all created loaders, used to properly destroy them if sources are removed.\n\t\t * @type {Object}\n\t\t * @protected\n\t\t */\n\t\tthis._loaders = {};\n\n\t\t/**\n\t\t * Object hash indexed by the source URI of each file to indicate if an audio source has begun loading,\n\t\t * is currently loading, or has completed loading.  Can be used to store non boolean data after loading\n\t\t * is complete (for example arrayBuffers for web audio).\n\t\t * @property _audioSources\n\t\t * @type {Object}\n\t\t * @protected\n\t\t */\n\t\tthis._audioSources = {};\n\n\t\t/**\n\t\t * Object hash indexed by the source URI of all created SoundInstances, updates the playbackResource if it loads after they are created,\n\t\t * and properly destroy them if sources are removed\n\t\t * @type {Object}\n\t\t * @protected\n\t\t */\n\t\tthis._soundInstances = {};\n\n\t\t/**\n\t\t * The internal master volume value of the plugin.\n\t\t * @property _volume\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t * @protected\n\t\t */\n\t\tthis._volume = 1;\n\n\t\t/**\n\t\t * A reference to a loader class used by a plugin that must be set.\n\t\t * @type {Object}\n\t\t * @protected\n\t\t */\n\t\tthis._loaderClass;\n\n\t\t/**\n\t\t * A reference to an AbstractSoundInstance class used by a plugin that must be set.\n\t\t * @type {Object}\n\t\t * @protected;\n\t\t */\n\t\tthis._soundInstanceClass;\n\t};\n\tvar p = AbstractPlugin.prototype;\n\n// Static Properties:\n// NOTE THESE PROPERTIES NEED TO BE ADDED TO EACH PLUGIN\n\t/**\n\t * The capabilities of the plugin. This is generated via the _generateCapabilities method and is used internally.\n\t * @property _capabilities\n\t * @type {Object}\n\t * @default null\n\t * @private\n\t * @static\n\t */\n\tAbstractPlugin._capabilities = null;\n\n\t/**\n\t * Determine if the plugin can be used in the current browser/OS.\n\t * @method isSupported\n\t * @return {Boolean} If the plugin can be initialized.\n\t * @static\n\t */\n\tAbstractPlugin.isSupported = function () {\n\t\treturn true;\n\t};\n\n\n// public methods:\n\t/**\n\t * Pre-register a sound for preloading and setup. This is called by {{#crossLink \"Sound\"}}{{/crossLink}}.\n\t * Note all plugins provide a <code>Loader</code> instance, which <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>\n\t * can use to assist with preloading.\n\t * @method register\n\t * @param {String} loadItem An Object containing the source of the audio\n\t * Note that not every plugin will manage this value.\n\t * @return {Object} A result object, containing a \"tag\" for preloading purposes.\n\t */\n\tp.register = function (loadItem) {\n\t\tvar loader = this._loaders[loadItem.src];\n\t\tif(loader && !loader.canceled) {return this._loaders[loadItem.src];}\t// already loading/loaded this, so don't load twice\n\t\t// OJR potential issue that we won't be firing loaded event, might need to trigger if this is already loaded?\n\t\tthis._audioSources[loadItem.src] = true;\n\t\tthis._soundInstances[loadItem.src] = [];\n\t\tloader = new this._loaderClass(loadItem);\n\t\tloader.on(\"complete\", this._handlePreloadComplete, this);\n\t\tthis._loaders[loadItem.src] = loader;\n\t\treturn loader;\n\t};\n\n\t// note sound calls register before calling preload\n\t/**\n\t * Internally preload a sound.\n\t * @method preload\n\t * @param {Loader} loader The sound URI to load.\n\t */\n\tp.preload = function (loader) {\n\t\tloader.on(\"error\", this._handlePreloadError, this);\n\t\tloader.load();\n\t};\n\n\t/**\n\t * Checks if preloading has started for a specific source. If the source is found, we can assume it is loading,\n\t * or has already finished loading.\n\t * @method isPreloadStarted\n\t * @param {String} src The sound URI to check.\n\t * @return {Boolean}\n\t */\n\tp.isPreloadStarted = function (src) {\n\t\treturn (this._audioSources[src] != null);\n\t};\n\n\t/**\n\t * Checks if preloading has finished for a specific source.\n\t * @method isPreloadComplete\n\t * @param {String} src The sound URI to load.\n\t * @return {Boolean}\n\t */\n\tp.isPreloadComplete = function (src) {\n\t\treturn (!(this._audioSources[src] == null || this._audioSources[src] == true));\n\t};\n\n\t/**\n\t * Remove a sound added using {{#crossLink \"WebAudioPlugin/register\"}}{{/crossLink}}. Note this does not cancel a preload.\n\t * @method removeSound\n\t * @param {String} src The sound URI to unload.\n\t */\n\tp.removeSound = function (src) {\n\t\tif (!this._soundInstances[src]) { return; }\n\t\tfor (var i = this._soundInstances[src].length; i--; ) {\n\t\t\tvar item = this._soundInstances[src][i];\n\t\t\titem.destroy();\n\t\t}\n\t\tdelete(this._soundInstances[src]);\n\t\tdelete(this._audioSources[src]);\n\t\tif(this._loaders[src]) { this._loaders[src].destroy(); }\n\t\tdelete(this._loaders[src]);\n\t};\n\n\t/**\n\t * Remove all sounds added using {{#crossLink \"WebAudioPlugin/register\"}}{{/crossLink}}. Note this does not cancel a preload.\n\t * @method removeAllSounds\n\t * @param {String} src The sound URI to unload.\n\t */\n\tp.removeAllSounds = function () {\n\t\tfor(var key in this._audioSources) {\n\t\t\tthis.removeSound(key);\n\t\t}\n\t};\n\n\t/**\n\t * Create a sound instance. If the sound has not been preloaded, it is internally preloaded here.\n\t * @method create\n\t * @param {String} src The sound source to use.\n\t * @param {Number} startTime Audio sprite property used to apply an offset, in milliseconds.\n\t * @param {Number} duration Audio sprite property used to set the time the clip plays for, in milliseconds.\n\t * @return {AbstractSoundInstance} A sound instance for playback and control.\n\t */\n\tp.create = function (src, startTime, duration) {\n\t\tif (!this.isPreloadStarted(src)) {\n\t\t\tthis.preload(this.register(src));\n\t\t}\n\t\tvar si = new this._soundInstanceClass(src, startTime, duration, this._audioSources[src]);\n\t\tif(this._soundInstances[src]){\n\t\t\tthis._soundInstances[src].push(si);\n\t\t}\n\n\t\t// Plugins that don't have a setVolume should implement a setMasterVolune/setMasterMute\n\t\t// So we have to check that here.\n\t\tsi.setMasterVolume && si.setMasterVolume(createjs.Sound.volume);\n\t\tsi.setMasterMute && si.setMasterMute(createjs.Sound.muted);\n\n\t\treturn si;\n\t};\n\n\t// if a plugin does not support volume and mute, it should set these to null\n\t/**\n\t * Set the master volume of the plugin, which affects all SoundInstances.\n\t * @method setVolume\n\t * @param {Number} value The volume to set, between 0 and 1.\n\t * @return {Boolean} If the plugin processes the setVolume call (true). The Sound class will affect all the\n\t * instances manually otherwise.\n\t */\n\tp.setVolume = function (value) {\n\t\tthis._volume = value;\n\t\tthis._updateVolume();\n\t\treturn true;\n\t};\n\n\t/**\n\t * Get the master volume of the plugin, which affects all SoundInstances.\n\t * @method getVolume\n\t * @return {Number} The volume level, between 0 and 1.\n\t */\n\tp.getVolume = function () {\n\t\treturn this._volume;\n\t};\n\n\t/**\n\t * Mute all sounds via the plugin.\n\t * @method setMute\n\t * @param {Boolean} value If all sound should be muted or not. Note that plugin-level muting just looks up\n\t * the mute value of Sound {{#crossLink \"Sound/muted:property\"}}{{/crossLink}}, so this property is not used here.\n\t * @return {Boolean} If the mute call succeeds.\n\t */\n\tp.setMute = function (value) {\n\t\tthis._updateVolume();\n\t\treturn true;\n\t};\n\n\t// plugins should overwrite this method\n\tp.toString = function () {\n\t\treturn \"[AbstractPlugin]\";\n\t};\n\n\n// private methods:\n\t/**\n\t * Handles internal preload completion.\n\t * @method _handlePreloadComplete\n\t * @param event\n\t * @protected\n\t */\n\tp._handlePreloadComplete = function (event) {\n\t\tvar src = event.target.getItem().src;\n\t\tthis._audioSources[src] = event.result;\n\t\tif (!this._soundInstances[src]) { return; }\n\t\tfor (var i = 0, l = this._soundInstances[src].length; i < l; i++) {\n\t\t\tvar item = this._soundInstances[src][i];\n\t\t\titem.playbackResource = this._audioSources[src];\n\t\t\t// ToDo consider adding play call here if playstate == playfailed\n\t\t\tthis._soundInstances[src] = null;\n\t\t}\n\t};\n\n\t/**\n\t * Handles internal preload errors\n\t * @method _handlePreloadError\n\t * @param event\n\t * @protected\n\t */\n\tp._handlePreloadError = function(event) {\n\t\t//delete(this._audioSources[src]);\n\t};\n\n\t/**\n\t * Set the gain value for master audio. Should not be called externally.\n\t * @method _updateVolume\n\t * @protected\n\t */\n\tp._updateVolume = function () {\n\t\t// Plugin Specific code\n\t};\n\n\tcreatejs.AbstractPlugin = AbstractPlugin;\n}());\n\n//##############################################################################\n// WebAudioLoader.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\t/**\n\t * Loader provides a mechanism to preload Web Audio content via PreloadJS or internally. Instances are returned to\n\t * the preloader, and the load method is called when the asset needs to be requested.\n\t *\n\t * @class WebAudioLoader\n\t * @param {String} loadItem The item to be loaded\n\t * @extends XHRRequest\n\t * @protected\n\t */\n\tfunction Loader(loadItem) {\n\t\tthis.AbstractLoader_constructor(loadItem, true, createjs.Types.SOUND);\n\n\t};\n\tvar p = createjs.extend(Loader, createjs.AbstractLoader);\n\n\t/**\n\t * web audio context required for decoding audio\n\t * @property context\n\t * @type {AudioContext}\n\t * @static\n\t */\n\tLoader.context = null;\n\n\n// public methods\n\tp.toString = function () {\n\t\treturn \"[WebAudioLoader]\";\n\t};\n\n\n// private methods\n\tp._createRequest = function() {\n\t\tthis._request = new createjs.XHRRequest(this._item, false);\n\t\tthis._request.setResponseType(\"arraybuffer\");\n\t};\n\n\tp._sendComplete = function (event) {\n\t\t// OJR we leave this wrapped in Loader because we need to reference src and the handler only receives a single argument, the decodedAudio\n\t\tLoader.context.decodeAudioData(this._rawResult,\n\t         createjs.proxy(this._handleAudioDecoded, this),\n\t         createjs.proxy(this._sendError, this));\n\t};\n\n\n\t/**\n\t* The audio has been decoded.\n\t* @method handleAudioDecoded\n\t* @param decoded\n\t* @protected\n\t*/\n\tp._handleAudioDecoded = function (decodedAudio) {\n\t\tthis._result = decodedAudio;\n\t\tthis.AbstractLoader__sendComplete();\n\t};\n\n\tcreatejs.WebAudioLoader = createjs.promote(Loader, \"AbstractLoader\");\n}());\n\n//##############################################################################\n// WebAudioSoundInstance.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n/**\n * WebAudioSoundInstance extends the base api of {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} and is used by\n * {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}.\n *\n * WebAudioSoundInstance exposes audioNodes for advanced users.\n *\n * @param {String} src The path to and file name of the sound.\n * @param {Number} startTime Audio sprite property used to apply an offset, in milliseconds.\n * @param {Number} duration Audio sprite property used to set the time the clip plays for, in milliseconds.\n * @param {Object} playbackResource Any resource needed by plugin to support audio playback.\n * @class WebAudioSoundInstance\n * @extends AbstractSoundInstance\n * @constructor\n */\n(function () {\n\t\"use strict\";\n\n\tfunction WebAudioSoundInstance(src, startTime, duration, playbackResource) {\n\t\tthis.AbstractSoundInstance_constructor(src, startTime, duration, playbackResource);\n\n\n// public properties\n\t\t/**\n\t\t * NOTE this is only intended for use by advanced users.\n\t\t * <br />GainNode for controlling <code>WebAudioSoundInstance</code> volume. Connected to the {{#crossLink \"WebAudioSoundInstance/destinationNode:property\"}}{{/crossLink}}.\n\t\t * @property gainNode\n\t\t * @type {AudioGainNode}\n\t\t * @since 0.4.0\n\t\t *\n\t\t */\n\t\tthis.gainNode = s.context.createGain();\n\n\t\t/**\n\t\t * NOTE this is only intended for use by advanced users.\n\t\t * <br />A panNode allowing left and right audio channel panning only. Connected to WebAudioSoundInstance {{#crossLink \"WebAudioSoundInstance/gainNode:property\"}}{{/crossLink}}.\n\t\t * @property panNode\n\t\t * @type {AudioPannerNode}\n\t\t * @since 0.4.0\n\t\t */\n\t\tthis.panNode = s.context.createPanner();\n\t\tthis.panNode.panningModel = s._panningModel;\n\t\tthis.panNode.connect(this.gainNode);\n\t\tthis._updatePan();\n\n\t\t/**\n\t\t * NOTE this is only intended for use by advanced users.\n\t\t * <br />sourceNode is the audio source. Connected to WebAudioSoundInstance {{#crossLink \"WebAudioSoundInstance/panNode:property\"}}{{/crossLink}}.\n\t\t * @property sourceNode\n\t\t * @type {AudioNode}\n\t\t * @since 0.4.0\n\t\t *\n\t\t */\n\t\tthis.sourceNode = null;\n\n\n// private properties\n\t\t/**\n\t\t * Timeout that is created internally to handle sound playing to completion.\n\t\t * Stored so we can remove it when stop, pause, or cleanup are called\n\t\t * @property _soundCompleteTimeout\n\t\t * @type {timeoutVariable}\n\t\t * @default null\n\t\t * @protected\n\t\t * @since 0.4.0\n\t\t */\n\t\tthis._soundCompleteTimeout = null;\n\n\t\t/**\n\t\t * NOTE this is only intended for use by very advanced users.\n\t\t * _sourceNodeNext is the audio source for the next loop, inserted in a look ahead approach to allow for smooth\n\t\t * looping. Connected to {{#crossLink \"WebAudioSoundInstance/gainNode:property\"}}{{/crossLink}}.\n\t\t * @property _sourceNodeNext\n\t\t * @type {AudioNode}\n\t\t * @default null\n\t\t * @protected\n\t\t * @since 0.4.1\n\t\t *\n\t\t */\n\t\tthis._sourceNodeNext = null;\n\n\t\t/**\n\t\t * Time audio started playback, in seconds. Used to handle set position, get position, and resuming from paused.\n\t\t * @property _playbackStartTime\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @protected\n\t\t * @since 0.4.0\n\t\t */\n\t\tthis._playbackStartTime = 0;\n\n\t\t// Proxies, make removing listeners easier.\n\t\tthis._endedHandler = createjs.proxy(this._handleSoundComplete, this);\n\t};\n\tvar p = createjs.extend(WebAudioSoundInstance, createjs.AbstractSoundInstance);\n\tvar s = WebAudioSoundInstance;\n\n\t/**\n\t * Note this is only intended for use by advanced users.\n\t * <br />Audio context used to create nodes.  This is and needs to be the same context used by {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}.\n  \t * @property context\n\t * @type {AudioContext}\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.context = null;\n\n\t/**\n\t * Note this is only intended for use by advanced users.\n\t * <br />The scratch buffer that will be assigned to the buffer property of a source node on close.  \n\t * This is and should be the same scratch buffer referenced by {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}.\n  \t * @property _scratchBuffer\n\t * @type {AudioBufferSourceNode}\n\t * @static\n\t */\n\ts._scratchBuffer = null;\n\n\t/**\n\t * Note this is only intended for use by advanced users.\n\t * <br /> Audio node from WebAudioPlugin that sequences to <code>context.destination</code>\n\t * @property destinationNode\n\t * @type {AudioNode}\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.destinationNode = null;\n\n\t/**\n\t * Value to set panning model to equal power for WebAudioSoundInstance.  Can be \"equalpower\" or 0 depending on browser implementation.\n\t * @property _panningModel\n\t * @type {Number / String}\n\t * @protected\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts._panningModel = \"equalpower\";\n\n\n// Public methods\n\tp.destroy = function() {\n\t\tthis.AbstractSoundInstance_destroy();\n\n\t\tthis.panNode.disconnect(0);\n\t\tthis.panNode = null;\n\t\tthis.gainNode.disconnect(0);\n\t\tthis.gainNode = null;\n\t};\n\n\tp.toString = function () {\n\t\treturn \"[WebAudioSoundInstance]\";\n\t};\n\n\n// Private Methods\n\tp._updatePan = function() {\n\t\tthis.panNode.setPosition(this._pan, 0, -0.5);\n\t\t// z need to be -0.5 otherwise the sound only plays in left, right, or center\n\t};\n\n\tp._removeLooping = function(value) {\n\t\tthis._sourceNodeNext = this._cleanUpAudioNode(this._sourceNodeNext);\n\t};\n\n\tp._addLooping = function(value) {\n\t\tif (this.playState != createjs.Sound.PLAY_SUCCEEDED) { return; }\n\t\tthis._sourceNodeNext = this._createAndPlayAudioNode(this._playbackStartTime, 0);\n\t};\n\n\tp._setDurationFromSource = function () {\n\t\tthis._duration = this.playbackResource.duration * 1000;\n\t};\n\n\tp._handleCleanUp = function () {\n\t\tif (this.sourceNode && this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n\t\t\tthis.sourceNode = this._cleanUpAudioNode(this.sourceNode);\n\t\t\tthis._sourceNodeNext = this._cleanUpAudioNode(this._sourceNodeNext);\n\t\t}\n\n\t\tif (this.gainNode.numberOfOutputs != 0) {this.gainNode.disconnect(0);}\n\t\t// OJR there appears to be a bug that this doesn't always work in webkit (Chrome and Safari). According to the documentation, this should work.\n\n\t\tclearTimeout(this._soundCompleteTimeout);\n\n\t\tthis._playbackStartTime = 0;\t// This is used by _getPosition\n\t};\n\n\t/**\n\t * Turn off and disconnect an audioNode, then set reference to null to release it for garbage collection\n\t * @method _cleanUpAudioNode\n\t * @param audioNode\n\t * @return {audioNode}\n\t * @protected\n\t * @since 0.4.1\n\t */\n\tp._cleanUpAudioNode = function(audioNode) {\n\t\tif(audioNode) {\n\t\t\taudioNode.stop(0);\n\t\t\taudioNode.disconnect(0);\n\t\t\t// necessary to prevent leak on iOS Safari 7-9. will throw in almost all other\n\t\t\t// browser implementations.\n\t\t\tif ( createjs.BrowserDetect.isIOS ) {\n\t\t\t\ttry { audioNode.buffer = s._scratchBuffer; } catch(e) {}\n\t\t\t}\n\t\t\taudioNode = null;\n\t\t}\n\t\treturn audioNode;\n\t};\n\n\tp._handleSoundReady = function (event) {\n\t\tthis.gainNode.connect(s.destinationNode);  // this line can cause a memory leak.  Nodes need to be disconnected from the audioDestination or any sequence that leads to it.\n\n\t\tvar dur = this._duration * 0.001,\n\t\t\tpos = Math.min(Math.max(0, this._position) * 0.001, dur);\n\t\tthis.sourceNode = this._createAndPlayAudioNode((s.context.currentTime - dur), pos);\n\t\tthis._playbackStartTime = this.sourceNode.startTime - pos;\n\n\t\tthis._soundCompleteTimeout = setTimeout(this._endedHandler, (dur - pos) * 1000);\n\n\t\tif(this._loop != 0) {\n\t\t\tthis._sourceNodeNext = this._createAndPlayAudioNode(this._playbackStartTime, 0);\n\t\t}\n\t};\n\n\t/**\n\t * Creates an audio node using the current src and context, connects it to the gain node, and starts playback.\n\t * @method _createAndPlayAudioNode\n\t * @param {Number} startTime The time to add this to the web audio context, in seconds.\n\t * @param {Number} offset The amount of time into the src audio to start playback, in seconds.\n\t * @return {audioNode}\n\t * @protected\n\t * @since 0.4.1\n\t */\n\tp._createAndPlayAudioNode = function(startTime, offset) {\n\t\tvar audioNode = s.context.createBufferSource();\n\t\taudioNode.buffer = this.playbackResource;\n\t\taudioNode.connect(this.panNode);\n\t\tvar dur = this._duration * 0.001;\n\t\taudioNode.startTime = startTime + dur;\n\t\taudioNode.start(audioNode.startTime, offset+(this._startTime*0.001), dur - offset);\n\t\treturn audioNode;\n\t};\n\n\tp._pause = function () {\n\t\tthis._position = (s.context.currentTime - this._playbackStartTime) * 1000;  // * 1000 to give milliseconds, lets us restart at same point\n\t\tthis.sourceNode = this._cleanUpAudioNode(this.sourceNode);\n\t\tthis._sourceNodeNext = this._cleanUpAudioNode(this._sourceNodeNext);\n\n\t\tif (this.gainNode.numberOfOutputs != 0) {this.gainNode.disconnect(0);}\n\n\t\tclearTimeout(this._soundCompleteTimeout);\n\t};\n\n\tp._resume = function () {\n\t\tthis._handleSoundReady();\n\t};\n\n\t/*\n\tp._handleStop = function () {\n\t\t// web audio does not need to do anything extra\n\t};\n\t*/\n\n\tp._updateVolume = function () {\n\t\tvar newVolume = this._muted ? 0 : this._volume;\n\t  \tif (newVolume != this.gainNode.gain.value) {\n\t\t  this.gainNode.gain.value = newVolume;\n  \t\t}\n\t};\n\n\tp._calculateCurrentPosition = function () {\n\t\treturn ((s.context.currentTime - this._playbackStartTime) * 1000); // pos in seconds * 1000 to give milliseconds\n\t};\n\n\tp._updatePosition = function () {\n\t\tthis.sourceNode = this._cleanUpAudioNode(this.sourceNode);\n\t\tthis._sourceNodeNext = this._cleanUpAudioNode(this._sourceNodeNext);\n\t\tclearTimeout(this._soundCompleteTimeout);\n\n\t\tif (!this._paused) {this._handleSoundReady();}\n\t};\n\n\t// OJR we are using a look ahead approach to ensure smooth looping.\n\t// We add _sourceNodeNext to the audio context so that it starts playing even if this callback is delayed.\n\t// This technique is described here:  http://www.html5rocks.com/en/tutorials/audio/scheduling/\n\t// NOTE the cost of this is that our audio loop may not always match the loop event timing precisely.\n\tp._handleLoop = function () {\n\t\tthis._cleanUpAudioNode(this.sourceNode);\n\t\tthis.sourceNode = this._sourceNodeNext;\n\t\tthis._playbackStartTime = this.sourceNode.startTime;\n\t\tthis._sourceNodeNext = this._createAndPlayAudioNode(this._playbackStartTime, 0);\n\t\tthis._soundCompleteTimeout = setTimeout(this._endedHandler, this._duration);\n\t};\n\n\tp._updateDuration = function () {\n\t\tif(this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n\t\t\tthis._pause();\n\t\t\tthis._resume();\n\t\t}\n\t};\n\n\tcreatejs.WebAudioSoundInstance = createjs.promote(WebAudioSoundInstance, \"AbstractSoundInstance\");\n}());\n\n//##############################################################################\n// WebAudioPlugin.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\n\t\"use strict\";\n\n\t/**\n\t * Play sounds using Web Audio in the browser. The WebAudioPlugin is currently the default plugin, and will be used\n\t * anywhere that it is supported. To change plugin priority, check out the Sound API\n\t * {{#crossLink \"Sound/registerPlugins\"}}{{/crossLink}} method.\n\n\t * <h4>Known Browser and OS issues for Web Audio</h4>\n\t * <b>Firefox 25</b>\n\t * <li>\n\t *     mp3 audio files do not load properly on all windows machines, reported <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=929969\" target=\"_blank\">here</a>.\n\t *     <br />For this reason it is recommended to pass another FireFox-supported type (i.e. ogg) as the default\n\t *     extension, until this bug is resolved\n\t * </li>\n\t *\n\t * <b>Webkit (Chrome and Safari)</b>\n\t * <li>\n\t *     AudioNode.disconnect does not always seem to work.  This can cause the file size to grow over time if you\n\t * \t   are playing a lot of audio files.\n\t * </li>\n\t *\n\t * <b>iOS 6 limitations</b>\n\t * <ul>\n\t *     <li>\n\t *         Sound is initially muted and will only unmute through play being called inside a user initiated event\n\t *         (touch/click). Please read the mobile playback notes in the the {{#crossLink \"Sound\"}}{{/crossLink}}\n\t *         class for a full overview of the limitations, and how to get around them.\n\t *     </li>\n\t *\t   <li>\n\t *\t       A bug exists that will distort un-cached audio when a video element is present in the DOM. You can avoid\n\t *\t       this bug by ensuring the audio and video audio share the same sample rate.\n\t *\t   </li>\n\t * </ul>\n\t * @class WebAudioPlugin\n\t * @extends AbstractPlugin\n\t * @constructor\n\t * @since 0.4.0\n\t */\n\tfunction WebAudioPlugin() {\n\t\tthis.AbstractPlugin_constructor();\n\n\n// Private Properties\n\t\t/**\n\t\t * Value to set panning model to equal power for WebAudioSoundInstance.  Can be \"equalpower\" or 0 depending on browser implementation.\n\t\t * @property _panningModel\n\t\t * @type {Number / String}\n\t\t * @protected\n\t\t */\n\t\tthis._panningModel = s._panningModel;;\n\n\t\t/**\n\t\t * The web audio context, which WebAudio uses to play audio. All nodes that interact with the WebAudioPlugin\n\t\t * need to be created within this context.\n\t\t * @property context\n\t\t * @type {AudioContext}\n\t\t */\n\t\tthis.context = s.context;\n\n\t\t/**\n\t\t * A DynamicsCompressorNode, which is used to improve sound quality and prevent audio distortion.\n\t\t * It is connected to <code>context.destination</code>.\n\t\t *\n\t\t * Can be accessed by advanced users through createjs.Sound.activePlugin.dynamicsCompressorNode.\n\t\t * @property dynamicsCompressorNode\n\t\t * @type {AudioNode}\n\t\t */\n\t\tthis.dynamicsCompressorNode = this.context.createDynamicsCompressor();\n\t\tthis.dynamicsCompressorNode.connect(this.context.destination);\n\n\t\t/**\n\t\t * A GainNode for controlling master volume. It is connected to {{#crossLink \"WebAudioPlugin/dynamicsCompressorNode:property\"}}{{/crossLink}}.\n\t\t *\n\t\t * Can be accessed by advanced users through createjs.Sound.activePlugin.gainNode.\n\t\t * @property gainNode\n\t\t * @type {AudioGainNode}\n\t\t */\n\t\tthis.gainNode = this.context.createGain();\n\t\tthis.gainNode.connect(this.dynamicsCompressorNode);\n\t\tcreatejs.WebAudioSoundInstance.destinationNode = this.gainNode;\n\n\t\tthis._capabilities = s._capabilities;\n\n\t\tthis._loaderClass = createjs.WebAudioLoader;\n\t\tthis._soundInstanceClass = createjs.WebAudioSoundInstance;\n\n\t\tthis._addPropsToClasses();\n\t}\n\tvar p = createjs.extend(WebAudioPlugin, createjs.AbstractPlugin);\n\n// Static Properties\n\tvar s = WebAudioPlugin;\n\t/**\n\t * The capabilities of the plugin. This is generated via the {{#crossLink \"WebAudioPlugin/_generateCapabilities:method\"}}{{/crossLink}}\n\t * method and is used internally.\n\t * @property _capabilities\n\t * @type {Object}\n\t * @default null\n\t * @private\n\t * @static\n\t */\n\ts._capabilities = null;\n\n\t/**\n\t * Value to set panning model to equal power for WebAudioSoundInstance.  Can be \"equalpower\" or 0 depending on browser implementation.\n\t * @property _panningModel\n\t * @type {Number / String}\n\t * @private\n\t * @static\n\t */\n\ts._panningModel = \"equalpower\";\n\n\t/**\n\t * The web audio context, which WebAudio uses to play audio. All nodes that interact with the WebAudioPlugin\n\t * need to be created within this context.\n\t *\n\t * Advanced users can set this to an existing context, but <b>must</b> do so before they call\n\t * {{#crossLink \"Sound/registerPlugins\"}}{{/crossLink}} or {{#crossLink \"Sound/initializeDefaultPlugins\"}}{{/crossLink}}.\n\t *\n\t * @property context\n\t * @type {AudioContext}\n\t * @static\n\t */\n\ts.context = null;\n\n\t/**\n\t * The scratch buffer that will be assigned to the buffer property of a source node on close.\n\t * Works around an iOS Safari bug: https://github.com/CreateJS/SoundJS/issues/102\n\t *\n\t * Advanced users can set this to an existing source node, but <b>must</b> do so before they call\n\t * {{#crossLink \"Sound/registerPlugins\"}}{{/crossLink}} or {{#crossLink \"Sound/initializeDefaultPlugins\"}}{{/crossLink}}.\n\t *\n\t * @property _scratchBuffer\n\t * @type {AudioBuffer}\n\t * @private\n\t * @static\n\t */\n\t s._scratchBuffer = null;\n\n\t/**\n\t * Indicated whether audio on iOS has been unlocked, which requires a touchend/mousedown event that plays an\n\t * empty sound.\n\t * @property _unlocked\n\t * @type {boolean}\n\t * @since 0.6.2\n\t * @private\n\t */\n\ts._unlocked = false;\n\n\t/**\n\t * The default sample rate used when checking for iOS compatibility. See {{#crossLink \"WebAudioPlugin/_createAudioContext\"}}{{/crossLink}}.\n\t * @property DEFAULT_SAMPLE_REATE\n\t * @type {number}\n\t * @default 44100\n\t * @static\n\t */\n\ts.DEFAULT_SAMPLE_RATE = 44100;\n\n// Static Public Methods\n\t/**\n\t * Determine if the plugin can be used in the current browser/OS.\n\t * @method isSupported\n\t * @return {Boolean} If the plugin can be initialized.\n\t * @static\n\t */\n\ts.isSupported = function () {\n\t\t// check if this is some kind of mobile device, Web Audio works with local protocol under PhoneGap and it is unlikely someone is trying to run a local file\n\t\tvar isMobilePhoneGap = createjs.BrowserDetect.isIOS || createjs.BrowserDetect.isAndroid || createjs.BrowserDetect.isBlackberry;\n\t\t// OJR isMobile may be redundant with _isFileXHRSupported available.  Consider removing.\n\t\tif (location.protocol == \"file:\" && !isMobilePhoneGap && !this._isFileXHRSupported()) { return false; }  // Web Audio requires XHR, which is not usually available locally\n\t\ts._generateCapabilities();\n\t\tif (s.context == null) {return false;}\n\t\treturn true;\n\t};\n\n\t/**\n\t * Plays an empty sound in the web audio context.  This is used to enable web audio on iOS devices, as they\n\t * require the first sound to be played inside of a user initiated event (touch/click).  This is called when\n\t * {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}} is initialized (by Sound {{#crossLink \"Sound/initializeDefaultPlugins\"}}{{/crossLink}}\n\t * for example).\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *     function handleTouch(event) {\n\t *         createjs.WebAudioPlugin.playEmptySound();\n\t *     }\n\t *\n\t * @method playEmptySound\n\t * @static\n\t * @since 0.4.1\n\t */\n\ts.playEmptySound = function() {\n\t\tif (s.context == null) {return;}\n\t\tvar source = s.context.createBufferSource();\n\t\tsource.buffer = s._scratchBuffer;\n\t\tsource.connect(s.context.destination);\n\t\tsource.start(0, 0, 0);\n\t};\n\n\n// Static Private Methods\n\t/**\n\t * Determine if XHR is supported, which is necessary for web audio.\n\t * @method _isFileXHRSupported\n\t * @return {Boolean} If XHR is supported.\n\t * @since 0.4.2\n\t * @private\n\t * @static\n\t */\n\ts._isFileXHRSupported = function() {\n\t\t// it's much easier to detect when something goes wrong, so let's start optimistically\n\t\tvar supported = true;\n\n\t\tvar xhr = new XMLHttpRequest();\n\t\ttry {\n\t\t\txhr.open(\"GET\", \"WebAudioPluginTest.fail\", false); // loading non-existant file triggers 404 only if it could load (synchronous call)\n\t\t} catch (error) {\n\t\t\t// catch errors in cases where the onerror is passed by\n\t\t\tsupported = false;\n\t\t\treturn supported;\n\t\t}\n\t\txhr.onerror = function() { supported = false; }; // cause irrelevant\n\t\t// with security turned off, we can get empty success results, which is actually a failed read (status code 0?)\n\t\txhr.onload = function() { supported = this.status == 404 || (this.status == 200 || (this.status == 0 && this.response != \"\")); };\n\t\ttry {\n\t\t\txhr.send();\n\t\t} catch (error) {\n\t\t\t// catch errors in cases where the onerror is passed by\n\t\t\tsupported = false;\n\t\t}\n\n\t\treturn supported;\n\t};\n\n\t/**\n\t * Determine the capabilities of the plugin. Used internally. Please see the Sound API {{#crossLink \"Sound/capabilities:property\"}}{{/crossLink}}\n\t * method for an overview of plugin capabilities.\n\t * @method _generateCapabilities\n\t * @static\n\t * @private\n\t */\n\ts._generateCapabilities = function () {\n\t\tif (s._capabilities != null) {return;}\n\t\t// Web Audio can be in any formats supported by the audio element, from http://www.w3.org/TR/webaudio/#AudioContext-section\n\t\tvar t = document.createElement(\"audio\");\n\t\tif (t.canPlayType == null) {return null;}\n\n\t\tif (s.context == null) {\n\t\t\ts.context = s._createAudioContext();\n\t\t\tif (s.context == null) { return null; }\n\t\t}\n\t\tif (s._scratchBuffer == null) {\n\t\t\ts._scratchBuffer = s.context.createBuffer(1, 1, 22050);\n\t\t}\n\n\t\ts._compatibilitySetUp();\n\n\t\t// Listen for document level clicks to unlock WebAudio on iOS. See the _unlock method.\n\t\tif (\"ontouchstart\" in window && s.context.state != \"running\") {\n\t\t\ts._unlock(); // When played inside of a touch event, this will enable audio on iOS immediately.\n\t\t\tdocument.addEventListener(\"mousedown\", s._unlock, true);\n\t\t\tdocument.addEventListener(\"touchstart\", s._unlock, true);\n\t\t\tdocument.addEventListener(\"touchend\", s._unlock, true);\n\t\t}\n\n\t\ts._capabilities = {\n\t\t\tpanning:true,\n\t\t\tvolume:true,\n\t\t\ttracks:-1\n\t\t};\n\n\t\t// determine which extensions our browser supports for this plugin by iterating through Sound.SUPPORTED_EXTENSIONS\n\t\tvar supportedExtensions = createjs.Sound.SUPPORTED_EXTENSIONS;\n\t\tvar extensionMap = createjs.Sound.EXTENSION_MAP;\n\t\tfor (var i = 0, l = supportedExtensions.length; i < l; i++) {\n\t\t\tvar ext = supportedExtensions[i];\n\t\t\tvar playType = extensionMap[ext] || ext;\n\t\t\ts._capabilities[ext] = (t.canPlayType(\"audio/\" + ext) != \"no\" && t.canPlayType(\"audio/\" + ext) != \"\") || (t.canPlayType(\"audio/\" + playType) != \"no\" && t.canPlayType(\"audio/\" + playType) != \"\");\n\t\t}  // OJR another way to do this might be canPlayType:\"m4a\", codex: mp4\n\n\t\t// 0=no output, 1=mono, 2=stereo, 4=surround, 6=5.1 surround.\n\t\t// See http://www.w3.org/TR/webaudio/#AudioChannelSplitter for more details on channels.\n\t\tif (s.context.destination.numberOfChannels < 2) {\n\t\t\ts._capabilities.panning = false;\n\t\t}\n\t};\n\n\t/**\n\t * Create an audio context for the sound.\n\t *\n\t * This method handles both vendor prefixes (specifically webkit support), as well as a case on iOS where\n\t * audio played with a different sample rate may play garbled when first started. The default sample rate is\n\t * 44,100, however it can be changed using the {{#crossLink \"WebAudioPlugin/DEFAULT_SAMPLE_RATE:property\"}}{{/crossLink}}.\n\t * @method _createAudioContext\n\t * @return {AudioContext | webkitAudioContext}\n\t * @private\n\t * @static\n\t * @since 1.0.0\n\t */\n\ts._createAudioContext = function() {\n\t\t// Slightly modified version of https://github.com/Jam3/ios-safe-audio-context\n\t\t// Resolves issues with first-run contexts playing garbled on iOS.\n\t\tvar AudioCtor = (window.AudioContext || window.webkitAudioContext);\n\t\tif (AudioCtor == null) { return null; }\n\t\tvar context = new AudioCtor();\n\n\t\t// Check if hack is necessary. Only occurs in iOS6+ devices\n\t\t// and only when you first boot the iPhone, or play a audio/video\n\t\t// with a different sample rate\n\t\tif (/(iPhone|iPad)/i.test(navigator.userAgent)\n\t\t\t\t&& context.sampleRate !== s.DEFAULT_SAMPLE_RATE) {\n\t\t\tvar buffer = context.createBuffer(1, 1, s.DEFAULT_SAMPLE_RATE),\n\t\t\t\t\tdummy = context.createBufferSource();\n\t\t\tdummy.buffer = buffer;\n\t\t\tdummy.connect(context.destination);\n\t\t\tdummy.start(0);\n\t\t\tdummy.disconnect();\n\t\t\tcontext.close() // dispose old context\n\n\t\t\tcontext = new AudioCtor();\n\t\t}\n\t\treturn context;\n\t}\n\n\t/**\n\t * Set up compatibility if only deprecated web audio calls are supported.\n\t * See http://www.w3.org/TR/webaudio/#DeprecationNotes\n\t * Needed so we can support new browsers that don't support deprecated calls (Firefox) as well as old browsers that\n\t * don't support new calls.\n\t *\n\t * @method _compatibilitySetUp\n\t * @static\n\t * @private\n\t * @since 0.4.2\n\t */\n\ts._compatibilitySetUp = function() {\n\t\ts._panningModel = \"equalpower\";\n\t\t//assume that if one new call is supported, they all are\n\t\tif (s.context.createGain) { return; }\n\n\t\t// simple name change, functionality the same\n\t\ts.context.createGain = s.context.createGainNode;\n\n\t\t// source node, add to prototype\n\t\tvar audioNode = s.context.createBufferSource();\n\t\taudioNode.__proto__.start = audioNode.__proto__.noteGrainOn;\t// note that noteGrainOn requires all 3 parameters\n\t\taudioNode.__proto__.stop = audioNode.__proto__.noteOff;\n\n\t\t// panningModel\n\t\ts._panningModel = 0;\n\t};\n\n\t/**\n\t * Try to unlock audio on iOS. This is triggered from either WebAudio plugin setup (which will work if inside of\n\t * a `mousedown` or `touchend` event stack), or the first document touchend/mousedown event. If it fails (touchend\n\t * will fail if the user presses for too long, indicating a scroll event instead of a click event.\n\t *\n\t * Note that earlier versions of iOS supported `touchstart` for this, but iOS9 removed this functionality. Adding\n\t * a `touchstart` event to support older platforms may preclude a `mousedown` even from getting fired on iOS9, so we\n\t * stick with `mousedown` and `touchend`.\n\t * @method _unlock\n\t * @since 0.6.2\n\t * @private\n\t */\n\ts._unlock = function() {\n\t\tif (s._unlocked) { return; }\n\t\ts.playEmptySound();\n\t\tif (s.context.state == \"running\") {\n\t\t\tdocument.removeEventListener(\"mousedown\", s._unlock, true);\n\t\t\tdocument.removeEventListener(\"touchend\", s._unlock, true);\n\t\t\tdocument.removeEventListener(\"touchstart\", s._unlock, true);\n\t\t\ts._unlocked = true;\n\t\t}\n\t};\n\n\n// Public Methods\n\tp.toString = function () {\n\t\treturn \"[WebAudioPlugin]\";\n\t};\n\n\n// Private Methods\n\t/**\n\t * Set up needed properties on supported classes WebAudioSoundInstance and WebAudioLoader.\n\t * @method _addPropsToClasses\n\t * @static\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp._addPropsToClasses = function() {\n\t\tvar c = this._soundInstanceClass;\n\t\tc.context = this.context;\n\t\tc._scratchBuffer = s._scratchBuffer;\n\t\tc.destinationNode = this.gainNode;\n\t\tc._panningModel = this._panningModel;\n\n\t\tthis._loaderClass.context = this.context;\n\t};\n\n\n\t/**\n\t * Set the gain value for master audio. Should not be called externally.\n\t * @method _updateVolume\n\t * @protected\n\t */\n\tp._updateVolume = function () {\n\t\tvar newVolume = createjs.Sound._masterMute ? 0 : this._volume;\n\t\tif (newVolume != this.gainNode.gain.value) {\n\t\t\tthis.gainNode.gain.value = newVolume;\n\t\t}\n\t};\n\n\tcreatejs.WebAudioPlugin = createjs.promote(WebAudioPlugin, \"AbstractPlugin\");\n}());\n\n//##############################################################################\n// HTMLAudioTagPool.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\t/**\n\t * HTMLAudioTagPool is an object pool for HTMLAudio tag instances.\n\t * @class HTMLAudioTagPool\n\t * @param {String} src The source of the channel.\n\t * @protected\n\t */\n\tfunction HTMLAudioTagPool() {\n\t\t\tthrow \"HTMLAudioTagPool cannot be instantiated\";\n\t}\n\n\tvar s = HTMLAudioTagPool;\n\n// Static Properties\n\t/**\n\t * A hash lookup of each base audio tag, indexed by the audio source.\n\t * @property _tags\n\t * @type {{}}\n\t * @static\n\t * @private\n\t */\n\ts._tags = {};\n\n\t/**\n\t * An object pool for html audio tags\n\t * @property _tagPool\n\t * @type {TagPool}\n\t * @static\n\t * @private\n\t */\n\ts._tagPool = new TagPool();\n\n\t/**\n\t * A hash lookup of if a base audio tag is available, indexed by the audio source\n\t * @property _tagsUsed\n\t * @type {{}}\n\t * @private\n\t * @static\n\t */\n\ts._tagUsed = {};\n\n// Static Methods\n\t/**\n\t  * Get an audio tag with the given source.\n\t  * @method get\n\t  * @param {String} src The source file used by the audio tag.\n\t  * @static\n\t  */\n\t s.get = function (src) {\n\t\tvar t = s._tags[src];\n\t\tif (t == null) {\n\t\t\t// create new base tag\n\t\t\tt = s._tags[src] = s._tagPool.get();\n\t\t\tt.src = src;\n\t\t} else {\n\t\t\t// get base or pool\n\t\t\tif (s._tagUsed[src]) {\n\t\t\t\tt = s._tagPool.get();\n\t\t\t\tt.src = src;\n\t\t\t} else {\n\t\t\t\ts._tagUsed[src] = true;\n\t\t\t}\n\t\t}\n\t\treturn t;\n\t };\n\n\t /**\n\t  * Return an audio tag to the pool.\n\t  * @method set\n\t  * @param {String} src The source file used by the audio tag.\n\t  * @param {HTMLElement} tag Audio tag to set.\n\t  * @static\n\t  */\n\t s.set = function (src, tag) {\n\t\t // check if this is base, if yes set boolean if not return to pool\n\t\t if(tag == s._tags[src]) {\n\t\t\t s._tagUsed[src] = false;\n\t\t } else {\n\t\t\t s._tagPool.set(tag);\n\t\t }\n\t };\n\n\t/**\n\t * Delete stored tag reference and return them to pool. Note that if the tag reference does not exist, this will fail.\n\t * @method remove\n\t * @param {String} src The source for the tag\n\t * @return {Boolean} If the TagPool was deleted.\n\t * @static\n\t */\n\ts.remove = function (src) {\n\t\tvar tag = s._tags[src];\n\t\tif (tag == null) {return false;}\n\t\ts._tagPool.set(tag);\n\t\tdelete(s._tags[src]);\n\t\tdelete(s._tagUsed[src]);\n\t\treturn true;\n\t};\n\n\t/**\n\t * Gets the duration of the src audio in milliseconds\n\t * @method getDuration\n\t * @param {String} src The source file used by the audio tag.\n\t * @return {Number} Duration of src in milliseconds\n\t * @static\n\t */\n\ts.getDuration= function (src) {\n\t\tvar t = s._tags[src];\n\t\tif (t == null || !t.duration) {return 0;}\t// OJR duration is NaN if loading has not completed\n\t\treturn t.duration * 1000;\n\t};\n\n\tcreatejs.HTMLAudioTagPool = HTMLAudioTagPool;\n\n\n// ************************************************************************************************************\n\t/**\n\t * The TagPool is an object pool for HTMLAudio tag instances.\n\t * #class TagPool\n\t * @param {String} src The source of the channel.\n\t * @protected\n\t */\n\tfunction TagPool(src) {\n\n// Public Properties\n\t\t/**\n\t\t * A list of all available tags in the pool.\n\t\t * #property tags\n\t\t * @type {Array}\n\t\t * @protected\n\t\t */\n\t\tthis._tags = [];\n\t};\n\n\tvar p = TagPool.prototype;\n\tp.constructor = TagPool;\n\n\n// Public Methods\n\t/**\n\t * Get an HTMLAudioElement for immediate playback. This takes it out of the pool.\n\t * #method get\n\t * @return {HTMLAudioElement} An HTML audio tag.\n\t */\n\tp.get = function () {\n\t\tvar tag;\n\t\tif (this._tags.length == 0) {\n\t\t\ttag = this._createTag();\n\t\t} else {\n\t\t\ttag = this._tags.pop();\n\t\t}\n\t\tif (tag.parentNode == null) {document.body.appendChild(tag);}\n\t\treturn tag;\n\t};\n\n\t/**\n\t * Put an HTMLAudioElement back in the pool for use.\n\t * #method set\n\t * @param {HTMLAudioElement} tag HTML audio tag\n\t */\n\tp.set = function (tag) {\n\t\t// OJR this first step seems unnecessary\n\t\tvar index = createjs.indexOf(this._tags, tag);\n\t\tif (index == -1) {\n\t\t\tthis._tags.src = null;\n\t\t\tthis._tags.push(tag);\n\t\t}\n\t};\n\n\tp.toString = function () {\n\t\treturn \"[TagPool]\";\n\t};\n\n\n// Private Methods\n\t/**\n\t * Create an HTML audio tag.\n\t * #method _createTag\n\t * @param {String} src The source file to set for the audio tag.\n\t * @return {HTMLElement} Returns an HTML audio tag.\n\t * @protected\n\t */\n\tp._createTag = function () {\n\t\tvar tag = document.createElement(\"audio\");\n\t\ttag.autoplay = false;\n\t\ttag.preload = \"none\";\n\t\t//LM: Firefox fails when this the preload=\"none\" for other tags, but it needs to be \"none\" to ensure PreloadJS works.\n\t\treturn tag;\n\t};\n\n}());\n\n//##############################################################################\n// HTMLAudioSoundInstance.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\t/**\n\t * HTMLAudioSoundInstance extends the base api of {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} and is used by\n\t * {{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}.\n\t *\n\t * @param {String} src The path to and file name of the sound.\n\t * @param {Number} startTime Audio sprite property used to apply an offset, in milliseconds.\n\t * @param {Number} duration Audio sprite property used to set the time the clip plays for, in milliseconds.\n\t * @param {Object} playbackResource Any resource needed by plugin to support audio playback.\n\t * @class HTMLAudioSoundInstance\n\t * @extends AbstractSoundInstance\n\t * @constructor\n\t */\n\tfunction HTMLAudioSoundInstance(src, startTime, duration, playbackResource) {\n\t\tthis.AbstractSoundInstance_constructor(src, startTime, duration, playbackResource);\n\n\n// Private Properties\n\t\tthis._audioSpriteStopTime = null;\n\t\tthis._delayTimeoutId = null;\n\n\t\t// Proxies, make removing listeners easier.\n\t\tthis._endedHandler = createjs.proxy(this._handleSoundComplete, this);\n\t\tthis._readyHandler = createjs.proxy(this._handleTagReady, this);\n\t\tthis._stalledHandler = createjs.proxy(this._playFailed, this);\n\t\tthis._audioSpriteEndHandler = createjs.proxy(this._handleAudioSpriteLoop, this);\n\t\tthis._loopHandler = createjs.proxy(this._handleSoundComplete, this);\n\n\t\tif (duration) {\n\t\t\tthis._audioSpriteStopTime = (startTime + duration) * 0.001;\n\t\t} else {\n\t\t\tthis._duration = createjs.HTMLAudioTagPool.getDuration(this.src);\n\t\t}\n\t}\n\tvar p = createjs.extend(HTMLAudioSoundInstance, createjs.AbstractSoundInstance);\n\n// Public Methods\n\t/**\n\t * Called by {{#crossLink \"Sound\"}}{{/crossLink}} when plugin does not handle master volume.\n\t * undoc'd because it is not meant to be used outside of Sound\n\t * #method setMasterVolume\n\t * @param value\n\t */\n\tp.setMasterVolume = function (value) {\n\t\tthis._updateVolume();\n\t};\n\n\t/**\n\t * Called by {{#crossLink \"Sound\"}}{{/crossLink}} when plugin does not handle master mute.\n\t * undoc'd because it is not meant to be used outside of Sound\n\t * #method setMasterMute\n\t * @param value\n\t */\n\tp.setMasterMute = function (isMuted) {\n\t\tthis._updateVolume();\n\t};\n\n\tp.toString = function () {\n\t\treturn \"[HTMLAudioSoundInstance]\";\n\t};\n\n//Private Methods\n\tp._removeLooping = function() {\n\t\tif(this._playbackResource == null) {return;}\n\t\tthis._playbackResource.loop = false;\n\t\tthis._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n\t};\n\n\tp._addLooping = function() {\n\t\tif(this._playbackResource == null  || this._audioSpriteStopTime) {return;}\n\t\tthis._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n\t\tthis._playbackResource.loop = true;\n\t};\n\n\tp._handleCleanUp = function () {\n\t\tvar tag = this._playbackResource;\n\t\tif (tag != null) {\n\t\t\ttag.pause();\n\t\t\ttag.loop = false;\n\t\t\ttag.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED, this._endedHandler, false);\n\t\t\ttag.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_READY, this._readyHandler, false);\n\t\t\ttag.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_STALLED, this._stalledHandler, false);\n\t\t\ttag.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n\t\t\ttag.removeEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE, this._audioSpriteEndHandler, false);\n\n\t\t\ttry {\n\t\t\t\ttag.currentTime = this._startTime;\n\t\t\t} catch (e) {\n\t\t\t} // Reset Position\n\t\t\tcreatejs.HTMLAudioTagPool.set(this.src, tag);\n\t\t\tthis._playbackResource = null;\n\t\t}\n\t};\n\n\tp._beginPlaying = function (playProps) {\n\t\tthis._playbackResource = createjs.HTMLAudioTagPool.get(this.src);\n\t\treturn this.AbstractSoundInstance__beginPlaying(playProps);\n\t};\n\n\tp._handleSoundReady = function (event) {\n\t\tif (this._playbackResource.readyState !== 4) {\n\t\t\tvar tag = this._playbackResource;\n\t\t\ttag.addEventListener(createjs.HTMLAudioPlugin._AUDIO_READY, this._readyHandler, false);\n\t\t\ttag.addEventListener(createjs.HTMLAudioPlugin._AUDIO_STALLED, this._stalledHandler, false);\n\t\t\ttag.preload = \"auto\"; // This is necessary for Firefox, as it won't ever \"load\" until this is set.\n\t\t\ttag.load();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._updateVolume();\n\t\tthis._playbackResource.currentTime = (this._startTime + this._position) * 0.001;\n\t\tif (this._audioSpriteStopTime) {\n\t\t\tthis._playbackResource.addEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE, this._audioSpriteEndHandler, false);\n\t\t} else {\n\t\t\tthis._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED, this._endedHandler, false);\n\t\t\tif(this._loop != 0) {\n\t\t\t\tthis._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n\t\t\t\tthis._playbackResource.loop = true;\n\t\t\t}\n\t\t}\n\n\t\tthis._playbackResource.play();\n\t};\n\n\t/**\n\t * Used to handle when a tag is not ready for immediate playback when it is returned from the HTMLAudioTagPool.\n\t * @method _handleTagReady\n\t * @param event\n\t * @protected\n\t */\n\tp._handleTagReady = function (event) {\n\t\tthis._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_READY, this._readyHandler, false);\n\t\tthis._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_STALLED, this._stalledHandler, false);\n\n\t\tthis._handleSoundReady();\n\t};\n\n\tp._pause = function () {\n\t\tthis._playbackResource.pause();\n\t};\n\n\tp._resume = function () {\n\t\tthis._playbackResource.play();\n\t};\n\n\tp._updateVolume = function () {\n\t\tif (this._playbackResource != null) {\n\t\t\tvar newVolume = (this._muted || createjs.Sound._masterMute) ? 0 : this._volume * createjs.Sound._masterVolume;\n\t\t\tif (newVolume != this._playbackResource.volume) {this._playbackResource.volume = newVolume;}\n\t\t}\n\t};\n\n\tp._calculateCurrentPosition = function() {\n\t\treturn (this._playbackResource.currentTime * 1000) - this._startTime;\n\t};\n\n\tp._updatePosition = function() {\n\t\tthis._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n\t\tthis._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._handleSetPositionSeek, false);\n\t\ttry {\n\t\t\tthis._playbackResource.currentTime = (this._position + this._startTime) * 0.001;\n\t\t} catch (error) { // Out of range\n\t\t\tthis._handleSetPositionSeek(null);\n\t\t}\n\t};\n\n\t/**\n\t * Used to enable setting position, as we need to wait for that seek to be done before we add back our loop handling seek listener\n\t * @method _handleSetPositionSeek\n\t * @param event\n\t * @protected\n\t */\n\tp._handleSetPositionSeek = function(event) {\n\t\tif (this._playbackResource == null) { return; }\n\t\tthis._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._handleSetPositionSeek, false);\n\t\tthis._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n\t};\n\n\t/**\n\t * Timer used to loop audio sprites.\n\t * NOTE because of the inaccuracies in the timeupdate event (15 - 250ms) and in setting the tag to the desired timed\n\t * (up to 300ms), it is strongly recommended not to loop audio sprites with HTML Audio if smooth looping is desired\n\t *\n\t * @method _handleAudioSpriteLoop\n\t * @param event\n\t * @private\n\t */\n\tp._handleAudioSpriteLoop = function (event) {\n\t\tif(this._playbackResource.currentTime <= this._audioSpriteStopTime) {return;}\n\t\tthis._playbackResource.pause();\n\t\tif(this._loop == 0) {\n\t\t\tthis._handleSoundComplete(null);\n\t\t} else {\n\t\t\tthis._position = 0;\n\t\t\tthis._loop--;\n\t\t\tthis._playbackResource.currentTime = this._startTime * 0.001;\n\t\t\tif(!this._paused) {this._playbackResource.play();}\n\t\t\tthis._sendEvent(\"loop\");\n\t\t}\n\t};\n\n\t// NOTE with this approach audio will loop as reliably as the browser allows\n\t// but we could end up sending the loop event after next loop playback begins\n\tp._handleLoop = function (event) {\n\t\tif(this._loop == 0) {\n\t\t\tthis._playbackResource.loop = false;\n\t\t\tthis._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n\t\t}\n\t};\n\n\tp._updateStartTime = function () {\n\t\tthis._audioSpriteStopTime = (this._startTime + this._duration) * 0.001;\n\n\t\tif(this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n\t\t\tthis._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED, this._endedHandler, false);\n\t\t\tthis._playbackResource.addEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE, this._audioSpriteEndHandler, false);\n\t\t}\n\t};\n\n\tp._updateDuration = function () {\n\t\tthis._audioSpriteStopTime = (this._startTime + this._duration) * 0.001;\n\n\t\tif(this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n\t\t\tthis._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED, this._endedHandler, false);\n\t\t\tthis._playbackResource.addEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE, this._audioSpriteEndHandler, false);\n\t\t}\n\t};\n\n\tp._setDurationFromSource = function () {\n\t\tthis._duration = createjs.HTMLAudioTagPool.getDuration(this.src);\n\t\tthis._playbackResource = null;\n\t};\n\n\tcreatejs.HTMLAudioSoundInstance = createjs.promote(HTMLAudioSoundInstance, \"AbstractSoundInstance\");\n}());\n\n//##############################################################################\n// HTMLAudioPlugin.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\n\t\"use strict\";\n\n\t/**\n\t * Play sounds using HTML &lt;audio&gt; tags in the browser. This plugin is the second priority plugin installed\n\t * by default, after the {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}.  For older browsers that do not support html\n\t * audio, include and install the {{#crossLink \"FlashAudioPlugin\"}}{{/crossLink}}.\n\t *\n\t * <h4>Known Browser and OS issues for HTML Audio</h4>\n\t * <b>All browsers</b><br />\n\t * Testing has shown in all browsers there is a limit to how many audio tag instances you are allowed.  If you exceed\n\t * this limit, you can expect to see unpredictable results. Please use {{#crossLink \"Sound.MAX_INSTANCES\"}}{{/crossLink}} as\n\t * a guide to how many total audio tags you can safely use in all browsers.  This issue is primarily limited to IE9.\n\t *\n     * <b>IE html limitations</b><br />\n     * <ul><li>There is a delay in applying volume changes to tags that occurs once playback is started. So if you have\n     * muted all sounds, they will all play during this delay until the mute applies internally. This happens regardless of\n     * when or how you apply the volume change, as the tag seems to need to play to apply it.</li>\n     * <li>MP3 encoding will not always work for audio tags if it's not default.  We've found default encoding with\n     * 64kbps works.</li>\n\t * <li>Occasionally very short samples will get cut off.</li>\n\t * <li>There is a limit to how many audio tags you can load or play at once, which appears to be determined by\n\t * hardware and browser settings.  See {{#crossLink \"HTMLAudioPlugin.MAX_INSTANCES\"}}{{/crossLink}} for a safe estimate.\n\t * Note that audio sprites can be used as a solution to this issue.</li></ul>\n\t *\n\t * <b>Safari limitations</b><br />\n\t * <ul><li>Safari requires Quicktime to be installed for audio playback.</li></ul>\n\t *\n\t * <b>iOS 6 limitations</b><br />\n\t * <ul><li>can only have one &lt;audio&gt; tag</li>\n\t * \t\t<li>can not preload or autoplay the audio</li>\n\t * \t\t<li>can not cache the audio</li>\n\t * \t\t<li>can not play the audio except inside a user initiated event.</li>\n\t *\t\t<li>Note it is recommended to use {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}} for iOS (6+)</li>\n\t * \t\t<li>audio sprites can be used to mitigate some of these issues and are strongly recommended on iOS</li>\n\t * </ul>\n\t *\n\t * <b>Android Native Browser limitations</b><br />\n\t * <ul><li>We have no control over audio volume. Only the user can set volume on their device.</li>\n\t *      <li>We can only play audio inside a user event (touch/click).  This currently means you cannot loop sound or use a delay.</li></ul>\n\t * <b> Android Chrome 26.0.1410.58 specific limitations</b><br />\n\t * <ul> <li>Can only play 1 sound at a time.</li>\n\t *      <li>Sound is not cached.</li>\n\t *      <li>Sound can only be loaded in a user initiated touch/click event.</li>\n\t *      <li>There is a delay before a sound is played, presumably while the src is loaded.</li>\n\t * </ul>\n\t *\n\t * See {{#crossLink \"Sound\"}}{{/crossLink}} for general notes on known issues.\n\t *\n\t * @class HTMLAudioPlugin\n\t * @extends AbstractPlugin\n\t * @constructor\n\t */\n\tfunction HTMLAudioPlugin() {\n\t\tthis.AbstractPlugin_constructor();\n\n\n\t// Public Properties\n\t\tthis._capabilities = s._capabilities;\n\n\t\tthis._loaderClass = createjs.SoundLoader;\n\t\tthis._soundInstanceClass = createjs.HTMLAudioSoundInstance;\n\t}\n\n\tvar p = createjs.extend(HTMLAudioPlugin, createjs.AbstractPlugin);\n\tvar s = HTMLAudioPlugin;\n\n// Static Properties\n\t/**\n\t * The maximum number of instances that can be loaded or played. This is a browser limitation, primarily limited to IE9.\n\t * The actual number varies from browser to browser (and is largely hardware dependant), but this is a safe estimate.\n\t * Audio sprites work around this limitation.\n\t * @property MAX_INSTANCES\n\t * @type {Number}\n\t * @default 30\n\t * @static\n\t */\n\ts.MAX_INSTANCES = 30;\n\n\t/**\n\t * Event constant for the \"canPlayThrough\" event for cleaner code.\n\t * @property _AUDIO_READY\n\t * @type {String}\n\t * @default canplaythrough\n\t * @static\n\t * @private\n\t */\n\ts._AUDIO_READY = \"canplaythrough\";\n\n\t/**\n\t * Event constant for the \"ended\" event for cleaner code.\n\t * @property _AUDIO_ENDED\n\t * @type {String}\n\t * @default ended\n\t * @static\n\t * @private\n\t */\n\ts._AUDIO_ENDED = \"ended\";\n\n\t/**\n\t * Event constant for the \"seeked\" event for cleaner code.  We utilize this event for maintaining loop events.\n\t * @property _AUDIO_SEEKED\n\t * @type {String}\n\t * @default seeked\n\t * @static\n\t * @private\n\t */\n\ts._AUDIO_SEEKED = \"seeked\";\n\n\t/**\n\t * Event constant for the \"stalled\" event for cleaner code.\n\t * @property _AUDIO_STALLED\n\t * @type {String}\n\t * @default stalled\n\t * @static\n\t * @private\n\t */\n\ts._AUDIO_STALLED = \"stalled\";\n\n\t/**\n\t * Event constant for the \"timeupdate\" event for cleaner code.  Utilized for looping audio sprites.\n\t * This event callsback ever 15 to 250ms and can be dropped by the browser for performance.\n\t * @property _TIME_UPDATE\n\t * @type {String}\n\t * @default timeupdate\n\t * @static\n\t * @private\n\t */\n\ts._TIME_UPDATE = \"timeupdate\";\n\n\t/**\n\t * The capabilities of the plugin. This is generated via the {{#crossLink \"HTMLAudioPlugin/_generateCapabilities\"}}{{/crossLink}}\n\t * method. Please see the Sound {{#crossLink \"Sound/capabilities:property\"}}{{/crossLink}} method for an overview of all\n\t * of the available properties.\n\t * @property _capabilities\n\t * @type {Object}\n\t * @private\n\t * @static\n\t */\n\ts._capabilities = null;\n\n\n// Static Methods\n\t/**\n\t * Determine if the plugin can be used in the current browser/OS. Note that HTML audio is available in most modern\n\t * browsers, but is disabled in iOS because of its limitations.\n\t * @method isSupported\n\t * @return {Boolean} If the plugin can be initialized.\n\t * @static\n\t */\n\ts.isSupported = function () {\n\t\ts._generateCapabilities();\n\t\treturn (s._capabilities != null);\n\t};\n\n\t/**\n\t * Determine the capabilities of the plugin. Used internally. Please see the Sound API {{#crossLink \"Sound/capabilities:property\"}}{{/crossLink}}\n\t * method for an overview of plugin capabilities.\n\t * @method _generateCapabilities\n\t * @static\n\t * @private\n\t */\n\ts._generateCapabilities = function () {\n\t\tif (s._capabilities != null) {return;}\n\t\tvar t = document.createElement(\"audio\");\n\t\tif (t.canPlayType == null) {return null;}\n\n\t\ts._capabilities = {\n\t\t\tpanning:false,\n\t\t\tvolume:true,\n\t\t\ttracks:-1\n\t\t};\n\n\t\t// determine which extensions our browser supports for this plugin by iterating through Sound.SUPPORTED_EXTENSIONS\n\t\tvar supportedExtensions = createjs.Sound.SUPPORTED_EXTENSIONS;\n\t\tvar extensionMap = createjs.Sound.EXTENSION_MAP;\n\t\tfor (var i = 0, l = supportedExtensions.length; i < l; i++) {\n\t\t\tvar ext = supportedExtensions[i];\n\t\t\tvar playType = extensionMap[ext] || ext;\n\t\t\ts._capabilities[ext] = (t.canPlayType(\"audio/\" + ext) != \"no\" && t.canPlayType(\"audio/\" + ext) != \"\") || (t.canPlayType(\"audio/\" + playType) != \"no\" && t.canPlayType(\"audio/\" + playType) != \"\");\n\t\t}  // OJR another way to do this might be canPlayType:\"m4a\", codex: mp4\n\t};\n\n\n// public methods\n\tp.register = function (loadItem) {\n\t\tvar tag = createjs.HTMLAudioTagPool.get(loadItem.src);\n\t\tvar loader = this.AbstractPlugin_register(loadItem);\n\t\tloader.setTag(tag);\n\n\t\treturn loader;\n\t};\n\n\tp.removeSound = function (src) {\n\t\tthis.AbstractPlugin_removeSound(src);\n\t\tcreatejs.HTMLAudioTagPool.remove(src);\n\t};\n\n\tp.create = function (src, startTime, duration) {\n\t\tvar si = this.AbstractPlugin_create(src, startTime, duration);\n\t\tsi.playbackResource = null;\n\t\treturn si;\n\t};\n\n\tp.toString = function () {\n\t\treturn \"[HTMLAudioPlugin]\";\n\t};\n\n\t// plugin does not support these\n\tp.setVolume = p.getVolume = p.setMute = null;\n\n\n\tcreatejs.HTMLAudioPlugin = createjs.promote(HTMLAudioPlugin, \"AbstractPlugin\");\n}());\n"]},"metadata":{},"sourceType":"script"}